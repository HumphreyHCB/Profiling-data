begin_compilation
  name " HotSpotCompilation-78[List.tail(List$Element, List$Element, List$Element)]"
  method "HotSpotCompilation-78[List.tail(List$Element, List$Element, List$Element)]"
  date 1740398975240
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v290 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v290  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a# List$Element
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a152 ?65 ?119 ?20 ?173 v383 v614 ?532 v39 v347 ?527 v352 ?528 ?118 v624 a122 v375 ?531 ?172 v613 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# List$Element
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a206 ?65 v407 v14 ?535 ?20 ?173 ?27 ?226 ?119 v375 v618 v380 ?536 ?172 ?531 a176 v401 ?532 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 12]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v290 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
profileData: PROFILED designatedSuccessorProbability: 0.10074626865671642
stamp: void
=== Inputs ===
condition: v14 
=== Succesors ===
trueSuccessor: v289 
falseSuccessor: v288 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v14 #trueSuccessor: v289 #falseSuccessor: v288  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591923954390866623
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 31]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v310 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v310  <|@  <|@
f <@*|@fixed>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 31]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v308 
=== Predecessor ===
v289 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 10]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a582 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a582  <|@  <|@
f <@~|@floating>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a582 a601 a596 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a582 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v618 
lastLocationAccess: - 
=== Succesors ===
next: v294 
=== Usages ===
a323 v623 
=== Predecessor ===
v288 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v618 lastLocationAccess: - #next: v294  <|@  <|@
f <@~|@floating>@ <|@
tid a323 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a582 
=== Succesors ===
=== Usages ===
a316 ?118 a99 v357 ?527 v352 ?528 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a582  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# List
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?539 ?65 ?280 ?119 ?20 ?20 ?173 ?27 ?27 ?227 v432 v347 ?539 ?540 v352 ?540 ?541 v357 ?527 v358 ?118 ?119 v375 ?527 ?528 v380 ?528 ?529 v383 ?531 v384 ?172 ?173 v401 ?531 ?532 v404 ?532 ?533 v407 ?535 v408 ?226 v421 ?535 ?536 v426 ?536 ?537 v431 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a# List$Element
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a230 ?65 ?528 ?119 ?527 v21 v404 ?27 ?226 v347 v617 ?118 v612 ?535 v357 a98 ?173 v401 ?536 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
a583 a589 a591 a602 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 22]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v294 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a3  <|@  <|@
f <@*|@fixed>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
profileData: PROFILED designatedSuccessorProbability: 0.03787636982657727
stamp: void
=== Inputs ===
condition: v21 
=== Succesors ===
trueSuccessor: v293 
falseSuccessor: v292 
=== Usages ===
=== Predecessor ===
a582 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v21 #trueSuccessor: v293 #falseSuccessor: v292  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4585069451628504407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v303 
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v303  <|@  <|@
f <@*|@fixed>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v301 
=== Predecessor ===
v293 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 16]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a583 
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a583  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a583 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v617 
lastLocationAccess: - 
=== Succesors ===
next: v40 
=== Usages ===
a320 
=== Predecessor ===
v292 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v617 lastLocationAccess: - #next: v40  <|@  <|@
f <@~|@floating>@ <|@
tid a320 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a583 
=== Succesors ===
=== Usages ===
a315 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a583  <|@  <|@
tid ?65 <|@
d <@d|@=== Debug Properties ===
bci: 3
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 a4 
=== Succesors ===
=== Usages ===
?44 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 a4  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v41 
=== Predecessor ===
a583 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a316 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v41 
values: a323 a329 
=== Succesors ===
=== Usages ===
?44 v45 v620 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v41 values: a323 a329  <|@  <|@
f <@~|@floating>@ <|@
tid a315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v41 
values: a320 a326 
=== Succesors ===
=== Usages ===
?44 v50 v619 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v41 values: a320 a326  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 7
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v40 
=== Succesors ===
next: v49 
=== Usages ===
a316 a315 v47 v52 v61 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v40 #next: v49  <|@  <|@
f <@~|@floating>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a316 
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a316  <|@  <|@
f <@*|@fixed>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
profileData: PROFILED designatedSuccessorProbability: 0.10074626865671642
stamp: void
=== Inputs ===
condition: v45 
=== Succesors ===
trueSuccessor: v47 
falseSuccessor: v46 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v45 #trueSuccessor: v47 #falseSuccessor: v46  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 10]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v54 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v54  <|@  <|@
f <@~|@floating>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a315 
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a315  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
profileData: PROFILED designatedSuccessorProbability: 0.03787636982657727
stamp: void
=== Inputs ===
condition: v50 
=== Succesors ===
trueSuccessor: v52 
falseSuccessor: v51 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v50 #trueSuccessor: v52 #falseSuccessor: v51  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 16]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v512 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v512  <|@  <|@
tid ?44 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: aload
code: ResolvedJavaMethodBytecode<List.isShorterThan(List$Element, List$Element)>
localsSize: 5
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?65 
values: - - - a315 a316 
=== Succesors ===
=== Usages ===
v512 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?65 values: - - - a315 a316  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
stamp: void
=== Inputs ===
stateBefore: ?44 
=== Succesors ===
next: a584 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?44 #next: a584  <|@  <|@
f <@~|@floating>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a315 
index: - 
=== Succesors ===
=== Usages ===
a584 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a315 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a584 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v619 
lastLocationAccess: - 
=== Succesors ===
next: a585 
=== Usages ===
a326 
=== Predecessor ===
v512 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v619 lastLocationAccess: - #next: a585  <|@  <|@
f <@~|@floating>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a316 
index: - 
=== Succesors ===
=== Usages ===
a585 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a316 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a585 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v620 
lastLocationAccess: - 
=== Succesors ===
next: v61 
=== Usages ===
a329 
=== Predecessor ===
a584 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v620 lastLocationAccess: - #next: v61  <|@  <|@
f <@~|@floating>@ <|@
tid a329 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a585 
=== Succesors ===
=== Usages ===
a316 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a585  <|@  <|@
f <@~|@floating>@ <|@
tid a326 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a584 
=== Succesors ===
=== Usages ===
a315 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a584  <|@  <|@
f <@*|@fixed>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
stamp: void
=== Inputs ===
loopBegin: v41 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a585 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v41  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4597043951172344564
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v41 
=== Succesors ===
next: v302 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v41 #next: v302  <|@  <|@
f <@*|@fixed>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v301 
=== Predecessor ===
v52 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603999204951558038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 31]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v41 
=== Succesors ===
next: v309 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v41 #next: v309  <|@  <|@
f <@*|@fixed>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 31]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v308 
=== Predecessor ===
v47 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B1" 
    successors 
    xhandlers
    flags 
    probability 4604906646667520750
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 31]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v309 v310 
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v309 v310 #next: v39  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 45]
stamp: void
=== Inputs ===
memoryMap: - 
result: a4 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v308 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a4  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v302 v303 
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v302 v303 #next: v96  <|@  <|@
tid ?119 <|@
d <@d|@=== Debug Properties ===
bci: 17
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a1 a2 a3 a4 
=== Succesors ===
=== Usages ===
?527 ?528 ?529 ?530 ?118 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a1 a2 a3 a4  <|@  <|@
tid ?118 <|@
d <@d|@=== Debug Properties ===
bci: 3
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?119 
values: a1 a323 a3 a4 
=== Succesors ===
=== Usages ===
?100 ?109 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?119 values: a1 a323 a3 a4  <|@  <|@
f <@~|@floating>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
a590 a595 a597 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
v301 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" 
    successors "B16" "B13" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v97 
values: a3 a338 
=== Succesors ===
=== Usages ===
?100 v106 v621 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v97 values: a3 a338  <|@  <|@
f <@~|@floating>@ <|@
tid a99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v97 
values: a323 a341 
=== Succesors ===
=== Usages ===
?100 v101 v622 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v97 values: a323 a341  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 41
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v96 
=== Succesors ===
next: v105 
=== Usages ===
a98 a99 v103 v108 v117 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v96 #next: v105  <|@  <|@
f <@~|@floating>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a99 
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a99  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
profileData: PROFILED designatedSuccessorProbability: 0.10074626865671642
stamp: void
=== Inputs ===
condition: v101 
=== Succesors ===
trueSuccessor: v103 
falseSuccessor: v102 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v101 #trueSuccessor: v103 #falseSuccessor: v102  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B14" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 10]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v110 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v110  <|@  <|@
f <@~|@floating>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a98 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a98  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
profileData: PROFILED designatedSuccessorProbability: 0.03787636982657727
stamp: void
=== Inputs ===
condition: v106 
=== Succesors ===
trueSuccessor: v108 
falseSuccessor: v107 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v106 #trueSuccessor: v108 #falseSuccessor: v107  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 16]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v513 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v513  <|@  <|@
tid ?100 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: aload
code: ResolvedJavaMethodBytecode<List.isShorterThan(List$Element, List$Element)>
localsSize: 5
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?118 
values: - - - a98 a99 
=== Succesors ===
=== Usages ===
v513 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?118 values: - - - a98 a99  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
stamp: void
=== Inputs ===
stateBefore: ?100 
=== Succesors ===
next: a586 
=== Usages ===
=== Predecessor ===
v107 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?100 #next: a586  <|@  <|@
f <@~|@floating>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a98 
index: - 
=== Succesors ===
=== Usages ===
a586 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a98 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a586 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v621 
lastLocationAccess: - 
=== Succesors ===
next: a587 
=== Usages ===
a338 
=== Predecessor ===
v513 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v621 lastLocationAccess: - #next: a587  <|@  <|@
f <@~|@floating>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a99 
index: - 
=== Succesors ===
=== Usages ===
a587 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a99 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a587 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v622 
lastLocationAccess: - 
=== Succesors ===
next: v117 
=== Usages ===
a341 
=== Predecessor ===
a586 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v622 lastLocationAccess: - #next: v117  <|@  <|@
f <@~|@floating>@ <|@
tid a341 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a587 
=== Succesors ===
=== Usages ===
a99 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a587  <|@  <|@
f <@~|@floating>@ <|@
tid a338 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a586 
=== Succesors ===
=== Usages ===
a98 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a586  <|@  <|@
f <@*|@fixed>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
stamp: void
=== Inputs ===
loopBegin: v97 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a587 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v97  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v97 
=== Succesors ===
next: a588 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v97 #next: a588  <|@  <|@
tid ?109 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: iconst_1
code: ResolvedJavaMethodBytecode<List.isShorterThan(List$Element, List$Element)>
localsSize: 5
locksSize: 0
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?118 
=== Succesors ===
=== Usages ===
v613 a588 v612 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?118  <|@  <|@
f <@~|@floating>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a582 
=== Succesors ===
=== Usages ===
a588 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a582  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a588 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: int[-87819|0xfffffffffffea8f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 12]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
stamp: n# List$Element
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?109 
guard: - 
address: v623 
lastLocationAccess: - 
=== Succesors ===
next: v612 
=== Usages ===
a346 
=== Predecessor ===
v108 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?109 guard: - address: v623 lastLocationAccess: - #next: v612  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-89099|0xfffffffffffea3f5]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?109 
object: a3 
=== Succesors ===
next: v613 
=== Usages ===
=== Predecessor ===
a588 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?109 object: a3 #next: v613  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-90379|0xfffffffffffe9ef5]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?109 
object: a4 
=== Succesors ===
next: a75 
=== Usages ===
=== Predecessor ===
v612 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?109 object: a4 #next: a75  <|@  <|@
f <@~|@floating>@ <|@
tid a346 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 12]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a588 
=== Succesors ===
=== Usages ===
v347 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a588  <|@  <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a346 a3 a4 
=== Succesors ===
=== Usages ===
a75 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a346 a3 a4  <|@  <|@
tid ?527 <|@
d <@d|@=== Debug Properties ===
bci: 17
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?119 
values: a1 a1 a323 a3 a4 
=== Succesors ===
=== Usages ===
a75 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?119 values: a1 a1 a323 a3 a4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a75 <|@
d <@d|@=== Debug Properties ===
bci: 17
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v347 
stateDuring: ?527 
=== Succesors ===
next: a589 
=== Usages ===
v358 ?528 ?529 
=== Predecessor ===
v613 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v347 stateDuring: ?527 #next: a589  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a589 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 22]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v617 
lastLocationAccess: - 
=== Succesors ===
next: a82 
=== Usages ===
a351 
=== Predecessor ===
a75 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v617 lastLocationAccess: - #next: a82  <|@  <|@
f <@~|@floating>@ <|@
tid a351 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 22]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a589 
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a589  <|@  <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a351 a4 a323 
=== Succesors ===
=== Usages ===
a82 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a351 a4 a323  <|@  <|@
tid ?528 <|@
d <@d|@=== Debug Properties ===
bci: 27
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?119 
values: a1 a75 a1 a323 a3 a4 
=== Succesors ===
=== Usages ===
a82 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?119 values: a1 a75 a1 a323 a3 a4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a82 <|@
d <@d|@=== Debug Properties ===
bci: 27
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v352 
stateDuring: ?528 
=== Succesors ===
next: a590 
=== Usages ===
v358 ?529 
=== Predecessor ===
a589 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v352 stateDuring: ?528 #next: a590  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a590 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 32]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v624 
lastLocationAccess: - 
=== Succesors ===
next: a89 
=== Usages ===
a356 
=== Predecessor ===
a82 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v624 lastLocationAccess: - #next: a89  <|@  <|@
f <@~|@floating>@ <|@
tid a356 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 32]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a590 
=== Succesors ===
=== Usages ===
v357 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a590  <|@  <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a356 a323 a3 
=== Succesors ===
=== Usages ===
a89 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a356 a323 a3  <|@  <|@
tid ?529 <|@
d <@d|@=== Debug Properties ===
bci: 37
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 3
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?119 
values: a1 a75 a82 
=== Succesors ===
=== Usages ===
a89 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?119 values: a1 a75 a82  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a89 <|@
d <@d|@=== Debug Properties ===
bci: 37
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v357 
stateDuring: ?529 
=== Succesors ===
next: a92 
=== Usages ===
v358 
=== Predecessor ===
a590 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v357 stateDuring: ?529 #next: a92  <|@  <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a75 a82 a89 
=== Succesors ===
=== Usages ===
a92 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a75 a82 a89  <|@  <|@
tid ?530 <|@
d <@d|@=== Debug Properties ===
bci: 40
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?119 
=== Succesors ===
=== Usages ===
a92 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?119  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a92 <|@
d <@d|@=== Debug Properties ===
bci: 40
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v358 
stateDuring: ?530 
=== Succesors ===
next: v121 
=== Usages ===
a122 
=== Predecessor ===
a89 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v358 stateDuring: ?530 #next: v121  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v120 
=== Predecessor ===
a92 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 31]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v97 
=== Succesors ===
next: v123 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v97 #next: v123  <|@  <|@
f <@*|@fixed>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v120 
=== Predecessor ===
v103 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" "B16" 
    successors "B18" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a122 <|@
d <@d|@=== Debug Properties ===
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v120 
values: a92 a4 
=== Succesors ===
=== Usages ===
?20 ?27 a261 ?280 ?173 ?227 v431 v633 ?539 v426 ?540 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v120 values: a92 a4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v121 v123 
=== Succesors ===
next: a591 
=== Usages ===
a122 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v121 v123 #next: a591  <|@  <|@
f <@~|@floating>@ <|@
tid a608 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?20 ?27 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?20 <|@
d <@d|@=== Debug Properties ===
bci: 20
bytecode: aload_0
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 17]
stackSize: 2
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a122 a1 a2 a608 a4 
=== Succesors ===
=== Usages ===
a591 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a122 a1 a2 a608 a4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a591 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: int[-92171|0xfffffffffffe97f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 22]
stamp: n# List$Element
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?20 
guard: - 
address: v617 
lastLocationAccess: - 
=== Succesors ===
next: v150 
=== Usages ===
a363 v627 
=== Predecessor ===
v120 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?20 guard: - address: v617 lastLocationAccess: - #next: v150  <|@  <|@
tid ?173 <|@
d <@d|@=== Debug Properties ===
bci: 27
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a122 a1 a2 a3 a4 
=== Succesors ===
=== Usages ===
?531 ?532 ?533 ?534 ?172 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a122 a1 a2 a3 a4  <|@  <|@
f <@~|@floating>@ <|@
tid a363 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 22]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a591 
=== Succesors ===
=== Usages ===
?172 a153 v383 ?531 v380 ?532 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a591  <|@  <|@
tid ?172 <|@
d <@d|@=== Debug Properties ===
bci: 3
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?173 
values: a1 a363 a4 a2 
=== Succesors ===
=== Usages ===
?154 ?163 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?173 values: a1 a363 a4 a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
a591 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B22" "B19" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v151 
values: a4 a366 
=== Succesors ===
=== Usages ===
?154 v160 v625 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v151 values: a4 a366  <|@  <|@
f <@~|@floating>@ <|@
tid a153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v151 
values: a363 a369 
=== Succesors ===
=== Usages ===
?154 v155 v626 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v151 values: a363 a369  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 41
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v150 
=== Succesors ===
next: v159 
=== Usages ===
a152 a153 v157 v162 v171 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v150 #next: v159  <|@  <|@
f <@~|@floating>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a153 
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a153  <|@  <|@
f <@*|@fixed>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
profileData: PROFILED designatedSuccessorProbability: 0.10074626865671642
stamp: void
=== Inputs ===
condition: v155 
=== Succesors ===
trueSuccessor: v157 
falseSuccessor: v156 
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v155 #trueSuccessor: v157 #falseSuccessor: v156  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 10]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v164 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v164  <|@  <|@
f <@~|@floating>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a152 
=== Succesors ===
=== Usages ===
v164 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a152  <|@  <|@
f <@*|@fixed>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
profileData: PROFILED designatedSuccessorProbability: 0.03787636982657727
stamp: void
=== Inputs ===
condition: v160 
=== Succesors ===
trueSuccessor: v162 
falseSuccessor: v161 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v160 #trueSuccessor: v162 #falseSuccessor: v161  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 16]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v514 
=== Usages ===
=== Predecessor ===
v164 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v514  <|@  <|@
tid ?154 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: aload
code: ResolvedJavaMethodBytecode<List.isShorterThan(List$Element, List$Element)>
localsSize: 5
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?172 
values: - - - a152 a153 
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?172 values: - - - a152 a153  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
stamp: void
=== Inputs ===
stateBefore: ?154 
=== Succesors ===
next: a592 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?154 #next: a592  <|@  <|@
f <@~|@floating>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a152 
index: - 
=== Succesors ===
=== Usages ===
a592 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a152 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a592 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v625 
lastLocationAccess: - 
=== Succesors ===
next: a593 
=== Usages ===
a366 
=== Predecessor ===
v514 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v625 lastLocationAccess: - #next: a593  <|@  <|@
f <@~|@floating>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a153 
index: - 
=== Succesors ===
=== Usages ===
a593 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a153 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a593 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v626 
lastLocationAccess: - 
=== Succesors ===
next: v171 
=== Usages ===
a369 
=== Predecessor ===
a592 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v626 lastLocationAccess: - #next: v171  <|@  <|@
f <@~|@floating>@ <|@
tid a369 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a593 
=== Succesors ===
=== Usages ===
a153 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a593  <|@  <|@
f <@~|@floating>@ <|@
tid a366 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a592 
=== Succesors ===
=== Usages ===
a152 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a592  <|@  <|@
f <@*|@fixed>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
stamp: void
=== Inputs ===
loopBegin: v151 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a593 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v151  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v151 
=== Succesors ===
next: a594 
=== Usages ===
=== Predecessor ===
v164 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v151 #next: a594  <|@  <|@
tid ?163 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: iconst_1
code: ResolvedJavaMethodBytecode<List.isShorterThan(List$Element, List$Element)>
localsSize: 5
locksSize: 0
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?172 
=== Succesors ===
=== Usages ===
v614 a594 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?172  <|@  <|@
f <@~|@floating>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a591 
=== Succesors ===
=== Usages ===
a594 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a591  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a594 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: int[-94987|0xfffffffffffe8cf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 12]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
stamp: n# List$Element
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?163 
guard: - 
address: v627 
lastLocationAccess: - 
=== Succesors ===
next: v614 
=== Usages ===
a374 
=== Predecessor ===
v162 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?163 guard: - address: v627 lastLocationAccess: - #next: v614  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-96267|0xfffffffffffe87f5]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?163 
object: a4 
=== Succesors ===
next: a129 
=== Usages ===
=== Predecessor ===
a594 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?163 object: a4 #next: a129  <|@  <|@
f <@~|@floating>@ <|@
tid a374 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 12]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a594 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a594  <|@  <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a374 a4 a2 
=== Succesors ===
=== Usages ===
a129 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a374 a4 a2  <|@  <|@
tid ?531 <|@
d <@d|@=== Debug Properties ===
bci: 17
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?173 
values: a1 a1 a363 a4 a2 
=== Succesors ===
=== Usages ===
a129 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?173 values: a1 a1 a363 a4 a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a129 <|@
d <@d|@=== Debug Properties ===
bci: 17
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v375 
stateDuring: ?531 
=== Succesors ===
next: a595 
=== Usages ===
v384 ?532 ?533 
=== Predecessor ===
v614 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v375 stateDuring: ?531 #next: a595  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a595 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 22]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v624 
lastLocationAccess: - 
=== Succesors ===
next: a136 
=== Usages ===
a379 
=== Predecessor ===
a129 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v624 lastLocationAccess: - #next: a136  <|@  <|@
f <@~|@floating>@ <|@
tid a379 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 22]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a595 
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a595  <|@  <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a379 a2 a363 
=== Succesors ===
=== Usages ===
a136 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a379 a2 a363  <|@  <|@
tid ?532 <|@
d <@d|@=== Debug Properties ===
bci: 27
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?173 
values: a1 a129 a1 a363 a4 a2 
=== Succesors ===
=== Usages ===
a136 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?173 values: a1 a129 a1 a363 a4 a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a136 <|@
d <@d|@=== Debug Properties ===
bci: 27
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v380 
stateDuring: ?532 
=== Succesors ===
next: a596 
=== Usages ===
v384 ?533 
=== Predecessor ===
a595 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v380 stateDuring: ?532 #next: a596  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a596 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 32]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v618 
lastLocationAccess: - 
=== Succesors ===
next: a143 
=== Usages ===
a382 
=== Predecessor ===
a136 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v618 lastLocationAccess: - #next: a143  <|@  <|@
f <@~|@floating>@ <|@
tid a382 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 32]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a596 
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a596  <|@  <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a382 a363 a4 
=== Succesors ===
=== Usages ===
a143 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a382 a363 a4  <|@  <|@
tid ?533 <|@
d <@d|@=== Debug Properties ===
bci: 37
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 3
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?173 
values: a1 a129 a136 
=== Succesors ===
=== Usages ===
a143 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?173 values: a1 a129 a136  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a143 <|@
d <@d|@=== Debug Properties ===
bci: 37
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v383 
stateDuring: ?533 
=== Succesors ===
next: a146 
=== Usages ===
v384 
=== Predecessor ===
a596 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v383 stateDuring: ?533 #next: a146  <|@  <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a129 a136 a143 
=== Succesors ===
=== Usages ===
a146 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a129 a136 a143  <|@  <|@
tid ?534 <|@
d <@d|@=== Debug Properties ===
bci: 40
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?173 
=== Succesors ===
=== Usages ===
a146 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a146 <|@
d <@d|@=== Debug Properties ===
bci: 40
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v384 
stateDuring: ?534 
=== Succesors ===
next: v175 
=== Usages ===
a176 
=== Predecessor ===
a143 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v384 stateDuring: ?534 #next: v175  <|@  <|@
f <@*|@fixed>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
a146 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 31]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v151 
=== Succesors ===
next: v177 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v151 #next: v177  <|@  <|@
f <@*|@fixed>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
v157 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a176 <|@
d <@d|@=== Debug Properties ===
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v174 
values: a146 a2 
=== Succesors ===
=== Usages ===
?27 a260 ?280 ?227 v421 ?539 v615 v634 ?540 v431 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v174 values: a146 a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v175 v177 
=== Succesors ===
next: a597 
=== Usages ===
a176 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v175 v177 #next: a597  <|@  <|@
tid ?27 <|@
d <@d|@=== Debug Properties ===
bci: 30
bytecode: aload_0
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 27]
stackSize: 3
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a122 a176 a1 a2 a3 a608 
=== Succesors ===
=== Usages ===
a597 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a122 a176 a1 a2 a3 a608  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a597 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: int[-98827|0xfffffffffffe7df5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 32]
stamp: n# List$Element
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?27 
guard: - 
address: v624 
lastLocationAccess: - 
=== Succesors ===
next: v204 
=== Usages ===
a389 v630 
=== Predecessor ===
v174 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?27 guard: - address: v624 lastLocationAccess: - #next: v204  <|@  <|@
tid ?227 <|@
d <@d|@=== Debug Properties ===
bci: 37
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 3
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a122 a176 
=== Succesors ===
=== Usages ===
?535 ?536 ?537 ?538 ?226 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a122 a176  <|@  <|@
f <@~|@floating>@ <|@
tid a389 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 32]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a597 
=== Succesors ===
=== Usages ===
?226 a207 v407 ?535 v404 ?536 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a597  <|@  <|@
tid ?226 <|@
d <@d|@=== Debug Properties ===
bci: 3
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?227 
values: a1 a389 a2 a3 
=== Succesors ===
=== Usages ===
?208 ?217 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?227 values: a1 a389 a2 a3  <|@  <|@
f <@*|@fixed>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v205 
=== Predecessor ===
a597 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" 
    successors "B28" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a206 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v205 
values: a2 a392 
=== Succesors ===
=== Usages ===
?208 v214 v628 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v205 values: a2 a392  <|@  <|@
f <@~|@floating>@ <|@
tid a207 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v205 
values: a389 a395 
=== Succesors ===
=== Usages ===
?208 v209 v629 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v205 values: a389 a395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 41
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v204 
=== Succesors ===
next: v213 
=== Usages ===
a206 a207 v211 v216 v225 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v204 #next: v213  <|@  <|@
f <@~|@floating>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a207 
=== Succesors ===
=== Usages ===
v213 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a207  <|@  <|@
f <@*|@fixed>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
profileData: PROFILED designatedSuccessorProbability: 0.10074626865671642
stamp: void
=== Inputs ===
condition: v209 
=== Succesors ===
trueSuccessor: v211 
falseSuccessor: v210 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v209 #trueSuccessor: v211 #falseSuccessor: v210  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 10]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v218 
=== Usages ===
=== Predecessor ===
v213 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v218  <|@  <|@
f <@~|@floating>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a206 
=== Succesors ===
=== Usages ===
v218 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a206  <|@  <|@
f <@*|@fixed>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
profileData: PROFILED designatedSuccessorProbability: 0.03787636982657727
stamp: void
=== Inputs ===
condition: v214 
=== Succesors ===
trueSuccessor: v216 
falseSuccessor: v215 
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v214 #trueSuccessor: v216 #falseSuccessor: v215  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 16]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v515 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v515  <|@  <|@
tid ?208 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: aload
code: ResolvedJavaMethodBytecode<List.isShorterThan(List$Element, List$Element)>
localsSize: 5
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?226 
values: - - - a206 a207 
=== Succesors ===
=== Usages ===
v515 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?226 values: - - - a206 a207  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
stamp: void
=== Inputs ===
stateBefore: ?208 
=== Succesors ===
next: a598 
=== Usages ===
=== Predecessor ===
v215 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?208 #next: a598  <|@  <|@
f <@~|@floating>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a206 
index: - 
=== Succesors ===
=== Usages ===
a598 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a206 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a598 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v628 
lastLocationAccess: - 
=== Succesors ===
next: a599 
=== Usages ===
a392 
=== Predecessor ===
v515 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v628 lastLocationAccess: - #next: a599  <|@  <|@
f <@~|@floating>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a207 
index: - 
=== Succesors ===
=== Usages ===
a599 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a207 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a599 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v629 
lastLocationAccess: - 
=== Succesors ===
next: v225 
=== Usages ===
a395 
=== Predecessor ===
a598 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v629 lastLocationAccess: - #next: v225  <|@  <|@
f <@~|@floating>@ <|@
tid a395 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a599 
=== Succesors ===
=== Usages ===
a207 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a599  <|@  <|@
f <@~|@floating>@ <|@
tid a392 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a598 
=== Succesors ===
=== Usages ===
a206 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a598  <|@  <|@
f <@*|@fixed>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
stamp: void
=== Inputs ===
loopBegin: v205 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a599 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v205  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B29" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v205 
=== Succesors ===
next: a600 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v205 #next: a600  <|@  <|@
tid ?217 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: iconst_1
code: ResolvedJavaMethodBytecode<List.isShorterThan(List$Element, List$Element)>
localsSize: 5
locksSize: 0
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?226 
=== Succesors ===
=== Usages ===
a600 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?226  <|@  <|@
f <@~|@floating>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a597 
=== Succesors ===
=== Usages ===
a600 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a597  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a600 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: int[-101643|0xfffffffffffe72f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 12]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
stamp: n# List$Element
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?217 
guard: - 
address: v630 
lastLocationAccess: - 
=== Succesors ===
next: a183 
=== Usages ===
a400 
=== Predecessor ===
v216 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?217 guard: - address: v630 lastLocationAccess: - #next: a183  <|@  <|@
f <@~|@floating>@ <|@
tid a400 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 12]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a600 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a600  <|@  <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a400 a2 a3 
=== Succesors ===
=== Usages ===
a183 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a400 a2 a3  <|@  <|@
tid ?535 <|@
d <@d|@=== Debug Properties ===
bci: 17
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?227 
values: a1 a1 a389 a2 a3 
=== Succesors ===
=== Usages ===
a183 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?227 values: a1 a1 a389 a2 a3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a183 <|@
d <@d|@=== Debug Properties ===
bci: 17
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v401 
stateDuring: ?535 
=== Succesors ===
next: a601 
=== Usages ===
v408 ?536 ?537 
=== Predecessor ===
a600 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v401 stateDuring: ?535 #next: a601  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a601 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 22]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v618 
lastLocationAccess: - 
=== Succesors ===
next: a190 
=== Usages ===
a403 
=== Predecessor ===
a183 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v618 lastLocationAccess: - #next: a190  <|@  <|@
f <@~|@floating>@ <|@
tid a403 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 22]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a601 
=== Succesors ===
=== Usages ===
v404 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a601  <|@  <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a403 a3 a389 
=== Succesors ===
=== Usages ===
a190 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a403 a3 a389  <|@  <|@
tid ?536 <|@
d <@d|@=== Debug Properties ===
bci: 27
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?227 
values: a1 a183 a1 a389 a2 a3 
=== Succesors ===
=== Usages ===
a190 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?227 values: a1 a183 a1 a389 a2 a3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a190 <|@
d <@d|@=== Debug Properties ===
bci: 27
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v404 
stateDuring: ?536 
=== Succesors ===
next: a602 
=== Usages ===
v408 ?537 
=== Predecessor ===
a601 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v404 stateDuring: ?536 #next: a602  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a602 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 32]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v617 
lastLocationAccess: - 
=== Succesors ===
next: a197 
=== Usages ===
a406 
=== Predecessor ===
a190 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v617 lastLocationAccess: - #next: a197  <|@  <|@
f <@~|@floating>@ <|@
tid a406 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 32]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a602 
=== Succesors ===
=== Usages ===
v407 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a602  <|@  <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a406 a389 a2 
=== Succesors ===
=== Usages ===
a197 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a406 a389 a2  <|@  <|@
tid ?537 <|@
d <@d|@=== Debug Properties ===
bci: 37
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 3
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?227 
values: a1 a183 a190 
=== Succesors ===
=== Usages ===
a197 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?227 values: a1 a183 a190  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a197 <|@
d <@d|@=== Debug Properties ===
bci: 37
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v407 
stateDuring: ?537 
=== Succesors ===
next: a200 
=== Usages ===
v408 
=== Predecessor ===
a602 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v407 stateDuring: ?537 #next: a200  <|@  <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a183 a190 a197 
=== Succesors ===
=== Usages ===
a200 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a183 a190 a197  <|@  <|@
tid ?538 <|@
d <@d|@=== Debug Properties ===
bci: 40
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?227 
=== Succesors ===
=== Usages ===
a200 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?227  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a200 <|@
d <@d|@=== Debug Properties ===
bci: 40
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v408 
stateDuring: ?538 
=== Succesors ===
next: v229 
=== Usages ===
a230 
=== Predecessor ===
a197 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v408 stateDuring: ?538 #next: v229  <|@  <|@
f <@*|@fixed>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
a200 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 31]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v205 
=== Succesors ===
next: v231 
=== Usages ===
=== Predecessor ===
v213 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v205 #next: v231  <|@  <|@
f <@*|@fixed>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
v211 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a230 <|@
d <@d|@=== Debug Properties ===
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v228 
values: a200 a3 
=== Succesors ===
=== Usages ===
a284 ?280 v421 ?539 v426 ?540 v616 v635 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v228 values: a200 a3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v229 v231 
=== Succesors ===
next: v258 
=== Usages ===
a230 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v229 v231 #next: v258  <|@  <|@
tid ?281 <|@
d <@d|@=== Debug Properties ===
bci: 40
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?539 ?540 ?541 ?542 ?280 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
tid ?280 <|@
d <@d|@=== Debug Properties ===
bci: 3
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?281 
values: a1 a122 a176 a230 
=== Succesors ===
=== Usages ===
?262 ?271 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?281 values: a1 a122 a176 a230  <|@  <|@
f <@*|@fixed>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
v228 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B32" 
    successors "B34" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v259 
values: a176 a412 
=== Succesors ===
=== Usages ===
?262 v268 v631 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v259 values: a176 a412  <|@  <|@
f <@~|@floating>@ <|@
tid a261 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v259 
values: a122 a415 
=== Succesors ===
=== Usages ===
?262 v263 v632 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v259 values: a122 a415  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 41
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v258 
=== Succesors ===
next: v267 
=== Usages ===
a260 a261 v265 v270 v279 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v258 #next: v267  <|@  <|@
f <@~|@floating>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a261 
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a261  <|@  <|@
f <@*|@fixed>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
profileData: PROFILED designatedSuccessorProbability: 0.10074626865671642
stamp: void
=== Inputs ===
condition: v263 
=== Succesors ===
trueSuccessor: v265 
falseSuccessor: v264 
=== Usages ===
=== Predecessor ===
v259 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v263 #trueSuccessor: v265 #falseSuccessor: v264  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B32" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 10]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: v272 
=== Usages ===
=== Predecessor ===
v267 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v272  <|@  <|@
f <@~|@floating>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a260 
=== Succesors ===
=== Usages ===
v272 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a260  <|@  <|@
f <@*|@fixed>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
profileData: PROFILED designatedSuccessorProbability: 0.03787636982657727
stamp: void
=== Inputs ===
condition: v268 
=== Succesors ===
trueSuccessor: v270 
falseSuccessor: v269 
=== Usages ===
=== Predecessor ===
v264 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v268 #trueSuccessor: v270 #falseSuccessor: v269  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 16]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: v516 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v516  <|@  <|@
tid ?262 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: aload
code: ResolvedJavaMethodBytecode<List.isShorterThan(List$Element, List$Element)>
localsSize: 5
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?280 
values: - - - a260 a261 
=== Succesors ===
=== Usages ===
v516 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?280 values: - - - a260 a261  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
stamp: void
=== Inputs ===
stateBefore: ?262 
=== Succesors ===
next: a603 
=== Usages ===
=== Predecessor ===
v269 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?262 #next: a603  <|@  <|@
f <@~|@floating>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a260 
index: - 
=== Succesors ===
=== Usages ===
a603 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a260 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a603 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v631 
lastLocationAccess: - 
=== Succesors ===
next: a604 
=== Usages ===
a412 
=== Predecessor ===
v516 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v631 lastLocationAccess: - #next: a604  <|@  <|@
f <@~|@floating>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a261 
index: - 
=== Succesors ===
=== Usages ===
a604 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a261 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a604 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v632 
lastLocationAccess: - 
=== Succesors ===
next: v279 
=== Usages ===
a415 
=== Predecessor ===
a603 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v632 lastLocationAccess: - #next: v279  <|@  <|@
f <@~|@floating>@ <|@
tid a415 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a604 
=== Succesors ===
=== Usages ===
a261 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a604  <|@  <|@
f <@~|@floating>@ <|@
tid a412 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a603 
=== Succesors ===
=== Usages ===
a260 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a603  <|@  <|@
f <@*|@fixed>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
stamp: void
=== Inputs ===
loopBegin: v259 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a604 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v259  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v259 
=== Succesors ===
next: a605 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v259 #next: a605  <|@  <|@
tid ?271 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: iconst_1
code: ResolvedJavaMethodBytecode<List.isShorterThan(List$Element, List$Element)>
localsSize: 5
locksSize: 0
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?280 
=== Succesors ===
=== Usages ===
v616 a605 v615 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?280  <|@  <|@
f <@~|@floating>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a122 
index: - 
=== Succesors ===
=== Usages ===
a605 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a122 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a605 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: int[-106763|0xfffffffffffe5ef5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 12]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
stamp: n# List$Element
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?271 
guard: - 
address: v633 
lastLocationAccess: - 
=== Succesors ===
next: v615 
=== Usages ===
a420 
=== Predecessor ===
v270 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?271 guard: - address: v633 lastLocationAccess: - #next: v615  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-108043|0xfffffffffffe59f5]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?271 
object: a176 
=== Succesors ===
next: v616 
=== Usages ===
=== Predecessor ===
a605 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?271 object: a176 #next: v616  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-109323|0xfffffffffffe54f5]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?271 
object: a230 
=== Succesors ===
next: a237 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?271 object: a230 #next: a237  <|@  <|@
f <@~|@floating>@ <|@
tid a420 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 12]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a605 
=== Succesors ===
=== Usages ===
v421 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a605  <|@  <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a420 a176 a230 
=== Succesors ===
=== Usages ===
a237 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a420 a176 a230  <|@  <|@
tid ?539 <|@
d <@d|@=== Debug Properties ===
bci: 17
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?281 
values: a1 a1 a122 a176 a230 
=== Succesors ===
=== Usages ===
a237 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?281 values: a1 a1 a122 a176 a230  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a237 <|@
d <@d|@=== Debug Properties ===
bci: 17
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v421 
stateDuring: ?539 
=== Succesors ===
next: a606 
=== Usages ===
v432 ?540 ?541 
=== Predecessor ===
v616 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v421 stateDuring: ?539 #next: a606  <|@  <|@
f <@~|@floating>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a176 
index: - 
=== Succesors ===
=== Usages ===
a606 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a176 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a606 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 22]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v634 
lastLocationAccess: - 
=== Succesors ===
next: a244 
=== Usages ===
a425 
=== Predecessor ===
a237 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v634 lastLocationAccess: - #next: a244  <|@  <|@
f <@~|@floating>@ <|@
tid a425 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 22]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a606 
=== Succesors ===
=== Usages ===
v426 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a606  <|@  <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a425 a230 a122 
=== Succesors ===
=== Usages ===
a244 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a425 a230 a122  <|@  <|@
tid ?540 <|@
d <@d|@=== Debug Properties ===
bci: 27
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?281 
values: a1 a237 a1 a122 a176 a230 
=== Succesors ===
=== Usages ===
a244 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?281 values: a1 a237 a1 a122 a176 a230  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a244 <|@
d <@d|@=== Debug Properties ===
bci: 27
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v426 
stateDuring: ?540 
=== Succesors ===
next: a607 
=== Usages ===
v432 ?541 
=== Predecessor ===
a606 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v426 stateDuring: ?540 #next: a607  <|@  <|@
f <@~|@floating>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a230 
index: - 
=== Succesors ===
=== Usages ===
a607 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a230 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a607 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 32]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v635 
lastLocationAccess: - 
=== Succesors ===
next: a251 
=== Usages ===
a430 
=== Predecessor ===
a244 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v635 lastLocationAccess: - #next: a251  <|@  <|@
f <@~|@floating>@ <|@
tid a430 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 32]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a607 
=== Succesors ===
=== Usages ===
v431 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a607  <|@  <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a430 a122 a176 
=== Succesors ===
=== Usages ===
a251 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a430 a122 a176  <|@  <|@
tid ?541 <|@
d <@d|@=== Debug Properties ===
bci: 37
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 3
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?281 
values: a1 a237 a244 
=== Succesors ===
=== Usages ===
a251 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?281 values: a1 a237 a244  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a251 <|@
d <@d|@=== Debug Properties ===
bci: 37
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v431 
stateDuring: ?541 
=== Succesors ===
next: a254 
=== Usages ===
v432 
=== Predecessor ===
a607 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v431 stateDuring: ?541 #next: a254  <|@  <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a237 a244 a251 
=== Succesors ===
=== Usages ===
a254 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a237 a244 a251  <|@  <|@
tid ?542 <|@
d <@d|@=== Debug Properties ===
bci: 40
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?281 
=== Succesors ===
=== Usages ===
a254 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?281  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a254 <|@
d <@d|@=== Debug Properties ===
bci: 40
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v432 
stateDuring: ?542 
=== Succesors ===
next: v283 
=== Usages ===
a284 
=== Predecessor ===
a251 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v432 stateDuring: ?542 #next: v283  <|@  <|@
f <@*|@fixed>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
a254 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 31]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v259 
=== Succesors ===
next: v285 
=== Usages ===
=== Predecessor ===
v267 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v259 #next: v285  <|@  <|@
f <@*|@fixed>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
v265 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" "B34" 
    successors 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a284 <|@
d <@d|@=== Debug Properties ===
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v282 
values: a254 a230 
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v282 values: a254 a230  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v283 v285 
=== Succesors ===
next: v38 
=== Usages ===
a284 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v283 v285 #next: v38  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 43]
stamp: void
=== Inputs ===
memoryMap: - 
result: a284 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a284  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a872160 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v5|QWORD[.], v7|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|QWORD[.], v9|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|QWORD[.], y: v8|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v9|QWORD[.], y: v9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v9|QWORD[.] v8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV input: [v9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|QWORD[.], v14|QWORD[.]] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603999204951558038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4597043951172344564
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591923954390866623
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B1" 
    successors 
    xhandlers
    flags 
    probability 4604906646667520750
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4585069451628504407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|QWORD[.], v5|QWORD[.]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" 
    successors "B16" "B13" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|QWORD[.], v16|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|QWORD[.], y: v16|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B12 -> B16 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B14" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|QWORD[.], y: v15|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B13 -> B15 falseDestination: B13 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v15|QWORD[.] v16|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v17|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[_] = MOV input: [v15|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = MOV input: [v16|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v19|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.], v20|QWORD[.]] destination: B14 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v22|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v2|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v24|QWORD[.] 
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v24|QWORD[.] v27|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17] <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v31|QWORD[.]] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" "B16" 
    successors "B18" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] Object[null] v3|QWORD[.] 
>@ <|@ instruction v33|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.], v34|QWORD[.]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B22" "B19" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD[.], v36|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v36|QWORD[.], y: v36|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B18 -> B22 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v35|QWORD[.], y: v35|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B19 -> B21 falseDestination: B19 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v35|QWORD[.] v36|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v37|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27] <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[_] = MOV input: [v35|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[_] = MOV input: [v36|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v38|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v41|QWORD[.], v40|QWORD[.]] destination: B20 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v33|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:14, 3, 27] <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v44|QWORD[.] 
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27] <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v44|QWORD[.] v47|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27] <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27] <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] Object[null] 
>@ <|@ instruction v53|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD state [bci:30] <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v53|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.], v54|QWORD[.]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" 
    successors "B28" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD[.], v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|QWORD[.], y: v56|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B24 -> B28 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v55|QWORD[.], y: v55|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v55|QWORD[.] v56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: v57|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37] <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = MOV input: [v55|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[_] = MOV input: [v56|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v61|QWORD[.], v60|QWORD[.]] destination: B26 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|QWORD[.]] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B29" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction v62|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37] <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37] <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v64|QWORD[.] 
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37] <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v64|QWORD[.] v67|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37] <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37] <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v71|QWORD[.]] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v52|QWORD[.], v32|QWORD[.]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B32" 
    successors "B34" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr   -1  <|@ instruction [v73|QWORD[.], v74|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v74|QWORD[.], y: v74|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B30 -> B34 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B32" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v73|QWORD[.], y: v73|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B31 -> B33 falseDestination: B31 -> B32 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v73|QWORD[.] v74|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: v75|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40] <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[_] = MOV input: [v73|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD[_] = MOV input: [v74|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v79|QWORD[.], v78|QWORD[.]] destination: B32 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v72|QWORD[.]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction v80|DWORD[_] = MOV input: [v32|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v52|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v72|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40] <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD[_] = MOV input: [v52|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v83|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v82|QWORD[.] 
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40] <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD[_] = MOV input: [v72|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v82|QWORD[.] v85|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40] <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v88|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40] <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v89|QWORD[.]] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" "B34" 
    successors 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr   -1  <|@ instruction [v90|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_2       
     2: aload_1       
     3: invokevirtual #8          // isShorterThan:(List$Element, List$Element)boolean
     6: ifeq          44
     9: aload_0       
    10: aload_0       
    11: aload_1       
    12: invokevirtual #7          // List$Element.getNext:()List$Element
    15: aload_2       
    16: aload_3       
    17: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    20: aload_0       
    21: aload_2       
    22: invokevirtual #7          // List$Element.getNext:()List$Element
    25: aload_3       
    26: aload_1       
    27: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    30: aload_0       
    31: aload_3       
    32: invokevirtual #7          // List$Element.getNext:()List$Element
    35: aload_1       
    36: aload_2       
    37: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    40: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    43: areturn       
    44: aload_3       
    45: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v290 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v290  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a# List$Element
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a152 ?65 ?119 ?20 ?173 v383 v614 ?532 v39 v347 ?527 v352 ?528 ?118 v624 a122 v375 ?531 ?172 v613 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# List$Element
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a206 ?65 v407 v14 ?535 ?20 ?173 ?27 ?226 ?119 v375 v618 v380 ?536 ?172 ?531 a176 v401 ?532 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 12]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v290 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
profileData: PROFILED designatedSuccessorProbability: 0.10074626865671642
stamp: void
=== Inputs ===
condition: v14 
=== Succesors ===
trueSuccessor: v289 
falseSuccessor: v288 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v14 #trueSuccessor: v289 #falseSuccessor: v288  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a872160 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591923954390866623
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 31]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v310 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v310  <|@  <|@
f <@*|@fixed>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 31]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v308 
=== Predecessor ===
v289 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 10]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a582 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a582  <|@  <|@
f <@~|@floating>@ <|@
tid v618 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a582 a601 a596 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a582 <|@
result v4|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v618 
lastLocationAccess: - 
=== Succesors ===
next: v294 
=== Usages ===
a323 v623 
=== Predecessor ===
v288 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v618 lastLocationAccess: - #next: v294  <|@  <|@
f <@~|@floating>@ <|@
tid a323 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a582 
=== Succesors ===
=== Usages ===
a316 ?118 a99 v357 ?527 v352 ?528 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a582  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# List
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?539 ?65 ?280 ?119 ?20 ?20 ?173 ?27 ?27 ?227 v432 v347 ?539 ?540 v352 ?540 ?541 v357 ?527 v358 ?118 ?119 v375 ?527 ?528 v380 ?528 ?529 v383 ?531 v384 ?172 ?173 v401 ?531 ?532 v404 ?532 ?533 v407 ?535 v408 ?226 v421 ?535 ?536 v426 ?536 ?537 v431 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a# List$Element
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a230 ?65 ?528 ?119 ?527 v21 v404 ?27 ?226 v347 v617 ?118 v612 ?535 v357 a98 ?173 v401 ?536 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v617 <|@
result [v2|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
a583 a589 a591 a602 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 22]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v294 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a3  <|@  <|@
f <@*|@fixed>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
profileData: PROFILED designatedSuccessorProbability: 0.03787636982657727
stamp: void
=== Inputs ===
condition: v21 
=== Succesors ===
trueSuccessor: v293 
falseSuccessor: v292 
=== Usages ===
=== Predecessor ===
a582 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v21 #trueSuccessor: v293 #falseSuccessor: v292  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4585069451628504407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v303 
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v303  <|@  <|@
f <@*|@fixed>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v301 
=== Predecessor ===
v293 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 16]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: a583 
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a583  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a583 <|@
result v6|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v617 
lastLocationAccess: - 
=== Succesors ===
next: v40 
=== Usages ===
a320 
=== Predecessor ===
v292 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v617 lastLocationAccess: - #next: v40  <|@  <|@
f <@~|@floating>@ <|@
tid a320 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a583 
=== Succesors ===
=== Usages ===
a315 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a583  <|@  <|@
tid ?65 <|@
d <@d|@=== Debug Properties ===
bci: 3
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 a4 
=== Succesors ===
=== Usages ===
?44 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 a4  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v41 
=== Predecessor ===
a583 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v5|QWORD[.], v7|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a316 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v41 
values: a323 a329 
=== Succesors ===
=== Usages ===
?44 v45 v620 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v41 values: a323 a329  <|@  <|@
f <@~|@floating>@ <|@
tid a315 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v41 
values: a320 a326 
=== Succesors ===
=== Usages ===
?44 v50 v619 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v41 values: a320 a326  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 7
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v40 
=== Succesors ===
next: v49 
=== Usages ===
a316 a315 v47 v52 v61 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v40 #next: v49  <|@  <|@
f <@~|@floating>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a316 
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a316  <|@  <|@
f <@*|@fixed>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
profileData: PROFILED designatedSuccessorProbability: 0.10074626865671642
stamp: void
=== Inputs ===
condition: v45 
=== Succesors ===
trueSuccessor: v47 
falseSuccessor: v46 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v45 #trueSuccessor: v47 #falseSuccessor: v46  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|QWORD[.], v9|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|QWORD[.], y: v8|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 10]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v54 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v54  <|@  <|@
f <@~|@floating>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a315 
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a315  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
profileData: PROFILED designatedSuccessorProbability: 0.03787636982657727
stamp: void
=== Inputs ===
condition: v50 
=== Succesors ===
trueSuccessor: v52 
falseSuccessor: v51 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v50 #trueSuccessor: v52 #falseSuccessor: v51  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v9|QWORD[.], y: v9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 16]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
next: v512 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v512  <|@  <|@
tid ?44 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: aload
code: ResolvedJavaMethodBytecode<List.isShorterThan(List$Element, List$Element)>
localsSize: 5
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?65 
values: - - - a315 a316 
=== Succesors ===
=== Usages ===
v512 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?65 values: - - - a315 a316  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
stamp: void
=== Inputs ===
stateBefore: ?44 
=== Succesors ===
next: a584 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?44 #next: a584  <|@  <|@
f <@~|@floating>@ <|@
tid v619 <|@
result [v9|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a315 
index: - 
=== Succesors ===
=== Usages ===
a584 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a315 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a584 <|@
result v11|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v619 
lastLocationAccess: - 
=== Succesors ===
next: a585 
=== Usages ===
a326 
=== Predecessor ===
v512 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v619 lastLocationAccess: - #next: a585  <|@  <|@
f <@~|@floating>@ <|@
tid v620 <|@
result [v8|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a316 
index: - 
=== Succesors ===
=== Usages ===
a585 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a316 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a585 <|@
result v12|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v620 
lastLocationAccess: - 
=== Succesors ===
next: v61 
=== Usages ===
a329 
=== Predecessor ===
a584 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v620 lastLocationAccess: - #next: v61  <|@  <|@
f <@~|@floating>@ <|@
tid a329 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a585 
=== Succesors ===
=== Usages ===
a316 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a585  <|@  <|@
f <@~|@floating>@ <|@
tid a326 <|@
result v14|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a584 
=== Succesors ===
=== Usages ===
a315 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a584  <|@  <|@
f <@*|@fixed>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
stamp: void
=== Inputs ===
loopBegin: v41 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a585 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v41  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v9|QWORD[.] v8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV input: [v9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|QWORD[.], v14|QWORD[.]] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4597043951172344564
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v41 
=== Succesors ===
next: v302 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v41 #next: v302  <|@  <|@
f <@*|@fixed>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v301 
=== Predecessor ===
v52 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603999204951558038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 31]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v41 
=== Succesors ===
next: v309 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v41 #next: v309  <|@  <|@
f <@*|@fixed>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 31]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v308 
=== Predecessor ===
v47 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B1" 
    successors 
    xhandlers
    flags 
    probability 4604906646667520750
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 31]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v309 v310 
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v309 v310 #next: v39  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 45]
stamp: void
=== Inputs ===
memoryMap: - 
result: a4 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v308 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a4  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v302 v303 
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v302 v303 #next: v96  <|@  <|@
tid ?119 <|@
d <@d|@=== Debug Properties ===
bci: 17
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a1 a2 a3 a4 
=== Succesors ===
=== Usages ===
?527 ?528 ?529 ?530 ?118 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a1 a2 a3 a4  <|@  <|@
tid ?118 <|@
d <@d|@=== Debug Properties ===
bci: 3
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?119 
values: a1 a323 a3 a4 
=== Succesors ===
=== Usages ===
?100 ?109 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?119 values: a1 a323 a3 a4  <|@  <|@
f <@~|@floating>@ <|@
tid v624 <|@
result [v3|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
a590 a595 a597 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
v301 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|QWORD[.], v5|QWORD[.]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" 
    successors "B16" "B13" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a98 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v97 
values: a3 a338 
=== Succesors ===
=== Usages ===
?100 v106 v621 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v97 values: a3 a338  <|@  <|@
f <@~|@floating>@ <|@
tid a99 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v97 
values: a323 a341 
=== Succesors ===
=== Usages ===
?100 v101 v622 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v97 values: a323 a341  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 41
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v96 
=== Succesors ===
next: v105 
=== Usages ===
a98 a99 v103 v108 v117 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v96 #next: v105  <|@  <|@
f <@~|@floating>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a99 
=== Succesors ===
=== Usages ===
v105 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a99  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
profileData: PROFILED designatedSuccessorProbability: 0.10074626865671642
stamp: void
=== Inputs ===
condition: v101 
=== Succesors ===
trueSuccessor: v103 
falseSuccessor: v102 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v101 #trueSuccessor: v103 #falseSuccessor: v102  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|QWORD[.], v16|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|QWORD[.], y: v16|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B12 -> B16 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B14" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 10]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v110 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v110  <|@  <|@
f <@~|@floating>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a98 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a98  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
profileData: PROFILED designatedSuccessorProbability: 0.03787636982657727
stamp: void
=== Inputs ===
condition: v106 
=== Succesors ===
trueSuccessor: v108 
falseSuccessor: v107 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v106 #trueSuccessor: v108 #falseSuccessor: v107  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|QWORD[.], y: v15|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B13 -> B15 falseDestination: B13 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 16]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v513 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v513  <|@  <|@
tid ?100 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: aload
code: ResolvedJavaMethodBytecode<List.isShorterThan(List$Element, List$Element)>
localsSize: 5
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?118 
values: - - - a98 a99 
=== Succesors ===
=== Usages ===
v513 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?118 values: - - - a98 a99  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
stamp: void
=== Inputs ===
stateBefore: ?100 
=== Succesors ===
next: a586 
=== Usages ===
=== Predecessor ===
v107 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?100 #next: a586  <|@  <|@
f <@~|@floating>@ <|@
tid v621 <|@
result [v15|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a98 
index: - 
=== Succesors ===
=== Usages ===
a586 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a98 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a586 <|@
result v18|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v621 
lastLocationAccess: - 
=== Succesors ===
next: a587 
=== Usages ===
a338 
=== Predecessor ===
v513 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v621 lastLocationAccess: - #next: a587  <|@  <|@
f <@~|@floating>@ <|@
tid v622 <|@
result [v16|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a99 
index: - 
=== Succesors ===
=== Usages ===
a587 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a99 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a587 <|@
result v19|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v622 
lastLocationAccess: - 
=== Succesors ===
next: v117 
=== Usages ===
a341 
=== Predecessor ===
a586 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v622 lastLocationAccess: - #next: v117  <|@  <|@
f <@~|@floating>@ <|@
tid a341 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a587 
=== Succesors ===
=== Usages ===
a99 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a587  <|@  <|@
f <@~|@floating>@ <|@
tid a338 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a586 
=== Succesors ===
=== Usages ===
a98 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a586  <|@  <|@
f <@*|@fixed>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
stamp: void
=== Inputs ===
loopBegin: v97 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a587 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v97  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v15|QWORD[.] v16|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v17|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[_] = MOV input: [v15|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = MOV input: [v16|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v19|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.], v20|QWORD[.]] destination: B14 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v97 
=== Succesors ===
next: a588 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v97 #next: a588  <|@  <|@
tid ?109 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: iconst_1
code: ResolvedJavaMethodBytecode<List.isShorterThan(List$Element, List$Element)>
localsSize: 5
locksSize: 0
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?118 
=== Succesors ===
=== Usages ===
v613 a588 v612 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?118  <|@  <|@
f <@~|@floating>@ <|@
tid v623 <|@
result [v4|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a582 
=== Succesors ===
=== Usages ===
a588 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a582  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a588 <|@
result v22|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: int[-87819|0xfffffffffffea8f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 12]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
stamp: n# List$Element
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?109 
guard: - 
address: v623 
lastLocationAccess: - 
=== Succesors ===
next: v612 
=== Usages ===
a346 
=== Predecessor ===
v108 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?109 guard: - address: v623 lastLocationAccess: - #next: v612  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-89099|0xfffffffffffea3f5]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?109 
object: a3 
=== Succesors ===
next: v613 
=== Usages ===
=== Predecessor ===
a588 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?109 object: a3 #next: v613  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-90379|0xfffffffffffe9ef5]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?109 
object: a4 
=== Succesors ===
next: a75 
=== Usages ===
=== Predecessor ===
v612 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?109 object: a4 #next: a75  <|@  <|@
f <@~|@floating>@ <|@
tid a346 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 12]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a588 
=== Succesors ===
=== Usages ===
v347 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a588  <|@  <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a346 a3 a4 
=== Succesors ===
=== Usages ===
a75 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a346 a3 a4  <|@  <|@
tid ?527 <|@
d <@d|@=== Debug Properties ===
bci: 17
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?119 
values: a1 a1 a323 a3 a4 
=== Succesors ===
=== Usages ===
a75 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?119 values: a1 a1 a323 a3 a4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a75 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 17
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v347 
stateDuring: ?527 
=== Succesors ===
next: a589 
=== Usages ===
v358 ?528 ?529 
=== Predecessor ===
v613 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v347 stateDuring: ?527 #next: a589  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a589 <|@
result v25|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 22]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v617 
lastLocationAccess: - 
=== Succesors ===
next: a82 
=== Usages ===
a351 
=== Predecessor ===
a75 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v617 lastLocationAccess: - #next: a82  <|@  <|@
f <@~|@floating>@ <|@
tid a351 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 22]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a589 
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a589  <|@  <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a351 a4 a323 
=== Succesors ===
=== Usages ===
a82 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a351 a4 a323  <|@  <|@
tid ?528 <|@
d <@d|@=== Debug Properties ===
bci: 27
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?119 
values: a1 a75 a1 a323 a3 a4 
=== Succesors ===
=== Usages ===
a82 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?119 values: a1 a75 a1 a323 a3 a4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a82 <|@
result v27|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 27
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v352 
stateDuring: ?528 
=== Succesors ===
next: a590 
=== Usages ===
v358 ?529 
=== Predecessor ===
a589 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v352 stateDuring: ?528 #next: a590  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a590 <|@
result v28|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 32]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v624 
lastLocationAccess: - 
=== Succesors ===
next: a89 
=== Usages ===
a356 
=== Predecessor ===
a82 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v624 lastLocationAccess: - #next: a89  <|@  <|@
f <@~|@floating>@ <|@
tid a356 <|@
result v29|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 32]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a590 
=== Succesors ===
=== Usages ===
v357 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a590  <|@  <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a356 a323 a3 
=== Succesors ===
=== Usages ===
a89 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a356 a323 a3  <|@  <|@
tid ?529 <|@
d <@d|@=== Debug Properties ===
bci: 37
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 3
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?119 
values: a1 a75 a82 
=== Succesors ===
=== Usages ===
a89 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?119 values: a1 a75 a82  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a89 <|@
result v30|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 37
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v357 
stateDuring: ?529 
=== Succesors ===
next: a92 
=== Usages ===
v358 
=== Predecessor ===
a590 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v357 stateDuring: ?529 #next: a92  <|@  <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a75 a82 a89 
=== Succesors ===
=== Usages ===
a92 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a75 a82 a89  <|@  <|@
tid ?530 <|@
d <@d|@=== Debug Properties ===
bci: 40
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?119 
=== Succesors ===
=== Usages ===
a92 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?119  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a92 <|@
result v31|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 40
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v358 
stateDuring: ?530 
=== Succesors ===
next: v121 
=== Usages ===
a122 
=== Predecessor ===
a89 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v358 stateDuring: ?530 #next: v121  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v120 
=== Predecessor ===
a92 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v22|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v2|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v24|QWORD[.] 
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v24|QWORD[.] v27|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17] <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v31|QWORD[.]] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 31]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 17]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v97 
=== Succesors ===
next: v123 
=== Usages ===
=== Predecessor ===
v105 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v97 #next: v123  <|@  <|@
f <@*|@fixed>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v120 
=== Predecessor ===
v103 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" "B16" 
    successors "B18" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a122 <|@
result v32|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v120 
values: a92 a4 
=== Succesors ===
=== Usages ===
?20 ?27 a261 ?280 ?173 ?227 v431 v633 ?539 v426 ?540 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v120 values: a92 a4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v121 v123 
=== Succesors ===
next: a591 
=== Usages ===
a122 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v121 v123 #next: a591  <|@  <|@
f <@~|@floating>@ <|@
tid a608 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?20 ?27 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?20 <|@
d <@d|@=== Debug Properties ===
bci: 20
bytecode: aload_0
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 17]
stackSize: 2
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a122 a1 a2 a608 a4 
=== Succesors ===
=== Usages ===
a591 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a122 a1 a2 a608 a4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a591 <|@
result v33|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: int[-92171|0xfffffffffffe97f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 22]
stamp: n# List$Element
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?20 
guard: - 
address: v617 
lastLocationAccess: - 
=== Succesors ===
next: v150 
=== Usages ===
a363 v627 
=== Predecessor ===
v120 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?20 guard: - address: v617 lastLocationAccess: - #next: v150  <|@  <|@
tid ?173 <|@
d <@d|@=== Debug Properties ===
bci: 27
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a122 a1 a2 a3 a4 
=== Succesors ===
=== Usages ===
?531 ?532 ?533 ?534 ?172 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a122 a1 a2 a3 a4  <|@  <|@
f <@~|@floating>@ <|@
tid a363 <|@
result v34|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 22]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a591 
=== Succesors ===
=== Usages ===
?172 a153 v383 ?531 v380 ?532 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a591  <|@  <|@
tid ?172 <|@
d <@d|@=== Debug Properties ===
bci: 3
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?173 
values: a1 a363 a4 a2 
=== Succesors ===
=== Usages ===
?154 ?163 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?173 values: a1 a363 a4 a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
a591 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] Object[null] v3|QWORD[.] 
>@ <|@ instruction v33|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.], v34|QWORD[.]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B22" "B19" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a152 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v151 
values: a4 a366 
=== Succesors ===
=== Usages ===
?154 v160 v625 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v151 values: a4 a366  <|@  <|@
f <@~|@floating>@ <|@
tid a153 <|@
result v36|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v151 
values: a363 a369 
=== Succesors ===
=== Usages ===
?154 v155 v626 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v151 values: a363 a369  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 41
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v150 
=== Succesors ===
next: v159 
=== Usages ===
a152 a153 v157 v162 v171 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v150 #next: v159  <|@  <|@
f <@~|@floating>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a153 
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a153  <|@  <|@
f <@*|@fixed>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
profileData: PROFILED designatedSuccessorProbability: 0.10074626865671642
stamp: void
=== Inputs ===
condition: v155 
=== Succesors ===
trueSuccessor: v157 
falseSuccessor: v156 
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v155 #trueSuccessor: v157 #falseSuccessor: v156  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD[.], v36|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v36|QWORD[.], y: v36|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B18 -> B22 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 10]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v164 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v164  <|@  <|@
f <@~|@floating>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a152 
=== Succesors ===
=== Usages ===
v164 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a152  <|@  <|@
f <@*|@fixed>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
profileData: PROFILED designatedSuccessorProbability: 0.03787636982657727
stamp: void
=== Inputs ===
condition: v160 
=== Succesors ===
trueSuccessor: v162 
falseSuccessor: v161 
=== Usages ===
=== Predecessor ===
v156 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v160 #trueSuccessor: v162 #falseSuccessor: v161  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v35|QWORD[.], y: v35|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B19 -> B21 falseDestination: B19 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 16]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v514 
=== Usages ===
=== Predecessor ===
v164 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v514  <|@  <|@
tid ?154 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: aload
code: ResolvedJavaMethodBytecode<List.isShorterThan(List$Element, List$Element)>
localsSize: 5
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?172 
values: - - - a152 a153 
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?172 values: - - - a152 a153  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
stamp: void
=== Inputs ===
stateBefore: ?154 
=== Succesors ===
next: a592 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?154 #next: a592  <|@  <|@
f <@~|@floating>@ <|@
tid v625 <|@
result [v35|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a152 
index: - 
=== Succesors ===
=== Usages ===
a592 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a152 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a592 <|@
result v38|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v625 
lastLocationAccess: - 
=== Succesors ===
next: a593 
=== Usages ===
a366 
=== Predecessor ===
v514 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v625 lastLocationAccess: - #next: a593  <|@  <|@
f <@~|@floating>@ <|@
tid v626 <|@
result [v36|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a153 
index: - 
=== Succesors ===
=== Usages ===
a593 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a153 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a593 <|@
result v39|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v626 
lastLocationAccess: - 
=== Succesors ===
next: v171 
=== Usages ===
a369 
=== Predecessor ===
a592 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v626 lastLocationAccess: - #next: v171  <|@  <|@
f <@~|@floating>@ <|@
tid a369 <|@
result v40|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a593 
=== Succesors ===
=== Usages ===
a153 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a593  <|@  <|@
f <@~|@floating>@ <|@
tid a366 <|@
result v41|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a592 
=== Succesors ===
=== Usages ===
a152 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a592  <|@  <|@
f <@*|@fixed>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
stamp: void
=== Inputs ===
loopBegin: v151 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a593 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v151  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v35|QWORD[.] v36|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v37|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27] <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[_] = MOV input: [v35|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[_] = MOV input: [v36|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v38|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v41|QWORD[.], v40|QWORD[.]] destination: B20 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v151 
=== Succesors ===
next: a594 
=== Usages ===
=== Predecessor ===
v164 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v151 #next: a594  <|@  <|@
tid ?163 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: iconst_1
code: ResolvedJavaMethodBytecode<List.isShorterThan(List$Element, List$Element)>
localsSize: 5
locksSize: 0
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?172 
=== Succesors ===
=== Usages ===
v614 a594 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?172  <|@  <|@
f <@~|@floating>@ <|@
tid v627 <|@
result [v33|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a591 
=== Succesors ===
=== Usages ===
a594 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a591  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a594 <|@
result v42|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: int[-94987|0xfffffffffffe8cf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 12]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
stamp: n# List$Element
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?163 
guard: - 
address: v627 
lastLocationAccess: - 
=== Succesors ===
next: v614 
=== Usages ===
a374 
=== Predecessor ===
v162 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?163 guard: - address: v627 lastLocationAccess: - #next: v614  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-96267|0xfffffffffffe87f5]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?163 
object: a4 
=== Succesors ===
next: a129 
=== Usages ===
=== Predecessor ===
a594 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?163 object: a4 #next: a129  <|@  <|@
f <@~|@floating>@ <|@
tid a374 <|@
result v43|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 12]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a594 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a594  <|@  <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a374 a4 a2 
=== Succesors ===
=== Usages ===
a129 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a374 a4 a2  <|@  <|@
tid ?531 <|@
d <@d|@=== Debug Properties ===
bci: 17
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?173 
values: a1 a1 a363 a4 a2 
=== Succesors ===
=== Usages ===
a129 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?173 values: a1 a1 a363 a4 a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a129 <|@
result v44|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 17
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v375 
stateDuring: ?531 
=== Succesors ===
next: a595 
=== Usages ===
v384 ?532 ?533 
=== Predecessor ===
v614 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v375 stateDuring: ?531 #next: a595  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a595 <|@
result v45|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 22]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v624 
lastLocationAccess: - 
=== Succesors ===
next: a136 
=== Usages ===
a379 
=== Predecessor ===
a129 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v624 lastLocationAccess: - #next: a136  <|@  <|@
f <@~|@floating>@ <|@
tid a379 <|@
result v46|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 22]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a595 
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a595  <|@  <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a379 a2 a363 
=== Succesors ===
=== Usages ===
a136 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a379 a2 a363  <|@  <|@
tid ?532 <|@
d <@d|@=== Debug Properties ===
bci: 27
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?173 
values: a1 a129 a1 a363 a4 a2 
=== Succesors ===
=== Usages ===
a136 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?173 values: a1 a129 a1 a363 a4 a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a136 <|@
result v47|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 27
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v380 
stateDuring: ?532 
=== Succesors ===
next: a596 
=== Usages ===
v384 ?533 
=== Predecessor ===
a595 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v380 stateDuring: ?532 #next: a596  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a596 <|@
result v48|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 32]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v618 
lastLocationAccess: - 
=== Succesors ===
next: a143 
=== Usages ===
a382 
=== Predecessor ===
a136 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v618 lastLocationAccess: - #next: a143  <|@  <|@
f <@~|@floating>@ <|@
tid a382 <|@
result v49|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 32]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a596 
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a596  <|@  <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a382 a363 a4 
=== Succesors ===
=== Usages ===
a143 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a382 a363 a4  <|@  <|@
tid ?533 <|@
d <@d|@=== Debug Properties ===
bci: 37
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 3
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?173 
values: a1 a129 a136 
=== Succesors ===
=== Usages ===
a143 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?173 values: a1 a129 a136  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a143 <|@
result v50|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 37
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v383 
stateDuring: ?533 
=== Succesors ===
next: a146 
=== Usages ===
v384 
=== Predecessor ===
a596 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v383 stateDuring: ?533 #next: a146  <|@  <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a129 a136 a143 
=== Succesors ===
=== Usages ===
a146 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a129 a136 a143  <|@  <|@
tid ?534 <|@
d <@d|@=== Debug Properties ===
bci: 40
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?173 
=== Succesors ===
=== Usages ===
a146 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a146 <|@
result v51|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 40
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v384 
stateDuring: ?534 
=== Succesors ===
next: v175 
=== Usages ===
a176 
=== Predecessor ===
a143 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v384 stateDuring: ?534 #next: v175  <|@  <|@
f <@*|@fixed>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
a146 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v33|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:14, 3, 27] <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v44|QWORD[.] 
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27] <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v44|QWORD[.] v47|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27] <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27] <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 31]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 27]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v151 
=== Succesors ===
next: v177 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v151 #next: v177  <|@  <|@
f <@*|@fixed>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
v157 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a176 <|@
result v52|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v174 
values: a146 a2 
=== Succesors ===
=== Usages ===
?27 a260 ?280 ?227 v421 ?539 v615 v634 ?540 v431 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v174 values: a146 a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v175 v177 
=== Succesors ===
next: a597 
=== Usages ===
a176 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v175 v177 #next: a597  <|@  <|@
tid ?27 <|@
d <@d|@=== Debug Properties ===
bci: 30
bytecode: aload_0
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 27]
stackSize: 3
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a122 a176 a1 a2 a3 a608 
=== Succesors ===
=== Usages ===
a597 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a122 a176 a1 a2 a3 a608  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a597 <|@
result v53|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: int[-98827|0xfffffffffffe7df5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 32]
stamp: n# List$Element
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?27 
guard: - 
address: v624 
lastLocationAccess: - 
=== Succesors ===
next: v204 
=== Usages ===
a389 v630 
=== Predecessor ===
v174 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?27 guard: - address: v624 lastLocationAccess: - #next: v204  <|@  <|@
tid ?227 <|@
d <@d|@=== Debug Properties ===
bci: 37
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 3
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a122 a176 
=== Succesors ===
=== Usages ===
?535 ?536 ?537 ?538 ?226 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a122 a176  <|@  <|@
f <@~|@floating>@ <|@
tid a389 <|@
result v54|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 32]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a597 
=== Succesors ===
=== Usages ===
?226 a207 v407 ?535 v404 ?536 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a597  <|@  <|@
tid ?226 <|@
d <@d|@=== Debug Properties ===
bci: 3
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?227 
values: a1 a389 a2 a3 
=== Succesors ===
=== Usages ===
?208 ?217 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?227 values: a1 a389 a2 a3  <|@  <|@
f <@*|@fixed>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v205 
=== Predecessor ===
a597 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] Object[null] 
>@ <|@ instruction v53|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD state [bci:30] <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v53|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.], v54|QWORD[.]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" 
    successors "B28" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a206 <|@
result v55|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v205 
values: a2 a392 
=== Succesors ===
=== Usages ===
?208 v214 v628 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v205 values: a2 a392  <|@  <|@
f <@~|@floating>@ <|@
tid a207 <|@
result v56|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v205 
values: a389 a395 
=== Succesors ===
=== Usages ===
?208 v209 v629 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v205 values: a389 a395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 41
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v204 
=== Succesors ===
next: v213 
=== Usages ===
a206 a207 v211 v216 v225 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v204 #next: v213  <|@  <|@
f <@~|@floating>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a207 
=== Succesors ===
=== Usages ===
v213 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a207  <|@  <|@
f <@*|@fixed>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
profileData: PROFILED designatedSuccessorProbability: 0.10074626865671642
stamp: void
=== Inputs ===
condition: v209 
=== Succesors ===
trueSuccessor: v211 
falseSuccessor: v210 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v209 #trueSuccessor: v211 #falseSuccessor: v210  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD[.], v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|QWORD[.], y: v56|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B24 -> B28 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 10]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v218 
=== Usages ===
=== Predecessor ===
v213 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v218  <|@  <|@
f <@~|@floating>@ <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a206 
=== Succesors ===
=== Usages ===
v218 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a206  <|@  <|@
f <@*|@fixed>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
profileData: PROFILED designatedSuccessorProbability: 0.03787636982657727
stamp: void
=== Inputs ===
condition: v214 
=== Succesors ===
trueSuccessor: v216 
falseSuccessor: v215 
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v214 #trueSuccessor: v216 #falseSuccessor: v215  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v55|QWORD[.], y: v55|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 16]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v515 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v515  <|@  <|@
tid ?208 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: aload
code: ResolvedJavaMethodBytecode<List.isShorterThan(List$Element, List$Element)>
localsSize: 5
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?226 
values: - - - a206 a207 
=== Succesors ===
=== Usages ===
v515 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?226 values: - - - a206 a207  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
stamp: void
=== Inputs ===
stateBefore: ?208 
=== Succesors ===
next: a598 
=== Usages ===
=== Predecessor ===
v215 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?208 #next: a598  <|@  <|@
f <@~|@floating>@ <|@
tid v628 <|@
result [v55|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a206 
index: - 
=== Succesors ===
=== Usages ===
a598 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a206 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a598 <|@
result v58|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v628 
lastLocationAccess: - 
=== Succesors ===
next: a599 
=== Usages ===
a392 
=== Predecessor ===
v515 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v628 lastLocationAccess: - #next: a599  <|@  <|@
f <@~|@floating>@ <|@
tid v629 <|@
result [v56|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a207 
index: - 
=== Succesors ===
=== Usages ===
a599 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a207 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a599 <|@
result v59|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v629 
lastLocationAccess: - 
=== Succesors ===
next: v225 
=== Usages ===
a395 
=== Predecessor ===
a598 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v629 lastLocationAccess: - #next: v225  <|@  <|@
f <@~|@floating>@ <|@
tid a395 <|@
result v60|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a599 
=== Succesors ===
=== Usages ===
a207 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a599  <|@  <|@
f <@~|@floating>@ <|@
tid a392 <|@
result v61|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a598 
=== Succesors ===
=== Usages ===
a206 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a598  <|@  <|@
f <@*|@fixed>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
stamp: void
=== Inputs ===
loopBegin: v205 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a599 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v205  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v55|QWORD[.] v56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: v57|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37] <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = MOV input: [v55|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[_] = MOV input: [v56|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v61|QWORD[.], v60|QWORD[.]] destination: B26 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B29" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v205 
=== Succesors ===
next: a600 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v205 #next: a600  <|@  <|@
tid ?217 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: iconst_1
code: ResolvedJavaMethodBytecode<List.isShorterThan(List$Element, List$Element)>
localsSize: 5
locksSize: 0
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?226 
=== Succesors ===
=== Usages ===
a600 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?226  <|@  <|@
f <@~|@floating>@ <|@
tid v630 <|@
result [v53|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a597 
=== Succesors ===
=== Usages ===
a600 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a597  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a600 <|@
result v62|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: int[-101643|0xfffffffffffe72f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 12]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
stamp: n# List$Element
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?217 
guard: - 
address: v630 
lastLocationAccess: - 
=== Succesors ===
next: a183 
=== Usages ===
a400 
=== Predecessor ===
v216 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?217 guard: - address: v630 lastLocationAccess: - #next: a183  <|@  <|@
f <@~|@floating>@ <|@
tid a400 <|@
result v63|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 12]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a600 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a600  <|@  <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a400 a2 a3 
=== Succesors ===
=== Usages ===
a183 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a400 a2 a3  <|@  <|@
tid ?535 <|@
d <@d|@=== Debug Properties ===
bci: 17
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?227 
values: a1 a1 a389 a2 a3 
=== Succesors ===
=== Usages ===
a183 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?227 values: a1 a1 a389 a2 a3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a183 <|@
result v64|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 17
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v401 
stateDuring: ?535 
=== Succesors ===
next: a601 
=== Usages ===
v408 ?536 ?537 
=== Predecessor ===
a600 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v401 stateDuring: ?535 #next: a601  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a601 <|@
result v65|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 22]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v618 
lastLocationAccess: - 
=== Succesors ===
next: a190 
=== Usages ===
a403 
=== Predecessor ===
a183 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v618 lastLocationAccess: - #next: a190  <|@  <|@
f <@~|@floating>@ <|@
tid a403 <|@
result v66|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 22]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a601 
=== Succesors ===
=== Usages ===
v404 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a601  <|@  <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a403 a3 a389 
=== Succesors ===
=== Usages ===
a190 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a403 a3 a389  <|@  <|@
tid ?536 <|@
d <@d|@=== Debug Properties ===
bci: 27
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?227 
values: a1 a183 a1 a389 a2 a3 
=== Succesors ===
=== Usages ===
a190 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?227 values: a1 a183 a1 a389 a2 a3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a190 <|@
result v67|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 27
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v404 
stateDuring: ?536 
=== Succesors ===
next: a602 
=== Usages ===
v408 ?537 
=== Predecessor ===
a601 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v404 stateDuring: ?536 #next: a602  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a602 <|@
result v68|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 32]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v617 
lastLocationAccess: - 
=== Succesors ===
next: a197 
=== Usages ===
a406 
=== Predecessor ===
a190 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v617 lastLocationAccess: - #next: a197  <|@  <|@
f <@~|@floating>@ <|@
tid a406 <|@
result v69|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 32]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a602 
=== Succesors ===
=== Usages ===
v407 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a602  <|@  <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a406 a389 a2 
=== Succesors ===
=== Usages ===
a197 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a406 a389 a2  <|@  <|@
tid ?537 <|@
d <@d|@=== Debug Properties ===
bci: 37
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 3
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?227 
values: a1 a183 a190 
=== Succesors ===
=== Usages ===
a197 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?227 values: a1 a183 a190  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a197 <|@
result v70|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 37
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v407 
stateDuring: ?537 
=== Succesors ===
next: a200 
=== Usages ===
v408 
=== Predecessor ===
a602 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v407 stateDuring: ?537 #next: a200  <|@  <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a183 a190 a197 
=== Succesors ===
=== Usages ===
a200 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a183 a190 a197  <|@  <|@
tid ?538 <|@
d <@d|@=== Debug Properties ===
bci: 40
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?227 
=== Succesors ===
=== Usages ===
a200 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?227  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a200 <|@
result v71|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 40
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v408 
stateDuring: ?538 
=== Succesors ===
next: v229 
=== Usages ===
a230 
=== Predecessor ===
a197 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v408 stateDuring: ?538 #next: v229  <|@  <|@
f <@*|@fixed>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
a200 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction v62|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37] <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37] <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v64|QWORD[.] 
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37] <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v64|QWORD[.] v67|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37] <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37] <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v71|QWORD[.]] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 31]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 37]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v205 
=== Succesors ===
next: v231 
=== Usages ===
=== Predecessor ===
v213 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v205 #next: v231  <|@  <|@
f <@*|@fixed>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v228 
=== Predecessor ===
v211 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|QWORD[.]] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a230 <|@
result v72|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v228 
values: a200 a3 
=== Succesors ===
=== Usages ===
a284 ?280 v421 ?539 v426 ?540 v616 v635 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v228 values: a200 a3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v229 v231 
=== Succesors ===
next: v258 
=== Usages ===
a230 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v229 v231 #next: v258  <|@  <|@
tid ?281 <|@
d <@d|@=== Debug Properties ===
bci: 40
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?539 ?540 ?541 ?542 ?280 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
tid ?280 <|@
d <@d|@=== Debug Properties ===
bci: 3
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?281 
values: a1 a122 a176 a230 
=== Succesors ===
=== Usages ===
?262 ?271 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?281 values: a1 a122 a176 a230  <|@  <|@
f <@*|@fixed>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
v228 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v52|QWORD[.], v32|QWORD[.]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B32" 
    successors "B34" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a260 <|@
result v73|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v259 
values: a176 a412 
=== Succesors ===
=== Usages ===
?262 v268 v631 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v259 values: a176 a412  <|@  <|@
f <@~|@floating>@ <|@
tid a261 <|@
result v74|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v259 
values: a122 a415 
=== Succesors ===
=== Usages ===
?262 v263 v632 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v259 values: a122 a415  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: 41
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v258 
=== Succesors ===
next: v267 
=== Usages ===
a260 a261 v265 v270 v279 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v258 #next: v267  <|@  <|@
f <@~|@floating>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a261 
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a261  <|@  <|@
f <@*|@fixed>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 7]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
profileData: PROFILED designatedSuccessorProbability: 0.10074626865671642
stamp: void
=== Inputs ===
condition: v263 
=== Succesors ===
trueSuccessor: v265 
falseSuccessor: v264 
=== Usages ===
=== Predecessor ===
v259 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v263 #trueSuccessor: v265 #falseSuccessor: v264  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v73|QWORD[.], v74|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v74|QWORD[.], y: v74|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B30 -> B34 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B32" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 10]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: v272 
=== Usages ===
=== Predecessor ===
v267 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v272  <|@  <|@
f <@~|@floating>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a260 
=== Succesors ===
=== Usages ===
v272 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a260  <|@  <|@
f <@*|@fixed>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 11]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
profileData: PROFILED designatedSuccessorProbability: 0.03787636982657727
stamp: void
=== Inputs ===
condition: v268 
=== Succesors ===
trueSuccessor: v270 
falseSuccessor: v269 
=== Usages ===
=== Predecessor ===
v264 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v268 #trueSuccessor: v270 #falseSuccessor: v269  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v73|QWORD[.], y: v73|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B31 -> B33 falseDestination: B31 -> B32 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 16]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
stamp: void
=== Inputs ===
=== Succesors ===
next: v516 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v516  <|@  <|@
tid ?262 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: aload
code: ResolvedJavaMethodBytecode<List.isShorterThan(List$Element, List$Element)>
localsSize: 5
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?280 
values: - - - a260 a261 
=== Succesors ===
=== Usages ===
v516 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?280 values: - - - a260 a261  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
stamp: void
=== Inputs ===
stateBefore: ?262 
=== Succesors ===
next: a603 
=== Usages ===
=== Predecessor ===
v269 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?262 #next: a603  <|@  <|@
f <@~|@floating>@ <|@
tid v631 <|@
result [v73|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a260 
index: - 
=== Succesors ===
=== Usages ===
a603 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a260 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a603 <|@
result v76|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v631 
lastLocationAccess: - 
=== Succesors ===
next: a604 
=== Usages ===
a412 
=== Predecessor ===
v516 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v631 lastLocationAccess: - #next: a604  <|@  <|@
f <@~|@floating>@ <|@
tid v632 <|@
result [v74|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a261 
index: - 
=== Succesors ===
=== Usages ===
a604 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a261 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a604 <|@
result v77|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v632 
lastLocationAccess: - 
=== Succesors ===
next: v279 
=== Usages ===
a415 
=== Predecessor ===
a603 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v632 lastLocationAccess: - #next: v279  <|@  <|@
f <@~|@floating>@ <|@
tid a415 <|@
result v78|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 23]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a604 
=== Succesors ===
=== Usages ===
a261 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a604  <|@  <|@
f <@~|@floating>@ <|@
tid a412 <|@
result v79|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.isShorterThan(List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a603 
=== Succesors ===
=== Usages ===
a260 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a603  <|@  <|@
f <@*|@fixed>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 5]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
stamp: void
=== Inputs ===
loopBegin: v259 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a604 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v259  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v73|QWORD[.] v74|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: v75|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40] <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[_] = MOV input: [v73|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD[_] = MOV input: [v74|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v79|QWORD[.], v78|QWORD[.]] destination: B32 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v259 
=== Succesors ===
next: a605 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v259 #next: a605  <|@  <|@
tid ?271 <|@
d <@d|@=== Debug Properties ===
bci: 14
bytecode: iconst_1
code: ResolvedJavaMethodBytecode<List.isShorterThan(List$Element, List$Element)>
localsSize: 5
locksSize: 0
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 14]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?280 
=== Succesors ===
=== Usages ===
v616 a605 v615 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?280  <|@  <|@
f <@~|@floating>@ <|@
tid v633 <|@
result [v32|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a122 
index: - 
=== Succesors ===
=== Usages ===
a605 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a122 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a605 <|@
result v80|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: int[-106763|0xfffffffffffe5ef5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 12]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
stamp: n# List$Element
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?271 
guard: - 
address: v633 
lastLocationAccess: - 
=== Succesors ===
next: v615 
=== Usages ===
a420 
=== Predecessor ===
v270 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?271 guard: - address: v633 lastLocationAccess: - #next: v615  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-108043|0xfffffffffffe59f5]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?271 
object: a176 
=== Succesors ===
next: v616 
=== Usages ===
=== Predecessor ===
a605 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?271 object: a176 #next: v616  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-109323|0xfffffffffffe54f5]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?271 
object: a230 
=== Succesors ===
next: a237 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?271 object: a230 #next: a237  <|@  <|@
f <@~|@floating>@ <|@
tid a420 <|@
result v81|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 12]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a605 
=== Succesors ===
=== Usages ===
v421 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a605  <|@  <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a420 a176 a230 
=== Succesors ===
=== Usages ===
a237 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a420 a176 a230  <|@  <|@
tid ?539 <|@
d <@d|@=== Debug Properties ===
bci: 17
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?281 
values: a1 a1 a122 a176 a230 
=== Succesors ===
=== Usages ===
a237 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?281 values: a1 a1 a122 a176 a230  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a237 <|@
result v82|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 17
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 17]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v421 
stateDuring: ?539 
=== Succesors ===
next: a606 
=== Usages ===
v432 ?540 ?541 
=== Predecessor ===
v616 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v421 stateDuring: ?539 #next: a606  <|@  <|@
f <@~|@floating>@ <|@
tid v634 <|@
result [v52|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a176 
index: - 
=== Succesors ===
=== Usages ===
a606 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a176 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a606 <|@
result v83|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 22]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v634 
lastLocationAccess: - 
=== Succesors ===
next: a244 
=== Usages ===
a425 
=== Predecessor ===
a237 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v634 lastLocationAccess: - #next: a244  <|@  <|@
f <@~|@floating>@ <|@
tid a425 <|@
result v84|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 22]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a606 
=== Succesors ===
=== Usages ===
v426 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a606  <|@  <|@
tid v426 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a425 a230 a122 
=== Succesors ===
=== Usages ===
a244 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a425 a230 a122  <|@  <|@
tid ?540 <|@
d <@d|@=== Debug Properties ===
bci: 27
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?281 
values: a1 a237 a1 a122 a176 a230 
=== Succesors ===
=== Usages ===
a244 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?281 values: a1 a237 a1 a122 a176 a230  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a244 <|@
result v85|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 27
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 27]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v426 
stateDuring: ?540 
=== Succesors ===
next: a607 
=== Usages ===
v432 ?541 
=== Predecessor ===
a606 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v426 stateDuring: ?540 #next: a607  <|@  <|@
f <@~|@floating>@ <|@
tid v635 <|@
result [v72|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a230 
index: - 
=== Succesors ===
=== Usages ===
a607 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a230 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a607 <|@
result v86|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# List$Element
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: List$Element.next
memoryOrder: PLAIN
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 32]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
stamp: n# List$Element
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v635 
lastLocationAccess: - 
=== Succesors ===
next: a251 
=== Usages ===
a430 
=== Predecessor ===
a244 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v635 lastLocationAccess: - #next: a251  <|@  <|@
f <@~|@floating>@ <|@
tid a430 <|@
result v87|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at List$Element.getNext() [bci: 1]
at List.tail(List$Element, List$Element, List$Element) [bci: 32]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
op: Uncompress
stamp: a# List$Element
=== Inputs ===
value: a607 
=== Succesors ===
=== Usages ===
v431 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a607  <|@  <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a430 a122 a176 
=== Succesors ===
=== Usages ===
a251 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a430 a122 a176  <|@  <|@
tid ?541 <|@
d <@d|@=== Debug Properties ===
bci: 37
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 3
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?281 
values: a1 a237 a244 
=== Succesors ===
=== Usages ===
a251 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?281 values: a1 a237 a244  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a251 <|@
result v88|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 37
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 37]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v431 
stateDuring: ?541 
=== Succesors ===
next: a254 
=== Usages ===
v432 
=== Predecessor ===
a607 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v431 stateDuring: ?541 #next: a254  <|@  <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
referencedType: [null]
returnStamp: a# List$Element
signature: [HotSpotType<LList;, resolved>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>, UnresolvedJavaType<LList$Element;>]
stamp: void
targetMethod: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>
=== Inputs ===
arguments: a1 a237 a244 a251 
=== Succesors ===
=== Usages ===
a254 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a237 a244 a251  <|@  <|@
tid ?542 <|@
d <@d|@=== Debug Properties ===
bci: 40
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<List.tail(List$Element, List$Element, List$Element)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?281 
=== Succesors ===
=== Usages ===
a254 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?281  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a254 <|@
result v89|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 40
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 40]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
polymorphic: false
stamp: a# List$Element
targetMethod: Direct#List.tail
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v432 
stateDuring: ?542 
=== Succesors ===
next: v283 
=== Usages ===
a284 
=== Predecessor ===
a251 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v432 stateDuring: ?542 #next: v283  <|@  <|@
f <@*|@fixed>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
a254 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction v80|DWORD[_] = MOV input: [v32|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v52|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v72|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40] <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD[_] = MOV input: [v52|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v83|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v82|QWORD[.] 
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40] <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD[_] = MOV input: [v72|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v82|QWORD[.] v85|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40] <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v88|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40] <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v89|QWORD[.]] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at List.isShorterThan(List$Element, List$Element) [bci: 31]
at List.tail(List$Element, List$Element, List$Element) [bci: 3]
at List.tail(List$Element, List$Element, List$Element) [bci: 40]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v259 
=== Succesors ===
next: v285 
=== Usages ===
=== Predecessor ===
v267 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v259 #next: v285  <|@  <|@
f <@*|@fixed>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
v265 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v72|QWORD[.]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" "B34" 
    successors 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a284 <|@
result v90|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# List$Element
valueDescription: a java.lang.Object
=== Inputs ===
merge: v282 
values: a254 a230 
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v282 values: a254 a230  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v283 v285 
=== Succesors ===
next: v38 
=== Usages ===
a284 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v283 v285 #next: v38  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at List.tail(List$Element, List$Element, List$Element) [bci: 43]
stamp: void
=== Inputs ===
memoryMap: - 
result: a284 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a284  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v90|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a872160 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v5|QWORD[.], v7|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|QWORD[.], v9|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|QWORD[.], y: v8|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v9|QWORD[.], y: v9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v9|QWORD[.] v8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV input: [v9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|QWORD[.], v14|QWORD[.]] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603999204951558038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4597043951172344564
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591923954390866623
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B1" 
    successors 
    xhandlers
    flags 
    probability 4604906646667520750
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4585069451628504407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|QWORD[.], v5|QWORD[.]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" 
    successors "B16" "B13" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|QWORD[.], v16|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|QWORD[.], y: v16|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B12 -> B16 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B14" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|QWORD[.], y: v15|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B13 -> B15 falseDestination: B13 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v15|QWORD[.] v16|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v17|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[_] = MOV input: [v15|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = MOV input: [v16|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v19|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.], v20|QWORD[.]] destination: B14 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v22|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v2|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v24|QWORD[.] 
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v24|QWORD[.] v27|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17] <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v31|QWORD[.]] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" "B16" 
    successors "B18" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] Object[null] v3|QWORD[.] 
>@ <|@ instruction v33|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.], v34|QWORD[.]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B22" "B19" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD[.], v36|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v36|QWORD[.], y: v36|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B18 -> B22 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v35|QWORD[.], y: v35|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B19 -> B21 falseDestination: B19 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v35|QWORD[.] v36|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v37|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27] <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[_] = MOV input: [v35|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[_] = MOV input: [v36|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v38|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v41|QWORD[.], v40|QWORD[.]] destination: B20 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v33|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:14, 3, 27] <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v44|QWORD[.] 
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27] <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v44|QWORD[.] v47|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27] <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27] <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] Object[null] 
>@ <|@ instruction v53|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD state [bci:30] <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v53|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.], v54|QWORD[.]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" 
    successors "B28" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD[.], v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|QWORD[.], y: v56|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B24 -> B28 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v55|QWORD[.], y: v55|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v55|QWORD[.] v56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: v57|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37] <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = MOV input: [v55|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[_] = MOV input: [v56|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v61|QWORD[.], v60|QWORD[.]] destination: B26 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|QWORD[.]] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B29" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction v62|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37] <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37] <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v64|QWORD[.] 
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37] <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v64|QWORD[.] v67|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37] <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37] <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v71|QWORD[.]] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v52|QWORD[.], v32|QWORD[.]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B32" 
    successors "B34" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr   -1  <|@ instruction [v73|QWORD[.], v74|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v74|QWORD[.], y: v74|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B30 -> B34 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B32" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v73|QWORD[.], y: v73|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B31 -> B33 falseDestination: B31 -> B32 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v73|QWORD[.] v74|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: v75|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40] <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[_] = MOV input: [v73|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD[_] = MOV input: [v74|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v79|QWORD[.], v78|QWORD[.]] destination: B32 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v72|QWORD[.]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction v80|DWORD[_] = MOV input: [v32|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v52|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v72|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40] <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD[_] = MOV input: [v52|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v83|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v82|QWORD[.] 
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40] <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD[_] = MOV input: [v72|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v82|QWORD[.] v85|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40] <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v88|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40] <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v89|QWORD[.]] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" "B34" 
    successors 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr   -1  <|@ instruction [v90|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_2       
     2: aload_1       
     3: invokevirtual #8          // isShorterThan:(List$Element, List$Element)boolean
     6: ifeq          44
     9: aload_0       
    10: aload_0       
    11: aload_1       
    12: invokevirtual #7          // List$Element.getNext:()List$Element
    15: aload_2       
    16: aload_3       
    17: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    20: aload_0       
    21: aload_2       
    22: invokevirtual #7          // List$Element.getNext:()List$Element
    25: aload_3       
    26: aload_1       
    27: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    30: aload_0       
    31: aload_3       
    32: invokevirtual #7          // List$Element.getNext:()List$Element
    35: aload_1       
    36: aload_2       
    37: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    40: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    43: areturn       
    44: aload_3       
    45: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a872160 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v5|QWORD[.], v7|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|QWORD[.], v9|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|QWORD[.], y: v8|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v9|QWORD[.], y: v9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v9|QWORD[.] v8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV input: [v9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|QWORD[.], v14|QWORD[.]] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603999204951558038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4597043951172344564
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591923954390866623
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B1" 
    successors 
    xhandlers
    flags 
    probability 4604906646667520750
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4585069451628504407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|QWORD[.], v5|QWORD[.]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" 
    successors "B16" "B13" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|QWORD[.], v16|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|QWORD[.], y: v16|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B12 -> B16 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B14" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|QWORD[.], y: v15|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B13 -> B15 falseDestination: B13 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v15|QWORD[.] v16|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v17|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[_] = MOV input: [v15|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = MOV input: [v16|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v19|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.], v20|QWORD[.]] destination: B14 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v22|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v2|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v24|QWORD[.] 
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v24|QWORD[.] v27|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17] <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v31|QWORD[.]] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" "B16" 
    successors "B18" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] Object[null] v3|QWORD[.] 
>@ <|@ instruction v33|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.], v34|QWORD[.]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B22" "B19" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD[.], v36|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v36|QWORD[.], y: v36|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B18 -> B22 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v35|QWORD[.], y: v35|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B19 -> B21 falseDestination: B19 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v35|QWORD[.] v36|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v37|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27] <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[_] = MOV input: [v35|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[_] = MOV input: [v36|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v38|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v41|QWORD[.], v40|QWORD[.]] destination: B20 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v33|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:14, 3, 27] <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v44|QWORD[.] 
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27] <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v44|QWORD[.] v47|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27] <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27] <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] Object[null] 
>@ <|@ instruction v53|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD state [bci:30] <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v53|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.], v54|QWORD[.]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" 
    successors "B28" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD[.], v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|QWORD[.], y: v56|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B24 -> B28 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v55|QWORD[.], y: v55|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v55|QWORD[.] v56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: v57|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37] <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = MOV input: [v55|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[_] = MOV input: [v56|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v61|QWORD[.], v60|QWORD[.]] destination: B26 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|QWORD[.]] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B29" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction v62|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37] <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37] <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v64|QWORD[.] 
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37] <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v64|QWORD[.] v67|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37] <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37] <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v71|QWORD[.]] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v52|QWORD[.], v32|QWORD[.]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B32" 
    successors "B34" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr   -1  <|@ instruction [v73|QWORD[.], v74|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v74|QWORD[.], y: v74|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B30 -> B34 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B32" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v73|QWORD[.], y: v73|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B31 -> B33 falseDestination: B31 -> B32 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v73|QWORD[.] v74|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: v75|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40] <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[_] = MOV input: [v73|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD[_] = MOV input: [v74|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v79|QWORD[.], v78|QWORD[.]] destination: B32 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v72|QWORD[.]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction v80|DWORD[_] = MOV input: [v32|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v52|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v72|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40] <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD[_] = MOV input: [v52|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v83|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v82|QWORD[.] 
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40] <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD[_] = MOV input: [v72|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v82|QWORD[.] v85|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40] <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v88|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40] <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v89|QWORD[.]] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" "B34" 
    successors 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr   -1  <|@ instruction [v90|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_2       
     2: aload_1       
     3: invokevirtual #8          // isShorterThan:(List$Element, List$Element)boolean
     6: ifeq          44
     9: aload_0       
    10: aload_0       
    11: aload_1       
    12: invokevirtual #7          // List$Element.getNext:()List$Element
    15: aload_2       
    16: aload_3       
    17: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    20: aload_0       
    21: aload_2       
    22: invokevirtual #7          // List$Element.getNext:()List$Element
    25: aload_3       
    26: aload_1       
    27: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    30: aload_0       
    31: aload_3       
    32: invokevirtual #7          // List$Element.getNext:()List$Element
    35: aload_1       
    36: aload_2       
    37: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    40: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    43: areturn       
    44: aload_3       
    45: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a872160 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v5|QWORD[.], v7|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|QWORD[.], v9|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|QWORD[.], y: v8|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v9|QWORD[.], y: v9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v9|QWORD[.] v8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV input: [v9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|QWORD[.], v14|QWORD[.]] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603999204951558038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4597043951172344564
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591923954390866623
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B1" 
    successors 
    xhandlers
    flags 
    probability 4604906646667520750
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4585069451628504407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|QWORD[.], v5|QWORD[.]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" 
    successors "B16" "B13" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|QWORD[.], v16|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|QWORD[.], y: v16|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B12 -> B16 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B14" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|QWORD[.], y: v15|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B13 -> B15 falseDestination: B13 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v15|QWORD[.] v16|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v17|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[_] = MOV input: [v15|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = MOV input: [v16|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v19|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.], v20|QWORD[.]] destination: B14 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v22|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v2|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v24|QWORD[.] 
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v24|QWORD[.] v27|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17] <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v31|QWORD[.]] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" "B16" 
    successors "B18" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] Object[null] v3|QWORD[.] 
>@ <|@ instruction v33|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.], v34|QWORD[.]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B22" "B19" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD[.], v36|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v36|QWORD[.], y: v36|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B18 -> B22 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v35|QWORD[.], y: v35|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B19 -> B21 falseDestination: B19 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v35|QWORD[.] v36|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v37|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27] <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[_] = MOV input: [v35|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[_] = MOV input: [v36|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v38|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v41|QWORD[.], v40|QWORD[.]] destination: B20 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v33|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:14, 3, 27] <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v44|QWORD[.] 
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27] <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v44|QWORD[.] v47|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27] <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27] <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] Object[null] 
>@ <|@ instruction v53|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD state [bci:30] <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v53|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.], v54|QWORD[.]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" 
    successors "B28" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD[.], v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|QWORD[.], y: v56|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B24 -> B28 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v55|QWORD[.], y: v55|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v55|QWORD[.] v56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: v57|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37] <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = MOV input: [v55|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[_] = MOV input: [v56|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v61|QWORD[.], v60|QWORD[.]] destination: B26 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|QWORD[.]] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B29" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction v62|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37] <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37] <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v64|QWORD[.] 
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37] <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v64|QWORD[.] v67|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37] <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37] <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v71|QWORD[.]] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v52|QWORD[.], v32|QWORD[.]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B32" 
    successors "B34" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr   -1  <|@ instruction [v73|QWORD[.], v74|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v74|QWORD[.], y: v74|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B30 -> B34 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B32" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v73|QWORD[.], y: v73|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B31 -> B33 falseDestination: B31 -> B32 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v73|QWORD[.] v74|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: v75|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40] <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[_] = MOV input: [v73|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD[_] = MOV input: [v74|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v79|QWORD[.], v78|QWORD[.]] destination: B32 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v72|QWORD[.]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction v80|DWORD[_] = MOV input: [v32|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v52|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr   -1  <|@ st <@st|@List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v72|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40] <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD[_] = MOV input: [v52|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v83|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v82|QWORD[.] 
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40] <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD[_] = MOV input: [v72|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v82|QWORD[.] v85|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40] <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v88|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40] <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v89|QWORD[.]] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" "B34" 
    successors 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr   -1  <|@ instruction [v90|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_2       
     2: aload_1       
     3: invokevirtual #8          // isShorterThan:(List$Element, List$Element)boolean
     6: ifeq          44
     9: aload_0       
    10: aload_0       
    11: aload_1       
    12: invokevirtual #7          // List$Element.getNext:()List$Element
    15: aload_2       
    16: aload_3       
    17: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    20: aload_0       
    21: aload_2       
    22: invokevirtual #7          // List$Element.getNext:()List$Element
    25: aload_3       
    26: aload_1       
    27: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    30: aload_0       
    31: aload_3       
    32: invokevirtual #7          // List$Element.getNext:()List$Element
    35: aload_1       
    36: aload_2       
    37: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    40: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    43: areturn       
    44: aload_3       
    45: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a872160 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v5|QWORD[.], v7|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|QWORD[.], v9|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v8|QWORD[.], y: v8|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v9|QWORD[.], y: v9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v9|QWORD[.] v8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = MOV input: [v9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|QWORD[.], v14|QWORD[.]] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603999204951558038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4597043951172344564
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591923954390866623
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B1" 
    successors 
    xhandlers
    flags 
    probability 4604906646667520750
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4585069451628504407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|QWORD[.], v5|QWORD[.]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" 
    successors "B16" "B13" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr   -1  <|@ instruction [v15|QWORD[.], v16|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|QWORD[.], y: v16|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B12 -> B16 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B14" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|QWORD[.], y: v15|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B13 -> B15 falseDestination: B13 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v15|QWORD[.] v16|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v17|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17] <|@ <|@
      nr   -1  <|@ instruction v18|DWORD[_] = MOV input: [v15|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = MOV input: [v16|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v19|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.], v20|QWORD[.]] destination: B14 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v22|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v2|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v24|QWORD[.] 
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v24|QWORD[.] v27|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17] <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v31|QWORD[.]] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" "B16" 
    successors "B18" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] Object[null] v3|QWORD[.] 
>@ <|@ instruction v33|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD state [bci:20] <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.], v34|QWORD[.]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B22" "B19" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr   -1  <|@ instruction [v35|QWORD[.], v36|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v36|QWORD[.], y: v36|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B18 -> B22 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v35|QWORD[.], y: v35|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B19 -> B21 falseDestination: B19 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v35|QWORD[.] v36|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v37|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27] <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[_] = MOV input: [v35|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[_] = MOV input: [v36|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v38|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v41|QWORD[.], v40|QWORD[.]] destination: B20 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v33|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:14, 3, 27] <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v44|QWORD[.] 
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27] <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v44|QWORD[.] v47|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27] <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27] <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] Object[null] 
>@ <|@ instruction v53|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD state [bci:30] <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v53|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.], v54|QWORD[.]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" 
    successors "B28" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD[.], v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|QWORD[.], y: v56|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B24 -> B28 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v55|QWORD[.], y: v55|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v55|QWORD[.] v56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: v57|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37] <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = MOV input: [v55|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD[_] = MOV input: [v56|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v61|QWORD[.], v60|QWORD[.]] destination: B26 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v2|QWORD[.]] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B29" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction v62|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37] <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37] <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v64|QWORD[.] 
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37] <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v64|QWORD[.] v67|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37] <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37] <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v71|QWORD[.]] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v52|QWORD[.], v32|QWORD[.]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B32" 
    successors "B34" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr   -1  <|@ instruction [v73|QWORD[.], v74|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v74|QWORD[.], y: v74|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B30 -> B34 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B32" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v73|QWORD[.], y: v73|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B31 -> B33 falseDestination: B31 -> B32 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v73|QWORD[.] v74|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: v75|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40] <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[_] = MOV input: [v73|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD[_] = MOV input: [v74|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v79|QWORD[.], v78|QWORD[.]] destination: B32 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v72|QWORD[.]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction v80|DWORD[_] = MOV input: [v32|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v52|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v72|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40] <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD[_] = MOV input: [v52|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v83|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v82|QWORD[.] 
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40] <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD[_] = MOV input: [v72|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v82|QWORD[.] v85|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40] <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v88|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40] <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v89|QWORD[.]] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" "B34" 
    successors 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr   -1  <|@ instruction [v90|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_2       
     2: aload_1       
     3: invokevirtual #8          // isShorterThan:(List$Element, List$Element)boolean
     6: ifeq          44
     9: aload_0       
    10: aload_0       
    11: aload_1       
    12: invokevirtual #7          // List$Element.getNext:()List$Element
    15: aload_2       
    16: aload_3       
    17: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    20: aload_0       
    21: aload_2       
    22: invokevirtual #7          // List$Element.getNext:()List$Element
    25: aload_3       
    26: aload_1       
    27: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    30: aload_0       
    31: aload_3       
    32: invokevirtual #7          // List$Element.getNext:()List$Element
    35: aload_1       
    36: aload_2       
    37: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    40: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    43: areturn       
    44: aload_3       
    45: areturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a872160 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   14  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   20  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction TESTBRANCH (x: v2|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction v6|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   30  <|@ instruction JUMP ~outgoingValues: [v5|QWORD[.], v7|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   32  <|@ instruction [v8|QWORD[.], v9|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: v8|QWORD[.], y: v8|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: v9|QWORD[.], y: v9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v9|QWORD[.] v8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3] <|@ <|@
      nr   44  <|@ instruction v11|DWORD[_] = MOV input: [v9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction v12|DWORD[_] = MOV input: [v8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   48  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   52  <|@ instruction JUMP ~outgoingValues: [v13|QWORD[.], v14|QWORD[.]] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603999204951558038
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4597043951172344564
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591923954390866623
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B1" 
    successors 
    xhandlers
    flags 
    probability 4604906646667520750
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4585069451628504407
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [v2|QWORD[.], v5|QWORD[.]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" 
    successors "B16" "B13" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr   80  <|@ instruction [v15|QWORD[.], v16|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   82  <|@ instruction TESTBRANCH (x: v16|QWORD[.], y: v16|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B12 -> B16 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B14" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: v15|QWORD[.], y: v15|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B13 -> B15 falseDestination: B13 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v15|QWORD[.] v16|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v17|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17] <|@ <|@
      nr   92  <|@ instruction v18|DWORD[_] = MOV input: [v15|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   94  <|@ instruction v19|DWORD[_] = MOV input: [v16|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v19|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   98  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.], v20|QWORD[.]] destination: B14 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v22|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17] <|@ <|@
      nr  110  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v2|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr  112  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr  114  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction rdx|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17] <|@ <|@
      nr  126  <|@ instruction v24|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction v25|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  130  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rdx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction rcx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction r8|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v24|QWORD[.] 
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17] <|@ <|@
      nr  142  <|@ instruction v27|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction v28|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  146  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rdx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rcx|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction r8|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v24|QWORD[.] v27|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17] <|@ <|@
      nr  158  <|@ instruction v30|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rdx|QWORD[.] = MOVE input: v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rcx|QWORD[.] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction r8|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17] <|@ <|@
      nr  170  <|@ instruction v31|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [v31|QWORD[.]] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" "B16" 
    successors "B18" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  174  <|@ instruction [v32|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] Object[null] v3|QWORD[.] 
>@ <|@ instruction v33|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD state [bci:20] <|@ <|@
      nr  178  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.], v34|QWORD[.]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B22" "B19" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  182  <|@ instruction [v35|QWORD[.], v36|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  184  <|@ instruction TESTBRANCH (x: v36|QWORD[.], y: v36|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B18 -> B22 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction TESTBRANCH (x: v35|QWORD[.], y: v35|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B19 -> B21 falseDestination: B19 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v35|QWORD[.] v36|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v37|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27] <|@ <|@
      nr  194  <|@ instruction v38|DWORD[_] = MOV input: [v35|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  196  <|@ instruction v39|DWORD[_] = MOV input: [v36|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  198  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  200  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v38|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [v41|QWORD[.], v40|QWORD[.]] destination: B20 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v33|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27] <|@ <|@
      nr  212  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:14, 3, 27] <|@ <|@
      nr  214  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  216  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction rdx|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction rcx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction r8|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27] <|@ <|@
      nr  226  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction v45|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  232  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rdx|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction r8|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v44|QWORD[.] 
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27] <|@ <|@
      nr  242  <|@ instruction v47|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction v48|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  246  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  248  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction rdx|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction rcx|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v44|QWORD[.] v47|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27] <|@ <|@
      nr  258  <|@ instruction v50|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rdx|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rcx|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction r8|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27] <|@ <|@
      nr  270  <|@ instruction v51|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  274  <|@ instruction [v52|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  276  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] Object[null] 
>@ <|@ instruction v53|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD state [bci:30] <|@ <|@
      nr  278  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v53|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.], v54|QWORD[.]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" 
    successors "B28" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  282  <|@ instruction [v55|QWORD[.], v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  284  <|@ instruction TESTBRANCH (x: v56|QWORD[.], y: v56|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B24 -> B28 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction TESTBRANCH (x: v55|QWORD[.], y: v55|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v55|QWORD[.] v56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: v57|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37] <|@ <|@
      nr  294  <|@ instruction v58|DWORD[_] = MOV input: [v55|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  296  <|@ instruction v59|DWORD[_] = MOV input: [v56|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  298  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  300  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [v61|QWORD[.], v60|QWORD[.]] destination: B26 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [v2|QWORD[.]] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B29" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction v62|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37] <|@ <|@
      nr  312  <|@ instruction v63|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction r8|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37] <|@ <|@
      nr  324  <|@ instruction v64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction v65|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  328  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rdx|QWORD[.] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction r8|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v64|QWORD[.] 
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37] <|@ <|@
      nr  340  <|@ instruction v67|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction v68|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  344  <|@ instruction v69|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rdx|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction r8|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v64|QWORD[.] v67|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37] <|@ <|@
      nr  356  <|@ instruction v70|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdx|QWORD[.] = MOVE input: v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction rcx|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction r8|QWORD[.] = MOVE input: v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37] <|@ <|@
      nr  368  <|@ instruction v71|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~outgoingValues: [v71|QWORD[.]] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  372  <|@ instruction [v72|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [v52|QWORD[.], v32|QWORD[.]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B32" 
    successors "B34" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  376  <|@ instruction [v73|QWORD[.], v74|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  378  <|@ instruction TESTBRANCH (x: v74|QWORD[.], y: v74|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B30 -> B34 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B32" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction TESTBRANCH (x: v73|QWORD[.], y: v73|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B31 -> B33 falseDestination: B31 -> B32 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v73|QWORD[.] v74|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: v75|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40] <|@ <|@
      nr  388  <|@ instruction v76|DWORD[_] = MOV input: [v73|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  390  <|@ instruction v77|DWORD[_] = MOV input: [v74|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  392  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  394  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [v79|QWORD[.], v78|QWORD[.]] destination: B32 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [v72|QWORD[.]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction v80|DWORD[_] = MOV input: [v32|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40] <|@ <|@
      nr  406  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v52|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr  408  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v72|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr  410  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction rdx|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rcx|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction r8|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40] <|@ <|@
      nr  422  <|@ instruction v82|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction v83|DWORD[_] = MOV input: [v52|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  426  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v83|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  428  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction rdx|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction rcx|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction r8|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  436  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v82|QWORD[.] 
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40] <|@ <|@
      nr  438  <|@ instruction v85|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction v86|DWORD[_] = MOV input: [v72|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  442  <|@ instruction v87|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  444  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction rdx|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction rcx|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction r8|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v82|QWORD[.] v85|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40] <|@ <|@
      nr  454  <|@ instruction v88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rdx|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rcx|QWORD[.] = MOVE input: v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction r8|QWORD[.] = MOVE input: v88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40] <|@ <|@
      nr  466  <|@ instruction v89|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [v89|QWORD[.]] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" "B34" 
    successors 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  470  <|@ instruction [v90|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  472  <|@ instruction rax|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_2       
     2: aload_1       
     3: invokevirtual #8          // isShorterThan:(List$Element, List$Element)boolean
     6: ifeq          44
     9: aload_0       
    10: aload_0       
    11: aload_1       
    12: invokevirtual #7          // List$Element.getNext:()List$Element
    15: aload_2       
    16: aload_3       
    17: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    20: aload_0       
    21: aload_2       
    22: invokevirtual #7          // List$Element.getNext:()List$Element
    25: aload_3       
    26: aload_1       
    27: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    30: aload_0       
    31: aload_3       
    32: invokevirtual #7          // List$Element.getNext:()List$Element
    35: aload_1       
    36: aload_2       
    37: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    40: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    43: areturn       
    44: aload_3       
    45: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a872160 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   14  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   20  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction TESTBRANCH (x: v2|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction v6|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   30  <|@ instruction JUMP ~outgoingValues: [v5|QWORD[.], v7|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   32  <|@ instruction [v8|QWORD[.], v9|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: v8|QWORD[.], y: v8|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: v9|QWORD[.], y: v9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v9|QWORD[.] v8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3] <|@ <|@
      nr   44  <|@ instruction v11|DWORD[_] = MOV input: [v9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction v12|DWORD[_] = MOV input: [v8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   48  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   52  <|@ instruction JUMP ~outgoingValues: [v13|QWORD[.], v14|QWORD[.]] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603999204951558038
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4597043951172344564
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591923954390866623
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B1" 
    successors 
    xhandlers
    flags 
    probability 4604906646667520750
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4585069451628504407
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [v2|QWORD[.], v5|QWORD[.]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" 
    successors "B16" "B13" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr   80  <|@ instruction [v15|QWORD[.], v16|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   82  <|@ instruction TESTBRANCH (x: v16|QWORD[.], y: v16|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B12 -> B16 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B14" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: v15|QWORD[.], y: v15|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B13 -> B15 falseDestination: B13 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v15|QWORD[.] v16|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v17|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17] <|@ <|@
      nr   92  <|@ instruction v18|DWORD[_] = MOV input: [v15|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   94  <|@ instruction v19|DWORD[_] = MOV input: [v16|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v19|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   98  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.], v20|QWORD[.]] destination: B14 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v22|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17] <|@ <|@
      nr  110  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v2|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr  112  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr  114  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction rdx|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17] <|@ <|@
      nr  126  <|@ instruction v24|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction v25|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  130  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rdx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction rcx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction r8|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v24|QWORD[.] 
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17] <|@ <|@
      nr  142  <|@ instruction v27|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction v28|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  146  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rdx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rcx|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction r8|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v24|QWORD[.] v27|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17] <|@ <|@
      nr  158  <|@ instruction v30|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rdx|QWORD[.] = MOVE input: v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rcx|QWORD[.] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction r8|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17] <|@ <|@
      nr  170  <|@ instruction v31|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [v31|QWORD[.]] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" "B16" 
    successors "B18" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  174  <|@ instruction [v32|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] Object[null] v3|QWORD[.] 
>@ <|@ instruction v33|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD state [bci:20] <|@ <|@
      nr  178  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.], v34|QWORD[.]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B22" "B19" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  182  <|@ instruction [v35|QWORD[.], v36|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  184  <|@ instruction TESTBRANCH (x: v36|QWORD[.], y: v36|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B18 -> B22 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction TESTBRANCH (x: v35|QWORD[.], y: v35|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B19 -> B21 falseDestination: B19 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v35|QWORD[.] v36|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v37|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27] <|@ <|@
      nr  194  <|@ instruction v38|DWORD[_] = MOV input: [v35|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  196  <|@ instruction v39|DWORD[_] = MOV input: [v36|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  198  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  200  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v38|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [v41|QWORD[.], v40|QWORD[.]] destination: B20 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v33|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27] <|@ <|@
      nr  212  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:14, 3, 27] <|@ <|@
      nr  214  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  216  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction rdx|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction rcx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction r8|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27] <|@ <|@
      nr  226  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  228  <|@ instruction v45|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  232  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rdx|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction r8|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v44|QWORD[.] 
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27] <|@ <|@
      nr  242  <|@ instruction v47|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction v48|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  246  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  248  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction rdx|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction rcx|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v44|QWORD[.] v47|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27] <|@ <|@
      nr  258  <|@ instruction v50|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rdx|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rcx|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction r8|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27] <|@ <|@
      nr  270  <|@ instruction v51|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  274  <|@ instruction [v52|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  276  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] Object[null] 
>@ <|@ instruction v53|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD state [bci:30] <|@ <|@
      nr  278  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v53|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.], v54|QWORD[.]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" 
    successors "B28" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  282  <|@ instruction [v55|QWORD[.], v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  284  <|@ instruction TESTBRANCH (x: v56|QWORD[.], y: v56|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B24 -> B28 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction TESTBRANCH (x: v55|QWORD[.], y: v55|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v55|QWORD[.] v56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: v57|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37] <|@ <|@
      nr  294  <|@ instruction v58|DWORD[_] = MOV input: [v55|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  296  <|@ instruction v59|DWORD[_] = MOV input: [v56|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  298  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  300  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [v61|QWORD[.], v60|QWORD[.]] destination: B26 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [v2|QWORD[.]] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B29" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction v62|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37] <|@ <|@
      nr  312  <|@ instruction v63|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction r8|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37] <|@ <|@
      nr  324  <|@ instruction v64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction v65|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  328  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rdx|QWORD[.] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction r8|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v64|QWORD[.] 
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37] <|@ <|@
      nr  340  <|@ instruction v67|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction v68|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  344  <|@ instruction v69|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rdx|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction r8|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v64|QWORD[.] v67|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37] <|@ <|@
      nr  356  <|@ instruction v70|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdx|QWORD[.] = MOVE input: v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction rcx|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction r8|QWORD[.] = MOVE input: v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37] <|@ <|@
      nr  368  <|@ instruction v71|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~outgoingValues: [v71|QWORD[.]] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  372  <|@ instruction [v72|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [v52|QWORD[.], v32|QWORD[.]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B32" 
    successors "B34" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  376  <|@ instruction [v73|QWORD[.], v74|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  378  <|@ instruction TESTBRANCH (x: v74|QWORD[.], y: v74|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B30 -> B34 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B32" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction TESTBRANCH (x: v73|QWORD[.], y: v73|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B31 -> B33 falseDestination: B31 -> B32 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v73|QWORD[.] v74|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: v75|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40] <|@ <|@
      nr  388  <|@ instruction v76|DWORD[_] = MOV input: [v73|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  390  <|@ instruction v77|DWORD[_] = MOV input: [v74|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  392  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  394  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [v79|QWORD[.], v78|QWORD[.]] destination: B32 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [v72|QWORD[.]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction v80|DWORD[_] = MOV input: [v32|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40] <|@ <|@
      nr  406  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v52|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr  408  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v72|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr  410  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction rdx|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rcx|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction r8|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40] <|@ <|@
      nr  422  <|@ instruction v82|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction v83|DWORD[_] = MOV input: [v52|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  426  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v83|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  428  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction rdx|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction rcx|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction r8|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  436  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v82|QWORD[.] 
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40] <|@ <|@
      nr  438  <|@ instruction v85|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction v86|DWORD[_] = MOV input: [v72|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  442  <|@ instruction v87|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  444  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction rdx|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction rcx|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction r8|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v82|QWORD[.] v85|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40] <|@ <|@
      nr  454  <|@ instruction v88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rdx|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rcx|QWORD[.] = MOVE input: v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction r8|QWORD[.] = MOVE input: v88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40] <|@ <|@
      nr  466  <|@ instruction v89|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [v89|QWORD[.]] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" "B34" 
    successors 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  470  <|@ instruction [v90|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  472  <|@ instruction rax|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_2       
     2: aload_1       
     3: invokevirtual #8          // isShorterThan:(List$Element, List$Element)boolean
     6: ifeq          44
     9: aload_0       
    10: aload_0       
    11: aload_1       
    12: invokevirtual #7          // List$Element.getNext:()List$Element
    15: aload_2       
    16: aload_3       
    17: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    20: aload_0       
    21: aload_2       
    22: invokevirtual #7          // List$Element.getNext:()List$Element
    25: aload_3       
    26: aload_1       
    27: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    30: aload_0       
    31: aload_3       
    32: invokevirtual #7          // List$Element.getNext:()List$Element
    35: aload_1       
    36: aload_2       
    37: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    40: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    43: areturn       
    44: aload_3       
    45: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v3|q [0, 1[[68, 70[[124, 126[[140, 142[[156, 158[[168, 170[[224, 226[[240, 242[[256, 258[[268, 270[[322, 324[[338, 340[[354, 356[[366, 368[[420, 422[[436, 438[[452, 454[[464, 466[[472, 474[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v2|q [0, 10[[120, 125[[136, 141[[152, 157[[164, 169[[220, 225[[236, 241[[252, 257[[264, 269[[318, 323[[334, 339[[350, 355[[362, 367[[416, 421[[432, 437[[448, 453[[460, 465[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v23|q [0, 8[[118, 125[[134, 141[[150, 157[[162, 169[[218, 225[[234, 241[[250, 257[[262, 269[[316, 323[[332, 339[[348, 355[[360, 367[[414, 421[[430, 437[[446, 453[[458, 465[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 6[[116, 125[[132, 141[[148, 157[[160, 169[[216, 225[[232, 241[[248, 257[[260, 269[[314, 323[[330, 339[[346, 355[[358, 367[[412, 421[[428, 437[[444, 453[[456, 465[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- v3|q [0, 12[[122, 125[[138, 141[[154, 157[[166, 169[[222, 225[[238, 241[[254, 257[[266, 269[[320, 323[[336, 339[[352, 355[[364, 367[[418, 421[[434, 437[[450, 453[[462, 465[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [6, 54[[58, 62[[72, 398[[402, 456[6 MustHaveRegister 116 ShouldHaveRegister 132 ShouldHaveRegister 148 ShouldHaveRegister 160 ShouldHaveRegister 216 ShouldHaveRegister 232 ShouldHaveRegister 248 ShouldHaveRegister 260 ShouldHaveRegister 314 ShouldHaveRegister 330 ShouldHaveRegister 346 ShouldHaveRegister 358 ShouldHaveRegister 412 ShouldHaveRegister 428 ShouldHaveRegister 444 ShouldHaveRegister 456 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|- [8, 54[[58, 62[[72, 304[[308, 352[8 MustHaveRegister 14 MustHaveRegister 18 MustHaveRegister 206 ShouldHaveRegister 222 ShouldHaveRegister 236 ShouldHaveRegister 244 MustHaveRegister 280 ShouldHaveRegister 318 ShouldHaveRegister 326 MustHaveRegister 352 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[v2|q]" v2|q rcx|- [10, 54[[58, 62[[72, 307[[308, 342[10 MustHaveRegister 22 MustHaveRegister 26 MustHaveRegister 78 ShouldHaveRegister 110 MustHaveRegister 120 ShouldHaveRegister 128 MustHaveRegister 154 ShouldHaveRegister 176 MustHaveRegister 306 ShouldHaveRegister 320 ShouldHaveRegister 334 ShouldHaveRegister 342 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q r8|- [12, 68[[72, 276[12 MustHaveRegister 68 ShouldHaveRegister 104 ShouldHaveRegister 112 MustHaveRegister 122 ShouldHaveRegister 136 ShouldHaveRegister 144 MustHaveRegister 180 ShouldHaveRegister 212 MustHaveRegister 220 ShouldHaveRegister 228 MustHaveRegister 254 ShouldHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [18, 54[[58, 62[[72, 102[[106, 108[18 MustHaveRegister 20 MustHaveRegister 108 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q v4|d [20, 54[[58, 62[[72, 102[[106, 152[20 MustHaveRegister 30 ShouldHaveRegister 78 ShouldHaveRegister 138 ShouldHaveRegister 152 ShouldHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [26, 28[26 MustHaveRegister 28 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q v6|d [28, 31[28 MustHaveRegister 30 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q v13|q [32, 46[34 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q v14|q [32, 44[38 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q -1 [42, 43[42 MustHaveRegister  "NoDefinitionFound"
  v11|d DWORD "[v11|d]" v11|d -1 [44, 50[44 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d -1 [46, 48[46 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q v12|d [48, 53[48 MustHaveRegister 52 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q v11|d [50, 53[50 MustHaveRegister 52 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q v21|q [80, 92[86 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q v20|q [80, 94[82 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q -1 [90, 91[90 MustHaveRegister  "NoDefinitionFound"
  v18|d DWORD "[v18|d]" v18|d -1 [92, 98[92 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[v19|d]" v19|d -1 [94, 96[94 MustHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q v19|d [96, 101[96 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[v21|q]" v21|q v18|d [98, 101[98 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[v22|d]" v22|d -1 [108, 114[108 MustHaveRegister 114 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[v23|q]" v23|q v22|d [114, 118[114 MustHaveRegister 118 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[v24|q]" v24|q rax|q [126, 162[126 MustHaveRegister 162 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[v25|d]" v25|d -1 [128, 130[128 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[v26|q]" v26|q v25|d [130, 134[130 MustHaveRegister 134 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[v27|q]" v27|q rax|q [142, 164[142 MustHaveRegister 164 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[v28|d]" v28|d -1 [144, 146[144 MustHaveRegister 146 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[v29|q]" v29|q v28|d [146, 150[146 MustHaveRegister 150 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[v30|q]" v30|q rax|q [158, 166[158 MustHaveRegister 166 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[v31|q]" v31|q rax|q [170, 173[170 MustHaveRegister 172 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[v32|q]" v32|q v31|q [174, 398[[402, 448[374 ShouldHaveRegister 404 MustHaveRegister 434 ShouldHaveRegister 448 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[v33|d]" v33|d -1 [176, 204[[208, 210[176 MustHaveRegister 178 MustHaveRegister 210 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[v34|q]" v34|q v33|d [178, 204[[208, 252[178 MustHaveRegister 180 ShouldHaveRegister 238 ShouldHaveRegister 252 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[v35|q]" v35|q v41|q [182, 194[188 MustHaveRegister 194 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[v36|q]" v36|q v40|q [182, 196[184 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[v37|q]" v37|q -1 [192, 193[192 MustHaveRegister  "NoDefinitionFound"
  v38|d DWORD "[v38|d]" v38|d -1 [194, 200[194 MustHaveRegister 200 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[v39|d]" v39|d -1 [196, 198[196 MustHaveRegister 198 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[v40|q]" v40|q v39|d [198, 203[198 MustHaveRegister 202 ShouldHaveRegister  "NoSpillStore"
  v41|q QWORD "[v41|q]" v41|q v38|d [200, 203[200 MustHaveRegister 202 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[v42|d]" v42|d -1 [210, 214[210 MustHaveRegister 214 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[v43|q]" v43|q v42|d [214, 218[214 MustHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[v44|q]" v44|q rax|q [226, 262[226 MustHaveRegister 262 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[v45|d]" v45|d -1 [228, 230[228 MustHaveRegister 230 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[v46|q]" v46|q v45|d [230, 234[230 MustHaveRegister 234 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[v47|q]" v47|q rax|q [242, 264[242 MustHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v48|d DWORD "[v48|d]" v48|d -1 [244, 246[244 MustHaveRegister 246 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[v49|q]" v49|q v48|d [246, 250[246 MustHaveRegister 250 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[v50|q]" v50|q rax|q [258, 266[258 MustHaveRegister 266 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[v51|q]" v51|q rax|q [270, 273[270 MustHaveRegister 272 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[v52|q]" v52|q v51|q [274, 398[[402, 450[374 ShouldHaveRegister 406 MustHaveRegister 416 ShouldHaveRegister 424 MustHaveRegister 450 ShouldHaveRegister  "NoSpillStore"
  v53|d DWORD "[v53|d]" v53|d -1 [276, 304[[308, 310[276 MustHaveRegister 278 MustHaveRegister 310 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[v54|q]" v54|q v53|d [278, 304[[308, 350[278 MustHaveRegister 280 ShouldHaveRegister 336 ShouldHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[v55|q]" v55|q v61|q [282, 294[288 MustHaveRegister 294 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[v56|q]" v56|q v60|q [282, 296[284 MustHaveRegister 296 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[v57|q]" v57|q -1 [292, 293[292 MustHaveRegister  "NoDefinitionFound"
  v58|d DWORD "[v58|d]" v58|d -1 [294, 300[294 MustHaveRegister 300 MustHaveRegister  "NoSpillStore"
  v59|d DWORD "[v59|d]" v59|d -1 [296, 298[296 MustHaveRegister 298 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[v60|q]" v60|q v59|d [298, 303[298 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[v61|q]" v61|q v58|d [300, 303[300 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[v62|d]" v62|d -1 [310, 312[310 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[v63|q]" v63|q v62|d [312, 316[312 MustHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[v64|q]" v64|q rax|q [324, 360[324 MustHaveRegister 360 ShouldHaveRegister  "NoSpillStore"
  v65|d DWORD "[v65|d]" v65|d -1 [326, 328[326 MustHaveRegister 328 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[v66|q]" v66|q v65|d [328, 332[328 MustHaveRegister 332 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[v67|q]" v67|q rax|q [340, 362[340 MustHaveRegister 362 ShouldHaveRegister  "NoSpillStore"
  v68|d DWORD "[v68|d]" v68|d -1 [342, 344[342 MustHaveRegister 344 MustHaveRegister  "NoSpillStore"
  v69|q QWORD "[v69|q]" v69|q v68|d [344, 348[344 MustHaveRegister 348 ShouldHaveRegister  "NoSpillStore"
  v70|q QWORD "[v70|q]" v70|q rax|q [356, 364[356 MustHaveRegister 364 ShouldHaveRegister  "NoSpillStore"
  v71|q QWORD "[v71|q]" v71|q rax|q [368, 371[368 MustHaveRegister 370 ShouldHaveRegister  "NoSpillStore"
  v72|q QWORD "[v72|q]" v72|q v2|q [372, 401[[402, 440[400 ShouldHaveRegister 408 MustHaveRegister 418 ShouldHaveRegister 432 ShouldHaveRegister 440 MustHaveRegister  "NoSpillStore"
  v73|q QWORD "[v73|q]" v73|q v79|q [376, 388[382 MustHaveRegister 388 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[v74|q]" v74|q v78|q [376, 390[378 MustHaveRegister 390 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[v75|q]" v75|q -1 [386, 387[386 MustHaveRegister  "NoDefinitionFound"
  v76|d DWORD "[v76|d]" v76|d -1 [388, 394[388 MustHaveRegister 394 MustHaveRegister  "NoSpillStore"
  v77|d DWORD "[v77|d]" v77|d -1 [390, 392[390 MustHaveRegister 392 MustHaveRegister  "NoSpillStore"
  v78|q QWORD "[v78|q]" v78|q v77|d [392, 397[392 MustHaveRegister 396 ShouldHaveRegister  "NoSpillStore"
  v79|q QWORD "[v79|q]" v79|q v76|d [394, 397[394 MustHaveRegister 396 ShouldHaveRegister  "NoSpillStore"
  v80|d DWORD "[v80|d]" v80|d -1 [404, 410[404 MustHaveRegister 410 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[v81|q]" v81|q v80|d [410, 414[410 MustHaveRegister 414 ShouldHaveRegister  "NoSpillStore"
  v82|q QWORD "[v82|q]" v82|q rax|q [422, 458[422 MustHaveRegister 458 ShouldHaveRegister  "NoSpillStore"
  v83|d DWORD "[v83|d]" v83|d -1 [424, 426[424 MustHaveRegister 426 MustHaveRegister  "NoSpillStore"
  v84|q QWORD "[v84|q]" v84|q v83|d [426, 430[426 MustHaveRegister 430 ShouldHaveRegister  "NoSpillStore"
  v85|q QWORD "[v85|q]" v85|q rax|q [438, 460[438 MustHaveRegister 460 ShouldHaveRegister  "NoSpillStore"
  v86|d DWORD "[v86|d]" v86|d -1 [440, 442[440 MustHaveRegister 442 MustHaveRegister  "NoSpillStore"
  v87|q QWORD "[v87|q]" v87|q v86|d [442, 446[442 MustHaveRegister 446 ShouldHaveRegister  "NoSpillStore"
  v88|q QWORD "[v88|q]" v88|q rax|q [454, 462[454 MustHaveRegister 462 ShouldHaveRegister  "NoSpillStore"
  v89|q QWORD "[v89|q]" v89|q rax|q [466, 469[466 MustHaveRegister 468 ShouldHaveRegister  "NoSpillStore"
  v90|q QWORD "[v90|q]" v90|q v72|q [470, 472[472 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v3|q [0, 1[[68, 70[[124, 126[[140, 142[[156, 158[[168, 170[[224, 226[[240, 242[[256, 258[[268, 270[[322, 324[[338, 340[[354, 356[[366, 368[[420, 422[[436, 438[[452, 454[[464, 466[[472, 474[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v2|q [0, 10[[120, 125[[136, 141[[152, 157[[164, 169[[220, 225[[236, 241[[252, 257[[264, 269[[318, 323[[334, 339[[350, 355[[362, 367[[416, 421[[432, 437[[448, 453[[460, 465[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v23|q [0, 8[[118, 125[[134, 141[[150, 157[[162, 169[[218, 225[[234, 241[[250, 257[[262, 269[[316, 323[[332, 339[[348, 355[[360, 367[[414, 421[[430, 437[[446, 453[[458, 465[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 6[[116, 125[[132, 141[[148, 157[[160, 169[[216, 225[[232, 241[[248, 257[[260, 269[[314, 323[[330, 339[[346, 355[[358, 367[[412, 421[[428, 437[[444, 453[[456, 465[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- v3|q [0, 12[[122, 125[[138, 141[[154, 157[[166, 169[[222, 225[[238, 241[[254, 257[[266, 269[[320, 323[[336, 339[[352, 355[[364, 367[[418, 421[[434, 437[[450, 453[[462, 465[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [6, 54[[58, 62[[72, 115[6 MustHaveRegister  "SpillInDominator"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [8, 54[[58, 62[[72, 106[8 MustHaveRegister 14 MustHaveRegister 18 MustHaveRegister  "SpillInDominator"
  v2|q QWORD "[rcx|q]" v2|q rcx|- [10, 54[[58, 62[[72, 119[10 MustHaveRegister 22 MustHaveRegister 26 MustHaveRegister 78 ShouldHaveRegister 110 MustHaveRegister  "SpillInDominator"
  v3|q QWORD "[r8|q]" v3|q r8|- [12, 68[[72, 121[12 MustHaveRegister 68 ShouldHaveRegister 104 ShouldHaveRegister 112 MustHaveRegister  "SpillInDominator"
  v4|d DWORD "[r10|d]" v4|d -1 [18, 54[[58, 62[[72, 102[[106, 108[18 MustHaveRegister 20 MustHaveRegister 108 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r11|q]" v5|q v4|d [20, 54[[58, 62[[72, 102[20 MustHaveRegister 30 ShouldHaveRegister 78 ShouldHaveRegister  "OneSpillStore"
  v6|d DWORD "[rax|d]" v6|d -1 [26, 28[26 MustHaveRegister 28 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q v6|d [28, 31[28 MustHaveRegister 30 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rax|q]" v8|q v13|q [32, 46[34 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[r9|q]" v9|q v14|q [32, 44[38 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rbx|q]" v10|q -1 [42, 43[42 MustHaveRegister  "NoDefinitionFound"
  v11|d DWORD "[r9|d]" v11|d -1 [44, 50[44 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[rax|d]" v12|d -1 [46, 48[46 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[rax|q]" v13|q v12|d [48, 53[48 MustHaveRegister 52 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[r9|q]" v14|q v11|d [50, 53[50 MustHaveRegister 52 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[r9|q]" v15|q v21|q [80, 92[86 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[rbx|q]" v16|q v20|q [80, 94[82 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rdi|q]" v17|q -1 [90, 91[90 MustHaveRegister  "NoDefinitionFound"
  v18|d DWORD "[r9|d]" v18|d -1 [92, 98[92 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[rbx|d]" v19|d -1 [94, 96[94 MustHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[rbx|q]" v20|q v19|d [96, 101[96 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[r9|q]" v21|q v18|d [98, 101[98 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[r10|d]" v22|d -1 [108, 114[108 MustHaveRegister 114 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[r10|q]" v23|q v22|d [114, 118[114 MustHaveRegister 118 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rax|q]" v24|q rax|q [126, 139[126 MustHaveRegister  "OneSpillStore"
  v25|d DWORD "[rsi|d]" v25|d -1 [128, 130[128 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rdx|q]" v26|q v25|d [130, 134[130 MustHaveRegister 134 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rax|q]" v27|q rax|q [142, 155[142 MustHaveRegister  "OneSpillStore"
  v28|d DWORD "[rsi|d]" v28|d -1 [144, 146[144 MustHaveRegister 146 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rdx|q]" v29|q v28|d [146, 150[146 MustHaveRegister 150 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[rax|q]" v30|q rax|q [158, 166[158 MustHaveRegister 166 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[rax|q]" v31|q rax|q [170, 173[170 MustHaveRegister 172 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[vstack:9|q]" v32|q v31|q [174, 208[ "SpillInDominator"
  v33|d DWORD "[rsi|d]" v33|d -1 [176, 204[[208, 210[176 MustHaveRegister 178 MustHaveRegister 210 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[r10|q]" v34|q v33|d [178, 204[178 MustHaveRegister 180 ShouldHaveRegister  "OneSpillStore"
  v35|q QWORD "[rdx|q]" v35|q v41|q [182, 194[188 MustHaveRegister 194 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[r8|q]" v36|q v40|q [182, 196[184 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[r11|q]" v37|q -1 [192, 193[192 MustHaveRegister  "NoDefinitionFound"
  v38|d DWORD "[rdx|d]" v38|d -1 [194, 200[194 MustHaveRegister 200 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[r8|d]" v39|d -1 [196, 198[196 MustHaveRegister 198 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[r8|q]" v40|q v39|d [198, 203[198 MustHaveRegister 202 ShouldHaveRegister  "NoSpillStore"
  v41|q QWORD "[rdx|q]" v41|q v38|d [200, 203[200 MustHaveRegister 202 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[rsi|d]" v42|d -1 [210, 214[210 MustHaveRegister 214 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[r11|q]" v43|q v42|d [214, 218[214 MustHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rax|q]" v44|q rax|q [226, 239[226 MustHaveRegister  "OneSpillStore"
  v45|d DWORD "[rsi|d]" v45|d -1 [228, 230[228 MustHaveRegister 230 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[rdx|q]" v46|q v45|d [230, 234[230 MustHaveRegister 234 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[rax|q]" v47|q rax|q [242, 255[242 MustHaveRegister  "OneSpillStore"
  v48|d DWORD "[rsi|d]" v48|d -1 [244, 246[244 MustHaveRegister 246 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[rcx|q]" v49|q v48|d [246, 250[246 MustHaveRegister 250 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[rax|q]" v50|q rax|q [258, 266[258 MustHaveRegister 266 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[rax|q]" v51|q rax|q [270, 273[270 MustHaveRegister 272 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[vstack:13|q]" v52|q v51|q [274, 308[ "SpillInDominator"
  v53|d DWORD "[rsi|d]" v53|d -1 [276, 304[[308, 310[276 MustHaveRegister 278 MustHaveRegister 310 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[r10|q]" v54|q v53|d [278, 304[278 MustHaveRegister 280 ShouldHaveRegister  "OneSpillStore"
  v55|q QWORD "[rdx|q]" v55|q v61|q [282, 294[288 MustHaveRegister 294 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[rcx|q]" v56|q v60|q [282, 296[284 MustHaveRegister 296 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[r8|q]" v57|q -1 [292, 293[292 MustHaveRegister  "NoDefinitionFound"
  v58|d DWORD "[rdx|d]" v58|d -1 [294, 300[294 MustHaveRegister 300 MustHaveRegister  "NoSpillStore"
  v59|d DWORD "[rcx|d]" v59|d -1 [296, 298[296 MustHaveRegister 298 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rcx|q]" v60|q v59|d [298, 303[298 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[rdx|q]" v61|q v58|d [300, 303[300 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[rsi|d]" v62|d -1 [310, 312[310 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[r8|q]" v63|q v62|d [312, 316[312 MustHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[rax|q]" v64|q rax|q [324, 337[324 MustHaveRegister  "OneSpillStore"
  v65|d DWORD "[rsi|d]" v65|d -1 [326, 328[326 MustHaveRegister 328 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[rcx|q]" v66|q v65|d [328, 332[328 MustHaveRegister 332 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[rax|q]" v67|q rax|q [340, 353[340 MustHaveRegister  "OneSpillStore"
  v68|d DWORD "[rsi|d]" v68|d -1 [342, 344[342 MustHaveRegister 344 MustHaveRegister  "NoSpillStore"
  v69|q QWORD "[rdx|q]" v69|q v68|d [344, 348[344 MustHaveRegister 348 ShouldHaveRegister  "NoSpillStore"
  v70|q QWORD "[rax|q]" v70|q rax|q [356, 364[356 MustHaveRegister 364 ShouldHaveRegister  "NoSpillStore"
  v71|q QWORD "[rax|q]" v71|q rax|q [368, 371[368 MustHaveRegister 370 ShouldHaveRegister  "NoSpillStore"
  v72|q QWORD "[rcx|q]" v72|q v2|q [372, 401[[402, 415[400 ShouldHaveRegister 408 MustHaveRegister  "OneSpillStore"
  v73|q QWORD "[rsi|q]" v73|q v79|q [376, 388[382 MustHaveRegister 388 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[rdx|q]" v74|q v78|q [376, 390[378 MustHaveRegister 390 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[r8|q]" v75|q -1 [386, 387[386 MustHaveRegister  "NoDefinitionFound"
  v76|d DWORD "[rsi|d]" v76|d -1 [388, 394[388 MustHaveRegister 394 MustHaveRegister  "NoSpillStore"
  v77|d DWORD "[rdx|d]" v77|d -1 [390, 392[390 MustHaveRegister 392 MustHaveRegister  "NoSpillStore"
  v78|q QWORD "[rdx|q]" v78|q v77|d [392, 397[392 MustHaveRegister 396 ShouldHaveRegister  "NoSpillStore"
  v79|q QWORD "[rsi|q]" v79|q v76|d [394, 397[394 MustHaveRegister 396 ShouldHaveRegister  "NoSpillStore"
  v80|d DWORD "[rdx|d]" v80|d -1 [404, 410[404 MustHaveRegister 410 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[rdx|q]" v81|q v80|d [410, 414[410 MustHaveRegister 414 ShouldHaveRegister  "NoSpillStore"
  v82|q QWORD "[rax|q]" v82|q rax|q [422, 435[422 MustHaveRegister  "OneSpillStore"
  v83|d DWORD "[rsi|d]" v83|d -1 [424, 426[424 MustHaveRegister 426 MustHaveRegister  "NoSpillStore"
  v84|q QWORD "[rdx|q]" v84|q v83|d [426, 430[426 MustHaveRegister 430 ShouldHaveRegister  "NoSpillStore"
  v85|q QWORD "[rax|q]" v85|q rax|q [438, 451[438 MustHaveRegister  "OneSpillStore"
  v86|d DWORD "[rsi|d]" v86|d -1 [440, 442[440 MustHaveRegister 442 MustHaveRegister  "NoSpillStore"
  v87|q QWORD "[rdx|q]" v87|q v86|d [442, 446[442 MustHaveRegister 446 ShouldHaveRegister  "NoSpillStore"
  v88|q QWORD "[rax|q]" v88|q rax|q [454, 462[454 MustHaveRegister 462 ShouldHaveRegister  "NoSpillStore"
  v89|q QWORD "[rax|q]" v89|q rax|q [466, 469[466 MustHaveRegister 468 ShouldHaveRegister  "NoSpillStore"
  v90|q QWORD "[rcx|q]" v90|q v72|q [470, 472[472 ShouldHaveRegister  "NoSpillStore"
  v91|q QWORD "[r9|q]" v0|q v0|q [115, 123[116 ShouldHaveRegister  "SpillInDominator"
  v92|q QWORD "[vstack:4|q]" v1|q v1|q [106, 117[ "SpillInDominator"
  v93|q QWORD "[r10|q]" v2|q v2|q [119, 123[120 ShouldHaveRegister  "SpillInDominator"
  v94|q QWORD "[rdi|q]" v3|q v3|q [121, 123[122 ShouldHaveRegister  "SpillInDominator"
  v95|q QWORD "[vstack:3|q]" v5|q v5|q [106, 123[ "OneSpillStore"
  v96|q QWORD "[vstack:3|q]" v5|q v5|q [123, 152[138 ShouldHaveRegister 152 ShouldHaveRegister  "OneSpillStore"
  v97|q QWORD "[vstack:4|q]" v1|q v1|q [117, 123[ "SpillInDominator"
  v98|q QWORD "[vstack:1|q]" v0|q v0|q [123, 398[132 ShouldHaveRegister 148 ShouldHaveRegister 160 ShouldHaveRegister 216 ShouldHaveRegister 232 ShouldHaveRegister 248 ShouldHaveRegister 260 ShouldHaveRegister 314 ShouldHaveRegister 330 ShouldHaveRegister 346 ShouldHaveRegister 358 ShouldHaveRegister  "SpillInDominator"
  v99|q QWORD "[vstack:4|q]" v1|q v1|q [123, 208[206 ShouldHaveRegister  "SpillInDominator"
  v100|q QWORD "[vstack:0|q]" v2|q v2|q [123, 127[ "SpillInDominator"
  v101|q QWORD "[vstack:2|q]" v3|q v3|q [123, 143[136 ShouldHaveRegister  "SpillInDominator"
  v102|q QWORD "[rcx|q]" v2|q v2|q [127, 135[128 MustHaveRegister  "SpillInDominator"
  v103|q QWORD "[rsi|q]" v0|q v0|q [402, 411[ "SpillInDominator"
  v104|q QWORD "[r8|q]" v3|q v3|q [143, 153[144 MustHaveRegister  "SpillInDominator"
  v105|q QWORD "[rdx|q]" v1|q v1|q [208, 217[ "SpillInDominator"
  v106|q QWORD "[vstack:6|q]" v24|q v24|q [139, 162[162 ShouldHaveRegister  "OneSpillStore"
  v107|q QWORD "[vstack:0|q]" v2|q v2|q [135, 139[ "SpillInDominator"
  v108|q QWORD "[vstack:0|q]" v2|q v2|q [139, 174[154 ShouldHaveRegister  "SpillInDominator"
  v109|q QWORD "[rcx|q]" v2|q v2|q [174, 208[176 MustHaveRegister  "SpillInDominator"
  v110|q QWORD "[vstack:7|q]" v27|q v27|q [155, 164[164 ShouldHaveRegister  "OneSpillStore"
  v111|q QWORD "[vstack:2|q]" v3|q v3|q [153, 208[180 ShouldHaveRegister  "SpillInDominator"
  v112|q QWORD "[r8|q]" v3|q v3|q [208, 221[212 MustHaveRegister 220 ShouldHaveRegister  "SpillInDominator"
  v113|q QWORD "[vstack:0|q]" v2|q v2|q [208, 219[ "SpillInDominator"
  v114|q QWORD "[vstack:9|q]" v32|q v32|q [208, 223[ "SpillInDominator"
  v115|q QWORD "[vstack:8|q]" v34|q v34|q [208, 223[ "OneSpillStore"
  v116|q QWORD "[vstack:2|q]" v3|q v3|q [221, 227[ "SpillInDominator"
  v117|q QWORD "[r9|q]" v1|q v1|q [217, 223[222 ShouldHaveRegister  "SpillInDominator"
  v118|q QWORD "[vstack:8|q]" v34|q v34|q [223, 252[238 ShouldHaveRegister 252 ShouldHaveRegister  "OneSpillStore"
  v119|q QWORD "[vstack:0|q]" v2|q v2|q [219, 223[ "SpillInDominator"
  v120|q QWORD "[vstack:9|q]" v32|q v32|q [223, 398[374 ShouldHaveRegister  "SpillInDominator"
  v121|q QWORD "[vstack:4|q]" v1|q v1|q [223, 243[236 ShouldHaveRegister  "SpillInDominator"
  v122|q QWORD "[vstack:0|q]" v2|q v2|q [223, 307[306 ShouldHaveRegister  "SpillInDominator"
  v123|q QWORD "[r8|q]" v3|q v3|q [227, 237[228 MustHaveRegister  "SpillInDominator"
  v124|q QWORD "[rdx|q]" v1|q v1|q [243, 249[244 MustHaveRegister  "SpillInDominator"
  v125|q QWORD "[rcx|q]" v2|q v2|q [308, 317[ "SpillInDominator"
  v126|q QWORD "[r10|q]" v32|q v32|q [402, 419[404 MustHaveRegister  "SpillInDominator"
  v127|q QWORD "[vstack:10|q]" v44|q v44|q [239, 262[262 ShouldHaveRegister  "OneSpillStore"
  v128|q QWORD "[vstack:2|q]" v3|q v3|q [237, 274[254 ShouldHaveRegister  "SpillInDominator"
  v129|q QWORD "[r8|q]" v3|q v3|q [274, 276[276 MustHaveRegister  "SpillInDominator"
  v130|q QWORD "[vstack:11|q]" v47|q v47|q [255, 264[264 ShouldHaveRegister  "OneSpillStore"
  v131|q QWORD "[vstack:4|q]" v1|q v1|q [249, 255[ "SpillInDominator"
  v132|q QWORD "[vstack:4|q]" v1|q v1|q [255, 304[280 ShouldHaveRegister  "SpillInDominator"
  v133|q QWORD "[rdx|q]" v1|q v1|q [308, 315[ "SpillInDominator"
  v134|q QWORD "[vstack:13|q]" v52|q v52|q [308, 321[ "SpillInDominator"
  v135|q QWORD "[vstack:12|q]" v54|q v54|q [308, 321[ "OneSpillStore"
  v136|q QWORD "[r11|q]" v1|q v1|q [315, 321[318 ShouldHaveRegister  "SpillInDominator"
  v137|q QWORD "[r9|q]" v2|q v2|q [317, 321[320 ShouldHaveRegister  "SpillInDominator"
  v138|q QWORD "[vstack:12|q]" v54|q v54|q [321, 350[336 ShouldHaveRegister 350 ShouldHaveRegister  "OneSpillStore"
  v139|q QWORD "[vstack:13|q]" v52|q v52|q [321, 398[374 ShouldHaveRegister  "SpillInDominator"
  v140|q QWORD "[vstack:4|q]" v1|q v1|q [321, 325[ "SpillInDominator"
  v141|q QWORD "[vstack:0|q]" v2|q v2|q [321, 341[334 ShouldHaveRegister  "SpillInDominator"
  v142|q QWORD "[rdx|q]" v1|q v1|q [325, 331[326 MustHaveRegister  "SpillInDominator"
  v143|q QWORD "[rcx|q]" v2|q v2|q [341, 342[342 MustHaveRegister  "SpillInDominator"
  v144|q QWORD "[r11|q]" v52|q v52|q [402, 419[406 MustHaveRegister 416 ShouldHaveRegister  "SpillInDominator"
  v145|q QWORD "[vstack:14|q]" v64|q v64|q [337, 360[360 ShouldHaveRegister  "OneSpillStore"
  v146|q QWORD "[vstack:4|q]" v1|q v1|q [331, 337[ "SpillInDominator"
  v147|q QWORD "[vstack:4|q]" v1|q v1|q [337, 352[352 ShouldHaveRegister  "SpillInDominator"
  v148|q QWORD "[vstack:15|q]" v67|q v67|q [353, 362[362 ShouldHaveRegister  "OneSpillStore"
  v149|q QWORD "[rbx|q]" v72|q v72|q [415, 419[418 ShouldHaveRegister  "OneSpillStore"
  v150|q QWORD "[vstack:9|q]" v32|q v32|q [419, 448[434 ShouldHaveRegister 448 ShouldHaveRegister  "SpillInDominator"
  v151|q QWORD "[vstack:13|q]" v52|q v52|q [419, 423[ "SpillInDominator"
  v152|q QWORD "[r9|q]" v0|q v0|q [411, 419[412 ShouldHaveRegister  "SpillInDominator"
  v153|q QWORD "[vstack:1|q]" v0|q v0|q [419, 456[428 ShouldHaveRegister 444 ShouldHaveRegister 456 ShouldHaveRegister  "SpillInDominator"
  v154|q QWORD "[vstack:16|q]" v72|q v72|q [419, 439[432 ShouldHaveRegister  "OneSpillStore"
  v155|q QWORD "[r11|q]" v52|q v52|q [423, 435[424 MustHaveRegister  "SpillInDominator"
  v156|q QWORD "[rcx|q]" v72|q v72|q [439, 440[440 MustHaveRegister  "OneSpillStore"
  v157|q QWORD "[vstack:17|q]" v82|q v82|q [435, 458[458 ShouldHaveRegister  "OneSpillStore"
  v158|q QWORD "[vstack:13|q]" v52|q v52|q [435, 450[450 ShouldHaveRegister  "SpillInDominator"
  v159|q QWORD "[vstack:18|q]" v85|q v85|q [451, 460[460 ShouldHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a872160 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   14  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   20  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction TESTBRANCH (x: v2|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction v6|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   30  <|@ instruction JUMP ~outgoingValues: [v5|QWORD[.], v7|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   32  <|@ instruction [v8|QWORD[.], v9|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: v8|QWORD[.], y: v8|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: v9|QWORD[.], y: v9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v9|QWORD[.] v8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3] <|@ <|@
      nr   44  <|@ instruction v11|DWORD[_] = MOV input: [v9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction v12|DWORD[_] = MOV input: [v8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   48  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   52  <|@ instruction JUMP ~outgoingValues: [v13|QWORD[.], v14|QWORD[.]] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603999204951558038
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4597043951172344564
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591923954390866623
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B1" 
    successors 
    xhandlers
    flags 
    probability 4604906646667520750
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4585069451628504407
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [v2|QWORD[.], v5|QWORD[.]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" 
    successors "B16" "B13" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr   80  <|@ instruction [v15|QWORD[.], v16|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   82  <|@ instruction TESTBRANCH (x: v16|QWORD[.], y: v16|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B12 -> B16 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B14" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: v15|QWORD[.], y: v15|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B13 -> B15 falseDestination: B13 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v15|QWORD[.] v16|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v17|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17] <|@ <|@
      nr   92  <|@ instruction v18|DWORD[_] = MOV input: [v15|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   94  <|@ instruction v19|DWORD[_] = MOV input: [v16|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v19|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   98  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.], v20|QWORD[.]] destination: B14 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v22|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17] <|@ <|@
      nr  110  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v2|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr  112  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr  114  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  116  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  118  <|@ instruction rdx|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  122  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = STACKMOVE (input: v97|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = STACKMOVE (input: v95|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v101|QWORD[.] = MOVE input: v94|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v91|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17] <|@ <|@
      nr  126  <|@ instruction v24|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v100|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  128  <|@ instruction v25|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  130  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rdx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = MOVE input: v102|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  136  <|@ instruction rcx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction r8|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[.] = MOVE input: v24|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = STACKMOVE (input: v107|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v24|QWORD[.] 
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17] <|@ <|@
      nr  142  <|@ instruction v27|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = MOVE input: v101|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction v28|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  146  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rdx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rcx|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v111|QWORD[.] = MOVE input: v104|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction r8|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v110|QWORD[.] = MOVE input: v27|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  156  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v24|QWORD[.] v27|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17] <|@ <|@
      nr  158  <|@ instruction v30|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rdx|QWORD[.] = MOVE input: v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rcx|QWORD[.] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction r8|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17] <|@ <|@
      nr  170  <|@ instruction v31|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [v31|QWORD[.]] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" "B16" 
    successors "B18" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  174  <|@ instruction [v32|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] Object[null] v3|QWORD[.] 
>@ <|@ instruction v33|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD state [bci:20] <|@ <|@
      nr  178  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.], v34|QWORD[.]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B22" "B19" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  182  <|@ instruction [v35|QWORD[.], v36|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  184  <|@ instruction TESTBRANCH (x: v36|QWORD[.], y: v36|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B18 -> B22 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction TESTBRANCH (x: v35|QWORD[.], y: v35|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B19 -> B21 falseDestination: B19 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v35|QWORD[.] v36|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v37|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27] <|@ <|@
      nr  194  <|@ instruction v38|DWORD[_] = MOV input: [v35|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  196  <|@ instruction v39|DWORD[_] = MOV input: [v36|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  198  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  200  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v38|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [v41|QWORD[.], v40|QWORD[.]] destination: B20 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v33|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27] <|@ <|@
      nr  212  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:14, 3, 27] <|@ <|@
      nr  214  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  216  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v117|QWORD[.] = MOVE input: v105|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  218  <|@ instruction rdx|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = MOVE input: v113|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction rcx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD[.] = MOVE input: v112|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  222  <|@ instruction r8|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = STACKMOVE (input: v114|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = STACKMOVE (input: v119|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = STACKMOVE (input: v115|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v121|QWORD[.] = MOVE input: v117|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  224  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27] <|@ <|@
      nr  226  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.] = MOVE input: v116|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  228  <|@ instruction v45|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  232  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rdx|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE input: v123|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  238  <|@ instruction r8|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  240  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v44|QWORD[.] 
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27] <|@ <|@
      nr  242  <|@ instruction v47|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE input: v121|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  244  <|@ instruction v48|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  246  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  248  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[.] = MOVE input: v124|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction rdx|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction rcx|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v132|QWORD[.] = STACKMOVE (input: v131|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v130|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v44|QWORD[.] v47|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27] <|@ <|@
      nr  258  <|@ instruction v50|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rdx|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rcx|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction r8|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27] <|@ <|@
      nr  270  <|@ instruction v51|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  274  <|@ instruction [v52|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  276  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] Object[null] 
>@ <|@ instruction v53|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD state [bci:30] <|@ <|@
      nr  278  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v53|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.], v54|QWORD[.]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" 
    successors "B28" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  282  <|@ instruction [v55|QWORD[.], v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  284  <|@ instruction TESTBRANCH (x: v56|QWORD[.], y: v56|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B24 -> B28 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction TESTBRANCH (x: v55|QWORD[.], y: v55|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v55|QWORD[.] v56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: v57|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37] <|@ <|@
      nr  294  <|@ instruction v58|DWORD[_] = MOV input: [v55|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  296  <|@ instruction v59|DWORD[_] = MOV input: [v56|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  298  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  300  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [v61|QWORD[.], v60|QWORD[.]] destination: B26 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [v2|QWORD[.]] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B29" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction v62|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37] <|@ <|@
      nr  312  <|@ instruction v63|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v133|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v125|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  318  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction r8|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v139|QWORD[.] = STACKMOVE (input: v134|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.] = STACKMOVE (input: v135|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|QWORD[.] = MOVE input: v137|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v140|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37] <|@ <|@
      nr  324  <|@ instruction v64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v142|QWORD[.] = MOVE input: v140|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  326  <|@ instruction v65|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  328  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v146|QWORD[.] = MOVE input: v142|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  332  <|@ instruction rdx|QWORD[.] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction r8|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v145|QWORD[.] = MOVE input: v64|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v147|QWORD[.] = STACKMOVE (input: v146|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v64|QWORD[.] 
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37] <|@ <|@
      nr  340  <|@ instruction v67|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v143|QWORD[.] = MOVE input: v141|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  342  <|@ instruction v68|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  344  <|@ instruction v69|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rdx|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction r8|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v148|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v64|QWORD[.] v67|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37] <|@ <|@
      nr  356  <|@ instruction v70|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdx|QWORD[.] = MOVE input: v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction rcx|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction r8|QWORD[.] = MOVE input: v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37] <|@ <|@
      nr  368  <|@ instruction v71|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~outgoingValues: [v71|QWORD[.]] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  372  <|@ instruction [v72|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [v52|QWORD[.], v32|QWORD[.]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B32" 
    successors "B34" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  376  <|@ instruction [v73|QWORD[.], v74|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  378  <|@ instruction TESTBRANCH (x: v74|QWORD[.], y: v74|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B30 -> B34 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B32" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction TESTBRANCH (x: v73|QWORD[.], y: v73|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B31 -> B33 falseDestination: B31 -> B32 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v73|QWORD[.] v74|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: v75|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40] <|@ <|@
      nr  388  <|@ instruction v76|DWORD[_] = MOV input: [v73|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  390  <|@ instruction v77|DWORD[_] = MOV input: [v74|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  392  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  394  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [v79|QWORD[.], v78|QWORD[.]] destination: B32 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [v72|QWORD[.]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction v80|DWORD[_] = MOV input: [v32|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40] <|@ <|@
      nr  406  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v52|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr  408  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v72|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr  410  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v152|QWORD[.] = MOVE input: v103|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction rdx|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  416  <|@ instruction rcx|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction r8|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE input: v126|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v154|QWORD[.] = MOVE input: v149|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v153|QWORD[.] = MOVE input: v152|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v151|QWORD[.] = MOVE input: v144|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40] <|@ <|@
      nr  422  <|@ instruction v82|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[.] = MOVE input: v151|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  424  <|@ instruction v83|DWORD[_] = MOV input: [v52|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  426  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v83|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  428  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction rdx|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction rcx|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction r8|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v158|QWORD[.] = MOVE input: v155|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  436  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v82|QWORD[.] 
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40] <|@ <|@
      nr  438  <|@ instruction v85|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE input: v154|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  440  <|@ instruction v86|DWORD[_] = MOV input: [v72|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  442  <|@ instruction v87|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  444  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction rdx|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction rcx|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction r8|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v159|QWORD[.] = MOVE input: v85|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v82|QWORD[.] v85|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40] <|@ <|@
      nr  454  <|@ instruction v88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rdx|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rcx|QWORD[.] = MOVE input: v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction r8|QWORD[.] = MOVE input: v88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40] <|@ <|@
      nr  466  <|@ instruction v89|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [v89|QWORD[.]] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" "B34" 
    successors 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  470  <|@ instruction [v90|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  472  <|@ instruction rax|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_2       
     2: aload_1       
     3: invokevirtual #8          // isShorterThan:(List$Element, List$Element)boolean
     6: ifeq          44
     9: aload_0       
    10: aload_0       
    11: aload_1       
    12: invokevirtual #7          // List$Element.getNext:()List$Element
    15: aload_2       
    16: aload_3       
    17: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    20: aload_0       
    21: aload_2       
    22: invokevirtual #7          // List$Element.getNext:()List$Element
    25: aload_3       
    26: aload_1       
    27: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    30: aload_0       
    31: aload_3       
    32: invokevirtual #7          // List$Element.getNext:()List$Element
    35: aload_1       
    36: aload_2       
    37: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    40: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    43: areturn       
    44: aload_3       
    45: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v3|q [0, 1[[68, 70[[124, 126[[140, 142[[156, 158[[168, 170[[224, 226[[240, 242[[256, 258[[268, 270[[322, 324[[338, 340[[354, 356[[366, 368[[420, 422[[436, 438[[452, 454[[464, 466[[472, 474[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v2|q [0, 10[[120, 125[[136, 141[[152, 157[[164, 169[[220, 225[[236, 241[[252, 257[[264, 269[[318, 323[[334, 339[[350, 355[[362, 367[[416, 421[[432, 437[[448, 453[[460, 465[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v23|q [0, 8[[118, 125[[134, 141[[150, 157[[162, 169[[218, 225[[234, 241[[250, 257[[262, 269[[316, 323[[332, 339[[348, 355[[360, 367[[414, 421[[430, 437[[446, 453[[458, 465[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 6[[116, 125[[132, 141[[148, 157[[160, 169[[216, 225[[232, 241[[248, 257[[260, 269[[314, 323[[330, 339[[346, 355[[358, 367[[412, 421[[428, 437[[444, 453[[456, 465[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- v3|q [0, 12[[122, 125[[138, 141[[154, 157[[166, 169[[222, 225[[238, 241[[254, 257[[266, 269[[320, 323[[336, 339[[352, 355[[364, 367[[418, 421[[434, 437[[450, 453[[462, 465[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [6, 54[[58, 62[[72, 115[6 MustHaveRegister  "SpillInDominator"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [8, 54[[58, 62[[72, 106[8 MustHaveRegister 14 MustHaveRegister 18 MustHaveRegister  "SpillInDominator"
  v2|q QWORD "[rcx|q]" v2|q rcx|- [10, 54[[58, 62[[72, 119[10 MustHaveRegister 22 MustHaveRegister 26 MustHaveRegister 78 ShouldHaveRegister 110 MustHaveRegister  "SpillInDominator"
  v3|q QWORD "[r8|q]" v3|q r8|- [12, 68[[72, 121[12 MustHaveRegister 68 ShouldHaveRegister 104 ShouldHaveRegister 112 MustHaveRegister  "SpillInDominator"
  v4|d DWORD "[r10|d]" v4|d -1 [18, 54[[58, 62[[72, 102[[106, 108[18 MustHaveRegister 20 MustHaveRegister 108 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r11|q]" v5|q v4|d [20, 54[[58, 62[[72, 102[20 MustHaveRegister 30 ShouldHaveRegister 78 ShouldHaveRegister  "OneSpillStore"
  v6|d DWORD "[rax|d]" v6|d -1 [26, 28[26 MustHaveRegister 28 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q v6|d [28, 31[28 MustHaveRegister 30 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rax|q]" v8|q v13|q [32, 46[34 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[r9|q]" v9|q v14|q [32, 44[38 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rbx|q]" v10|q -1 [42, 43[42 MustHaveRegister  "NoDefinitionFound"
  v11|d DWORD "[r9|d]" v11|d -1 [44, 50[44 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[rax|d]" v12|d -1 [46, 48[46 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[rax|q]" v13|q v12|d [48, 53[48 MustHaveRegister 52 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[r9|q]" v14|q v11|d [50, 53[50 MustHaveRegister 52 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[r9|q]" v15|q v21|q [80, 92[86 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[rbx|q]" v16|q v20|q [80, 94[82 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rdi|q]" v17|q -1 [90, 91[90 MustHaveRegister  "NoDefinitionFound"
  v18|d DWORD "[r9|d]" v18|d -1 [92, 98[92 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[rbx|d]" v19|d -1 [94, 96[94 MustHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[rbx|q]" v20|q v19|d [96, 101[96 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[r9|q]" v21|q v18|d [98, 101[98 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[r10|d]" v22|d -1 [108, 114[108 MustHaveRegister 114 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[r10|q]" v23|q v22|d [114, 118[114 MustHaveRegister 118 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rax|q]" v24|q rax|q [126, 139[126 MustHaveRegister  "OneSpillStore"
  v25|d DWORD "[rsi|d]" v25|d -1 [128, 130[128 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rdx|q]" v26|q v25|d [130, 134[130 MustHaveRegister 134 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rax|q]" v27|q rax|q [142, 155[142 MustHaveRegister  "OneSpillStore"
  v28|d DWORD "[rsi|d]" v28|d -1 [144, 146[144 MustHaveRegister 146 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rdx|q]" v29|q v28|d [146, 150[146 MustHaveRegister 150 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[rax|q]" v30|q rax|q [158, 166[158 MustHaveRegister 166 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[rax|q]" v31|q rax|q [170, 173[170 MustHaveRegister 172 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[vstack:9|q]" v32|q v31|q [174, 208[ "StoreAtDefinition"
  v33|d DWORD "[rsi|d]" v33|d -1 [176, 204[[208, 210[176 MustHaveRegister 178 MustHaveRegister 210 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[r10|q]" v34|q v33|d [178, 204[178 MustHaveRegister 180 ShouldHaveRegister  "OneSpillStore"
  v35|q QWORD "[rdx|q]" v35|q v41|q [182, 194[188 MustHaveRegister 194 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[r8|q]" v36|q v40|q [182, 196[184 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[r11|q]" v37|q -1 [192, 193[192 MustHaveRegister  "NoDefinitionFound"
  v38|d DWORD "[rdx|d]" v38|d -1 [194, 200[194 MustHaveRegister 200 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[r8|d]" v39|d -1 [196, 198[196 MustHaveRegister 198 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[r8|q]" v40|q v39|d [198, 203[198 MustHaveRegister 202 ShouldHaveRegister  "NoSpillStore"
  v41|q QWORD "[rdx|q]" v41|q v38|d [200, 203[200 MustHaveRegister 202 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[rsi|d]" v42|d -1 [210, 214[210 MustHaveRegister 214 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[r11|q]" v43|q v42|d [214, 218[214 MustHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rax|q]" v44|q rax|q [226, 239[226 MustHaveRegister  "OneSpillStore"
  v45|d DWORD "[rsi|d]" v45|d -1 [228, 230[228 MustHaveRegister 230 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[rdx|q]" v46|q v45|d [230, 234[230 MustHaveRegister 234 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[rax|q]" v47|q rax|q [242, 255[242 MustHaveRegister  "OneSpillStore"
  v48|d DWORD "[rsi|d]" v48|d -1 [244, 246[244 MustHaveRegister 246 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[rcx|q]" v49|q v48|d [246, 250[246 MustHaveRegister 250 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[rax|q]" v50|q rax|q [258, 266[258 MustHaveRegister 266 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[rax|q]" v51|q rax|q [270, 273[270 MustHaveRegister 272 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[vstack:13|q]" v52|q v51|q [274, 308[ "StoreAtDefinition"
  v53|d DWORD "[rsi|d]" v53|d -1 [276, 304[[308, 310[276 MustHaveRegister 278 MustHaveRegister 310 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[r10|q]" v54|q v53|d [278, 304[278 MustHaveRegister 280 ShouldHaveRegister  "OneSpillStore"
  v55|q QWORD "[rdx|q]" v55|q v61|q [282, 294[288 MustHaveRegister 294 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[rcx|q]" v56|q v60|q [282, 296[284 MustHaveRegister 296 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[r8|q]" v57|q -1 [292, 293[292 MustHaveRegister  "NoDefinitionFound"
  v58|d DWORD "[rdx|d]" v58|d -1 [294, 300[294 MustHaveRegister 300 MustHaveRegister  "NoSpillStore"
  v59|d DWORD "[rcx|d]" v59|d -1 [296, 298[296 MustHaveRegister 298 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rcx|q]" v60|q v59|d [298, 303[298 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[rdx|q]" v61|q v58|d [300, 303[300 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[rsi|d]" v62|d -1 [310, 312[310 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[r8|q]" v63|q v62|d [312, 316[312 MustHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[rax|q]" v64|q rax|q [324, 337[324 MustHaveRegister  "OneSpillStore"
  v65|d DWORD "[rsi|d]" v65|d -1 [326, 328[326 MustHaveRegister 328 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[rcx|q]" v66|q v65|d [328, 332[328 MustHaveRegister 332 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[rax|q]" v67|q rax|q [340, 353[340 MustHaveRegister  "OneSpillStore"
  v68|d DWORD "[rsi|d]" v68|d -1 [342, 344[342 MustHaveRegister 344 MustHaveRegister  "NoSpillStore"
  v69|q QWORD "[rdx|q]" v69|q v68|d [344, 348[344 MustHaveRegister 348 ShouldHaveRegister  "NoSpillStore"
  v70|q QWORD "[rax|q]" v70|q rax|q [356, 364[356 MustHaveRegister 364 ShouldHaveRegister  "NoSpillStore"
  v71|q QWORD "[rax|q]" v71|q rax|q [368, 371[368 MustHaveRegister 370 ShouldHaveRegister  "NoSpillStore"
  v72|q QWORD "[rcx|q]" v72|q v2|q [372, 401[[402, 415[400 ShouldHaveRegister 408 MustHaveRegister  "OneSpillStore"
  v73|q QWORD "[rsi|q]" v73|q v79|q [376, 388[382 MustHaveRegister 388 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[rdx|q]" v74|q v78|q [376, 390[378 MustHaveRegister 390 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[r8|q]" v75|q -1 [386, 387[386 MustHaveRegister  "NoDefinitionFound"
  v76|d DWORD "[rsi|d]" v76|d -1 [388, 394[388 MustHaveRegister 394 MustHaveRegister  "NoSpillStore"
  v77|d DWORD "[rdx|d]" v77|d -1 [390, 392[390 MustHaveRegister 392 MustHaveRegister  "NoSpillStore"
  v78|q QWORD "[rdx|q]" v78|q v77|d [392, 397[392 MustHaveRegister 396 ShouldHaveRegister  "NoSpillStore"
  v79|q QWORD "[rsi|q]" v79|q v76|d [394, 397[394 MustHaveRegister 396 ShouldHaveRegister  "NoSpillStore"
  v80|d DWORD "[rdx|d]" v80|d -1 [404, 410[404 MustHaveRegister 410 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[rdx|q]" v81|q v80|d [410, 414[410 MustHaveRegister 414 ShouldHaveRegister  "NoSpillStore"
  v82|q QWORD "[rax|q]" v82|q rax|q [422, 435[422 MustHaveRegister  "OneSpillStore"
  v83|d DWORD "[rsi|d]" v83|d -1 [424, 426[424 MustHaveRegister 426 MustHaveRegister  "NoSpillStore"
  v84|q QWORD "[rdx|q]" v84|q v83|d [426, 430[426 MustHaveRegister 430 ShouldHaveRegister  "NoSpillStore"
  v85|q QWORD "[rax|q]" v85|q rax|q [438, 451[438 MustHaveRegister  "OneSpillStore"
  v86|d DWORD "[rsi|d]" v86|d -1 [440, 442[440 MustHaveRegister 442 MustHaveRegister  "NoSpillStore"
  v87|q QWORD "[rdx|q]" v87|q v86|d [442, 446[442 MustHaveRegister 446 ShouldHaveRegister  "NoSpillStore"
  v88|q QWORD "[rax|q]" v88|q rax|q [454, 462[454 MustHaveRegister 462 ShouldHaveRegister  "NoSpillStore"
  v89|q QWORD "[rax|q]" v89|q rax|q [466, 469[466 MustHaveRegister 468 ShouldHaveRegister  "NoSpillStore"
  v90|q QWORD "[rcx|q]" v90|q v72|q [470, 472[472 ShouldHaveRegister  "NoSpillStore"
  v91|q QWORD "[r9|q]" v0|q v0|q [115, 123[116 ShouldHaveRegister  "SpillInDominator"
  v92|q QWORD "[vstack:4|q]" v1|q v1|q [106, 117[ "SpillInDominator"
  v93|q QWORD "[r10|q]" v2|q v2|q [119, 123[120 ShouldHaveRegister  "SpillInDominator"
  v94|q QWORD "[rdi|q]" v3|q v3|q [121, 123[122 ShouldHaveRegister  "SpillInDominator"
  v95|q QWORD "[vstack:3|q]" v5|q v5|q [106, 123[ "OneSpillStore"
  v96|q QWORD "[vstack:3|q]" v5|q v5|q [123, 152[138 ShouldHaveRegister 152 ShouldHaveRegister  "OneSpillStore"
  v97|q QWORD "[vstack:4|q]" v1|q v1|q [117, 123[ "SpillInDominator"
  v98|q QWORD "[vstack:1|q]" v0|q v0|q [123, 398[132 ShouldHaveRegister 148 ShouldHaveRegister 160 ShouldHaveRegister 216 ShouldHaveRegister 232 ShouldHaveRegister 248 ShouldHaveRegister 260 ShouldHaveRegister 314 ShouldHaveRegister 330 ShouldHaveRegister 346 ShouldHaveRegister 358 ShouldHaveRegister  "SpillInDominator"
  v99|q QWORD "[vstack:4|q]" v1|q v1|q [123, 208[206 ShouldHaveRegister  "SpillInDominator"
  v100|q QWORD "[vstack:0|q]" v2|q v2|q [123, 127[ "SpillInDominator"
  v101|q QWORD "[vstack:2|q]" v3|q v3|q [123, 143[136 ShouldHaveRegister  "SpillInDominator"
  v102|q QWORD "[rcx|q]" v2|q v2|q [127, 135[128 MustHaveRegister  "SpillInDominator"
  v103|q QWORD "[rsi|q]" v0|q v0|q [402, 411[ "SpillInDominator"
  v104|q QWORD "[r8|q]" v3|q v3|q [143, 153[144 MustHaveRegister  "SpillInDominator"
  v105|q QWORD "[rdx|q]" v1|q v1|q [208, 217[ "SpillInDominator"
  v106|q QWORD "[vstack:6|q]" v24|q v24|q [139, 162[162 ShouldHaveRegister  "OneSpillStore"
  v107|q QWORD "[vstack:0|q]" v2|q v2|q [135, 139[ "SpillInDominator"
  v108|q QWORD "[vstack:0|q]" v2|q v2|q [139, 174[154 ShouldHaveRegister  "SpillInDominator"
  v109|q QWORD "[rcx|q]" v2|q v2|q [174, 208[176 MustHaveRegister  "SpillInDominator"
  v110|q QWORD "[vstack:7|q]" v27|q v27|q [155, 164[164 ShouldHaveRegister  "OneSpillStore"
  v111|q QWORD "[vstack:2|q]" v3|q v3|q [153, 208[180 ShouldHaveRegister  "SpillInDominator"
  v112|q QWORD "[r8|q]" v3|q v3|q [208, 221[212 MustHaveRegister 220 ShouldHaveRegister  "SpillInDominator"
  v113|q QWORD "[vstack:0|q]" v2|q v2|q [208, 219[ "SpillInDominator"
  v114|q QWORD "[vstack:9|q]" v32|q v32|q [208, 223[ "StoreAtDefinition"
  v115|q QWORD "[vstack:8|q]" v34|q v34|q [208, 223[ "OneSpillStore"
  v116|q QWORD "[vstack:2|q]" v3|q v3|q [221, 227[ "SpillInDominator"
  v117|q QWORD "[r9|q]" v1|q v1|q [217, 223[222 ShouldHaveRegister  "SpillInDominator"
  v118|q QWORD "[vstack:8|q]" v34|q v34|q [223, 252[238 ShouldHaveRegister 252 ShouldHaveRegister  "OneSpillStore"
  v119|q QWORD "[vstack:0|q]" v2|q v2|q [219, 223[ "SpillInDominator"
  v120|q QWORD "[vstack:9|q]" v32|q v32|q [223, 398[374 ShouldHaveRegister  "StoreAtDefinition"
  v121|q QWORD "[vstack:4|q]" v1|q v1|q [223, 243[236 ShouldHaveRegister  "SpillInDominator"
  v122|q QWORD "[vstack:0|q]" v2|q v2|q [223, 307[306 ShouldHaveRegister  "SpillInDominator"
  v123|q QWORD "[r8|q]" v3|q v3|q [227, 237[228 MustHaveRegister  "SpillInDominator"
  v124|q QWORD "[rdx|q]" v1|q v1|q [243, 249[244 MustHaveRegister  "SpillInDominator"
  v125|q QWORD "[rcx|q]" v2|q v2|q [308, 317[ "SpillInDominator"
  v126|q QWORD "[r10|q]" v32|q v32|q [402, 419[404 MustHaveRegister  "StoreAtDefinition"
  v127|q QWORD "[vstack:10|q]" v44|q v44|q [239, 262[262 ShouldHaveRegister  "OneSpillStore"
  v128|q QWORD "[vstack:2|q]" v3|q v3|q [237, 274[254 ShouldHaveRegister  "SpillInDominator"
  v129|q QWORD "[r8|q]" v3|q v3|q [274, 276[276 MustHaveRegister  "SpillInDominator"
  v130|q QWORD "[vstack:11|q]" v47|q v47|q [255, 264[264 ShouldHaveRegister  "OneSpillStore"
  v131|q QWORD "[vstack:4|q]" v1|q v1|q [249, 255[ "SpillInDominator"
  v132|q QWORD "[vstack:4|q]" v1|q v1|q [255, 304[280 ShouldHaveRegister  "SpillInDominator"
  v133|q QWORD "[rdx|q]" v1|q v1|q [308, 315[ "SpillInDominator"
  v134|q QWORD "[vstack:13|q]" v52|q v52|q [308, 321[ "StoreAtDefinition"
  v135|q QWORD "[vstack:12|q]" v54|q v54|q [308, 321[ "OneSpillStore"
  v136|q QWORD "[r11|q]" v1|q v1|q [315, 321[318 ShouldHaveRegister  "SpillInDominator"
  v137|q QWORD "[r9|q]" v2|q v2|q [317, 321[320 ShouldHaveRegister  "SpillInDominator"
  v138|q QWORD "[vstack:12|q]" v54|q v54|q [321, 350[336 ShouldHaveRegister 350 ShouldHaveRegister  "OneSpillStore"
  v139|q QWORD "[vstack:13|q]" v52|q v52|q [321, 398[374 ShouldHaveRegister  "StoreAtDefinition"
  v140|q QWORD "[vstack:4|q]" v1|q v1|q [321, 325[ "SpillInDominator"
  v141|q QWORD "[vstack:0|q]" v2|q v2|q [321, 341[334 ShouldHaveRegister  "SpillInDominator"
  v142|q QWORD "[rdx|q]" v1|q v1|q [325, 331[326 MustHaveRegister  "SpillInDominator"
  v143|q QWORD "[rcx|q]" v2|q v2|q [341, 342[342 MustHaveRegister  "SpillInDominator"
  v144|q QWORD "[r11|q]" v52|q v52|q [402, 419[406 MustHaveRegister 416 ShouldHaveRegister  "StoreAtDefinition"
  v145|q QWORD "[vstack:14|q]" v64|q v64|q [337, 360[360 ShouldHaveRegister  "OneSpillStore"
  v146|q QWORD "[vstack:4|q]" v1|q v1|q [331, 337[ "SpillInDominator"
  v147|q QWORD "[vstack:4|q]" v1|q v1|q [337, 352[352 ShouldHaveRegister  "SpillInDominator"
  v148|q QWORD "[vstack:15|q]" v67|q v67|q [353, 362[362 ShouldHaveRegister  "OneSpillStore"
  v149|q QWORD "[rbx|q]" v72|q v72|q [415, 419[418 ShouldHaveRegister  "OneSpillStore"
  v150|q QWORD "[vstack:9|q]" v32|q v32|q [419, 448[434 ShouldHaveRegister 448 ShouldHaveRegister  "StoreAtDefinition"
  v151|q QWORD "[vstack:13|q]" v52|q v52|q [419, 423[ "StoreAtDefinition"
  v152|q QWORD "[r9|q]" v0|q v0|q [411, 419[412 ShouldHaveRegister  "SpillInDominator"
  v153|q QWORD "[vstack:1|q]" v0|q v0|q [419, 456[428 ShouldHaveRegister 444 ShouldHaveRegister 456 ShouldHaveRegister  "SpillInDominator"
  v154|q QWORD "[vstack:16|q]" v72|q v72|q [419, 439[432 ShouldHaveRegister  "OneSpillStore"
  v155|q QWORD "[r11|q]" v52|q v52|q [423, 435[424 MustHaveRegister  "StoreAtDefinition"
  v156|q QWORD "[rcx|q]" v72|q v72|q [439, 440[440 MustHaveRegister  "OneSpillStore"
  v157|q QWORD "[vstack:17|q]" v82|q v82|q [435, 458[458 ShouldHaveRegister  "OneSpillStore"
  v158|q QWORD "[vstack:13|q]" v52|q v52|q [435, 450[450 ShouldHaveRegister  "StoreAtDefinition"
  v159|q QWORD "[vstack:18|q]" v85|q v85|q [451, 460[460 ShouldHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a872160 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   14  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   20  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction TESTBRANCH (x: v2|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction v6|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   30  <|@ instruction JUMP ~outgoingValues: [v5|QWORD[.], v7|QWORD[.]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   32  <|@ instruction [v8|QWORD[.], v9|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: v8|QWORD[.], y: v8|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: v9|QWORD[.], y: v9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v9|QWORD[.] v8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3] <|@ <|@
      nr   44  <|@ instruction v11|DWORD[_] = MOV input: [v9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction v12|DWORD[_] = MOV input: [v8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   48  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   52  <|@ instruction JUMP ~outgoingValues: [v13|QWORD[.], v14|QWORD[.]] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603999204951558038
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4597043951172344564
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591923954390866623
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B1" 
    successors 
    xhandlers
    flags 
    probability 4604906646667520750
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4585069451628504407
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:1|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -2  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -2  <|@ instruction vstack:0|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -2  <|@ instruction vstack:2|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [v2|QWORD[.], v5|QWORD[.]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" 
    successors "B16" "B13" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr   80  <|@ instruction [v15|QWORD[.], v16|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   82  <|@ instruction TESTBRANCH (x: v16|QWORD[.], y: v16|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B12 -> B16 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B14" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: v15|QWORD[.], y: v15|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B13 -> B15 falseDestination: B13 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v15|QWORD[.] v16|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v17|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17] <|@ <|@
      nr   92  <|@ instruction v18|DWORD[_] = MOV input: [v15|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   94  <|@ instruction v19|DWORD[_] = MOV input: [v16|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v19|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   98  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [v21|QWORD[.], v20|QWORD[.]] destination: B14 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v22|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17] <|@ <|@
      nr  110  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v2|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr  112  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr  114  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  116  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  118  <|@ instruction rdx|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  122  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = STACKMOVE (input: v97|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = STACKMOVE (input: v95|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v101|QWORD[.] = MOVE input: v94|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v91|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17] <|@ <|@
      nr  126  <|@ instruction v24|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v100|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  128  <|@ instruction v25|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  130  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rdx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = MOVE input: v102|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  136  <|@ instruction rcx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction r8|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[.] = MOVE input: v24|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = STACKMOVE (input: v107|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v24|QWORD[.] 
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17] <|@ <|@
      nr  142  <|@ instruction v27|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = MOVE input: v101|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction v28|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  146  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rdx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rcx|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v111|QWORD[.] = MOVE input: v104|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction r8|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v110|QWORD[.] = MOVE input: v27|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  156  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v24|QWORD[.] v27|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17] <|@ <|@
      nr  158  <|@ instruction v30|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rdx|QWORD[.] = MOVE input: v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rcx|QWORD[.] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction r8|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17] <|@ <|@
      nr  170  <|@ instruction v31|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [v31|QWORD[.]] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" "B16" 
    successors "B18" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  174  <|@ instruction [v32|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] Object[null] v3|QWORD[.] 
>@ <|@ instruction v33|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD state [bci:20] <|@ <|@
      nr  178  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [v3|QWORD[.], v34|QWORD[.]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B22" "B19" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  182  <|@ instruction [v35|QWORD[.], v36|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  184  <|@ instruction TESTBRANCH (x: v36|QWORD[.], y: v36|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B18 -> B22 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction TESTBRANCH (x: v35|QWORD[.], y: v35|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B19 -> B21 falseDestination: B19 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v35|QWORD[.] v36|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v37|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27] <|@ <|@
      nr  194  <|@ instruction v38|DWORD[_] = MOV input: [v35|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  196  <|@ instruction v39|DWORD[_] = MOV input: [v36|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  198  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  200  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v38|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [v41|QWORD[.], v40|QWORD[.]] destination: B20 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v33|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27] <|@ <|@
      nr  212  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:14, 3, 27] <|@ <|@
      nr  214  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  216  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v117|QWORD[.] = MOVE input: v105|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  218  <|@ instruction rdx|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = MOVE input: v113|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction rcx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD[.] = MOVE input: v112|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  222  <|@ instruction r8|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = STACKMOVE (input: v114|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = STACKMOVE (input: v119|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = STACKMOVE (input: v115|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v121|QWORD[.] = MOVE input: v117|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  224  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27] <|@ <|@
      nr  226  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.] = MOVE input: v116|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  228  <|@ instruction v45|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  232  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rdx|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE input: v123|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  238  <|@ instruction r8|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  240  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v44|QWORD[.] 
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27] <|@ <|@
      nr  242  <|@ instruction v47|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE input: v121|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  244  <|@ instruction v48|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  246  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  248  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[.] = MOVE input: v124|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction rdx|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction rcx|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v132|QWORD[.] = STACKMOVE (input: v131|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v130|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v44|QWORD[.] v47|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27] <|@ <|@
      nr  258  <|@ instruction v50|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rdx|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rcx|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction r8|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27] <|@ <|@
      nr  270  <|@ instruction v51|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  274  <|@ instruction [v52|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  276  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] Object[null] 
>@ <|@ instruction v53|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD state [bci:30] <|@ <|@
      nr  278  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v53|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [v1|QWORD[.], v54|QWORD[.]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" 
    successors "B28" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  282  <|@ instruction [v55|QWORD[.], v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  284  <|@ instruction TESTBRANCH (x: v56|QWORD[.], y: v56|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B24 -> B28 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction TESTBRANCH (x: v55|QWORD[.], y: v55|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v55|QWORD[.] v56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: v57|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37] <|@ <|@
      nr  294  <|@ instruction v58|DWORD[_] = MOV input: [v55|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  296  <|@ instruction v59|DWORD[_] = MOV input: [v56|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  298  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  300  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [v61|QWORD[.], v60|QWORD[.]] destination: B26 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [v2|QWORD[.]] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B29" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction v62|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37] <|@ <|@
      nr  312  <|@ instruction v63|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v133|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v125|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  318  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction r8|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v139|QWORD[.] = STACKMOVE (input: v134|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.] = STACKMOVE (input: v135|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|QWORD[.] = MOVE input: v137|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v140|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37] <|@ <|@
      nr  324  <|@ instruction v64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v142|QWORD[.] = MOVE input: v140|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  326  <|@ instruction v65|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  328  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v146|QWORD[.] = MOVE input: v142|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  332  <|@ instruction rdx|QWORD[.] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction r8|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v145|QWORD[.] = MOVE input: v64|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v147|QWORD[.] = STACKMOVE (input: v146|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v64|QWORD[.] 
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37] <|@ <|@
      nr  340  <|@ instruction v67|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v143|QWORD[.] = MOVE input: v141|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  342  <|@ instruction v68|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  344  <|@ instruction v69|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rdx|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction r8|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v148|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v64|QWORD[.] v67|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37] <|@ <|@
      nr  356  <|@ instruction v70|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdx|QWORD[.] = MOVE input: v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction rcx|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction r8|QWORD[.] = MOVE input: v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37] <|@ <|@
      nr  368  <|@ instruction v71|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~outgoingValues: [v71|QWORD[.]] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  372  <|@ instruction [v72|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [v52|QWORD[.], v32|QWORD[.]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B32" 
    successors "B34" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  376  <|@ instruction [v73|QWORD[.], v74|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  378  <|@ instruction TESTBRANCH (x: v74|QWORD[.], y: v74|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B30 -> B34 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B32" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction TESTBRANCH (x: v73|QWORD[.], y: v73|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B31 -> B33 falseDestination: B31 -> B32 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v73|QWORD[.] v74|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: v75|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40] <|@ <|@
      nr  388  <|@ instruction v76|DWORD[_] = MOV input: [v73|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  390  <|@ instruction v77|DWORD[_] = MOV input: [v74|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  392  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  394  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [v79|QWORD[.], v78|QWORD[.]] destination: B32 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [v72|QWORD[.]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction v80|DWORD[_] = MOV input: [v32|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40] <|@ <|@
      nr  406  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v52|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr  408  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v72|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr  410  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v152|QWORD[.] = MOVE input: v103|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction rdx|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  416  <|@ instruction rcx|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction r8|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE input: v126|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v154|QWORD[.] = MOVE input: v149|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v153|QWORD[.] = MOVE input: v152|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v151|QWORD[.] = MOVE input: v144|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40] <|@ <|@
      nr  422  <|@ instruction v82|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[.] = MOVE input: v151|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  424  <|@ instruction v83|DWORD[_] = MOV input: [v52|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  426  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v83|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  428  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction rdx|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction rcx|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction r8|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v158|QWORD[.] = MOVE input: v155|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  436  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v82|QWORD[.] 
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40] <|@ <|@
      nr  438  <|@ instruction v85|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE input: v154|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  440  <|@ instruction v86|DWORD[_] = MOV input: [v72|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  442  <|@ instruction v87|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  444  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction rdx|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction rcx|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction r8|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v159|QWORD[.] = MOVE input: v85|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v82|QWORD[.] v85|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40] <|@ <|@
      nr  454  <|@ instruction v88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rdx|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rcx|QWORD[.] = MOVE input: v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction r8|QWORD[.] = MOVE input: v88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40] <|@ <|@
      nr  466  <|@ instruction v89|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [v89|QWORD[.]] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" "B34" 
    successors 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  470  <|@ instruction [v90|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  472  <|@ instruction rax|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_2       
     2: aload_1       
     3: invokevirtual #8          // isShorterThan:(List$Element, List$Element)boolean
     6: ifeq          44
     9: aload_0       
    10: aload_0       
    11: aload_1       
    12: invokevirtual #7          // List$Element.getNext:()List$Element
    15: aload_2       
    16: aload_3       
    17: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    20: aload_0       
    21: aload_2       
    22: invokevirtual #7          // List$Element.getNext:()List$Element
    25: aload_3       
    26: aload_1       
    27: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    30: aload_0       
    31: aload_3       
    32: invokevirtual #7          // List$Element.getNext:()List$Element
    35: aload_1       
    36: aload_2       
    37: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    40: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    43: areturn       
    44: aload_3       
    45: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v3|q [0, 1[[68, 70[[124, 126[[140, 142[[156, 158[[168, 170[[224, 226[[240, 242[[256, 258[[268, 270[[322, 324[[338, 340[[354, 356[[366, 368[[420, 422[[436, 438[[452, 454[[464, 466[[472, 474[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v2|q [0, 10[[120, 125[[136, 141[[152, 157[[164, 169[[220, 225[[236, 241[[252, 257[[264, 269[[318, 323[[334, 339[[350, 355[[362, 367[[416, 421[[432, 437[[448, 453[[460, 465[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v23|q [0, 8[[118, 125[[134, 141[[150, 157[[162, 169[[218, 225[[234, 241[[250, 257[[262, 269[[316, 323[[332, 339[[348, 355[[360, 367[[414, 421[[430, 437[[446, 453[[458, 465[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v0|q [0, 6[[116, 125[[132, 141[[148, 157[[160, 169[[216, 225[[232, 241[[248, 257[[260, 269[[314, 323[[330, 339[[346, 355[[358, 367[[412, 421[[428, 437[[444, 453[[456, 465[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- v3|q [0, 12[[122, 125[[138, 141[[154, 157[[166, 169[[222, 225[[238, 241[[254, 257[[266, 269[[320, 323[[336, 339[[352, 355[[364, 367[[418, 421[[434, 437[[450, 453[[462, 465[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[124, 125[[140, 141[[156, 157[[168, 169[[224, 225[[240, 241[[256, 257[[268, 269[[322, 323[[338, 339[[354, 355[[366, 367[[420, 421[[436, 437[[452, 453[[464, 465[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [6, 54[[58, 62[[72, 115[6 MustHaveRegister  "SpillInDominator"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [8, 54[[58, 62[[72, 106[8 MustHaveRegister 14 MustHaveRegister 18 MustHaveRegister  "SpillInDominator"
  v2|q QWORD "[rcx|q]" v2|q rcx|- [10, 54[[58, 62[[72, 119[10 MustHaveRegister 22 MustHaveRegister 26 MustHaveRegister 78 ShouldHaveRegister 110 MustHaveRegister  "SpillInDominator"
  v3|q QWORD "[r8|q]" v3|q r8|- [12, 68[[72, 121[12 MustHaveRegister 68 ShouldHaveRegister 104 ShouldHaveRegister 112 MustHaveRegister  "SpillInDominator"
  v4|d DWORD "[r10|d]" v4|d -1 [18, 54[[58, 62[[72, 102[[106, 108[18 MustHaveRegister 20 MustHaveRegister 108 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r11|q]" v5|q v4|d [20, 54[[58, 62[[72, 102[20 MustHaveRegister 30 ShouldHaveRegister 78 ShouldHaveRegister  "OneSpillStore"
  v6|d DWORD "[rax|d]" v6|d -1 [26, 28[26 MustHaveRegister 28 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q v6|d [28, 31[28 MustHaveRegister 30 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rax|q]" v8|q v13|q [32, 46[34 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[r9|q]" v9|q v14|q [32, 44[38 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rbx|q]" v10|q -1 [42, 43[42 MustHaveRegister  "NoDefinitionFound"
  v11|d DWORD "[r9|d]" v11|d -1 [44, 50[44 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[rax|d]" v12|d -1 [46, 48[46 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[rax|q]" v13|q v12|d [48, 53[48 MustHaveRegister 52 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[r9|q]" v14|q v11|d [50, 53[50 MustHaveRegister 52 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[r9|q]" v15|q v21|q [80, 92[86 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[rbx|q]" v16|q v20|q [80, 94[82 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rdi|q]" v17|q -1 [90, 91[90 MustHaveRegister  "NoDefinitionFound"
  v18|d DWORD "[r9|d]" v18|d -1 [92, 98[92 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[rbx|d]" v19|d -1 [94, 96[94 MustHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[rbx|q]" v20|q v19|d [96, 101[96 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[r9|q]" v21|q v18|d [98, 101[98 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[r10|d]" v22|d -1 [108, 114[108 MustHaveRegister 114 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[r10|q]" v23|q v22|d [114, 118[114 MustHaveRegister 118 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rax|q]" v24|q rax|q [126, 139[126 MustHaveRegister  "OneSpillStore"
  v25|d DWORD "[rsi|d]" v25|d -1 [128, 130[128 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rdx|q]" v26|q v25|d [130, 134[130 MustHaveRegister 134 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rax|q]" v27|q rax|q [142, 155[142 MustHaveRegister  "OneSpillStore"
  v28|d DWORD "[rsi|d]" v28|d -1 [144, 146[144 MustHaveRegister 146 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rdx|q]" v29|q v28|d [146, 150[146 MustHaveRegister 150 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[rax|q]" v30|q rax|q [158, 166[158 MustHaveRegister 166 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[rax|q]" v31|q rax|q [170, 173[170 MustHaveRegister 172 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[vstack:9|q]" v32|q v31|q [174, 208[ "StoreAtDefinition"
  v33|d DWORD "[rsi|d]" v33|d -1 [176, 204[[208, 210[176 MustHaveRegister 178 MustHaveRegister 210 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[r10|q]" v34|q v33|d [178, 204[178 MustHaveRegister 180 ShouldHaveRegister  "OneSpillStore"
  v35|q QWORD "[rdx|q]" v35|q v41|q [182, 194[188 MustHaveRegister 194 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[r8|q]" v36|q v40|q [182, 196[184 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[r11|q]" v37|q -1 [192, 193[192 MustHaveRegister  "NoDefinitionFound"
  v38|d DWORD "[rdx|d]" v38|d -1 [194, 200[194 MustHaveRegister 200 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[r8|d]" v39|d -1 [196, 198[196 MustHaveRegister 198 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[r8|q]" v40|q v39|d [198, 203[198 MustHaveRegister 202 ShouldHaveRegister  "NoSpillStore"
  v41|q QWORD "[rdx|q]" v41|q v38|d [200, 203[200 MustHaveRegister 202 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[rsi|d]" v42|d -1 [210, 214[210 MustHaveRegister 214 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[r11|q]" v43|q v42|d [214, 218[214 MustHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rax|q]" v44|q rax|q [226, 239[226 MustHaveRegister  "OneSpillStore"
  v45|d DWORD "[rsi|d]" v45|d -1 [228, 230[228 MustHaveRegister 230 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[rdx|q]" v46|q v45|d [230, 234[230 MustHaveRegister 234 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[rax|q]" v47|q rax|q [242, 255[242 MustHaveRegister  "OneSpillStore"
  v48|d DWORD "[rsi|d]" v48|d -1 [244, 246[244 MustHaveRegister 246 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[rcx|q]" v49|q v48|d [246, 250[246 MustHaveRegister 250 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[rax|q]" v50|q rax|q [258, 266[258 MustHaveRegister 266 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[rax|q]" v51|q rax|q [270, 273[270 MustHaveRegister 272 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[vstack:13|q]" v52|q v51|q [274, 308[ "StoreAtDefinition"
  v53|d DWORD "[rsi|d]" v53|d -1 [276, 304[[308, 310[276 MustHaveRegister 278 MustHaveRegister 310 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[r10|q]" v54|q v53|d [278, 304[278 MustHaveRegister 280 ShouldHaveRegister  "OneSpillStore"
  v55|q QWORD "[rdx|q]" v55|q v61|q [282, 294[288 MustHaveRegister 294 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[rcx|q]" v56|q v60|q [282, 296[284 MustHaveRegister 296 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[r8|q]" v57|q -1 [292, 293[292 MustHaveRegister  "NoDefinitionFound"
  v58|d DWORD "[rdx|d]" v58|d -1 [294, 300[294 MustHaveRegister 300 MustHaveRegister  "NoSpillStore"
  v59|d DWORD "[rcx|d]" v59|d -1 [296, 298[296 MustHaveRegister 298 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rcx|q]" v60|q v59|d [298, 303[298 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[rdx|q]" v61|q v58|d [300, 303[300 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v62|d DWORD "[rsi|d]" v62|d -1 [310, 312[310 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[r8|q]" v63|q v62|d [312, 316[312 MustHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[rax|q]" v64|q rax|q [324, 337[324 MustHaveRegister  "OneSpillStore"
  v65|d DWORD "[rsi|d]" v65|d -1 [326, 328[326 MustHaveRegister 328 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[rcx|q]" v66|q v65|d [328, 332[328 MustHaveRegister 332 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[rax|q]" v67|q rax|q [340, 353[340 MustHaveRegister  "OneSpillStore"
  v68|d DWORD "[rsi|d]" v68|d -1 [342, 344[342 MustHaveRegister 344 MustHaveRegister  "NoSpillStore"
  v69|q QWORD "[rdx|q]" v69|q v68|d [344, 348[344 MustHaveRegister 348 ShouldHaveRegister  "NoSpillStore"
  v70|q QWORD "[rax|q]" v70|q rax|q [356, 364[356 MustHaveRegister 364 ShouldHaveRegister  "NoSpillStore"
  v71|q QWORD "[rax|q]" v71|q rax|q [368, 371[368 MustHaveRegister 370 ShouldHaveRegister  "NoSpillStore"
  v72|q QWORD "[rcx|q]" v72|q v2|q [372, 401[[402, 415[400 ShouldHaveRegister 408 MustHaveRegister  "OneSpillStore"
  v73|q QWORD "[rsi|q]" v73|q v79|q [376, 388[382 MustHaveRegister 388 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[rdx|q]" v74|q v78|q [376, 390[378 MustHaveRegister 390 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[r8|q]" v75|q -1 [386, 387[386 MustHaveRegister  "NoDefinitionFound"
  v76|d DWORD "[rsi|d]" v76|d -1 [388, 394[388 MustHaveRegister 394 MustHaveRegister  "NoSpillStore"
  v77|d DWORD "[rdx|d]" v77|d -1 [390, 392[390 MustHaveRegister 392 MustHaveRegister  "NoSpillStore"
  v78|q QWORD "[rdx|q]" v78|q v77|d [392, 397[392 MustHaveRegister 396 ShouldHaveRegister  "NoSpillStore"
  v79|q QWORD "[rsi|q]" v79|q v76|d [394, 397[394 MustHaveRegister 396 ShouldHaveRegister  "NoSpillStore"
  v80|d DWORD "[rdx|d]" v80|d -1 [404, 410[404 MustHaveRegister 410 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[rdx|q]" v81|q v80|d [410, 414[410 MustHaveRegister 414 ShouldHaveRegister  "NoSpillStore"
  v82|q QWORD "[rax|q]" v82|q rax|q [422, 435[422 MustHaveRegister  "OneSpillStore"
  v83|d DWORD "[rsi|d]" v83|d -1 [424, 426[424 MustHaveRegister 426 MustHaveRegister  "NoSpillStore"
  v84|q QWORD "[rdx|q]" v84|q v83|d [426, 430[426 MustHaveRegister 430 ShouldHaveRegister  "NoSpillStore"
  v85|q QWORD "[rax|q]" v85|q rax|q [438, 451[438 MustHaveRegister  "OneSpillStore"
  v86|d DWORD "[rsi|d]" v86|d -1 [440, 442[440 MustHaveRegister 442 MustHaveRegister  "NoSpillStore"
  v87|q QWORD "[rdx|q]" v87|q v86|d [442, 446[442 MustHaveRegister 446 ShouldHaveRegister  "NoSpillStore"
  v88|q QWORD "[rax|q]" v88|q rax|q [454, 462[454 MustHaveRegister 462 ShouldHaveRegister  "NoSpillStore"
  v89|q QWORD "[rax|q]" v89|q rax|q [466, 469[466 MustHaveRegister 468 ShouldHaveRegister  "NoSpillStore"
  v90|q QWORD "[rcx|q]" v90|q v72|q [470, 472[472 ShouldHaveRegister  "NoSpillStore"
  v91|q QWORD "[r9|q]" v0|q v0|q [115, 123[116 ShouldHaveRegister  "SpillInDominator"
  v92|q QWORD "[vstack:4|q]" v1|q v1|q [106, 117[ "SpillInDominator"
  v93|q QWORD "[r10|q]" v2|q v2|q [119, 123[120 ShouldHaveRegister  "SpillInDominator"
  v94|q QWORD "[rdi|q]" v3|q v3|q [121, 123[122 ShouldHaveRegister  "SpillInDominator"
  v95|q QWORD "[vstack:3|q]" v5|q v5|q [106, 123[ "OneSpillStore"
  v96|q QWORD "[vstack:3|q]" v5|q v5|q [123, 152[138 ShouldHaveRegister 152 ShouldHaveRegister  "OneSpillStore"
  v97|q QWORD "[vstack:4|q]" v1|q v1|q [117, 123[ "SpillInDominator"
  v98|q QWORD "[vstack:1|q]" v0|q v0|q [123, 398[132 ShouldHaveRegister 148 ShouldHaveRegister 160 ShouldHaveRegister 216 ShouldHaveRegister 232 ShouldHaveRegister 248 ShouldHaveRegister 260 ShouldHaveRegister 314 ShouldHaveRegister 330 ShouldHaveRegister 346 ShouldHaveRegister 358 ShouldHaveRegister  "SpillInDominator"
  v99|q QWORD "[vstack:4|q]" v1|q v1|q [123, 208[206 ShouldHaveRegister  "SpillInDominator"
  v100|q QWORD "[vstack:0|q]" v2|q v2|q [123, 127[ "SpillInDominator"
  v101|q QWORD "[vstack:2|q]" v3|q v3|q [123, 143[136 ShouldHaveRegister  "SpillInDominator"
  v102|q QWORD "[rcx|q]" v2|q v2|q [127, 135[128 MustHaveRegister  "SpillInDominator"
  v103|q QWORD "[rsi|q]" v0|q v0|q [402, 411[ "SpillInDominator"
  v104|q QWORD "[r8|q]" v3|q v3|q [143, 153[144 MustHaveRegister  "SpillInDominator"
  v105|q QWORD "[rdx|q]" v1|q v1|q [208, 217[ "SpillInDominator"
  v106|q QWORD "[vstack:6|q]" v24|q v24|q [139, 162[162 ShouldHaveRegister  "OneSpillStore"
  v107|q QWORD "[vstack:0|q]" v2|q v2|q [135, 139[ "SpillInDominator"
  v108|q QWORD "[vstack:0|q]" v2|q v2|q [139, 174[154 ShouldHaveRegister  "SpillInDominator"
  v109|q QWORD "[rcx|q]" v2|q v2|q [174, 208[176 MustHaveRegister  "SpillInDominator"
  v110|q QWORD "[vstack:7|q]" v27|q v27|q [155, 164[164 ShouldHaveRegister  "OneSpillStore"
  v111|q QWORD "[vstack:2|q]" v3|q v3|q [153, 208[180 ShouldHaveRegister  "SpillInDominator"
  v112|q QWORD "[r8|q]" v3|q v3|q [208, 221[212 MustHaveRegister 220 ShouldHaveRegister  "SpillInDominator"
  v113|q QWORD "[vstack:0|q]" v2|q v2|q [208, 219[ "SpillInDominator"
  v114|q QWORD "[vstack:9|q]" v32|q v32|q [208, 223[ "StoreAtDefinition"
  v115|q QWORD "[vstack:8|q]" v34|q v34|q [208, 223[ "OneSpillStore"
  v116|q QWORD "[vstack:2|q]" v3|q v3|q [221, 227[ "SpillInDominator"
  v117|q QWORD "[r9|q]" v1|q v1|q [217, 223[222 ShouldHaveRegister  "SpillInDominator"
  v118|q QWORD "[vstack:8|q]" v34|q v34|q [223, 252[238 ShouldHaveRegister 252 ShouldHaveRegister  "OneSpillStore"
  v119|q QWORD "[vstack:0|q]" v2|q v2|q [219, 223[ "SpillInDominator"
  v120|q QWORD "[vstack:9|q]" v32|q v32|q [223, 398[374 ShouldHaveRegister  "StoreAtDefinition"
  v121|q QWORD "[vstack:4|q]" v1|q v1|q [223, 243[236 ShouldHaveRegister  "SpillInDominator"
  v122|q QWORD "[vstack:0|q]" v2|q v2|q [223, 307[306 ShouldHaveRegister  "SpillInDominator"
  v123|q QWORD "[r8|q]" v3|q v3|q [227, 237[228 MustHaveRegister  "SpillInDominator"
  v124|q QWORD "[rdx|q]" v1|q v1|q [243, 249[244 MustHaveRegister  "SpillInDominator"
  v125|q QWORD "[rcx|q]" v2|q v2|q [308, 317[ "SpillInDominator"
  v126|q QWORD "[r10|q]" v32|q v32|q [402, 419[404 MustHaveRegister  "StoreAtDefinition"
  v127|q QWORD "[vstack:10|q]" v44|q v44|q [239, 262[262 ShouldHaveRegister  "OneSpillStore"
  v128|q QWORD "[vstack:2|q]" v3|q v3|q [237, 274[254 ShouldHaveRegister  "SpillInDominator"
  v129|q QWORD "[r8|q]" v3|q v3|q [274, 276[276 MustHaveRegister  "SpillInDominator"
  v130|q QWORD "[vstack:11|q]" v47|q v47|q [255, 264[264 ShouldHaveRegister  "OneSpillStore"
  v131|q QWORD "[vstack:4|q]" v1|q v1|q [249, 255[ "SpillInDominator"
  v132|q QWORD "[vstack:4|q]" v1|q v1|q [255, 304[280 ShouldHaveRegister  "SpillInDominator"
  v133|q QWORD "[rdx|q]" v1|q v1|q [308, 315[ "SpillInDominator"
  v134|q QWORD "[vstack:13|q]" v52|q v52|q [308, 321[ "StoreAtDefinition"
  v135|q QWORD "[vstack:12|q]" v54|q v54|q [308, 321[ "OneSpillStore"
  v136|q QWORD "[r11|q]" v1|q v1|q [315, 321[318 ShouldHaveRegister  "SpillInDominator"
  v137|q QWORD "[r9|q]" v2|q v2|q [317, 321[320 ShouldHaveRegister  "SpillInDominator"
  v138|q QWORD "[vstack:12|q]" v54|q v54|q [321, 350[336 ShouldHaveRegister 350 ShouldHaveRegister  "OneSpillStore"
  v139|q QWORD "[vstack:13|q]" v52|q v52|q [321, 398[374 ShouldHaveRegister  "StoreAtDefinition"
  v140|q QWORD "[vstack:4|q]" v1|q v1|q [321, 325[ "SpillInDominator"
  v141|q QWORD "[vstack:0|q]" v2|q v2|q [321, 341[334 ShouldHaveRegister  "SpillInDominator"
  v142|q QWORD "[rdx|q]" v1|q v1|q [325, 331[326 MustHaveRegister  "SpillInDominator"
  v143|q QWORD "[rcx|q]" v2|q v2|q [341, 342[342 MustHaveRegister  "SpillInDominator"
  v144|q QWORD "[r11|q]" v52|q v52|q [402, 419[406 MustHaveRegister 416 ShouldHaveRegister  "StoreAtDefinition"
  v145|q QWORD "[vstack:14|q]" v64|q v64|q [337, 360[360 ShouldHaveRegister  "OneSpillStore"
  v146|q QWORD "[vstack:4|q]" v1|q v1|q [331, 337[ "SpillInDominator"
  v147|q QWORD "[vstack:4|q]" v1|q v1|q [337, 352[352 ShouldHaveRegister  "SpillInDominator"
  v148|q QWORD "[vstack:15|q]" v67|q v67|q [353, 362[362 ShouldHaveRegister  "OneSpillStore"
  v149|q QWORD "[rbx|q]" v72|q v72|q [415, 419[418 ShouldHaveRegister  "OneSpillStore"
  v150|q QWORD "[vstack:9|q]" v32|q v32|q [419, 448[434 ShouldHaveRegister 448 ShouldHaveRegister  "StoreAtDefinition"
  v151|q QWORD "[vstack:13|q]" v52|q v52|q [419, 423[ "StoreAtDefinition"
  v152|q QWORD "[r9|q]" v0|q v0|q [411, 419[412 ShouldHaveRegister  "SpillInDominator"
  v153|q QWORD "[vstack:1|q]" v0|q v0|q [419, 456[428 ShouldHaveRegister 444 ShouldHaveRegister 456 ShouldHaveRegister  "SpillInDominator"
  v154|q QWORD "[vstack:16|q]" v72|q v72|q [419, 439[432 ShouldHaveRegister  "OneSpillStore"
  v155|q QWORD "[r11|q]" v52|q v52|q [423, 435[424 MustHaveRegister  "StoreAtDefinition"
  v156|q QWORD "[rcx|q]" v72|q v72|q [439, 440[440 MustHaveRegister  "OneSpillStore"
  v157|q QWORD "[vstack:17|q]" v82|q v82|q [435, 458[458 ShouldHaveRegister  "OneSpillStore"
  v158|q QWORD "[vstack:13|q]" v52|q v52|q [435, 450[450 ShouldHaveRegister  "StoreAtDefinition"
  v159|q QWORD "[vstack:18|q]" v85|q v85|q [451, 460[460 ShouldHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a872160 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   14  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   20  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction TESTBRANCH (x: v2|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction v6|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   30  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   32  <|@ instruction [v8|QWORD[.], v9|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: v8|QWORD[.], y: v8|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: v9|QWORD[.], y: v9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v9|QWORD[.] v8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3] <|@ <|@
      nr   44  <|@ instruction v11|DWORD[_] = MOV input: [v9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction v12|DWORD[_] = MOV input: [v8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   48  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   52  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603999204951558038
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4597043951172344564
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591923954390866623
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B1" 
    successors 
    xhandlers
    flags 
    probability 4604906646667520750
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4585069451628504407
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:1|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -2  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -2  <|@ instruction vstack:0|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -2  <|@ instruction vstack:2|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" 
    successors "B16" "B13" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr   80  <|@ instruction [v15|QWORD[.], v16|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   82  <|@ instruction TESTBRANCH (x: v16|QWORD[.], y: v16|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B12 -> B16 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B14" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: v15|QWORD[.], y: v15|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B13 -> B15 falseDestination: B13 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v15|QWORD[.] v16|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v17|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17] <|@ <|@
      nr   92  <|@ instruction v18|DWORD[_] = MOV input: [v15|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   94  <|@ instruction v19|DWORD[_] = MOV input: [v16|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v19|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   98  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v111|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v22|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17] <|@ <|@
      nr  110  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v2|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr  112  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr  114  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  116  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  118  <|@ instruction rdx|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  122  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = STACKMOVE (input: v97|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = STACKMOVE (input: v95|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v101|QWORD[.] = MOVE input: v94|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = MOVE input: v91|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17] <|@ <|@
      nr  126  <|@ instruction v24|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v100|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  128  <|@ instruction v25|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  130  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rdx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = MOVE input: v102|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  136  <|@ instruction rcx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction r8|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[.] = MOVE input: v24|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v108|QWORD[.] = STACKMOVE (input: v107|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v24|QWORD[.] 
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17] <|@ <|@
      nr  142  <|@ instruction v27|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = MOVE input: v101|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction v28|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  146  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rdx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rcx|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v111|QWORD[.] = MOVE input: v104|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction r8|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v110|QWORD[.] = MOVE input: v27|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  156  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v24|QWORD[.] v27|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17] <|@ <|@
      nr  158  <|@ instruction v30|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rdx|QWORD[.] = MOVE input: v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rcx|QWORD[.] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction r8|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17] <|@ <|@
      nr  170  <|@ instruction v31|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = MOVE input: v108|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" "B16" 
    successors "B18" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  174  <|@ instruction [v32|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] Object[null] v3|QWORD[.] 
>@ <|@ instruction v33|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD state [bci:20] <|@ <|@
      nr  178  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: v111|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B22" "B19" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  182  <|@ instruction [v35|QWORD[.], v36|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  184  <|@ instruction TESTBRANCH (x: v36|QWORD[.], y: v36|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B18 -> B22 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction TESTBRANCH (x: v35|QWORD[.], y: v35|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B19 -> B21 falseDestination: B19 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v35|QWORD[.] v36|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v37|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27] <|@ <|@
      nr  194  <|@ instruction v38|DWORD[_] = MOV input: [v35|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  196  <|@ instruction v39|DWORD[_] = MOV input: [v36|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  198  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  200  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v38|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = STACKMOVE (input: v99|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = MOVE input: v111|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = MOVE input: v109|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  206  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v115|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = MOVE input: v111|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v113|QWORD[.] = MOVE input: v109|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v33|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27] <|@ <|@
      nr  212  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:14, 3, 27] <|@ <|@
      nr  214  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  216  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v117|QWORD[.] = MOVE input: v105|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  218  <|@ instruction rdx|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v119|QWORD[.] = MOVE input: v113|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction rcx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v116|QWORD[.] = MOVE input: v112|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  222  <|@ instruction r8|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = STACKMOVE (input: v114|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = STACKMOVE (input: v119|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = STACKMOVE (input: v115|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v121|QWORD[.] = MOVE input: v117|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  224  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27] <|@ <|@
      nr  226  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.] = MOVE input: v116|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  228  <|@ instruction v45|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  232  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rdx|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE input: v123|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  238  <|@ instruction r8|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  240  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v44|QWORD[.] 
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27] <|@ <|@
      nr  242  <|@ instruction v47|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE input: v121|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  244  <|@ instruction v48|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  246  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  248  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[.] = MOVE input: v124|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction rdx|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction rcx|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v132|QWORD[.] = STACKMOVE (input: v131|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v130|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v44|QWORD[.] v47|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27] <|@ <|@
      nr  258  <|@ instruction v50|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rdx|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rcx|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction r8|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27] <|@ <|@
      nr  270  <|@ instruction v51|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = MOVE input: v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  274  <|@ instruction [v52|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  276  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] Object[null] 
>@ <|@ instruction v53|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD state [bci:30] <|@ <|@
      nr  278  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v53|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE input: v132|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" 
    successors "B28" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  282  <|@ instruction [v55|QWORD[.], v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  284  <|@ instruction TESTBRANCH (x: v56|QWORD[.], y: v56|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B24 -> B28 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction TESTBRANCH (x: v55|QWORD[.], y: v55|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v55|QWORD[.] v56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: v57|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37] <|@ <|@
      nr  294  <|@ instruction v58|DWORD[_] = MOV input: [v55|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  296  <|@ instruction v59|DWORD[_] = MOV input: [v56|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  298  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  300  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B29" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v133|QWORD[.] = MOVE input: v132|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  310  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction v62|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37] <|@ <|@
      nr  312  <|@ instruction v63|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v133|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v125|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  318  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction r8|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v139|QWORD[.] = STACKMOVE (input: v134|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.] = STACKMOVE (input: v135|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|QWORD[.] = MOVE input: v137|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v140|QWORD[.] = MOVE input: v136|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37] <|@ <|@
      nr  324  <|@ instruction v64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v142|QWORD[.] = MOVE input: v140|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  326  <|@ instruction v65|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  328  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v146|QWORD[.] = MOVE input: v142|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  332  <|@ instruction rdx|QWORD[.] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction r8|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v145|QWORD[.] = MOVE input: v64|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v147|QWORD[.] = STACKMOVE (input: v146|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v64|QWORD[.] 
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37] <|@ <|@
      nr  340  <|@ instruction v67|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v143|QWORD[.] = MOVE input: v141|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  342  <|@ instruction v68|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  344  <|@ instruction v69|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rdx|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction r8|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v148|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v64|QWORD[.] v67|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37] <|@ <|@
      nr  356  <|@ instruction v70|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdx|QWORD[.] = MOVE input: v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction rcx|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction r8|QWORD[.] = MOVE input: v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37] <|@ <|@
      nr  368  <|@ instruction v71|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = MOVE input: v71|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  370  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  372  <|@ instruction [v72|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v120|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = MOVE input: v139|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B32" 
    successors "B34" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  376  <|@ instruction [v73|QWORD[.], v74|QWORD[.]] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  378  <|@ instruction TESTBRANCH (x: v74|QWORD[.], y: v74|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B30 -> B34 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B32" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction TESTBRANCH (x: v73|QWORD[.], y: v73|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B31 -> B33 falseDestination: B31 -> B32 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v73|QWORD[.] v74|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: v75|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40] <|@ <|@
      nr  388  <|@ instruction v76|DWORD[_] = MOV input: [v73|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  390  <|@ instruction v77|DWORD[_] = MOV input: [v74|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  392  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  394  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[.] = MOVE input: v139|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = MOVE input: v120|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  404  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction v80|DWORD[_] = MOV input: [v32|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40] <|@ <|@
      nr  406  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v52|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr  408  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v72|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr  410  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v152|QWORD[.] = MOVE input: v103|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction rdx|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  416  <|@ instruction rcx|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction r8|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = MOVE input: v126|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v154|QWORD[.] = MOVE input: v149|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v153|QWORD[.] = MOVE input: v152|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v151|QWORD[.] = MOVE input: v144|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40] <|@ <|@
      nr  422  <|@ instruction v82|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[.] = MOVE input: v151|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  424  <|@ instruction v83|DWORD[_] = MOV input: [v52|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  426  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v83|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  428  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction rdx|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction rcx|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction r8|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v158|QWORD[.] = MOVE input: v155|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  436  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v82|QWORD[.] 
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40] <|@ <|@
      nr  438  <|@ instruction v85|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE input: v154|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  440  <|@ instruction v86|DWORD[_] = MOV input: [v72|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  442  <|@ instruction v87|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  444  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction rdx|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction rcx|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction r8|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v159|QWORD[.] = MOVE input: v85|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v82|QWORD[.] v85|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40] <|@ <|@
      nr  454  <|@ instruction v88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rdx|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rcx|QWORD[.] = MOVE input: v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction r8|QWORD[.] = MOVE input: v88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40] <|@ <|@
      nr  466  <|@ instruction v89|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = MOVE input: v89|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" "B34" 
    successors 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  470  <|@ instruction [v90|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  472  <|@ instruction rax|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_2       
     2: aload_1       
     3: invokevirtual #8          // isShorterThan:(List$Element, List$Element)boolean
     6: ifeq          44
     9: aload_0       
    10: aload_0       
    11: aload_1       
    12: invokevirtual #7          // List$Element.getNext:()List$Element
    15: aload_2       
    16: aload_3       
    17: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    20: aload_0       
    21: aload_2       
    22: invokevirtual #7          // List$Element.getNext:()List$Element
    25: aload_3       
    26: aload_1       
    27: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    30: aload_0       
    31: aload_3       
    32: invokevirtual #7          // List$Element.getNext:()List$Element
    35: aload_1       
    36: aload_2       
    37: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    40: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    43: areturn       
    44: aload_3       
    45: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a872160 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   14  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction v4|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   20  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction TESTBRANCH (x: v2|QWORD[.], y: v2|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction v6|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE input: v7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   30  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: v8|QWORD[.], y: v8|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: v9|QWORD[.], y: v9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v9|QWORD[.] v8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v10|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3] <|@ <|@
      nr   44  <|@ instruction v11|DWORD[_] = MOV input: [v9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction v12|DWORD[_] = MOV input: [v8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   48  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction v14|QWORD[.] = UNCOMPRESSPOINTER (input: v11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   52  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603999204951558038
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4597043951172344564
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591923954390866623
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B1" 
    successors 
    xhandlers
    flags 
    probability 4604906646667520750
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4585069451628504407
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:1|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -2  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -2  <|@ instruction vstack:0|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -2  <|@ instruction vstack:2|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" 
    successors "B16" "B13" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   82  <|@ instruction TESTBRANCH (x: v16|QWORD[.], y: v16|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B12 -> B16 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B14" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: v15|QWORD[.], y: v15|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B13 -> B15 falseDestination: B13 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v15|QWORD[.] v16|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v17|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17] <|@ <|@
      nr   92  <|@ instruction v18|DWORD[_] = MOV input: [v15|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   94  <|@ instruction v19|DWORD[_] = MOV input: [v16|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v19|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   98  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v18|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v22|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17] <|@ <|@
      nr  110  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v2|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr  112  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr  114  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v91|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  116  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  118  <|@ instruction rdx|QWORD[.] = MOVE input: v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  122  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = STACKMOVE (input: v95|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17] <|@ <|@
      nr  126  <|@ instruction v24|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = MOVE input: v100|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  128  <|@ instruction v25|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  130  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v25|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rdx|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  136  <|@ instruction rcx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction r8|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[.] = MOVE input: v24|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v24|QWORD[.] 
locals: v0|QWORD[.] v5|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17] <|@ <|@
      nr  142  <|@ instruction v27|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = MOVE input: v101|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction v28|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  146  <|@ instruction v29|QWORD[.] = UNCOMPRESSPOINTER (input: v28|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction rdx|QWORD[.] = MOVE input: v29|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rcx|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  154  <|@ instruction r8|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v110|QWORD[.] = MOVE input: v27|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  156  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v24|QWORD[.] v27|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17] <|@ <|@
      nr  158  <|@ instruction v30|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rdx|QWORD[.] = MOVE input: v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rcx|QWORD[.] = MOVE input: v27|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction r8|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17] <|@ <|@
      nr  170  <|@ instruction v31|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = MOVE input: v31|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = MOVE input: v108|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" "B16" 
    successors "B18" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] Object[null] v3|QWORD[.] 
>@ <|@ instruction v33|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD state [bci:20] <|@ <|@
      nr  178  <|@ instruction v34|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: v111|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B22" "B19" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  184  <|@ instruction TESTBRANCH (x: v36|QWORD[.], y: v36|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B18 -> B22 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction TESTBRANCH (x: v35|QWORD[.], y: v35|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B19 -> B21 falseDestination: B19 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v35|QWORD[.] v36|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: v37|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27] <|@ <|@
      nr  194  <|@ instruction v38|DWORD[_] = MOV input: [v35|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  196  <|@ instruction v39|DWORD[_] = MOV input: [v36|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  198  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  200  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v38|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = STACKMOVE (input: v99|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = MOVE input: v111|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  206  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v115|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = MOVE input: v111|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.] = MOVE input: v99|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction v42|DWORD[_] = MOV input: [v33|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27] <|@ <|@
      nr  212  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:14, 3, 27] <|@ <|@
      nr  214  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  216  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v117|QWORD[.] = MOVE input: v105|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  218  <|@ instruction rdx|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  220  <|@ instruction rcx|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  222  <|@ instruction r8|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = STACKMOVE (input: v115|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  224  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27] <|@ <|@
      nr  226  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v123|QWORD[.] = MOVE input: v116|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  228  <|@ instruction v45|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v45|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  232  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction rdx|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  238  <|@ instruction r8|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  240  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v44|QWORD[.] 
locals: v0|QWORD[.] v34|QWORD[.] v3|QWORD[.] v1|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27] <|@ <|@
      nr  242  <|@ instruction v47|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = MOVE input: v121|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  244  <|@ instruction v48|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  246  <|@ instruction v49|QWORD[.] = UNCOMPRESSPOINTER (input: v48|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  248  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  250  <|@ instruction rdx|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction rcx|QWORD[.] = MOVE input: v34|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction r8|QWORD[.] = MOVE input: v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v130|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v44|QWORD[.] v47|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27] <|@ <|@
      nr  258  <|@ instruction v50|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rdx|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rcx|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction r8|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v32|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27] <|@ <|@
      nr  270  <|@ instruction v51|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = MOVE input: v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  276  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] Object[null] 
>@ <|@ instruction v53|DWORD[_] = MOV input: [v3|QWORD[.] + 16] size: DWORD state [bci:30] <|@ <|@
      nr  278  <|@ instruction v54|QWORD[.] = UNCOMPRESSPOINTER (input: v53|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE input: v132|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" 
    successors "B28" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  284  <|@ instruction TESTBRANCH (x: v56|QWORD[.], y: v56|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B24 -> B28 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction TESTBRANCH (x: v55|QWORD[.], y: v55|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v55|QWORD[.] v56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: v57|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37] <|@ <|@
      nr  294  <|@ instruction v58|DWORD[_] = MOV input: [v55|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  296  <|@ instruction v59|DWORD[_] = MOV input: [v56|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  298  <|@ instruction v60|QWORD[.] = UNCOMPRESSPOINTER (input: v59|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  300  <|@ instruction v61|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B29" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[.] = MOVE input: v122|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v133|QWORD[.] = MOVE input: v132|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  310  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction v62|DWORD[_] = MOV input: [v53|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37] <|@ <|@
      nr  312  <|@ instruction v63|QWORD[.] = UNCOMPRESSPOINTER (input: v62|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = MOVE input: v133|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE input: v63|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v137|QWORD[.] = MOVE input: v125|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  318  <|@ instruction rcx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction r8|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.] = STACKMOVE (input: v135|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37] <|@ <|@
      nr  324  <|@ instruction v64|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v142|QWORD[.] = MOVE input: v140|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  326  <|@ instruction v65|DWORD[_] = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  328  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v65|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  332  <|@ instruction rdx|QWORD[.] = MOVE input: v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction rcx|QWORD[.] = MOVE input: v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction r8|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v145|QWORD[.] = MOVE input: v64|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v64|QWORD[.] 
locals: v0|QWORD[.] v54|QWORD[.] v1|QWORD[.] v2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37] <|@ <|@
      nr  340  <|@ instruction v67|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v143|QWORD[.] = MOVE input: v141|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  342  <|@ instruction v68|DWORD[_] = MOV input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  344  <|@ instruction v69|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rdx|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD[.] = MOVE input: v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction r8|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v148|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v64|QWORD[.] v67|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37] <|@ <|@
      nr  356  <|@ instruction v70|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdx|QWORD[.] = MOVE input: v64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction rcx|QWORD[.] = MOVE input: v67|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction r8|QWORD[.] = MOVE input: v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37] <|@ <|@
      nr  368  <|@ instruction v71|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = MOVE input: v71|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  370  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v120|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = MOVE input: v139|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B32" 
    successors "B34" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  378  <|@ instruction TESTBRANCH (x: v74|QWORD[.], y: v74|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B30 -> B34 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B32" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction TESTBRANCH (x: v73|QWORD[.], y: v73|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B31 -> B33 falseDestination: B31 -> B32 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - v73|QWORD[.] v74|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: v75|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40] <|@ <|@
      nr  388  <|@ instruction v76|DWORD[_] = MOV input: [v73|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  390  <|@ instruction v77|DWORD[_] = MOV input: [v74|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  392  <|@ instruction v78|QWORD[.] = UNCOMPRESSPOINTER (input: v77|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  394  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[.] = MOVE input: v139|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = MOVE input: v120|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[.] = MOVE input: v98|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  404  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction v80|DWORD[_] = MOV input: [v32|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40] <|@ <|@
      nr  406  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v52|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr  408  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [v72|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr  410  <|@ instruction v81|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v152|QWORD[.] = MOVE input: v103|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction rdx|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  416  <|@ instruction rcx|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction r8|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v154|QWORD[.] = MOVE input: v149|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: v0|QWORD[.] 
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40] <|@ <|@
      nr  422  <|@ instruction v82|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v155|QWORD[.] = MOVE input: v151|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  424  <|@ instruction v83|DWORD[_] = MOV input: [v52|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  426  <|@ instruction v84|QWORD[.] = UNCOMPRESSPOINTER (input: v83|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  428  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction rdx|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction rcx|QWORD[.] = MOVE input: v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction r8|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  436  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: v0|QWORD[.] v82|QWORD[.] 
locals: v0|QWORD[.] v32|QWORD[.] v52|QWORD[.] v72|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40] <|@ <|@
      nr  438  <|@ instruction v85|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE input: v154|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  440  <|@ instruction v86|DWORD[_] = MOV input: [v72|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  442  <|@ instruction v87|QWORD[.] = UNCOMPRESSPOINTER (input: v86|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  444  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction rdx|QWORD[.] = MOVE input: v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction rcx|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction r8|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v159|QWORD[.] = MOVE input: v85|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: v0|QWORD[.] v82|QWORD[.] v85|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40] <|@ <|@
      nr  454  <|@ instruction v88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rdx|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rcx|QWORD[.] = MOVE input: v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction r8|QWORD[.] = MOVE input: v88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40] <|@ <|@
      nr  466  <|@ instruction v89|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[.] = MOVE input: v89|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" "B34" 
    successors 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  472  <|@ instruction rax|QWORD[.] = MOVE input: v90|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_2       
     2: aload_1       
     3: invokevirtual #8          // isShorterThan:(List$Element, List$Element)boolean
     6: ifeq          44
     9: aload_0       
    10: aload_0       
    11: aload_1       
    12: invokevirtual #7          // List$Element.getNext:()List$Element
    15: aload_2       
    16: aload_3       
    17: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    20: aload_0       
    21: aload_2       
    22: invokevirtual #7          // List$Element.getNext:()List$Element
    25: aload_3       
    26: aload_1       
    27: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    30: aload_0       
    31: aload_3       
    32: invokevirtual #7          // List$Element.getNext:()List$Element
    35: aload_1       
    36: aload_2       
    37: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    40: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    43: areturn       
    44: aload_3       
    45: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a872160 slotKind: QWORD <|@ <|@
      nr   14  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   20  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction rax|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   30  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: r9|QWORD[.], y: r9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - r9|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: rbx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3] <|@ <|@
      nr   44  <|@ instruction r9|DWORD[_] = MOV input: [r9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   48  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   52  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603999204951558038
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4597043951172344564
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591923954390866623
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B1" 
    successors 
    xhandlers
    flags 
    probability 4604906646667520750
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4585069451628504407
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:1|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -2  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -2  <|@ instruction vstack:0|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -2  <|@ instruction vstack:2|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" 
    successors "B16" "B13" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   82  <|@ instruction TESTBRANCH (x: rbx|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B12 -> B16 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B14" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: r9|QWORD[.], y: r9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B13 -> B15 falseDestination: B13 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - r9|QWORD[.] rbx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r11|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17] <|@ <|@
      nr   92  <|@ instruction r9|DWORD[_] = MOV input: [r9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   94  <|@ instruction rbx|DWORD[_] = MOV input: [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   98  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:9|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] vstack:3|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] vstack:4|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17] <|@ <|@
      nr  110  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] vstack:3|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] vstack:4|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rcx|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr  112  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] vstack:3|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] vstack:4|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r8|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr  114  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  116  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ instruction rcx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  122  <|@ instruction r8|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:1|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:3|QWORD[.] vstack:0|QWORD[.] vstack:2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:1|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17] <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  128  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  130  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction r8|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:1|QWORD[.] vstack:6|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:3|QWORD[.] vstack:0|QWORD[.] vstack:2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:1|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17] <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  146  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction r8|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:7|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  156  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:1|QWORD[.] vstack:6|QWORD[.] vstack:7|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:1|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17] <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:1|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17] <|@ <|@
      nr   -1  <|@ instruction vstack:9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" "B16" 
    successors "B18" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: vstack:1|QWORD[.] vstack:9|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] Object[null] vstack:2|QWORD[.] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD state [bci:20] <|@ <|@
      nr  178  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B22" "B19" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  184  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B18 -> B22 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B19 -> B21 falseDestination: B19 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:1|QWORD[.] r10|QWORD[.] vstack:2|QWORD[.] vstack:4|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:1|QWORD[.] vstack:9|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] rcx|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r11|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27] <|@ <|@
      nr  194  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  196  <|@ instruction r8|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  198  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  200  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:13|QWORD[.] = STACKMOVE (input: vstack:4|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  206  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:1|QWORD[.] vstack:8|QWORD[.] r8|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:1|QWORD[.] vstack:9|QWORD[.] 
locals: vstack:1|QWORD[.] rdx|QWORD[.] vstack:0|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27] <|@ <|@
      nr  212  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:1|QWORD[.] vstack:8|QWORD[.] r8|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:1|QWORD[.] vstack:9|QWORD[.] 
locals: vstack:1|QWORD[.] rdx|QWORD[.] vstack:0|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r8|QWORD[.]] state [bci:14, 3, 27] <|@ <|@
      nr  214  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  216  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  218  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction rcx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction r8|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:1|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:8|QWORD[.] vstack:2|QWORD[.] vstack:4|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:1|QWORD[.] vstack:9|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27] <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  228  <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  232  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction r8|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  240  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:1|QWORD[.] vstack:10|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:8|QWORD[.] vstack:2|QWORD[.] vstack:4|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:1|QWORD[.] vstack:9|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  244  <|@ instruction rsi|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  246  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  248  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction r8|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:1|QWORD[.] vstack:10|QWORD[.] vstack:11|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:1|QWORD[.] vstack:9|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27] <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:1|QWORD[.] vstack:9|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27] <|@ <|@
      nr   -1  <|@ instruction vstack:13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  276  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: vstack:1|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] vstack:0|QWORD[.] Object[null] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD state [bci:30] <|@ <|@
      nr  278  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" 
    successors "B28" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  284  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B24 -> B28 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:1|QWORD[.] r10|QWORD[.] vstack:4|QWORD[.] vstack:0|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:1|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] 
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37] <|@ <|@
      nr  294  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  296  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  298  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  300  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B29" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:12|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  310  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:1|QWORD[.] vstack:12|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:1|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37] <|@ <|@
      nr  312  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  318  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction r8|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:1|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:12|QWORD[.] vstack:4|QWORD[.] vstack:0|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:1|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  326  <|@ instruction rsi|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  328  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction r8|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:14|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:1|QWORD[.] vstack:14|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:12|QWORD[.] vstack:4|QWORD[.] vstack:0|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:1|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37] <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  342  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  344  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:15|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:1|QWORD[.] vstack:14|QWORD[.] vstack:15|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:1|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37] <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:15|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:1|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37] <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  370  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B32" 
    successors "B34" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  378  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B30 -> B34 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B32" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B31 -> B33 falseDestination: B31 -> B32 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rsi|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:1|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40] <|@ <|@
      nr  388  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  390  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  392  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  394  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  404  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40] <|@ <|@
      nr  406  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r11|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr  408  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rcx|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr  410  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  416  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction r8|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:16|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:1|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] vstack:16|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  424  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  426  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  428  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:16|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction r8|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:17|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  436  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:1|QWORD[.] vstack:17|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] vstack:16|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40] <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:16|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  440  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  442  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  444  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction r8|QWORD[.] = MOVE input: vstack:13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:18|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:1|QWORD[.] vstack:17|QWORD[.] vstack:18|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40] <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40] <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" "B34" 
    successors 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  472  <|@ instruction rax|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_2       
     2: aload_1       
     3: invokevirtual #8          // isShorterThan:(List$Element, List$Element)boolean
     6: ifeq          44
     9: aload_0       
    10: aload_0       
    11: aload_1       
    12: invokevirtual #7          // List$Element.getNext:()List$Element
    15: aload_2       
    16: aload_3       
    17: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    20: aload_0       
    21: aload_2       
    22: invokevirtual #7          // List$Element.getNext:()List$Element
    25: aload_3       
    26: aload_1       
    27: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    30: aload_0       
    31: aload_3       
    32: invokevirtual #7          // List$Element.getNext:()List$Element
    35: aload_1       
    36: aload_2       
    37: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    40: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    43: areturn       
    44: aload_3       
    45: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a872160 slotKind: QWORD <|@ <|@
      nr   14  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   20  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   22  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction rax|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   30  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: r9|QWORD[.], y: r9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - r9|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: rbx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3] <|@ <|@
      nr   44  <|@ instruction r9|DWORD[_] = MOV input: [r9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   46  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   48  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   50  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   52  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603999204951558038
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4597043951172344564
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591923954390866623
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B1" 
    successors 
    xhandlers
    flags 
    probability 4604906646667520750
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4585069451628504407
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -2  <|@ instruction vstack:1|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -2  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -2  <|@ instruction vstack:0|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -2  <|@ instruction vstack:2|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" 
    successors "B16" "B13" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   82  <|@ instruction TESTBRANCH (x: rbx|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B12 -> B16 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B14" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction TESTBRANCH (x: r9|QWORD[.], y: r9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B13 -> B15 falseDestination: B13 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - r9|QWORD[.] rbx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r11|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17] <|@ <|@
      nr   92  <|@ instruction r9|DWORD[_] = MOV input: [r9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   94  <|@ instruction rbx|DWORD[_] = MOV input: [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   98  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:9|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] vstack:3|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] vstack:4|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17] <|@ <|@
      nr  110  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] vstack:3|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] vstack:4|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rcx|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr  112  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] vstack:3|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] vstack:4|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r8|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr  114  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  116  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  120  <|@ instruction rcx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  122  <|@ instruction r8|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:1|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:3|QWORD[.] vstack:0|QWORD[.] vstack:2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:1|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17] <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  128  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  130  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction r8|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:1|QWORD[.] vstack:6|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:3|QWORD[.] vstack:0|QWORD[.] vstack:2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:1|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17] <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  144  <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  146  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction r8|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:7|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  156  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:1|QWORD[.] vstack:6|QWORD[.] vstack:7|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:1|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17] <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:1|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17] <|@ <|@
      nr   -1  <|@ instruction vstack:9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" "B16" 
    successors "B18" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: vstack:1|QWORD[.] vstack:9|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] Object[null] vstack:2|QWORD[.] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD state [bci:20] <|@ <|@
      nr  178  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B22" "B19" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  184  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B18 -> B22 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B19 -> B21 falseDestination: B19 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:1|QWORD[.] r10|QWORD[.] vstack:2|QWORD[.] vstack:4|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:1|QWORD[.] vstack:9|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] rcx|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r11|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27] <|@ <|@
      nr  194  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  196  <|@ instruction r8|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  198  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  200  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:13|QWORD[.] = STACKMOVE (input: vstack:4|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  206  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  210  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:1|QWORD[.] vstack:8|QWORD[.] r8|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:1|QWORD[.] vstack:9|QWORD[.] 
locals: vstack:1|QWORD[.] rdx|QWORD[.] vstack:0|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27] <|@ <|@
      nr  212  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:1|QWORD[.] vstack:8|QWORD[.] r8|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:1|QWORD[.] vstack:9|QWORD[.] 
locals: vstack:1|QWORD[.] rdx|QWORD[.] vstack:0|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r8|QWORD[.]] state [bci:14, 3, 27] <|@ <|@
      nr  214  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  216  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  218  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction rcx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction r8|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:1|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:8|QWORD[.] vstack:2|QWORD[.] vstack:4|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:1|QWORD[.] vstack:9|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27] <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  228  <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  232  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction r8|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  240  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:1|QWORD[.] vstack:10|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:8|QWORD[.] vstack:2|QWORD[.] vstack:4|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:1|QWORD[.] vstack:9|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  244  <|@ instruction rsi|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  246  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  248  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction r8|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:1|QWORD[.] vstack:10|QWORD[.] vstack:11|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:1|QWORD[.] vstack:9|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27] <|@ <|@
      nr  260  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:1|QWORD[.] vstack:9|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27] <|@ <|@
      nr   -1  <|@ instruction vstack:13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  272  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  276  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: vstack:1|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] vstack:0|QWORD[.] Object[null] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD state [bci:30] <|@ <|@
      nr  278  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" 
    successors "B28" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  284  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B24 -> B28 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:1|QWORD[.] r10|QWORD[.] vstack:4|QWORD[.] vstack:0|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:1|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] 
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37] <|@ <|@
      nr  294  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  296  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  298  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  300  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  302  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B29" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:12|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  310  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:1|QWORD[.] vstack:12|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:1|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37] <|@ <|@
      nr  312  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ instruction rdx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  318  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction r8|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:1|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:12|QWORD[.] vstack:4|QWORD[.] vstack:0|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:1|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  326  <|@ instruction rsi|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  328  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  330  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction r8|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:14|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:1|QWORD[.] vstack:14|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:12|QWORD[.] vstack:4|QWORD[.] vstack:0|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:1|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37] <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  342  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  344  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:15|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:1|QWORD[.] vstack:14|QWORD[.] vstack:15|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:1|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37] <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:15|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:1|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37] <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  370  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  374  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B32" 
    successors "B34" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  378  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B30 -> B34 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B32" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B31 -> B33 falseDestination: B31 -> B32 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rsi|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:1|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40] <|@ <|@
      nr  388  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  390  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  392  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  394  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  404  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40] <|@ <|@
      nr  406  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r11|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr  408  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rcx|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr  410  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  412  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  416  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction r8|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:16|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:1|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] vstack:16|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  424  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  426  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  428  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:16|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction r8|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:17|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  436  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:1|QWORD[.] vstack:17|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] vstack:16|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40] <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:16|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  440  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  442  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  444  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  450  <|@ instruction r8|QWORD[.] = MOVE input: vstack:13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:18|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:1|QWORD[.] vstack:17|QWORD[.] vstack:18|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40] <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40] <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" "B34" 
    successors 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  472  <|@ instruction rax|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_2       
     2: aload_1       
     3: invokevirtual #8          // isShorterThan:(List$Element, List$Element)boolean
     6: ifeq          44
     9: aload_0       
    10: aload_0       
    11: aload_1       
    12: invokevirtual #7          // List$Element.getNext:()List$Element
    15: aload_2       
    16: aload_3       
    17: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    20: aload_0       
    21: aload_2       
    22: invokevirtual #7          // List$Element.getNext:()List$Element
    25: aload_3       
    26: aload_1       
    27: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    30: aload_0       
    31: aload_3       
    32: invokevirtual #7          // List$Element.getNext:()List$Element
    35: aload_1       
    36: aload_2       
    37: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    40: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    43: areturn       
    44: aload_3       
    45: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a872160 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   16  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction rax|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   30  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: r9|QWORD[.], y: r9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - r9|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: rbx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3] <|@ <|@
      nr   48  <|@ instruction r9|DWORD[_] = MOV input: [r9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   54  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603999204951558038
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4597043951172344564
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591923954390866623
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   10  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B1" 
    successors 
    xhandlers
    flags 
    probability 4604906646667520750
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4585069451628504407
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction vstack:1|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction vstack:0|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction vstack:2|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction rbx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction r9|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" 
    successors "B16" "B13" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: rbx|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B12 -> B16 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B14" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: r9|QWORD[.], y: r9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B13 -> B15 falseDestination: B13 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - r9|QWORD[.] rbx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r11|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17] <|@ <|@
      nr  100  <|@ instruction r9|DWORD[_] = MOV input: [r9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  102  <|@ instruction rbx|DWORD[_] = MOV input: [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  108  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction vstack:9|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction vstack:3|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] vstack:3|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] vstack:4|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17] <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] vstack:3|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] vstack:4|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rcx|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] vstack:3|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] vstack:4|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r8|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr  120  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ instruction r9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction r10|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ instruction rcx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction rdi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction r8|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:1|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:3|QWORD[.] vstack:0|QWORD[.] vstack:2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:1|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17] <|@ <|@
      nr  138  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  142  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction r8|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction vstack:6|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:1|QWORD[.] vstack:6|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:3|QWORD[.] vstack:0|QWORD[.] vstack:2|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:1|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17] <|@ <|@
      nr  154  <|@ instruction r8|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  158  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction r8|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction vstack:7|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:1|QWORD[.] vstack:6|QWORD[.] vstack:7|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:1|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17] <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:1|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17] <|@ <|@
      nr  180  <|@ instruction vstack:9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" "B16" 
    successors "B18" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  194  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: vstack:1|QWORD[.] vstack:9|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] Object[null] vstack:2|QWORD[.] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD state [bci:20] <|@ <|@
      nr  196  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  198  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B22" "B19" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B18 -> B22 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B19 -> B21 falseDestination: B19 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:1|QWORD[.] r10|QWORD[.] vstack:2|QWORD[.] vstack:4|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:1|QWORD[.] vstack:9|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] rcx|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r11|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27] <|@ <|@
      nr  216  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  218  <|@ instruction r8|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  220  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction vstack:13|QWORD[.] = STACKMOVE (input: vstack:4|QWORD[.], ~backupSlot: vstack:5|QWORD) scratch: rax <|@ <|@
      nr  306  <|@ instruction r8|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction vstack:8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction r8|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:1|QWORD[.] vstack:8|QWORD[.] r8|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:1|QWORD[.] vstack:9|QWORD[.] 
locals: vstack:1|QWORD[.] rdx|QWORD[.] vstack:0|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27] <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:1|QWORD[.] vstack:8|QWORD[.] r8|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:1|QWORD[.] vstack:9|QWORD[.] 
locals: vstack:1|QWORD[.] rdx|QWORD[.] vstack:0|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r8|QWORD[.]] state [bci:14, 3, 27] <|@ <|@
      nr  238  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  240  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction r9|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction rcx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction r8|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:1|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:8|QWORD[.] vstack:2|QWORD[.] vstack:4|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:1|QWORD[.] vstack:9|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27] <|@ <|@
      nr  252  <|@ instruction r8|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  256  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  258  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction r8|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction vstack:10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:1|QWORD[.] vstack:10|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:8|QWORD[.] vstack:2|QWORD[.] vstack:4|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:1|QWORD[.] vstack:9|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27] <|@ <|@
      nr  268  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  272  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  274  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction r8|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction vstack:11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:1|QWORD[.] vstack:10|QWORD[.] vstack:11|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:1|QWORD[.] vstack:9|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27] <|@ <|@
      nr  286  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:1|QWORD[.] vstack:9|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] vstack:0|QWORD[.] vstack:2|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27] <|@ <|@
      nr  296  <|@ instruction vstack:13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction r8|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: vstack:1|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:4|QWORD[.] vstack:0|QWORD[.] Object[null] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD state [bci:30] <|@ <|@
      nr  314  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  316  <|@ instruction rcx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" 
    successors "B28" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  324  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B24 -> B28 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:1|QWORD[.] r10|QWORD[.] vstack:4|QWORD[.] vstack:0|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:1|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] 
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37] <|@ <|@
      nr  334  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  336  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  338  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  340  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B29" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction vstack:12|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:1|QWORD[.] vstack:12|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:1|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37] <|@ <|@
      nr  354  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  356  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction r9|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction r8|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:1|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:12|QWORD[.] vstack:4|QWORD[.] vstack:0|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:1|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37] <|@ <|@
      nr  370  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  374  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction r8|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction vstack:14|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  386  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:1|QWORD[.] vstack:14|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:12|QWORD[.] vstack:4|QWORD[.] vstack:0|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:1|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37] <|@ <|@
      nr  388  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  392  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  394  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:12|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction r8|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction vstack:15|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:1|QWORD[.] vstack:14|QWORD[.] vstack:15|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:1|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37] <|@ <|@
      nr  404  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:15|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:1|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37] <|@ <|@
      nr  414  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  426  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B32" 
    successors "B34" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  434  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B30 -> B34 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B32" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B31 -> B33 falseDestination: B31 -> B32 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rsi|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: vstack:1|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40] <|@ <|@
      nr  444  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  446  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  448  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  450  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction r11|QWORD[.] = MOVE input: vstack:13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction r10|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40] <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r11|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr  466  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rcx|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr  468  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  470  <|@ instruction r9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction rbx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction r8|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction vstack:16|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: vstack:1|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] vstack:16|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40] <|@ <|@
      nr  484  <|@ instruction r11|QWORD[.] = MOVE input: vstack:13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  488  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  490  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:16|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction r8|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction vstack:17|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: vstack:1|QWORD[.] vstack:17|QWORD[.] 
locals: vstack:1|QWORD[.] vstack:9|QWORD[.] vstack:13|QWORD[.] vstack:16|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40] <|@ <|@
      nr  500  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:16|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  504  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  506  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction r8|QWORD[.] = MOVE input: vstack:13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction vstack:18|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: vstack:1|QWORD[.] vstack:17|QWORD[.] vstack:18|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40] <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:18|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40] <|@ <|@
      nr  526  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" "B34" 
    successors 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  536  <|@ instruction rax|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_2       
     2: aload_1       
     3: invokevirtual #8          // isShorterThan:(List$Element, List$Element)boolean
     6: ifeq          44
     9: aload_0       
    10: aload_0       
    11: aload_1       
    12: invokevirtual #7          // List$Element.getNext:()List$Element
    15: aload_2       
    16: aload_3       
    17: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    20: aload_0       
    21: aload_2       
    22: invokevirtual #7          // List$Element.getNext:()List$Element
    25: aload_3       
    26: aload_1       
    27: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    30: aload_0       
    31: aload_3       
    32: invokevirtual #7          // List$Element.getNext:()List$Element
    35: aload_1       
    36: aload_2       
    37: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    40: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    43: areturn       
    44: aload_3       
    45: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [78, 420[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[vstack:1|q]" vstack:1|q -1 [74, 516[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[vstack:2|q]" vstack:2|q -1 [80, 306[ "NOT_SUPPORTED"
  vstack:3|q QWORD "[vstack:3|q]" vstack:3|q -1 [112, 162[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[vstack:4|q]" vstack:4|q -1 [76, 398[ "NOT_SUPPORTED"
  vstack:5|q QWORD "[vstack:5|q]" vstack:5|q -1 [0, 538[ "NOT_SUPPORTED"
  vstack:6|q QWORD "[vstack:6|q]" vstack:6|q -1 [150, 172[ "NOT_SUPPORTED"
  vstack:7|q QWORD "[vstack:7|q]" vstack:7|q -1 [166, 174[ "NOT_SUPPORTED"
  vstack:8|q QWORD "[vstack:8|q]" vstack:8|q -1 [228, 278[ "NOT_SUPPORTED"
  vstack:9|q QWORD "[vstack:9|q]" vstack:9|q -1 [180, 508[ "NOT_SUPPORTED"
  vstack:10|q QWORD "[vstack:10|q]" vstack:10|q -1 [264, 288[ "NOT_SUPPORTED"
  vstack:11|q QWORD "[vstack:11|q]" vstack:11|q -1 [282, 290[ "NOT_SUPPORTED"
  vstack:12|q QWORD "[vstack:12|q]" vstack:12|q -1 [346, 396[ "NOT_SUPPORTED"
  vstack:13|q QWORD "[vstack:13|q]" vstack:13|q vstack:4|q [296, 510[ "NOT_SUPPORTED"
  vstack:14|q QWORD "[vstack:14|q]" vstack:14|q -1 [384, 406[ "NOT_SUPPORTED"
  vstack:15|q QWORD "[vstack:15|q]" vstack:15|q -1 [400, 408[ "NOT_SUPPORTED"
  vstack:16|q QWORD "[vstack:16|q]" vstack:16|q -1 [480, 500[ "NOT_SUPPORTED"
  vstack:17|q QWORD "[vstack:17|q]" vstack:17|q -1 [496, 518[ "NOT_SUPPORTED"
  vstack:18|q QWORD "[vstack:18|q]" vstack:18|q -1 [512, 520[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:56|q]" vstack:0|q -1 [78, 420[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[stack:40|q]" vstack:1|q -1 [74, 516[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[stack:64|q]" vstack:2|q -1 [80, 306[ "NOT_SUPPORTED"
  vstack:3|q QWORD "[stack:72|q]" vstack:3|q -1 [112, 162[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[stack:48|q]" vstack:4|q -1 [76, 398[ "NOT_SUPPORTED"
  vstack:5|q QWORD "[stack:32|q]" vstack:5|q -1 [0, 538[ "NOT_SUPPORTED"
  vstack:6|q QWORD "[stack:80|q]" vstack:6|q -1 [150, 172[ "NOT_SUPPORTED"
  vstack:7|q QWORD "[stack:72|q]" vstack:7|q -1 [166, 174[ "NOT_SUPPORTED"
  vstack:8|q QWORD "[stack:80|q]" vstack:8|q -1 [228, 278[ "NOT_SUPPORTED"
  vstack:9|q QWORD "[stack:72|q]" vstack:9|q -1 [180, 508[ "NOT_SUPPORTED"
  vstack:10|q QWORD "[stack:88|q]" vstack:10|q -1 [264, 288[ "NOT_SUPPORTED"
  vstack:11|q QWORD "[stack:80|q]" vstack:11|q -1 [282, 290[ "NOT_SUPPORTED"
  vstack:12|q QWORD "[stack:64|q]" vstack:12|q -1 [346, 396[ "NOT_SUPPORTED"
  vstack:13|q QWORD "[stack:80|q]" vstack:13|q vstack:4|q [296, 510[ "NOT_SUPPORTED"
  vstack:14|q QWORD "[stack:88|q]" vstack:14|q -1 [384, 406[ "NOT_SUPPORTED"
  vstack:15|q QWORD "[stack:48|q]" vstack:15|q -1 [400, 408[ "NOT_SUPPORTED"
  vstack:16|q QWORD "[stack:56|q]" vstack:16|q -1 [480, 500[ "NOT_SUPPORTED"
  vstack:17|q QWORD "[stack:48|q]" vstack:17|q -1 [496, 518[ "NOT_SUPPORTED"
  vstack:18|q QWORD "[stack:80|q]" vstack:18|q -1 [512, 520[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a872160 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   16  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction rax|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   30  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: r9|QWORD[.], y: r9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - r9|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: rbx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3] <|@ <|@
      nr   48  <|@ instruction r9|DWORD[_] = MOV input: [r9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   54  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603999204951558038
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4597043951172344564
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591923954390866623
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   10  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B1" 
    successors 
    xhandlers
    flags 
    probability 4604906646667520750
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4585069451628504407
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction rbx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction r9|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" 
    successors "B16" "B13" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: rbx|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B12 -> B16 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B14" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: r9|QWORD[.], y: r9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B13 -> B15 falseDestination: B13 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - r9|QWORD[.] rbx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r11|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17] <|@ <|@
      nr  100  <|@ instruction r9|DWORD[_] = MOV input: [r9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  102  <|@ instruction rbx|DWORD[_] = MOV input: [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  108  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction stack:72|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] stack:72|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17] <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] stack:72|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rcx|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] stack:72|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r8|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr  120  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ instruction r9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction r10|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ instruction rcx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction rdi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction r8|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17] <|@ <|@
      nr  138  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  142  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:80|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17] <|@ <|@
      nr  154  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  158  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:80|QWORD[.] stack:72|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17] <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rdx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17] <|@ <|@
      nr  180  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" "B16" 
    successors "B18" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  194  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] Object[null] stack:64|QWORD[.] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD state [bci:20] <|@ <|@
      nr  196  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  198  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B22" "B19" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B18 -> B22 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B19 -> B21 falseDestination: B19 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r10|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r11|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27] <|@ <|@
      nr  216  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  218  <|@ instruction r8|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  220  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction stack:80|QWORD[.] = STACKMOVE (input: stack:48|QWORD[.], ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr  306  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:80|QWORD[.] r8|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] rdx|QWORD[.] stack:56|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27] <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:80|QWORD[.] r8|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] rdx|QWORD[.] stack:56|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r8|QWORD[.]] state [bci:14, 3, 27] <|@ <|@
      nr  238  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  240  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction r9|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction rcx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction r8|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27] <|@ <|@
      nr  252  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  256  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  258  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:88|QWORD[.] 
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27] <|@ <|@
      nr  268  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  272  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  274  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:88|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27] <|@ <|@
      nr  286  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27] <|@ <|@
      nr  296  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] Object[null] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD state [bci:30] <|@ <|@
      nr  314  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  316  <|@ instruction rcx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" 
    successors "B28" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  324  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B24 -> B28 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r10|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37] <|@ <|@
      nr  334  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  336  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  338  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  340  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B29" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction stack:64|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:64|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37] <|@ <|@
      nr  354  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  356  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction r9|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction r8|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37] <|@ <|@
      nr  370  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  374  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  386  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:88|QWORD[.] 
locals: stack:40|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37] <|@ <|@
      nr  388  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  392  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  394  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:88|QWORD[.] stack:48|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37] <|@ <|@
      nr  404  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37] <|@ <|@
      nr  414  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  426  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction rsi|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B32" 
    successors "B34" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  434  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B30 -> B34 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B32" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B31 -> B33 falseDestination: B31 -> B32 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rsi|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40] <|@ <|@
      nr  444  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  446  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  448  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  450  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40] <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r11|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr  466  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rcx|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr  468  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  470  <|@ instruction r9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction rbx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction r8|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction stack:56|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40] <|@ <|@
      nr  484  <|@ instruction r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  488  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  490  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40] <|@ <|@
      nr  500  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  504  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  506  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:48|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40] <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40] <|@ <|@
      nr  526  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" "B34" 
    successors 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  536  <|@ instruction rax|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_2       
     2: aload_1       
     3: invokevirtual #8          // isShorterThan:(List$Element, List$Element)boolean
     6: ifeq          44
     9: aload_0       
    10: aload_0       
    11: aload_1       
    12: invokevirtual #7          // List$Element.getNext:()List$Element
    15: aload_2       
    16: aload_3       
    17: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    20: aload_0       
    21: aload_2       
    22: invokevirtual #7          // List$Element.getNext:()List$Element
    25: aload_3       
    26: aload_1       
    27: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    30: aload_0       
    31: aload_3       
    32: invokevirtual #7          // List$Element.getNext:()List$Element
    35: aload_1       
    36: aload_2       
    37: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    40: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    43: areturn       
    44: aload_3       
    45: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a872160 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   16  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction rax|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   30  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: r9|QWORD[.], y: r9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - r9|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: rbx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3] <|@ <|@
      nr   48  <|@ instruction r9|DWORD[_] = MOV input: [r9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   54  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603999204951558038
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4597043951172344564
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591923954390866623
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   10  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B1" 
    successors 
    xhandlers
    flags 
    probability 4604906646667520750
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4585069451628504407
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction rbx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction r9|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" 
    successors "B16" "B13" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: rbx|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B12 -> B16 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B14" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: r9|QWORD[.], y: r9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B13 -> B15 falseDestination: B13 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - r9|QWORD[.] rbx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r11|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17] <|@ <|@
      nr  100  <|@ instruction r9|DWORD[_] = MOV input: [r9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  102  <|@ instruction rbx|DWORD[_] = MOV input: [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  108  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction stack:72|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] stack:72|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17] <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] stack:72|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rcx|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] stack:72|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r8|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr  120  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ instruction r9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction r10|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ instruction rcx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction rdi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction r8|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17] <|@ <|@
      nr  138  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  142  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:80|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17] <|@ <|@
      nr  154  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  158  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:80|QWORD[.] stack:72|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17] <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rdx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17] <|@ <|@
      nr  180  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" "B16" 
    successors "B18" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  194  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] Object[null] stack:64|QWORD[.] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD state [bci:20] <|@ <|@
      nr  196  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  198  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B22" "B19" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B18 -> B22 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B19 -> B21 falseDestination: B19 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r10|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r11|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27] <|@ <|@
      nr  216  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  218  <|@ instruction r8|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  220  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction stack:80|QWORD[.] = STACKMOVE (input: stack:48|QWORD[.], ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr  306  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:80|QWORD[.] r8|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] rdx|QWORD[.] stack:56|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27] <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:80|QWORD[.] r8|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] rdx|QWORD[.] stack:56|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r8|QWORD[.]] state [bci:14, 3, 27] <|@ <|@
      nr  238  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  240  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction r9|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction rcx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction r8|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27] <|@ <|@
      nr  252  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  256  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  258  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:88|QWORD[.] 
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27] <|@ <|@
      nr  268  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  272  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  274  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:88|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27] <|@ <|@
      nr  286  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27] <|@ <|@
      nr  296  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] Object[null] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD state [bci:30] <|@ <|@
      nr  314  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  316  <|@ instruction rcx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" 
    successors "B28" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  324  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B24 -> B28 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r10|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37] <|@ <|@
      nr  334  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  336  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  338  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  340  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B29" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction stack:64|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:64|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37] <|@ <|@
      nr  354  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  356  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction r9|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction r8|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37] <|@ <|@
      nr  370  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  374  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  386  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:88|QWORD[.] 
locals: stack:40|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37] <|@ <|@
      nr  388  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  392  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  394  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:88|QWORD[.] stack:48|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37] <|@ <|@
      nr  404  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37] <|@ <|@
      nr  414  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  426  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction rsi|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B32" 
    successors "B34" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  434  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B30 -> B34 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B32" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B31 -> B33 falseDestination: B31 -> B32 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rsi|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40] <|@ <|@
      nr  444  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  446  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  448  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  450  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40] <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r11|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr  466  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rcx|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr  468  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  470  <|@ instruction r9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction rbx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction r8|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction stack:56|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40] <|@ <|@
      nr  484  <|@ instruction r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  488  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  490  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40] <|@ <|@
      nr  500  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  504  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  506  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:48|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40] <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40] <|@ <|@
      nr  526  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" "B34" 
    successors 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  536  <|@ instruction rax|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_2       
     2: aload_1       
     3: invokevirtual #8          // isShorterThan:(List$Element, List$Element)boolean
     6: ifeq          44
     9: aload_0       
    10: aload_0       
    11: aload_1       
    12: invokevirtual #7          // List$Element.getNext:()List$Element
    15: aload_2       
    16: aload_3       
    17: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    20: aload_0       
    21: aload_2       
    22: invokevirtual #7          // List$Element.getNext:()List$Element
    25: aload_3       
    26: aload_1       
    27: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    30: aload_0       
    31: aload_3       
    32: invokevirtual #7          // List$Element.getNext:()List$Element
    35: aload_1       
    36: aload_2       
    37: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    40: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    43: areturn       
    44: aload_3       
    45: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a872160 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   16  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction rax|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   30  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: r9|QWORD[.], y: r9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - r9|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: rbx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3] <|@ <|@
      nr   48  <|@ instruction r9|DWORD[_] = MOV input: [r9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   54  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603999204951558038
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4597043951172344564
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591923954390866623
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   10  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B1" 
    successors 
    xhandlers
    flags 
    probability 4604906646667520750
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4585069451628504407
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction rbx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction r9|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" 
    successors "B16" "B13" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: rbx|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B12 -> B16 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B14" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: r9|QWORD[.], y: r9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B13 -> B15 falseDestination: B13 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - r9|QWORD[.] rbx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r11|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17] <|@ <|@
      nr  100  <|@ instruction r9|DWORD[_] = MOV input: [r9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  102  <|@ instruction rbx|DWORD[_] = MOV input: [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  108  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction stack:72|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] stack:72|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17] <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] stack:72|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rcx|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] stack:72|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r8|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr  120  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ instruction r9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction r10|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ instruction rcx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction rdi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction r8|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17] <|@ <|@
      nr  138  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  142  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:80|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17] <|@ <|@
      nr  154  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  158  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:80|QWORD[.] stack:72|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17] <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rdx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17] <|@ <|@
      nr  180  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" "B16" 
    successors "B18" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  194  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] Object[null] stack:64|QWORD[.] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD state [bci:20] <|@ <|@
      nr  196  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  198  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B22" "B19" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B18 -> B22 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B19 -> B21 falseDestination: B19 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r10|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r11|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27] <|@ <|@
      nr  216  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  218  <|@ instruction r8|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  220  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction stack:80|QWORD[.] = STACKMOVE (input: stack:48|QWORD[.], ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr  308  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:80|QWORD[.] r8|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] rdx|QWORD[.] stack:56|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27] <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:80|QWORD[.] r8|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] rdx|QWORD[.] stack:56|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r8|QWORD[.]] state [bci:14, 3, 27] <|@ <|@
      nr  238  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  240  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction r9|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction rcx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction r8|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27] <|@ <|@
      nr  252  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  256  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  258  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:88|QWORD[.] 
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27] <|@ <|@
      nr  268  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  272  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  274  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:88|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27] <|@ <|@
      nr  286  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27] <|@ <|@
      nr  296  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  298  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] Object[null] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD state [bci:30] <|@ <|@
      nr  314  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  316  <|@ instruction rcx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" 
    successors "B28" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  324  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B24 -> B28 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r10|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37] <|@ <|@
      nr  334  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  336  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  338  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  340  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B29" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction stack:64|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:64|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37] <|@ <|@
      nr  354  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  356  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction r9|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction r8|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37] <|@ <|@
      nr  370  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  374  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  386  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:88|QWORD[.] 
locals: stack:40|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37] <|@ <|@
      nr  388  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  392  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  394  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:88|QWORD[.] stack:48|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37] <|@ <|@
      nr  404  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37] <|@ <|@
      nr  414  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  426  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction rsi|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B32" 
    successors "B34" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  434  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B30 -> B34 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B32" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B31 -> B33 falseDestination: B31 -> B32 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rsi|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40] <|@ <|@
      nr  444  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  446  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  448  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  450  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40] <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r11|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr  466  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rcx|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr  468  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  470  <|@ instruction r9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction rbx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction r8|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction stack:56|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40] <|@ <|@
      nr  484  <|@ instruction r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  488  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  490  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40] <|@ <|@
      nr  500  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  504  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  506  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:48|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40] <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40] <|@ <|@
      nr  526  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" "B34" 
    successors 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  536  <|@ instruction rax|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_2       
     2: aload_1       
     3: invokevirtual #8          // isShorterThan:(List$Element, List$Element)boolean
     6: ifeq          44
     9: aload_0       
    10: aload_0       
    11: aload_1       
    12: invokevirtual #7          // List$Element.getNext:()List$Element
    15: aload_2       
    16: aload_3       
    17: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    20: aload_0       
    21: aload_2       
    22: invokevirtual #7          // List$Element.getNext:()List$Element
    25: aload_3       
    26: aload_1       
    27: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    30: aload_0       
    31: aload_3       
    32: invokevirtual #7          // List$Element.getNext:()List$Element
    35: aload_1       
    36: aload_2       
    37: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    40: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    43: areturn       
    44: aload_3       
    45: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a872160 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   16  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction rax|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   30  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: r9|QWORD[.], y: r9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - r9|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: rbx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3] <|@ <|@
      nr   48  <|@ instruction r9|DWORD[_] = MOV input: [r9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   54  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603999204951558038
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4597043951172344564
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591923954390866623
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   10  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B1" 
    successors 
    xhandlers
    flags 
    probability 4604906646667520750
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4585069451628504407
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction rbx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction r9|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" 
    successors "B16" "B13" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: rbx|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B12 -> B16 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B14" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: r9|QWORD[.], y: r9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B13 -> B15 falseDestination: B13 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - r9|QWORD[.] rbx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r11|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17] <|@ <|@
      nr  100  <|@ instruction r9|DWORD[_] = MOV input: [r9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  102  <|@ instruction rbx|DWORD[_] = MOV input: [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  108  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction stack:72|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] stack:72|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17] <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] stack:72|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rcx|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] stack:72|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r8|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr  120  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ instruction r9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction r10|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction rdi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17] <|@ <|@
      nr  138  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  142  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:80|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17] <|@ <|@
      nr  154  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  158  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:80|QWORD[.] stack:72|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17] <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rdx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17] <|@ <|@
      nr  180  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" "B16" 
    successors "B18" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  194  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] Object[null] stack:64|QWORD[.] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD state [bci:20] <|@ <|@
      nr  196  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  198  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B22" "B19" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B18 -> B22 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B19 -> B21 falseDestination: B19 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r10|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r11|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27] <|@ <|@
      nr  216  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  218  <|@ instruction r8|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  220  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction stack:80|QWORD[.] = STACKMOVE (input: stack:48|QWORD[.], ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr  308  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:80|QWORD[.] r8|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] rdx|QWORD[.] stack:56|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27] <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:80|QWORD[.] r8|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] rdx|QWORD[.] stack:56|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r8|QWORD[.]] state [bci:14, 3, 27] <|@ <|@
      nr  238  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  240  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction r9|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction rcx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction r8|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27] <|@ <|@
      nr  252  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  256  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  258  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:88|QWORD[.] 
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27] <|@ <|@
      nr  268  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  272  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  274  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:88|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27] <|@ <|@
      nr  286  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27] <|@ <|@
      nr  296  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  298  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] Object[null] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD state [bci:30] <|@ <|@
      nr  314  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  316  <|@ instruction rcx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" 
    successors "B28" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  324  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B24 -> B28 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r10|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37] <|@ <|@
      nr  334  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  336  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  338  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  340  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B29" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction stack:64|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:64|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37] <|@ <|@
      nr  354  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  356  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction r9|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction r8|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37] <|@ <|@
      nr  370  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  374  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  386  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:88|QWORD[.] 
locals: stack:40|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37] <|@ <|@
      nr  388  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  392  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  394  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:88|QWORD[.] stack:48|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37] <|@ <|@
      nr  404  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37] <|@ <|@
      nr  414  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  426  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction rsi|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B32" 
    successors "B34" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  434  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B30 -> B34 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B32" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B31 -> B33 falseDestination: B31 -> B32 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rsi|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40] <|@ <|@
      nr  444  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  446  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  448  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  450  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40] <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r11|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr  466  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rcx|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr  468  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  470  <|@ instruction r9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction rbx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction r8|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction stack:56|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40] <|@ <|@
      nr  484  <|@ instruction r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  488  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  490  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40] <|@ <|@
      nr  500  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  504  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  506  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:48|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40] <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40] <|@ <|@
      nr  526  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" "B34" 
    successors 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  536  <|@ instruction rax|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_2       
     2: aload_1       
     3: invokevirtual #8          // isShorterThan:(List$Element, List$Element)boolean
     6: ifeq          44
     9: aload_0       
    10: aload_0       
    11: aload_1       
    12: invokevirtual #7          // List$Element.getNext:()List$Element
    15: aload_2       
    16: aload_3       
    17: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    20: aload_0       
    21: aload_2       
    22: invokevirtual #7          // List$Element.getNext:()List$Element
    25: aload_3       
    26: aload_1       
    27: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    30: aload_0       
    31: aload_3       
    32: invokevirtual #7          // List$Element.getNext:()List$Element
    35: aload_1       
    36: aload_2       
    37: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    40: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    43: areturn       
    44: aload_3       
    45: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a872160 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   16  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction rax|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   30  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B9" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B9 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: r9|QWORD[.], y: r9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - r9|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: rbx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3] <|@ <|@
      nr   48  <|@ instruction r9|DWORD[_] = MOV input: [r9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   54  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603999204951558038
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4597043951172344564
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591923954390866623
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   10  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B1" 
    successors 
    xhandlers
    flags 
    probability 4604906646667520750
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B11" 
    xhandlers
    flags 
    probability 4585069451628504407
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction rbx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction r9|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" 
    successors "B16" "B13" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: rbx|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B12 -> B16 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B14" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: r9|QWORD[.], y: r9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B13 -> B15 falseDestination: B13 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - r9|QWORD[.] rbx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r11|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17] <|@ <|@
      nr  100  <|@ instruction r9|DWORD[_] = MOV input: [r9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  102  <|@ instruction rbx|DWORD[_] = MOV input: [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  108  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction stack:72|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] stack:72|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17] <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] stack:72|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rcx|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] stack:72|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r8|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr  120  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ instruction r9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction r10|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction rdi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17] <|@ <|@
      nr  138  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  142  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:80|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17] <|@ <|@
      nr  154  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  158  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:80|QWORD[.] stack:72|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17] <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rdx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17] <|@ <|@
      nr  180  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" "B16" 
    successors "B18" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  194  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] Object[null] stack:64|QWORD[.] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD state [bci:20] <|@ <|@
      nr  196  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  198  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B22" "B19" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B18 -> B22 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B19 -> B21 falseDestination: B19 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r10|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r11|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27] <|@ <|@
      nr  216  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  218  <|@ instruction r8|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  220  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction stack:80|QWORD[.] = STACKMOVE (input: stack:48|QWORD[.], ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr  308  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:80|QWORD[.] r8|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] rdx|QWORD[.] stack:56|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27] <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:80|QWORD[.] r8|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] rdx|QWORD[.] stack:56|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r8|QWORD[.]] state [bci:14, 3, 27] <|@ <|@
      nr  238  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  240  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction r9|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction rcx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction r8|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27] <|@ <|@
      nr  252  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  256  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  258  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:88|QWORD[.] 
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27] <|@ <|@
      nr  268  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  272  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  274  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:88|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27] <|@ <|@
      nr  286  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27] <|@ <|@
      nr  296  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  298  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] Object[null] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD state [bci:30] <|@ <|@
      nr  314  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  316  <|@ instruction rcx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" 
    successors "B28" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  324  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B24 -> B28 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r10|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37] <|@ <|@
      nr  334  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  336  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  338  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  340  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B29" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction stack:64|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:64|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37] <|@ <|@
      nr  354  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  356  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction r9|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction r8|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37] <|@ <|@
      nr  370  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  374  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  386  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:88|QWORD[.] 
locals: stack:40|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37] <|@ <|@
      nr  388  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  392  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  394  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:88|QWORD[.] stack:48|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37] <|@ <|@
      nr  404  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37] <|@ <|@
      nr  414  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  426  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction rsi|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B32" 
    successors "B34" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  434  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B30 -> B34 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B32" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B31 -> B33 falseDestination: B31 -> B32 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rsi|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40] <|@ <|@
      nr  444  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  446  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  448  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  450  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40] <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r11|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr  466  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rcx|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr  468  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  470  <|@ instruction r9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction rbx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction r8|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction stack:56|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40] <|@ <|@
      nr  484  <|@ instruction r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  488  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  490  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40] <|@ <|@
      nr  500  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  504  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  506  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:48|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40] <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40] <|@ <|@
      nr  526  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" "B34" 
    successors 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  536  <|@ instruction rax|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_2       
     2: aload_1       
     3: invokevirtual #8          // isShorterThan:(List$Element, List$Element)boolean
     6: ifeq          44
     9: aload_0       
    10: aload_0       
    11: aload_1       
    12: invokevirtual #7          // List$Element.getNext:()List$Element
    15: aload_2       
    16: aload_3       
    17: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    20: aload_0       
    21: aload_2       
    22: invokevirtual #7          // List$Element.getNext:()List$Element
    25: aload_3       
    26: aload_1       
    27: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    30: aload_0       
    31: aload_3       
    32: invokevirtual #7          // List$Element.getNext:()List$Element
    35: aload_1       
    36: aload_2       
    37: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    40: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    43: areturn       
    44: aload_3       
    45: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B10" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a872160 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B10 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   16  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B11 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction rax|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   30  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B10" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B10 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: r9|QWORD[.], y: r9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B11 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - r9|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: rbx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3] <|@ <|@
      nr   48  <|@ instruction r9|DWORD[_] = MOV input: [r9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   54  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" "B0" 
    successors 
    xhandlers
    flags 
    probability 4604906646667520750
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" "B2" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction rbx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction r9|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" 
    successors "B16" "B13" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: rbx|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B12 -> B16 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B14" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: r9|QWORD[.], y: r9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B13 -> B15 falseDestination: B13 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - r9|QWORD[.] rbx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r11|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17] <|@ <|@
      nr  100  <|@ instruction r9|DWORD[_] = MOV input: [r9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  102  <|@ instruction rbx|DWORD[_] = MOV input: [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  108  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction stack:72|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] stack:72|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17] <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] stack:72|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rcx|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] stack:72|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r8|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr  120  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ instruction r9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction r10|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction rdi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17] <|@ <|@
      nr  138  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  142  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:80|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17] <|@ <|@
      nr  154  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  158  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:80|QWORD[.] stack:72|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17] <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rdx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17] <|@ <|@
      nr  180  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" "B16" 
    successors "B18" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  194  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] Object[null] stack:64|QWORD[.] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD state [bci:20] <|@ <|@
      nr  196  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  198  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B22" "B19" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B18 -> B22 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B19 -> B21 falseDestination: B19 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r10|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r11|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27] <|@ <|@
      nr  216  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  218  <|@ instruction r8|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  220  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction stack:80|QWORD[.] = STACKMOVE (input: stack:48|QWORD[.], ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr  308  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:80|QWORD[.] r8|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] rdx|QWORD[.] stack:56|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27] <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:80|QWORD[.] r8|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] rdx|QWORD[.] stack:56|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r8|QWORD[.]] state [bci:14, 3, 27] <|@ <|@
      nr  238  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  240  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction r9|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction rcx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction r8|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27] <|@ <|@
      nr  252  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  256  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  258  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:88|QWORD[.] 
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27] <|@ <|@
      nr  268  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  272  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  274  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:88|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27] <|@ <|@
      nr  286  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27] <|@ <|@
      nr  296  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  298  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] Object[null] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD state [bci:30] <|@ <|@
      nr  314  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  316  <|@ instruction rcx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" 
    successors "B28" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  324  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B24 -> B28 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r10|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37] <|@ <|@
      nr  334  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  336  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  338  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  340  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B29" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction stack:64|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:64|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37] <|@ <|@
      nr  354  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  356  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction r9|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction r8|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37] <|@ <|@
      nr  370  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  374  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  386  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:88|QWORD[.] 
locals: stack:40|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37] <|@ <|@
      nr  388  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  392  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  394  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:88|QWORD[.] stack:48|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37] <|@ <|@
      nr  404  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37] <|@ <|@
      nr  414  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  426  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction rsi|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B32" 
    successors "B35" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  434  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B30 -> B35 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B32" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B31 -> B33 falseDestination: B31 -> B32 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rsi|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40] <|@ <|@
      nr  444  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  446  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  448  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  450  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40] <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r11|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr  466  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rcx|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr  468  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  470  <|@ instruction r9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction rbx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction r8|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction stack:56|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40] <|@ <|@
      nr  484  <|@ instruction r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  488  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  490  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40] <|@ <|@
      nr  500  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  504  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  506  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:48|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40] <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40] <|@ <|@
      nr  526  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" "B30" 
    successors 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  536  <|@ instruction rax|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_2       
     2: aload_1       
     3: invokevirtual #8          // isShorterThan:(List$Element, List$Element)boolean
     6: ifeq          44
     9: aload_0       
    10: aload_0       
    11: aload_1       
    12: invokevirtual #7          // List$Element.getNext:()List$Element
    15: aload_2       
    16: aload_3       
    17: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    20: aload_0       
    21: aload_2       
    22: invokevirtual #7          // List$Element.getNext:()List$Element
    25: aload_3       
    26: aload_1       
    27: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    30: aload_0       
    31: aload_3       
    32: invokevirtual #7          // List$Element.getNext:()List$Element
    35: aload_1       
    36: aload_2       
    37: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    40: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    43: areturn       
    44: aload_3       
    45: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B10" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a872160 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B10 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   16  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B11 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction rax|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   30  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: r9|QWORD[.], y: r9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B11 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - r9|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: rbx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3] <|@ <|@
      nr   48  <|@ instruction r9|DWORD[_] = MOV input: [r9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   54  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B10" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B10 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" "B0" 
    successors 
    xhandlers
    flags 
    probability 4604906646667520750
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" "B2" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction rbx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction r9|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B14" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: r9|QWORD[.], y: r9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B13 -> B15 falseDestination: B13 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - r9|QWORD[.] rbx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r11|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17] <|@ <|@
      nr  100  <|@ instruction r9|DWORD[_] = MOV input: [r9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  102  <|@ instruction rbx|DWORD[_] = MOV input: [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  108  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" 
    successors "B16" "B13" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: rbx|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B12 -> B16 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction stack:72|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" "B16" 
    successors "B18" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  194  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] Object[null] stack:64|QWORD[.] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD state [bci:20] <|@ <|@
      nr  196  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  198  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B19 -> B21 falseDestination: B19 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r10|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r11|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27] <|@ <|@
      nr  216  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  218  <|@ instruction r8|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  220  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B22" "B19" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B18 -> B22 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction stack:80|QWORD[.] = STACKMOVE (input: stack:48|QWORD[.], ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr  308  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  298  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] Object[null] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD state [bci:30] <|@ <|@
      nr  314  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  316  <|@ instruction rcx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r10|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37] <|@ <|@
      nr  334  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  336  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  338  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  340  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" 
    successors "B28" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  324  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B24 -> B28 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  426  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction rsi|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B32" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B31 -> B33 falseDestination: B31 -> B32 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rsi|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40] <|@ <|@
      nr  444  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  446  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  448  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  450  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B32" 
    successors "B35" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  434  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B30 -> B35 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" "B30" 
    successors 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  536  <|@ instruction rax|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B29" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction stack:64|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:64|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37] <|@ <|@
      nr  354  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  356  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction r9|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction r8|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37] <|@ <|@
      nr  370  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  374  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  386  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:88|QWORD[.] 
locals: stack:40|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37] <|@ <|@
      nr  388  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  392  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  394  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:88|QWORD[.] stack:48|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37] <|@ <|@
      nr  404  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37] <|@ <|@
      nr  414  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40] <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r11|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr  466  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rcx|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr  468  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  470  <|@ instruction r9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction rbx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction r8|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction stack:56|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40] <|@ <|@
      nr  484  <|@ instruction r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  488  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  490  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40] <|@ <|@
      nr  500  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  504  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  506  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:48|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40] <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40] <|@ <|@
      nr  526  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] stack:72|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17] <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] stack:72|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rcx|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] stack:72|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r8|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr  120  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ instruction r9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction r10|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction rdi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17] <|@ <|@
      nr  138  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  142  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:80|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17] <|@ <|@
      nr  154  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  158  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:80|QWORD[.] stack:72|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17] <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rdx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17] <|@ <|@
      nr  180  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:80|QWORD[.] r8|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] rdx|QWORD[.] stack:56|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27] <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:80|QWORD[.] r8|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] rdx|QWORD[.] stack:56|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r8|QWORD[.]] state [bci:14, 3, 27] <|@ <|@
      nr  238  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  240  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction r9|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction rcx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction r8|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27] <|@ <|@
      nr  252  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  256  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  258  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:88|QWORD[.] 
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27] <|@ <|@
      nr  268  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  272  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  274  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:88|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27] <|@ <|@
      nr  286  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27] <|@ <|@
      nr  296  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_2       
     2: aload_1       
     3: invokevirtual #8          // isShorterThan:(List$Element, List$Element)boolean
     6: ifeq          44
     9: aload_0       
    10: aload_0       
    11: aload_1       
    12: invokevirtual #7          // List$Element.getNext:()List$Element
    15: aload_2       
    16: aload_3       
    17: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    20: aload_0       
    21: aload_2       
    22: invokevirtual #7          // List$Element.getNext:()List$Element
    25: aload_3       
    26: aload_1       
    27: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    30: aload_0       
    31: aload_3       
    32: invokevirtual #7          // List$Element.getNext:()List$Element
    35: aload_1       
    36: aload_2       
    37: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    40: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    43: areturn       
    44: aload_3       
    45: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B10" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a872160 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B10 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   16  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B11 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction rax|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   30  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: r9|QWORD[.], y: r9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B11 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - r9|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: rbx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3] <|@ <|@
      nr   48  <|@ instruction r9|DWORD[_] = MOV input: [r9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   54  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B10" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B10 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" "B0" 
    successors 
    xhandlers
    flags 
    probability 4604906646667520750
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" "B2" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction rbx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction r9|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B14" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: r9|QWORD[.], y: r9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B13 -> B15 falseDestination: B13 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - r9|QWORD[.] rbx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r11|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17] <|@ <|@
      nr  100  <|@ instruction r9|DWORD[_] = MOV input: [r9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  102  <|@ instruction rbx|DWORD[_] = MOV input: [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  108  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" 
    successors "B16" "B13" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: rbx|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B12 -> B16 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction stack:72|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" "B16" 
    successors "B18" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  194  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] Object[null] stack:64|QWORD[.] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD state [bci:20] <|@ <|@
      nr  196  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  198  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B19 -> B21 falseDestination: B19 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r10|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r11|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27] <|@ <|@
      nr  216  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  218  <|@ instruction r8|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  220  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B22" "B19" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B18 -> B22 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction stack:80|QWORD[.] = STACKMOVE (input: stack:48|QWORD[.], ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr  308  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  298  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] Object[null] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD state [bci:30] <|@ <|@
      nr  314  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  316  <|@ instruction rcx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r10|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37] <|@ <|@
      nr  334  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  336  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  338  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  340  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" 
    successors "B28" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  324  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B24 -> B28 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  426  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction rsi|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B32" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B31 -> B33 falseDestination: B31 -> B32 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rsi|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40] <|@ <|@
      nr  444  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  446  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  448  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  450  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B32" 
    successors "B35" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  434  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B30 -> B35 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" "B30" 
    successors 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  536  <|@ instruction rax|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B29" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction stack:64|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:64|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37] <|@ <|@
      nr  354  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  356  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction r9|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction r8|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37] <|@ <|@
      nr  370  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  374  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  386  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:88|QWORD[.] 
locals: stack:40|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37] <|@ <|@
      nr  388  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  392  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  394  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:88|QWORD[.] stack:48|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37] <|@ <|@
      nr  404  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37] <|@ <|@
      nr  414  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40] <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r11|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr  466  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rcx|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr  468  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  470  <|@ instruction r9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction rbx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction r8|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction stack:56|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40] <|@ <|@
      nr  484  <|@ instruction r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  488  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  490  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40] <|@ <|@
      nr  500  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  504  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  506  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:48|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40] <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40] <|@ <|@
      nr  526  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] stack:72|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17] <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] stack:72|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rcx|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] stack:72|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r8|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr  120  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ instruction r9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction r10|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction rdi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17] <|@ <|@
      nr  138  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  142  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:80|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17] <|@ <|@
      nr  154  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  158  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:80|QWORD[.] stack:72|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17] <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rdx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17] <|@ <|@
      nr  180  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:80|QWORD[.] r8|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] rdx|QWORD[.] stack:56|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27] <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:80|QWORD[.] r8|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] rdx|QWORD[.] stack:56|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r8|QWORD[.]] state [bci:14, 3, 27] <|@ <|@
      nr  238  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  240  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction r9|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction rcx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction r8|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27] <|@ <|@
      nr  252  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  256  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  258  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:88|QWORD[.] 
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27] <|@ <|@
      nr  268  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  272  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  274  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:88|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27] <|@ <|@
      nr  286  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27] <|@ <|@
      nr  296  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_2       
     2: aload_1       
     3: invokevirtual #8          // isShorterThan:(List$Element, List$Element)boolean
     6: ifeq          44
     9: aload_0       
    10: aload_0       
    11: aload_1       
    12: invokevirtual #7          // List$Element.getNext:()List$Element
    15: aload_2       
    16: aload_3       
    17: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    20: aload_0       
    21: aload_2       
    22: invokevirtual #7          // List$Element.getNext:()List$Element
    25: aload_3       
    26: aload_1       
    27: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    30: aload_0       
    31: aload_3       
    32: invokevirtual #7          // List$Element.getNext:()List$Element
    35: aload_1       
    36: aload_2       
    37: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    40: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    43: areturn       
    44: aload_3       
    45: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B10" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a872160 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B10 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   16  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B11 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction rax|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   30  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: r9|QWORD[.], y: r9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B11 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - r9|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: rbx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3] <|@ <|@
      nr   48  <|@ instruction r9|DWORD[_] = MOV input: [r9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   54  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B10" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B10 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" "B0" 
    successors 
    xhandlers
    flags 
    probability 4604906646667520750
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" "B2" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction rbx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction r9|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B14" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: r9|QWORD[.], y: r9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B13 -> B15 falseDestination: B13 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - r9|QWORD[.] rbx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r11|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17] <|@ <|@
      nr  100  <|@ instruction r9|DWORD[_] = MOV input: [r9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  102  <|@ instruction rbx|DWORD[_] = MOV input: [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  108  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" 
    successors "B16" "B13" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: rbx|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B12 -> B16 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction stack:72|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" "B16" 
    successors "B18" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  194  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] Object[null] stack:64|QWORD[.] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD state [bci:20] <|@ <|@
      nr  196  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  198  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B19 -> B21 falseDestination: B19 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r10|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r11|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27] <|@ <|@
      nr  216  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  218  <|@ instruction r8|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  220  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B22" "B19" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B18 -> B22 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction stack:80|QWORD[.] = STACKMOVE (input: stack:48|QWORD[.], ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr  308  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  298  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] Object[null] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD state [bci:30] <|@ <|@
      nr  314  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  316  <|@ instruction rcx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r10|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37] <|@ <|@
      nr  334  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  336  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  338  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  340  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" 
    successors "B28" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  324  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B24 -> B28 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  426  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction rsi|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B32" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B31 -> B33 falseDestination: B31 -> B32 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rsi|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40] <|@ <|@
      nr  444  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  446  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  448  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  450  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B32" 
    successors "B35" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  434  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B30 -> B35 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" "B30" 
    successors 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  536  <|@ instruction rax|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B29" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction stack:64|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:64|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37] <|@ <|@
      nr  354  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  356  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction r9|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction r8|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37] <|@ <|@
      nr  370  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  374  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  386  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:88|QWORD[.] 
locals: stack:40|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37] <|@ <|@
      nr  388  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  392  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  394  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:88|QWORD[.] stack:48|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37] <|@ <|@
      nr  404  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37] <|@ <|@
      nr  414  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40] <|@ <|@
      nr  464  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r11|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr  466  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rcx|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr  468  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  470  <|@ instruction r9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction rbx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction r8|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction stack:56|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40] <|@ <|@
      nr  484  <|@ instruction r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  488  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  490  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40] <|@ <|@
      nr  500  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  504  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  506  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:48|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40] <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40] <|@ <|@
      nr  526  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] stack:72|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17] <|@ <|@
      nr  116  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] stack:72|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rcx|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] stack:72|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r8|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr  120  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ instruction r9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction r10|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction rdi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17] <|@ <|@
      nr  138  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  142  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:80|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17] <|@ <|@
      nr  154  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  158  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:80|QWORD[.] stack:72|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17] <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rdx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17] <|@ <|@
      nr  180  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:80|QWORD[.] r8|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] rdx|QWORD[.] stack:56|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27] <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:80|QWORD[.] r8|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] rdx|QWORD[.] stack:56|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r8|QWORD[.]] state [bci:14, 3, 27] <|@ <|@
      nr  238  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  240  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction r9|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction rcx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction r8|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27] <|@ <|@
      nr  252  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  256  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  258  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:88|QWORD[.] 
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27] <|@ <|@
      nr  268  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  272  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  274  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:88|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27] <|@ <|@
      nr  286  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ st <@st|@live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27] <|@ <|@
      nr  296  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_2       
     2: aload_1       
     3: invokevirtual #8          // isShorterThan:(List$Element, List$Element)boolean
     6: ifeq          44
     9: aload_0       
    10: aload_0       
    11: aload_1       
    12: invokevirtual #7          // List$Element.getNext:()List$Element
    15: aload_2       
    16: aload_3       
    17: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    20: aload_0       
    21: aload_2       
    22: invokevirtual #7          // List$Element.getNext:()List$Element
    25: aload_3       
    26: aload_1       
    27: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    30: aload_0       
    31: aload_3       
    32: invokevirtual #7          // List$Element.getNext:()List$Element
    35: aload_1       
    36: aload_2       
    37: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    40: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    43: areturn       
    44: aload_3       
    45: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B10" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a872160 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B10 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   16  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B11 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction rax|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   30  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: r9|QWORD[.], y: r9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B11 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rsi:0, r8:0, r9:0, r10:0, r11:0]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - r9|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: rbx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3] <|@ <|@
      nr   48  <|@ instruction r9|DWORD[_] = MOV input: [r9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   54  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B10" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B10 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" "B0" 
    successors 
    xhandlers
    flags 
    probability 4604906646667520750
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" "B2" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction rbx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction r9|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B14" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: r9|QWORD[.], y: r9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B13 -> B15 falseDestination: B13 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rbx:0, rsi:0, r8:0, r9:0, r10:0, r11:0, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - r9|QWORD[.] rbx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r11|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17] <|@ <|@
      nr  100  <|@ instruction r9|DWORD[_] = MOV input: [r9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  102  <|@ instruction rbx|DWORD[_] = MOV input: [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  108  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" 
    successors "B16" "B13" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: rbx|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B12 -> B16 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction stack:72|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" "B16" 
    successors "B18" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  194  <|@ st <@st|@reference-map: [rcx:0, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] Object[null] stack:64|QWORD[.] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD state [bci:20] <|@ <|@
      nr  196  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  198  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B19 -> B21 falseDestination: B19 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r8:0, r10:0, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r10|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r11|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27] <|@ <|@
      nr  216  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  218  <|@ instruction r8|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  220  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B22" "B19" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B18 -> B22 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction stack:80|QWORD[.] = STACKMOVE (input: stack:48|QWORD[.], ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr  308  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  298  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] Object[null] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD state [bci:30] <|@ <|@
      nr  314  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  316  <|@ instruction rcx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r10:0, stack:16, stack:24, stack:40, stack:48, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r10|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37] <|@ <|@
      nr  334  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  336  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  338  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  340  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" 
    successors "B28" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  324  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B24 -> B28 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  426  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction rsi|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B32" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B31 -> B33 falseDestination: B31 -> B32 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, stack:16, stack:24, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rsi|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40] <|@ <|@
      nr  444  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  446  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  448  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  450  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B32" 
    successors "B35" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  434  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B30 -> B35 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" "B30" 
    successors 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  536  <|@ instruction rax|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B29" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction stack:64|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ st <@st|@reference-map: [rcx:0, rdx:0, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:64|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37] <|@ <|@
      nr  354  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  356  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction r9|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction r8|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37] <|@ <|@
      nr  370  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  374  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  386  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:88|QWORD[.] 
locals: stack:40|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37] <|@ <|@
      nr  388  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  392  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  394  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:88|QWORD[.] stack:48|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37] <|@ <|@
      nr  404  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37] <|@ <|@
      nr  414  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r10:0, r11:0, stack:16, stack:24, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40] <|@ <|@
      nr  464  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r10:0, r11:0, stack:16, stack:24, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r11|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr  466  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r10:0, r11:0, stack:16, stack:24, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rcx|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr  468  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  470  <|@ instruction r9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction rbx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction r8|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction stack:56|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:40, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40] <|@ <|@
      nr  484  <|@ instruction r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  488  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  490  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40] <|@ <|@
      nr  500  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  504  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  506  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ st <@st|@reference-map: [stack:16, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:48|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40] <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ st <@st|@reference-map: []
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40] <|@ <|@
      nr  526  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r8:0, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] stack:72|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17] <|@ <|@
      nr  116  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r8:0, r10:0, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] stack:72|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rcx|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr  118  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r8:0, r10:0, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] stack:72|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r8|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr  120  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ instruction r9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction r10|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction rdi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ st <@st|@reference-map: [stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17] <|@ <|@
      nr  138  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  142  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:80|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17] <|@ <|@
      nr  154  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  158  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:80|QWORD[.] stack:72|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17] <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rdx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ st <@st|@reference-map: [stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17] <|@ <|@
      nr  180  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ st <@st|@reference-map: [rdx:0, r8:0, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:80|QWORD[.] r8|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] rdx|QWORD[.] stack:56|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27] <|@ <|@
      nr  236  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:80|QWORD[.] r8|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] rdx|QWORD[.] stack:56|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r8|QWORD[.]] state [bci:14, 3, 27] <|@ <|@
      nr  238  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  240  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction r9|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction rcx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction r8|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27] <|@ <|@
      nr  252  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  256  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  258  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:88|QWORD[.] 
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27] <|@ <|@
      nr  268  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  272  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  274  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:88|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27] <|@ <|@
      nr  286  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ st <@st|@reference-map: [stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27] <|@ <|@
      nr  296  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_2       
     2: aload_1       
     3: invokevirtual #8          // isShorterThan:(List$Element, List$Element)boolean
     6: ifeq          44
     9: aload_0       
    10: aload_0       
    11: aload_1       
    12: invokevirtual #7          // List$Element.getNext:()List$Element
    15: aload_2       
    16: aload_3       
    17: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    20: aload_0       
    21: aload_2       
    22: invokevirtual #7          // List$Element.getNext:()List$Element
    25: aload_3       
    26: aload_1       
    27: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    30: aload_0       
    31: aload_3       
    32: invokevirtual #7          // List$Element.getNext:()List$Element
    35: aload_1       
    36: aload_2       
    37: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    40: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    43: areturn       
    44: aload_3       
    45: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B10" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a872160 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B10 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B4" 
    xhandlers
    flags 
    probability 4606274977084054696
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   16  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B11 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4605968187672010323
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction rax|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   28  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   30  <|@ instruction r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B11" "B7" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4618184076218655825
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: r9|QWORD[.], y: r9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B11 falseDestination: B6 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4617937953378599289
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, rsi:0, r8:0, r9:0, r10:0, r11:0]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - r9|QWORD[.] rax|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: rbx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3] <|@ <|@
      nr   48  <|@ instruction r9|DWORD[_] = MOV input: [r9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   52  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   54  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr   56  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B7" 
    successors "B10" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4618912074394441028
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B10 falseDestination: B5 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" "B0" 
    successors 
    xhandlers
    flags 
    probability 4604906646667520750
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B6" "B2" 
    successors "B12" 
    xhandlers
    flags 
    probability 4598223164182899237
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ instruction stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   78  <|@ instruction stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   82  <|@ instruction rbx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction r9|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B14" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4610269302591148012
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction TESTBRANCH (x: r9|QWORD[.], y: r9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B13 -> B15 falseDestination: B13 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4609981802634026362
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rbx:0, rsi:0, r8:0, r9:0, r10:0, r11:0, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - r9|QWORD[.] rbx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r11|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17] <|@ <|@
      nr  100  <|@ instruction r9|DWORD[_] = MOV input: [r9|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  102  <|@ instruction rbx|DWORD[_] = MOV input: [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  106  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  108  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" 
    successors "B16" "B13" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4611119688700274691
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   90  <|@ instruction TESTBRANCH (x: rbx|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B12 -> B16 falseDestination: B12 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4595971109163548858
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction stack:72|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" "B16" 
    successors "B18" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  194  <|@ st <@st|@reference-map: [rcx:0, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 20]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] Object[null] stack:64|QWORD[.] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD state [bci:20] <|@ <|@
      nr  196  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  198  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B20" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B19 -> B21 falseDestination: B19 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B18" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r8:0, r10:0, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r10|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction SAFEPOINT temp: r11|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27] <|@ <|@
      nr  216  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  218  <|@ instruction r8|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  220  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B22" "B19" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  206  <|@ instruction TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B18 -> B22 falseDestination: B18 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction stack:80|QWORD[.] = STACKMOVE (input: stack:48|QWORD[.], ~backupSlot: stack:32|QWORD) scratch: rax <|@ <|@
      nr  308  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" "B22" 
    successors "B24" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  298  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 30]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] Object[null] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD state [bci:30] <|@ <|@
      nr  314  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  316  <|@ instruction rcx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  320  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B26" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r10:0, stack:16, stack:24, stack:40, stack:48, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] r10|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37] <|@ <|@
      nr  334  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  336  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  338  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  340  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" 
    successors "B28" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  324  <|@ instruction TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B24 -> B28 falseDestination: B24 -> B25 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4595971109163548859
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  420  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  426  <|@ instruction rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction rsi|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B32" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4610269302591148013
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B31 -> B33 falseDestination: B31 -> B32 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B30" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4609981802634026363
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, stack:16, stack:24, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 5]
locals: - - - rsi|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40] <|@ <|@
      nr  444  <|@ instruction rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  446  <|@ instruction rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  448  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  450  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  452  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B32" 
    successors "B35" "B31" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611119688700274693
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  434  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B30 -> B35 falseDestination: B30 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" "B30" 
    successors 
    xhandlers
    flags 
    probability 4598223164182899238
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  536  <|@ instruction rax|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B29" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction stack:64|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  352  <|@ st <@st|@reference-map: [rcx:0, rdx:0, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:64|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37] <|@ <|@
      nr  354  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  356  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  358  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  360  <|@ instruction rdx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction r9|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  364  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction r8|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37] <|@ <|@
      nr  370  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  374  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  376  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  386  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:88|QWORD[.] 
locals: stack:40|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37] <|@ <|@
      nr  388  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  392  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  394  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:88|QWORD[.] stack:48|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37] <|@ <|@
      nr  404  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37] <|@ <|@
      nr  414  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r10:0, r11:0, stack:16, stack:24, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rdx|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40] <|@ <|@
      nr  464  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r10:0, r11:0, stack:16, stack:24, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [r11|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr  466  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r10:0, r11:0, stack:16, stack:24, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] r10|QWORD[.] r11|QWORD[.] rcx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction NULLCHECK address: [rcx|QWORD[.]] state [bci:14, 3, 40] <|@ <|@
      nr  468  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  470  <|@ instruction r9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction rbx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction r8|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction stack:56|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:40, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40] <|@ <|@
      nr  484  <|@ instruction r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  488  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  490  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  498  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:48|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:80|QWORD[.] stack:56|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40] <|@ <|@
      nr  500  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  504  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  506  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  508  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ st <@st|@reference-map: [stack:16, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:48|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40] <|@ <|@
      nr  516  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  520  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ st <@st|@reference-map: []
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40] <|@ <|@
      nr  526  <|@ instruction rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  528  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r8:0, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] stack:72|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17] <|@ <|@
      nr  116  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r8:0, r10:0, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] stack:72|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rcx|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr  118  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r8:0, r10:0, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: rsi|QWORD[.] stack:72|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: rsi|QWORD[.] 
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r8|QWORD[.]] state [bci:14, 3, 17] <|@ <|@
      nr  120  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  122  <|@ instruction r9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction r10|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction rdi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  136  <|@ st <@st|@reference-map: [stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17] <|@ <|@
      nr  138  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  142  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  150  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:80|QWORD[.] 
locals: stack:40|QWORD[.] stack:72|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17] <|@ <|@
      nr  154  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  158  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:80|QWORD[.] stack:72|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17] <|@ <|@
      nr  170  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction rdx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ st <@st|@reference-map: [stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17] <|@ <|@
      nr  180  <|@ instruction stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B23" 
    xhandlers
    flags 
    probability 4589264419977111331
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ st <@st|@reference-map: [rdx:0, r8:0, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:80|QWORD[.] r8|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] rdx|QWORD[.] stack:56|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27] <|@ <|@
      nr  236  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.isShorterThan(List$Element, List$Element) [bci: 14]
locals: - - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 3]
locals: stack:40|QWORD[.] stack:80|QWORD[.] r8|QWORD[.] rdx|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] rdx|QWORD[.] stack:56|QWORD[.] r8|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [r8|QWORD[.]] state [bci:14, 3, 27] <|@ <|@
      nr  238  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  240  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction r9|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction rcx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction r8|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  250  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 17]
stack: stack:40|QWORD[.] 
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27] <|@ <|@
      nr  252  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  256  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  258  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  262  <|@ instruction r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:88|QWORD[.] 
locals: stack:40|QWORD[.] stack:80|QWORD[.] stack:64|QWORD[.] stack:48|QWORD[.] 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27] <|@ <|@
      nr  268  <|@ instruction rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  272  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3 <|@ <|@
      nr  274  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ st <@st|@reference-map: [stack:8, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 37]
stack: stack:40|QWORD[.] stack:88|QWORD[.] stack:80|QWORD[.] 
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27] <|@ <|@
      nr  286  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ st <@st|@reference-map: [stack:24, stack:32, stack:40, stack:48, stack:56]
live-base-pointers: []
List.tail(List$Element, List$Element, List$Element) [bci: 40]
locals: - - - - 
List.tail(List$Element, List$Element, List$Element) [bci: 27]
stack: stack:40|QWORD[.] stack:72|QWORD[.] 
locals: stack:40|QWORD[.] stack:48|QWORD[.] stack:56|QWORD[.] stack:64|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27] <|@ <|@
      nr  296  <|@ instruction stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_2       
     2: aload_1       
     3: invokevirtual #8          // isShorterThan:(List$Element, List$Element)boolean
     6: ifeq          44
     9: aload_0       
    10: aload_0       
    11: aload_1       
    12: invokevirtual #7          // List$Element.getNext:()List$Element
    15: aload_2       
    16: aload_3       
    17: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    20: aload_0       
    21: aload_2       
    22: invokevirtual #7          // List$Element.getNext:()List$Element
    25: aload_3       
    26: aload_1       
    27: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    30: aload_0       
    31: aload_3       
    32: invokevirtual #7          // List$Element.getNext:()List$Element
    35: aload_1       
    36: aload_2       
    37: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    40: invokevirtual #2          // tail:(List$Element, List$Element, List$Element)List$Element
    43: areturn       
    44: aload_3       
    45: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc000000738a7f00004d03d44d33e4493bc20f85e3ffffff89842400c0feff4883ec5841817f20000000000f850805000048896c24500f1f4400004885d20f845d000000448b5210458bda49c1e3034885c90f84630000008b411048c1e0034c8bc8498bc3e9320000006666660f1f8400000000006666669066904d85c90f8437000000498b9f580400008503458b49108b401048c1e00349c1e1034885c075da498bc0488b6c24504883c458493ba7500400000f878f040000c34889742438488954243048894c24284c89442420498bdb4c8bc9e922000000904d85c90f84c7020000498bbf580400008507458b49108b5b1048c1e30349c1e1034885db75da4c894424188b7110448bd649c1e2034d8bc2488b542420666690e93d0000006666660f1f840000000000666666900f1f840000000000666666904885d20f84260300004d8b9f580400004185038b5210458b401049c1e00348c1e2034d85c075d94889442440488b4424304889442410488b4424404c8b442420418b7010448bd649c1e203498bca488b542430e9290000000f1f8400000000004885d20f84770000004d8b87580400004185008b52108b491048c1e10348c1e2034885c975da488b4c2428488b542418488b742410e927000000660f1f4400004885f60f84030100004d8b87580400004185008b76108b521048c1e20348c1e6034885d275da488bc1488b6c24504883c458493ba7500400000f8747030000c34c89542420488b4c2428488b5424308b34f510000000448bc649c1e003488b7424384c8bda498bd04c8bc9498bcb4d8bc16690e8000000000f1f840000000000488b5424308b72108bce48c1e103488b742438488bd1488b4c24284c8b44242048894424086690e8000000000f1f840000000000488b4c24288b71108bd648c1e203488b742438488b4c24204c8b442430488944243090e8000000000f1f840000000000488b742438488b542408488b4c24304c8bc090e8000000000f1f840000000000488bc8e9dffeffff4c8b5c24104c8b542418488b742438418b5210418503850148c1e2034c8bce488bd9498bcb4c8bc348895c24286690e8000000000f1f8400000000004c8b5c2410418b73108bd648c1e203488b742438488b4c24284c8b4424184889442430e8000000000f1f840000000000488b4c24288b71108bd648c1e203488b742438488b4c24184c8b442410488944241090e8000000000f1f840000000000488b742438488b542430488b4c24104c8bc090e8000000000f1f840000000000488bc8e956feffff4c895c2418468b14d510000000850141850049c1e2034c8bce498bd24c8bd1498bf890e8000000000f1f840000000000488b4c24288b71108bd648c1e203488b742438488b4c24204c8b442418488944241090e8000000000f1f8400000000004c8b442420418b70108bd648c1e203488b742438488b4c24184c8b4424284889442418e8000000000f1f840000000000488b742438488b542410488b4c24184c8bc090e8000000000f1f8400000000004889442418488b4c2428e99cfcffff4c895424104c8b442420488b5424308b34f510000000418500448bde49c1e303488b7424384c8bca498bd3498bc84d8bc1666690e8000000000f1f8400000000004c8b442420418b70108bd648c1e203488b742438488b4c24304c8b4424104889442408e8000000000f1f840000000000488b5424308b72108bce48c1e103488b742438488bd1488b4c24104c8b44242048894424106690e8000000000f1f840000000000488b742438488b542408488b4c24104c8bc090e8000000000f1f8400000000004889442410e93dfcffff48896c2450e800000000e9e9fafffff4488d0d5dfbffff49898f680400000f1f4000e99bfafffff4488d0da5fcffff49898f68040000e987fafffff441c78784040000f597feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f57dfeff49c7879004000000000000e8000000000f1f84000000000041c78784040000f572feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f55efeff49c7879004000000000000e8000000000f1f84000000000041c78784040000f559feff49c78790040000000000000f1f4000e8000000000f1f84000000000041c78784040000f554feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5a8feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5a3feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f59efeff49c7879004000000000000e8000000000f1f84000000000041c78784040000f58cfeff49c7879004000000000000e8000000000f1f84000000000041c78784040000f587feff49c7879004000000000000e8000000000f1f84000000000090e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f8ae42335c8, value=140234155417728]:0x7f8acf04e080}  <||@
  Comment 29 [stack overflow check]  <||@
  Comment 29 VERIFIED_ENTRY  <||@
  Comment 40 FRAME_COMPLETE  <||@
  Comment 40 ENTRY_BARRIER_PATCH  <||@
  Comment 54 block B0 null  <||@
  Comment 54 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 54 2 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 59 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a872160 slotKind: QWORD  <||@
  Comment 59 6 TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B10 falseDestination: B0 -> B2 size: QWORD  <||@
  Comment 73 block B2 null  <||@
  Comment 73 12 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 73 14 r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 77 16 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 84 18 TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B11 falseDestination: B2 -> B4 size: QWORD  <||@
  Comment 93 block B4 null  <||@
  Comment 93 24 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 93 26 rax|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD  <||@
  Comment 96 28 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 100 30 r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 103 32 rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 106 34 JUMP ~outgoingValues: [] destination: B4 -> B5  <||@
  Comment 111 block B6 loop 0 depth 1 header:41|LoopBegin  <||@
  Comment 111 40 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 128 42 TESTBRANCH (x: r9|QWORD[.], y: r9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B11 falseDestination: B6 -> B7 size: QWORD  <||@
  Comment 137 block B7 loop 0 depth 1 header:41|LoopBegin  <||@
  Comment 137 44 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 137 46 SAFEPOINT temp: rbx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3]  <||@
  Comment 144 [rax:0, rcx:0, rdx:0, rsi:0, r8:0, r9:0, r10:0, r11:0]at List.isShorterThan(List$Element, List$Element) [bci: 5, duringCall: false, rethrow: false]
              |0  |1  |2  |3            |4            
     locals:  |-  |-  |-  |r9|QWORD[.]  |rax|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0             |1             |2             |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.]   <||@
  Comment 144 {infopoint: SAFEPOINT}  <||@
  Comment 144 POLL_FAR  <||@
  Comment 146 48 r9|DWORD[_] = MOV input: [r9|QWORD[.] + 16] size: DWORD  <||@
  Comment 150 50 rax|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 153 52 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 157 54 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 161 56 JUMP ~outgoingValues: [] destination: B7 -> B5  <||@
  Comment 161 block B5 loop 0 depth 1 header:41|LoopBegin  <||@
  Comment 161 36 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 161 38 TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B10 falseDestination: B5 -> B6 size: QWORD  <||@
  Comment 166 block B10 null  <||@
  Comment 166 66 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 166 68 rax|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 169 70 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07  <||@
  Comment 178 POLL_RETURN_FAR  <||@
  Comment 192 block B11 null  <||@
  Comment 192 72 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 192 74 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 197 76 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 202 78 stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 207 80 stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 212 82 rbx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 215 84 r9|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 218 86 JUMP ~outgoingValues: [] destination: B11 -> B12  <||@
  Comment 223 block B13 loop 1 depth 1 header:97|LoopBegin  <||@
  Comment 223 92 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 224 94 TESTBRANCH (x: r9|QWORD[.], y: r9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B13 -> B15 falseDestination: B13 -> B14 size: QWORD  <||@
  Comment 233 block B14 loop 1 depth 1 header:97|LoopBegin  <||@
  Comment 233 96 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 233 98 SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17]  <||@
  Comment 240 [rcx:0, rdx:0, rbx:0, rsi:0, r8:0, r9:0, r10:0, r11:0, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 5, duringCall: false, rethrow: false]
              |0  |1  |2  |3            |4            
     locals:  |-  |-  |-  |r9|QWORD[.]  |rbx|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0             |1             |2             |3           
     locals:  |rsi|QWORD[.]  |r11|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0             |1             |2             |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.] 
     stack:   |rsi|QWORD[.]  |              |              |              <||@
  Comment 240 {infopoint: SAFEPOINT}  <||@
  Comment 240 POLL_FAR  <||@
  Comment 242 100 r9|DWORD[_] = MOV input: [r9|QWORD[.] + 16] size: DWORD  <||@
  Comment 246 102 rbx|DWORD[_] = MOV input: [rbx|QWORD[.] + 16] size: DWORD  <||@
  Comment 249 104 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 253 106 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 257 108 JUMP ~outgoingValues: [] destination: B14 -> B12  <||@
  Comment 257 block B12 loop 1 depth 1 header:97|LoopBegin  <||@
  Comment 257 88 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 257 90 TESTBRANCH (x: rbx|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B12 -> B16 falseDestination: B12 -> B13 size: QWORD  <||@
  Comment 262 block B16 null  <||@
  Comment 262 186 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 262 188 stack:72|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 267 190 JUMP ~outgoingValues: [] destination: B16 -> B17  <||@
  Comment 267 block B17 null  <||@
  Comment 267 192 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 267 194 rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD state [bci:20]  <||@
  Comment 267 [rcx:0, stack:24, stack:32, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1                  |2             |3                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |Object[null]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |              |                    <||@
  Comment 267 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 270 196 r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 277 198 r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 280 200 rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 285 202 JUMP ~outgoingValues: [] destination: B17 -> B18  <||@
  Comment 293 block B19 loop 2 depth 1 header:151|LoopBegin  <||@
  Comment 293 208 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 320 210 TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B19 -> B21 falseDestination: B19 -> B20 size: QWORD  <||@
  Comment 329 block B20 loop 2 depth 1 header:151|LoopBegin  <||@
  Comment 329 212 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 329 214 SAFEPOINT temp: r11|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27]  <||@
  Comment 336 [rcx:0, rdx:0, rsi:0, r8:0, r10:0, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 5, duringCall: false, rethrow: false]
              |0  |1  |2  |3             |4           
     locals:  |-  |-  |-  |rdx|QWORD[.]  |r8|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1             |2                  |3                 
     locals:  |stack:40|QWORD[.]  |r10|QWORD[.]  |stack:64|QWORD[.]  |stack:48|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2             |3                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |rcx|QWORD[.]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |              |                    <||@
  Comment 336 {infopoint: SAFEPOINT}  <||@
  Comment 336 POLL_FAR  <||@
  Comment 339 216 rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 342 218 r8|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD  <||@
  Comment 346 220 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 350 222 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 354 224 JUMP ~outgoingValues: [] destination: B20 -> B18  <||@
  Comment 354 block B18 loop 2 depth 1 header:151|LoopBegin  <||@
  Comment 354 204 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 354 206 TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B18 -> B22 falseDestination: B18 -> B19 size: QWORD  <||@
  Comment 359 block B22 null  <||@
  Comment 359 302 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 359 304 stack:80|QWORD[.] = STACKMOVE (input: stack:48|QWORD[.], ~backupSlot: stack:32|QWORD) scratch: rax  <||@
  Comment 379 308 JUMP ~outgoingValues: [] destination: B22 -> B23  <||@
  Comment 379 block B23 null  <||@
  Comment 379 310 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 379 298 r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 384 312 rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD state [bci:30]  <||@
  Comment 384 [stack:16, stack:24, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 30, duringCall: false, rethrow: false]
              |0                  |1                  |2                  |3            
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |Object[null] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |               <||@
  Comment 384 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 388 314 r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 395 316 rcx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 398 318 rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 403 320 JUMP ~outgoingValues: [] destination: B23 -> B24  <||@
  Comment 408 block B25 loop 3 depth 1 header:205|LoopBegin  <||@
  Comment 408 326 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 416 328 TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: QWORD  <||@
  Comment 425 block B26 loop 3 depth 1 header:205|LoopBegin  <||@
  Comment 425 330 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 425 332 SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37]  <||@
  Comment 432 [rcx:0, rdx:0, rsi:0, r10:0, stack:16, stack:24, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 5, duringCall: false, rethrow: false]
              |0  |1  |2  |3             |4            
     locals:  |-  |-  |-  |rdx|QWORD[.]  |rcx|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1             |2                  |3                 
     locals:  |stack:40|QWORD[.]  |r10|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 37, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3 
     locals:  |-                  |-                  |-                  |- 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |    <||@
  Comment 432 {infopoint: SAFEPOINT}  <||@
  Comment 432 POLL_FAR  <||@
  Comment 435 334 rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 438 336 rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD  <||@
  Comment 441 338 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 445 340 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 449 342 JUMP ~outgoingValues: [] destination: B26 -> B24  <||@
  Comment 449 block B24 loop 3 depth 1 header:205|LoopBegin  <||@
  Comment 449 322 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 449 324 TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B24 -> B28 falseDestination: B24 -> B25 size: QWORD  <||@
  Comment 454 block B28 null  <||@
  Comment 454 418 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 454 420 rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 459 422 JUMP ~outgoingValues: [] destination: B28 -> B29  <||@
  Comment 459 block B29 null  <||@
  Comment 459 424 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 459 426 rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 464 428 rsi|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 469 430 JUMP ~outgoingValues: [] destination: B29 -> B30  <||@
  Comment 474 block B31 loop 4 depth 1 header:259|LoopBegin  <||@
  Comment 474 436 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 480 438 TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B31 -> B33 falseDestination: B31 -> B32 size: QWORD  <||@
  Comment 489 block B32 loop 4 depth 1 header:259|LoopBegin  <||@
  Comment 489 440 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 489 442 SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40]  <||@
  Comment 496 [rcx:0, rdx:0, rsi:0, stack:16, stack:24, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 5, duringCall: false, rethrow: false]
              |0  |1  |2  |3             |4            
     locals:  |-  |-  |-  |rsi|QWORD[.]  |rdx|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3            
     locals:  |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |rcx|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 496 {infopoint: SAFEPOINT}  <||@
  Comment 496 POLL_FAR  <||@
  Comment 499 444 rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 502 446 rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 505 448 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 509 450 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 513 452 JUMP ~outgoingValues: [] destination: B32 -> B30  <||@
  Comment 513 block B30 loop 4 depth 1 header:259|LoopBegin  <||@
  Comment 513 432 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 513 434 TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B30 -> B35 falseDestination: B30 -> B31 size: QWORD  <||@
  Comment 518 block B35 null  <||@
  Comment 518 534 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 518 536 rax|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 521 538 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07  <||@
  Comment 530 POLL_RETURN_FAR  <||@
  Comment 544 block B27 null  <||@
  Comment 544 344 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 544 346 stack:64|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 549 348 rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 554 350 rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 559 352 rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37]  <||@
  Comment 559 [rcx:0, rdx:0, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2             |3            
     locals:  |stack:40|QWORD[.]  |stack:64|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 37, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3 
     locals:  |-                  |-                  |-                  |- 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |    <||@
  Comment 559 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 566 354 r8|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 573 356 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 578 358 r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 581 360 rdx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 584 362 r9|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 587 364 rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 590 366 r8|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 593 368 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37]  <||@
  Comment 595 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 595 INVOKESPECIAL  <||@
  Comment 600 [stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:64|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                   |                   |                  
  at List.tail(List$Element, List$Element, List$Element) [bci: 37, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3 
     locals:  |-                  |-                  |-                  |- 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |    <||@
  Comment 608 370 rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 613 372 rsi|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 616 374 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 622 376 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 627 378 rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 630 380 rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 635 382 r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 640 384 stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 645 386 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37]  <||@
  Comment 647 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 647 INVOKESPECIAL  <||@
  Comment 652 [stack:8, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:64|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:88|QWORD[.]  |                   |                  
  at List.tail(List$Element, List$Element, List$Element) [bci: 37, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3 
     locals:  |-                  |-                  |-                  |- 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |    <||@
  Comment 660 388 rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 665 390 rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD  <||@
  Comment 668 392 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 674 394 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 679 396 rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 684 398 r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 689 400 stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 694 402 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37]  <||@
  Comment 695 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 695 INVOKESPECIAL  <||@
  Comment 700 [stack:8, stack:16, stack:24, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 37, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3 
     locals:  |-                  |-                  |-                  |- 
     stack:   |stack:40|QWORD[.]  |stack:88|QWORD[.]  |stack:48|QWORD[.]  |  
  at List.tail(List$Element, List$Element, List$Element) [bci: 37, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3 
     locals:  |-                  |-                  |-                  |- 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |    <||@
  Comment 708 404 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 713 406 rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 718 408 rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 723 410 r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 726 412 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37]  <||@
  Comment 727 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 727 INVOKESPECIAL  <||@
  Comment 732 [stack:16, stack:24, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 37, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3 
     locals:  |-                  |-                  |-                  |- 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |    <||@
  Comment 740 414 rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 743 416 JUMP ~outgoingValues: [] destination: B27 -> B29  <||@
  Comment 748 block B33 null  <||@
  Comment 748 454 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 748 456 r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 753 458 r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 758 460 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 763 462 rdx|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40]  <||@
  Comment 763 [rcx:0, rsi:0, r10:0, r11:0, stack:16, stack:24, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0             |1             |2             |3            
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |r11|QWORD[.]  |rcx|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 763 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 767 464 NULLCHECK address: [r11|QWORD[.]] state [bci:14, 3, 40]  <||@
  Comment 767 [rcx:0, rdx:0, rsi:0, r10:0, r11:0, stack:16, stack:24, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0             |1             |2             |3            
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |r11|QWORD[.]  |rcx|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 767 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 770 466 NULLCHECK address: [rcx|QWORD[.]] state [bci:14, 3, 40]  <||@
  Comment 770 [rcx:0, rdx:0, rsi:0, r10:0, r11:0, stack:16, stack:24, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0             |1             |2             |3            
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |r11|QWORD[.]  |rcx|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 770 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 772 468 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 776 470 r9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 779 474 rbx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 782 476 rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 785 478 r8|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 788 480 stack:56|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 793 482 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40]  <||@
  Comment 795 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 795 INVOKESPECIAL  <||@
  Comment 800 [stack:16, stack:24, stack:40, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |stack:56|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                   |                   |                  
  at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 808 484 r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 813 486 rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 16] size: DWORD  <||@
  Comment 817 488 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 823 490 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 828 492 rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 833 494 r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 838 496 stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 843 498 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40]  <||@
  Comment 843 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 843 INVOKESPECIAL  <||@
  Comment 848 [stack:16, stack:24, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |stack:56|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:48|QWORD[.]  |                   |                  
  at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 856 500 rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 861 502 rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD  <||@
  Comment 864 504 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 870 506 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 875 508 rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 880 510 r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 885 512 stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 890 514 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40]  <||@
  Comment 891 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 891 INVOKESPECIAL  <||@
  Comment 896 [stack:16, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 37, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3 
     locals:  |-                  |-                  |-                  |- 
     stack:   |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:80|QWORD[.]  |  
  at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 904 516 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 909 518 rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 914 520 rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 919 522 r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 922 524 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40]  <||@
  Comment 923 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 923 INVOKESPECIAL  <||@
  Comment 928 []at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 936 526 rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 939 528 JUMP ~outgoingValues: [] destination: B33 -> B35  <||@
  Comment 944 block B15 null  <||@
  Comment 944 110 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 944 112 stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 949 114 r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17]  <||@
  Comment 949 [rcx:0, rsi:0, r8:0, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0             |1                  |2             |3           
     locals:  |rsi|QWORD[.]  |stack:72|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0             |1                  |2             |3           
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.] 
     stack:   |rsi|QWORD[.]  |                   |              |              <||@
  Comment 949 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 957 116 NULLCHECK address: [rcx|QWORD[.]] state [bci:14, 3, 17]  <||@
  Comment 957 [rcx:0, rsi:0, r8:0, r10:0, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0             |1                  |2             |3           
     locals:  |rsi|QWORD[.]  |stack:72|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0             |1                  |2             |3           
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.] 
     stack:   |rsi|QWORD[.]  |                   |              |              <||@
  Comment 957 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 959 118 NULLCHECK address: [r8|QWORD[.]] state [bci:14, 3, 17]  <||@
  Comment 959 [rcx:0, rsi:0, r8:0, r10:0, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0             |1                  |2             |3           
     locals:  |rsi|QWORD[.]  |stack:72|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0             |1                  |2             |3           
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.] 
     stack:   |rsi|QWORD[.]  |                   |              |              <||@
  Comment 959 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 962 120 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 966 122 r9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 969 126 rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 972 128 r10|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 975 132 rdi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 978 136 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17]  <||@
  Comment 979 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 979 INVOKESPECIAL  <||@
  Comment 984 [stack:24, stack:32, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:56|QWORD[.]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                   |                   |                  
  at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                   |                   |                    <||@
  Comment 992 138 rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 997 140 rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD  <||@
  Comment 1000 142 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 1006 144 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1011 146 rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1016 148 r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1021 150 stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1026 152 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17]  <||@
  Comment 1027 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 1027 INVOKESPECIAL  <||@
  Comment 1032 [stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:56|QWORD[.]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:80|QWORD[.]  |                   |                  
  at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                   |                   |                    <||@
  Comment 1040 154 r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1045 156 rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD  <||@
  Comment 1049 158 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 1055 160 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1060 162 rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1065 164 r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1070 166 stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1075 168 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17]  <||@
  Comment 1075 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 1075 INVOKESPECIAL  <||@
  Comment 1080 [stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 37, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3 
     locals:  |-                  |-                  |-                  |- 
     stack:   |stack:40|QWORD[.]  |stack:80|QWORD[.]  |stack:72|QWORD[.]  |  
  at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                   |                   |                    <||@
  Comment 1088 170 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1093 172 rdx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1098 174 rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1103 176 r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1106 178 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17]  <||@
  Comment 1107 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 1107 INVOKESPECIAL  <||@
  Comment 1112 [stack:32, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                   |                   |                    <||@
  Comment 1120 180 stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1125 182 rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1130 184 JUMP ~outgoingValues: [] destination: B15 -> B17  <||@
  Comment 1135 block B21 null  <||@
  Comment 1135 226 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1135 228 stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1140 230 r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1145 232 rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1150 234 rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27]  <||@
  Comment 1150 [rdx:0, r8:0, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2            |3            
     locals:  |stack:40|QWORD[.]  |stack:80|QWORD[.]  |r8|QWORD[.]  |rdx|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3           
     locals:  |stack:40|QWORD[.]  |rdx|QWORD[.]       |stack:56|QWORD[.]  |r8|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |                   |              <||@
  Comment 1150 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1157 236 NULLCHECK address: [r8|QWORD[.]] state [bci:14, 3, 27]  <||@
  Comment 1157 [rdx:0, rsi:0, r8:0, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2            |3            
     locals:  |stack:40|QWORD[.]  |stack:80|QWORD[.]  |r8|QWORD[.]  |rdx|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3           
     locals:  |stack:40|QWORD[.]  |rdx|QWORD[.]       |stack:56|QWORD[.]  |r8|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |                   |              <||@
  Comment 1157 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1160 238 r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 1167 240 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1172 242 r9|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1175 244 rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1178 246 rcx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1181 248 r8|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1184 250 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27]  <||@
  Comment 1187 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 1187 INVOKESPECIAL  <||@
  Comment 1192 [stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:80|QWORD[.]  |stack:64|QWORD[.]  |stack:48|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                   |                   |                  
  at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |                   |                    <||@
  Comment 1200 252 r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1205 254 rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD  <||@
  Comment 1209 256 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 1215 258 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1220 260 rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1225 262 r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1230 264 stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1235 266 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27]  <||@
  Comment 1235 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 1235 INVOKESPECIAL  <||@
  Comment 1240 [stack:8, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:80|QWORD[.]  |stack:64|QWORD[.]  |stack:48|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:88|QWORD[.]  |                   |                  
  at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |                   |                    <||@
  Comment 1248 268 rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1253 270 rsi|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 1256 272 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 1262 274 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1267 276 rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1270 278 rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1275 280 r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1280 282 stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1285 284 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27]  <||@
  Comment 1287 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 1287 INVOKESPECIAL  <||@
  Comment 1292 [stack:8, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 37, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3 
     locals:  |-                  |-                  |-                  |- 
     stack:   |stack:40|QWORD[.]  |stack:88|QWORD[.]  |stack:80|QWORD[.]  |  
  at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |                   |                    <||@
  Comment 1300 286 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1305 288 rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1310 290 rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1315 292 r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1318 294 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27]  <||@
  Comment 1319 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 1319 INVOKESPECIAL  <||@
  Comment 1324 [stack:24, stack:32, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |                   |                    <||@
  Comment 1332 296 stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1337 300 JUMP ~outgoingValues: [] destination: B21 -> B23  <||@
  Comment 1347 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f8ae4233598, value=140234155311648]:0x7f8acf034220}  <||@
  Comment 1376 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f8ae42335a0, value=140234155446272]:0x7f8acf055000}  <||@
  Comment 1396 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f8ae42335a0, value=140234155446272]:0x7f8acf055000}  <||@
  Comment 1424 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1429 [rcx:0, stack:24, stack:32, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1                  |2             |3                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |Object[null]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |              |                    <||@
  Comment 1459 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1464 [stack:16, stack:24, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 30, duringCall: false, rethrow: false]
              |0                  |1                  |2                  |3            
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |Object[null] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |               <||@
  Comment 1494 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1499 [rcx:0, rdx:0, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2             |3            
     locals:  |stack:40|QWORD[.]  |stack:64|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 37, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3 
     locals:  |-                  |-                  |-                  |- 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |    <||@
  Comment 1529 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1534 [rcx:0, rsi:0, r10:0, r11:0, stack:16, stack:24, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0             |1             |2             |3            
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |r11|QWORD[.]  |rcx|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1568 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1573 [rcx:0, rdx:0, rsi:0, r10:0, r11:0, stack:16, stack:24, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0             |1             |2             |3            
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |r11|QWORD[.]  |rcx|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1603 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1608 [rcx:0, rdx:0, rsi:0, r10:0, r11:0, stack:16, stack:24, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0             |1             |2             |3            
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |r11|QWORD[.]  |rcx|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1638 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1643 [rcx:0, rsi:0, r8:0, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0             |1                  |2             |3           
     locals:  |rsi|QWORD[.]  |stack:72|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0             |1                  |2             |3           
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.] 
     stack:   |rsi|QWORD[.]  |                   |              |              <||@
  Comment 1673 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1678 [rcx:0, rsi:0, r8:0, r10:0, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0             |1                  |2             |3           
     locals:  |rsi|QWORD[.]  |stack:72|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0             |1                  |2             |3           
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.] 
     stack:   |rsi|QWORD[.]  |                   |              |              <||@
  Comment 1708 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1713 [rcx:0, rsi:0, r8:0, r10:0, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0             |1                  |2             |3           
     locals:  |rsi|QWORD[.]  |stack:72|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0             |1                  |2             |3           
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.] 
     stack:   |rsi|QWORD[.]  |                   |              |              <||@
  Comment 1743 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1748 [rdx:0, r8:0, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2            |3            
     locals:  |stack:40|QWORD[.]  |stack:80|QWORD[.]  |r8|QWORD[.]  |rdx|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3           
     locals:  |stack:40|QWORD[.]  |rdx|QWORD[.]       |stack:56|QWORD[.]  |r8|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |                   |              <||@
  Comment 1778 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1783 [rdx:0, rsi:0, r8:0, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2            |3            
     locals:  |stack:40|QWORD[.]  |stack:80|QWORD[.]  |r8|QWORD[.]  |rdx|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3           
     locals:  |stack:40|QWORD[.]  |rdx|QWORD[.]       |stack:56|QWORD[.]  |r8|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |                   |              <||@
  Comment 1792 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f8acf0b4500:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1792 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1798 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f8ae42335b8, value=140234155441952]:0x7f8acf053f20}  <||@
  Comment 1798 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-78[List.tail(List$Element, List$Element, List$Element)]"
  method "HotSpotCompilation-78[List.tail(List$Element, List$Element, List$Element)]"
  date 1740398975856
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f8acf0c0580 448b560849bc000000738a7f00004d03d44d33e4493bc20f85e3daf8ff89842400c0feff4883ec5841817f20000000000f850805000048896c24500f1f4400004885d20f845d000000448b5210458bda49c1e3034885c90f84630000008b411048c1e0034c8bc8498bc3e9320000006666660f1f8400000000006666669066904d85c90f8437000000498b9f580400008503458b49108b401048c1e00349c1e1034885c075da498bc0488b6c24504883c458493ba7500400000f878f040000c34889742438488954243048894c24284c89442420498bdb4c8bc9e922000000904d85c90f84c7020000498bbf580400008507458b49108b5b1048c1e30349c1e1034885db75da4c894424188b7110448bd649c1e2034d8bc2488b542420666690e93d0000006666660f1f840000000000666666900f1f840000000000666666904885d20f84260300004d8b9f580400004185038b5210458b401049c1e00348c1e2034d85c075d94889442440488b4424304889442410488b4424404c8b442420418b7010448bd649c1e203498bca488b542430e9290000000f1f8400000000004885d20f84770000004d8b87580400004185008b52108b491048c1e10348c1e2034885c975da488b4c2428488b542418488b742410e927000000660f1f4400004885f60f84030100004d8b87580400004185008b76108b521048c1e20348c1e6034885d275da488bc1488b6c24504883c458493ba7500400000f8747030000c34c89542420488b4c2428488b5424308b34f510000000448bc649c1e003488b7424384c8bda498bd04c8bc9498bcb4d8bc16690e8a8dbf8ff0f1f8400c8040008488b5424308b72108bce48c1e103488b742438488bd1488b4c24284c8b44242048894424086690e874dbf8ff0f1f8400fc040009488b4c24288b71108bd648c1e203488b742438488b4c24204c8b442430488944243090e844dbf8ff0f1f84002c05000a488b742438488b542408488b4c24304c8bc090e824dbf8ff0f1f84004c05000b488bc8e9dffeffff4c8b5c24104c8b542418488b742438418b5210418503850148c1e2034c8bce488bd9498bcb4c8bc348895c24286690e8e0daf8ff0f1f84009005000f4c8b5c2410418b73108bd648c1e203488b742438488b4c24284c8b4424184889442430e8b0daf8ff0f1f8400c0050010488b4c24288b71108bd648c1e203488b742438488b4c24184c8b442410488944241090e880daf8ff0f1f8400f0050011488b742438488b542430488b4c24104c8bc090e860daf8ff0f1f840010060012488bc8e956feffff4c895c2418468b14d510000000850141850049c1e2034c8bce498bd24c8bd1498bf890e828daf8ff0f1f840048060016488b4c24288b71108bd648c1e203488b742438488b4c24204c8b442418488944241090e8f8d9f8ff0f1f8400780600174c8b442420418b70108bd648c1e203488b742438488b4c24184c8b4424284889442418e8c8d9f8ff0f1f8400a8060018488b742438488b542410488b4c24184c8bc090e8a8d9f8ff0f1f8400c80600194889442418488b4c2428e99cfcffff4c895424104c8b442420488b5424308b34f510000000418500448bde49c1e303488b7424384c8bca498bd3498bc84d8bc1666690e858d9f8ff0f1f84001807001c4c8b442420418b70108bd648c1e203488b742438488b4c24304c8b4424104889442408e828d9f8ff0f1f84004807001d488b5424308b72108bce48c1e103488b742438488bd1488b4c24104c8b44242048894424106690e8f4d8f8ff0f1f84007c07001e488b742438488b542408488b4c24104c8bc090e8d4d8f8ff0f1f84009c07001f4889442410e93dfcffff48896c2450e85837f7ffe9e9fafffff4488d0d5dfbffff49898f680400000f1f4000e91b45f9fff4488d0da5fcffff49898f68040000e90745f9fff441c78784040000f597feff49c7879004000000000000e86536f9ff0f1f84000000000041c78784040000f57dfeff49c7879004000000000000e84236f9ff0f1f84000000000041c78784040000f572feff49c7879004000000000000e81f36f9ff0f1f84000000000041c78784040000f55efeff49c7879004000000000000e8fc35f9ff0f1f84000000000041c78784040000f559feff49c78790040000000000000f1f4000e8d535f9ff0f1f84000000000041c78784040000f554feff49c7879004000000000000e8b235f9ff0f1f84000000000041c78784040000f5a8feff49c7879004000000000000e88f35f9ff0f1f84000000000041c78784040000f5a3feff49c7879004000000000000e86c35f9ff0f1f84000000000041c78784040000f59efeff49c7879004000000000000e84935f9ff0f1f84000000000041c78784040000f58cfeff49c7879004000000000000e82635f9ff0f1f84000000000041c78784040000f587feff49c7879004000000000000e80335f9ff0f1f84000000000090e87b38fffff4e89532f9fff4f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f8ae42335c8, value=140234155417728]:0x7f8acf04e080}  <||@
  Comment 29 [stack overflow check]  <||@
  Comment 29 VERIFIED_ENTRY  <||@
  Comment 40 FRAME_COMPLETE  <||@
  Comment 40 ENTRY_BARRIER_PATCH  <||@
  Comment 54 block B0 null  <||@
  Comment 54 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 54 2 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 59 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@3a872160 slotKind: QWORD  <||@
  Comment 59 6 TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B0 -> B10 falseDestination: B0 -> B2 size: QWORD  <||@
  Comment 73 block B2 null  <||@
  Comment 73 12 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 73 14 r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 77 16 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 84 18 TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B2 -> B11 falseDestination: B2 -> B4 size: QWORD  <||@
  Comment 93 block B4 null  <||@
  Comment 93 24 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 93 26 rax|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD  <||@
  Comment 96 28 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 100 30 r9|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 103 32 rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 106 34 JUMP ~outgoingValues: [] destination: B4 -> B5  <||@
  Comment 111 block B6 loop 0 depth 1 header:41|LoopBegin  <||@
  Comment 111 40 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 128 42 TESTBRANCH (x: r9|QWORD[.], y: r9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B6 -> B11 falseDestination: B6 -> B7 size: QWORD  <||@
  Comment 137 block B7 loop 0 depth 1 header:41|LoopBegin  <||@
  Comment 137 44 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 137 46 SAFEPOINT temp: rbx|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3]  <||@
  Comment 144 [rax:0, rcx:0, rdx:0, rsi:0, r8:0, r9:0, r10:0, r11:0]at List.isShorterThan(List$Element, List$Element) [bci: 5, duringCall: false, rethrow: false]
              |0  |1  |2  |3            |4            
     locals:  |-  |-  |-  |r9|QWORD[.]  |rax|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0             |1             |2             |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.]   <||@
  Comment 144 {infopoint: SAFEPOINT}  <||@
  Comment 144 POLL_FAR  <||@
  Comment 146 48 r9|DWORD[_] = MOV input: [r9|QWORD[.] + 16] size: DWORD  <||@
  Comment 150 50 rax|DWORD[_] = MOV input: [rax|QWORD[.] + 16] size: DWORD  <||@
  Comment 153 52 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 157 54 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 161 56 JUMP ~outgoingValues: [] destination: B7 -> B5  <||@
  Comment 161 block B5 loop 0 depth 1 header:41|LoopBegin  <||@
  Comment 161 36 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 161 38 TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B5 -> B10 falseDestination: B5 -> B6 size: QWORD  <||@
  Comment 166 block B10 null  <||@
  Comment 166 66 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 166 68 rax|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 169 70 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07  <||@
  Comment 178 POLL_RETURN_FAR  <||@
  Comment 192 block B11 null  <||@
  Comment 192 72 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 192 74 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 197 76 stack:48|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 202 78 stack:56|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 207 80 stack:64|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 212 82 rbx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 215 84 r9|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 218 86 JUMP ~outgoingValues: [] destination: B11 -> B12  <||@
  Comment 223 block B13 loop 1 depth 1 header:97|LoopBegin  <||@
  Comment 223 92 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 224 94 TESTBRANCH (x: r9|QWORD[.], y: r9|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B13 -> B15 falseDestination: B13 -> B14 size: QWORD  <||@
  Comment 233 block B14 loop 1 depth 1 header:97|LoopBegin  <||@
  Comment 233 96 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 233 98 SAFEPOINT temp: rdi|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 17]  <||@
  Comment 240 [rcx:0, rdx:0, rbx:0, rsi:0, r8:0, r9:0, r10:0, r11:0, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 5, duringCall: false, rethrow: false]
              |0  |1  |2  |3            |4            
     locals:  |-  |-  |-  |r9|QWORD[.]  |rbx|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0             |1             |2             |3           
     locals:  |rsi|QWORD[.]  |r11|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0             |1             |2             |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.] 
     stack:   |rsi|QWORD[.]  |              |              |              <||@
  Comment 240 {infopoint: SAFEPOINT}  <||@
  Comment 240 POLL_FAR  <||@
  Comment 242 100 r9|DWORD[_] = MOV input: [r9|QWORD[.] + 16] size: DWORD  <||@
  Comment 246 102 rbx|DWORD[_] = MOV input: [rbx|QWORD[.] + 16] size: DWORD  <||@
  Comment 249 104 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 253 106 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 257 108 JUMP ~outgoingValues: [] destination: B14 -> B12  <||@
  Comment 257 block B12 loop 1 depth 1 header:97|LoopBegin  <||@
  Comment 257 88 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 257 90 TESTBRANCH (x: rbx|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B12 -> B16 falseDestination: B12 -> B13 size: QWORD  <||@
  Comment 262 block B16 null  <||@
  Comment 262 186 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 262 188 stack:72|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 267 190 JUMP ~outgoingValues: [] destination: B16 -> B17  <||@
  Comment 267 block B17 null  <||@
  Comment 267 192 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 267 194 rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD state [bci:20]  <||@
  Comment 267 [rcx:0, stack:24, stack:32, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1                  |2             |3                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |Object[null]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |              |                    <||@
  Comment 267 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 270 196 r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 277 198 r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 280 200 rdx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 285 202 JUMP ~outgoingValues: [] destination: B17 -> B18  <||@
  Comment 293 block B19 loop 2 depth 1 header:151|LoopBegin  <||@
  Comment 293 208 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 320 210 TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B19 -> B21 falseDestination: B19 -> B20 size: QWORD  <||@
  Comment 329 block B20 loop 2 depth 1 header:151|LoopBegin  <||@
  Comment 329 212 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 329 214 SAFEPOINT temp: r11|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 27]  <||@
  Comment 336 [rcx:0, rdx:0, rsi:0, r8:0, r10:0, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 5, duringCall: false, rethrow: false]
              |0  |1  |2  |3             |4           
     locals:  |-  |-  |-  |rdx|QWORD[.]  |r8|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1             |2                  |3                 
     locals:  |stack:40|QWORD[.]  |r10|QWORD[.]  |stack:64|QWORD[.]  |stack:48|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2             |3                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |rcx|QWORD[.]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |              |                    <||@
  Comment 336 {infopoint: SAFEPOINT}  <||@
  Comment 336 POLL_FAR  <||@
  Comment 339 216 rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 342 218 r8|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD  <||@
  Comment 346 220 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 350 222 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 354 224 JUMP ~outgoingValues: [] destination: B20 -> B18  <||@
  Comment 354 block B18 loop 2 depth 1 header:151|LoopBegin  <||@
  Comment 354 204 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 354 206 TESTBRANCH (x: r8|QWORD[.], y: r8|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B18 -> B22 falseDestination: B18 -> B19 size: QWORD  <||@
  Comment 359 block B22 null  <||@
  Comment 359 302 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 359 304 stack:80|QWORD[.] = STACKMOVE (input: stack:48|QWORD[.], ~backupSlot: stack:32|QWORD) scratch: rax  <||@
  Comment 379 308 JUMP ~outgoingValues: [] destination: B22 -> B23  <||@
  Comment 379 block B23 null  <||@
  Comment 379 310 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 379 298 r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 384 312 rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD state [bci:30]  <||@
  Comment 384 [stack:16, stack:24, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 30, duringCall: false, rethrow: false]
              |0                  |1                  |2                  |3            
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |Object[null] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |               <||@
  Comment 384 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 388 314 r10|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 395 316 rcx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 398 318 rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 403 320 JUMP ~outgoingValues: [] destination: B23 -> B24  <||@
  Comment 408 block B25 loop 3 depth 1 header:205|LoopBegin  <||@
  Comment 408 326 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 416 328 TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B25 -> B27 falseDestination: B25 -> B26 size: QWORD  <||@
  Comment 425 block B26 loop 3 depth 1 header:205|LoopBegin  <||@
  Comment 425 330 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 425 332 SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 37]  <||@
  Comment 432 [rcx:0, rdx:0, rsi:0, r10:0, stack:16, stack:24, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 5, duringCall: false, rethrow: false]
              |0  |1  |2  |3             |4            
     locals:  |-  |-  |-  |rdx|QWORD[.]  |rcx|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1             |2                  |3                 
     locals:  |stack:40|QWORD[.]  |r10|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 37, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3 
     locals:  |-                  |-                  |-                  |- 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |    <||@
  Comment 432 {infopoint: SAFEPOINT}  <||@
  Comment 432 POLL_FAR  <||@
  Comment 435 334 rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 438 336 rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD  <||@
  Comment 441 338 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 445 340 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 449 342 JUMP ~outgoingValues: [] destination: B26 -> B24  <||@
  Comment 449 block B24 loop 3 depth 1 header:205|LoopBegin  <||@
  Comment 449 322 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 449 324 TESTBRANCH (x: rcx|QWORD[.], y: rcx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B24 -> B28 falseDestination: B24 -> B25 size: QWORD  <||@
  Comment 454 block B28 null  <||@
  Comment 454 418 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 454 420 rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 459 422 JUMP ~outgoingValues: [] destination: B28 -> B29  <||@
  Comment 459 block B29 null  <||@
  Comment 459 424 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 459 426 rdx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 464 428 rsi|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 469 430 JUMP ~outgoingValues: [] destination: B29 -> B30  <||@
  Comment 474 block B31 loop 4 depth 1 header:259|LoopBegin  <||@
  Comment 474 436 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 480 438 TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.03787636982657727 condition: = trueDestination: B31 -> B33 falseDestination: B31 -> B32 size: QWORD  <||@
  Comment 489 block B32 loop 4 depth 1 header:259|LoopBegin  <||@
  Comment 489 440 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 489 442 SAFEPOINT temp: r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 thread: r15 state [bci:5, 3, 40]  <||@
  Comment 496 [rcx:0, rdx:0, rsi:0, stack:16, stack:24, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 5, duringCall: false, rethrow: false]
              |0  |1  |2  |3             |4            
     locals:  |-  |-  |-  |rsi|QWORD[.]  |rdx|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3            
     locals:  |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |rcx|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 496 {infopoint: SAFEPOINT}  <||@
  Comment 496 POLL_FAR  <||@
  Comment 499 444 rsi|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 502 446 rdx|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 505 448 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 509 450 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 513 452 JUMP ~outgoingValues: [] destination: B32 -> B30  <||@
  Comment 513 block B30 loop 4 depth 1 header:259|LoopBegin  <||@
  Comment 513 432 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 513 434 TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.10074626865671642 condition: = trueDestination: B30 -> B35 falseDestination: B30 -> B31 size: QWORD  <||@
  Comment 518 block B35 null  <||@
  Comment 518 534 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 518 536 rax|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 521 538 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07  <||@
  Comment 530 POLL_RETURN_FAR  <||@
  Comment 544 block B27 null  <||@
  Comment 544 344 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 544 346 stack:64|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 549 348 rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 554 350 rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 559 352 rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 37]  <||@
  Comment 559 [rcx:0, rdx:0, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2             |3            
     locals:  |stack:40|QWORD[.]  |stack:64|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 37, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3 
     locals:  |-                  |-                  |-                  |- 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |    <||@
  Comment 559 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 566 354 r8|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 573 356 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 578 358 r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 581 360 rdx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 584 362 r9|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 587 364 rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 590 366 r8|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 593 368 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 37]  <||@
  Comment 595 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 595 INVOKESPECIAL  <||@
  Comment 600 [stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:64|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                   |                   |                  
  at List.tail(List$Element, List$Element, List$Element) [bci: 37, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3 
     locals:  |-                  |-                  |-                  |- 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |    <||@
  Comment 608 370 rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 613 372 rsi|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 616 374 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 622 376 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 627 378 rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 630 380 rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 635 382 r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 640 384 stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 645 386 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 37]  <||@
  Comment 647 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 647 INVOKESPECIAL  <||@
  Comment 652 [stack:8, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:64|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:88|QWORD[.]  |                   |                  
  at List.tail(List$Element, List$Element, List$Element) [bci: 37, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3 
     locals:  |-                  |-                  |-                  |- 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |    <||@
  Comment 660 388 rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 665 390 rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD  <||@
  Comment 668 392 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 674 394 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 679 396 rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 684 398 r8|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 689 400 stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 694 402 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 37]  <||@
  Comment 695 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 695 INVOKESPECIAL  <||@
  Comment 700 [stack:8, stack:16, stack:24, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 37, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3 
     locals:  |-                  |-                  |-                  |- 
     stack:   |stack:40|QWORD[.]  |stack:88|QWORD[.]  |stack:48|QWORD[.]  |  
  at List.tail(List$Element, List$Element, List$Element) [bci: 37, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3 
     locals:  |-                  |-                  |-                  |- 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |    <||@
  Comment 708 404 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 713 406 rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 718 408 rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 723 410 r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 726 412 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 37]  <||@
  Comment 727 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 727 INVOKESPECIAL  <||@
  Comment 732 [stack:16, stack:24, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 37, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3 
     locals:  |-                  |-                  |-                  |- 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |    <||@
  Comment 740 414 rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 743 416 JUMP ~outgoingValues: [] destination: B27 -> B29  <||@
  Comment 748 block B33 null  <||@
  Comment 748 454 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 748 456 r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 753 458 r10|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 758 460 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 763 462 rdx|DWORD[_] = MOV input: [r10|QWORD[.] + 16] size: DWORD state [bci:14, 3, 40]  <||@
  Comment 763 [rcx:0, rsi:0, r10:0, r11:0, stack:16, stack:24, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0             |1             |2             |3            
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |r11|QWORD[.]  |rcx|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 763 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 767 464 NULLCHECK address: [r11|QWORD[.]] state [bci:14, 3, 40]  <||@
  Comment 767 [rcx:0, rdx:0, rsi:0, r10:0, r11:0, stack:16, stack:24, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0             |1             |2             |3            
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |r11|QWORD[.]  |rcx|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 767 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 770 466 NULLCHECK address: [rcx|QWORD[.]] state [bci:14, 3, 40]  <||@
  Comment 770 [rcx:0, rdx:0, rsi:0, r10:0, r11:0, stack:16, stack:24, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0             |1             |2             |3            
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |r11|QWORD[.]  |rcx|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 770 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 772 468 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 776 470 r9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 779 474 rbx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 782 476 rcx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 785 478 r8|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 788 480 stack:56|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 793 482 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 40]  <||@
  Comment 795 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 795 INVOKESPECIAL  <||@
  Comment 800 [stack:16, stack:24, stack:40, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |stack:56|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                   |                   |                  
  at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 808 484 r11|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 813 486 rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 16] size: DWORD  <||@
  Comment 817 488 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 823 490 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 828 492 rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 833 494 r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 838 496 stack:48|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 843 498 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 40]  <||@
  Comment 843 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 843 INVOKESPECIAL  <||@
  Comment 848 [stack:16, stack:24, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |stack:56|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:48|QWORD[.]  |                   |                  
  at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 856 500 rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 861 502 rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD  <||@
  Comment 864 504 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 870 506 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 875 508 rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 880 510 r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 885 512 stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 890 514 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 40]  <||@
  Comment 891 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 891 INVOKESPECIAL  <||@
  Comment 896 [stack:16, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 37, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3 
     locals:  |-                  |-                  |-                  |- 
     stack:   |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:80|QWORD[.]  |  
  at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 904 516 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 909 518 rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 914 520 rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 919 522 r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 922 524 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 40]  <||@
  Comment 923 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 923 INVOKESPECIAL  <||@
  Comment 928 []at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 936 526 rcx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 939 528 JUMP ~outgoingValues: [] destination: B33 -> B35  <||@
  Comment 944 block B15 null  <||@
  Comment 944 110 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 944 112 stack:72|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 949 114 r10|DWORD[_] = MOV input: [r10|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 17]  <||@
  Comment 949 [rcx:0, rsi:0, r8:0, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0             |1                  |2             |3           
     locals:  |rsi|QWORD[.]  |stack:72|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0             |1                  |2             |3           
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.] 
     stack:   |rsi|QWORD[.]  |                   |              |              <||@
  Comment 949 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 957 116 NULLCHECK address: [rcx|QWORD[.]] state [bci:14, 3, 17]  <||@
  Comment 957 [rcx:0, rsi:0, r8:0, r10:0, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0             |1                  |2             |3           
     locals:  |rsi|QWORD[.]  |stack:72|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0             |1                  |2             |3           
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.] 
     stack:   |rsi|QWORD[.]  |                   |              |              <||@
  Comment 957 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 959 118 NULLCHECK address: [r8|QWORD[.]] state [bci:14, 3, 17]  <||@
  Comment 959 [rcx:0, rsi:0, r8:0, r10:0, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0             |1                  |2             |3           
     locals:  |rsi|QWORD[.]  |stack:72|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0             |1                  |2             |3           
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.] 
     stack:   |rsi|QWORD[.]  |                   |              |              <||@
  Comment 959 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 962 120 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 966 122 r9|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 969 126 rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 972 128 r10|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 975 132 rdi|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 978 136 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 17]  <||@
  Comment 979 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 979 INVOKESPECIAL  <||@
  Comment 984 [stack:24, stack:32, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:56|QWORD[.]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                   |                   |                  
  at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                   |                   |                    <||@
  Comment 992 138 rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 997 140 rsi|DWORD[_] = MOV input: [rcx|QWORD[.] + 16] size: DWORD  <||@
  Comment 1000 142 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 1006 144 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1011 146 rcx|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1016 148 r8|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1021 150 stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1026 152 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 17]  <||@
  Comment 1027 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 1027 INVOKESPECIAL  <||@
  Comment 1032 [stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:56|QWORD[.]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:80|QWORD[.]  |                   |                  
  at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                   |                   |                    <||@
  Comment 1040 154 r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1045 156 rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD  <||@
  Comment 1049 158 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 1055 160 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1060 162 rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1065 164 r8|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1070 166 stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1075 168 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 17]  <||@
  Comment 1075 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 1075 INVOKESPECIAL  <||@
  Comment 1080 [stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 37, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3 
     locals:  |-                  |-                  |-                  |- 
     stack:   |stack:40|QWORD[.]  |stack:80|QWORD[.]  |stack:72|QWORD[.]  |  
  at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                   |                   |                    <||@
  Comment 1088 170 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1093 172 rdx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1098 174 rcx|QWORD[.] = MOVE input: stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1103 176 r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1106 178 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 17]  <||@
  Comment 1107 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 1107 INVOKESPECIAL  <||@
  Comment 1112 [stack:32, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                   |                   |                    <||@
  Comment 1120 180 stack:72|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1125 182 rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1130 184 JUMP ~outgoingValues: [] destination: B15 -> B17  <||@
  Comment 1135 block B21 null  <||@
  Comment 1135 226 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1135 228 stack:80|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1140 230 r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1145 232 rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1150 234 rsi|DWORD[_] = MOV input: [rsi|DWORD[_] * 8 + 16] size: DWORD state [bci:14, 3, 27]  <||@
  Comment 1150 [rdx:0, r8:0, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2            |3            
     locals:  |stack:40|QWORD[.]  |stack:80|QWORD[.]  |r8|QWORD[.]  |rdx|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3           
     locals:  |stack:40|QWORD[.]  |rdx|QWORD[.]       |stack:56|QWORD[.]  |r8|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |                   |              <||@
  Comment 1150 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1157 236 NULLCHECK address: [r8|QWORD[.]] state [bci:14, 3, 27]  <||@
  Comment 1157 [rdx:0, rsi:0, r8:0, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2            |3            
     locals:  |stack:40|QWORD[.]  |stack:80|QWORD[.]  |r8|QWORD[.]  |rdx|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3           
     locals:  |stack:40|QWORD[.]  |rdx|QWORD[.]       |stack:56|QWORD[.]  |r8|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |                   |              <||@
  Comment 1157 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1160 238 r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 1167 240 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1172 242 r9|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1175 244 rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1178 246 rcx|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1181 248 r8|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1184 250 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:17, 27]  <||@
  Comment 1187 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 1187 INVOKESPECIAL  <||@
  Comment 1192 [stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:80|QWORD[.]  |stack:64|QWORD[.]  |stack:48|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |                   |                   |                  
  at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |                   |                    <||@
  Comment 1200 252 r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1205 254 rsi|DWORD[_] = MOV input: [r8|QWORD[.] + 16] size: DWORD  <||@
  Comment 1209 256 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 1215 258 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1220 260 rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1225 262 r8|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1230 264 stack:88|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1235 266 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:27, 27]  <||@
  Comment 1235 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 1235 INVOKESPECIAL  <||@
  Comment 1240 [stack:8, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:80|QWORD[.]  |stack:64|QWORD[.]  |stack:48|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:88|QWORD[.]  |                   |                  
  at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |                   |                    <||@
  Comment 1248 268 rdx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1253 270 rsi|DWORD[_] = MOV input: [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 1256 272 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b93fe93 encoding: base: 0 shift: 3  <||@
  Comment 1262 274 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1267 276 rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1270 278 rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1275 280 r8|QWORD[.] = MOVE input: stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1280 282 stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1285 284 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:37, 27]  <||@
  Comment 1287 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 1287 INVOKESPECIAL  <||@
  Comment 1292 [stack:8, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 37, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3 
     locals:  |-                  |-                  |-                  |- 
     stack:   |stack:40|QWORD[.]  |stack:88|QWORD[.]  |stack:80|QWORD[.]  |  
  at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |                   |                    <||@
  Comment 1300 286 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1305 288 rdx|QWORD[.] = MOVE input: stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 1310 290 rcx|QWORD[.] = MOVE input: stack:80|QWORD[.] moveKind: QWORD  <||@
  Comment 1315 292 r8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1318 294 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.]] temps: [] callTarget: HotSpotMethod<List.tail(List$Element, List$Element, List$Element)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@69188e07 state [bci:40, 27]  <||@
  Comment 1319 {HotSpotMethod<List.tail(List$Element, List$Element, List$Element)>}  <||@
  Comment 1319 INVOKESPECIAL  <||@
  Comment 1324 [stack:24, stack:32, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |                   |                    <||@
  Comment 1332 296 stack:80|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1337 300 JUMP ~outgoingValues: [] destination: B21 -> B23  <||@
  Comment 1347 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f8ae4233598, value=140234155311648]:0x7f8acf034220}  <||@
  Comment 1376 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f8ae42335a0, value=140234155446272]:0x7f8acf055000}  <||@
  Comment 1396 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f8ae42335a0, value=140234155446272]:0x7f8acf055000}  <||@
  Comment 1424 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1429 [rcx:0, stack:24, stack:32, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1                  |2             |3                 
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |Object[null]  |stack:64|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |              |                    <||@
  Comment 1459 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1464 [stack:16, stack:24, stack:40, stack:48, stack:56]at List.tail(List$Element, List$Element, List$Element) [bci: 30, duringCall: false, rethrow: false]
              |0                  |1                  |2                  |3            
     locals:  |stack:40|QWORD[.]  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |Object[null] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |               <||@
  Comment 1494 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1499 [rcx:0, rdx:0, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2             |3            
     locals:  |stack:40|QWORD[.]  |stack:64|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 37, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3 
     locals:  |-                  |-                  |-                  |- 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |stack:80|QWORD[.]  |    <||@
  Comment 1529 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1534 [rcx:0, rsi:0, r10:0, r11:0, stack:16, stack:24, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0             |1             |2             |3            
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |r11|QWORD[.]  |rcx|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1568 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1573 [rcx:0, rdx:0, rsi:0, r10:0, r11:0, stack:16, stack:24, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0             |1             |2             |3            
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |r11|QWORD[.]  |rcx|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1603 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1608 [rcx:0, rdx:0, rsi:0, r10:0, r11:0, stack:16, stack:24, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0             |1             |2             |3            
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |r11|QWORD[.]  |rcx|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 40, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1638 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1643 [rcx:0, rsi:0, r8:0, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0             |1                  |2             |3           
     locals:  |rsi|QWORD[.]  |stack:72|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0             |1                  |2             |3           
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.] 
     stack:   |rsi|QWORD[.]  |                   |              |              <||@
  Comment 1673 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1678 [rcx:0, rsi:0, r8:0, r10:0, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0             |1                  |2             |3           
     locals:  |rsi|QWORD[.]  |stack:72|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0             |1                  |2             |3           
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.] 
     stack:   |rsi|QWORD[.]  |                   |              |              <||@
  Comment 1708 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1713 [rcx:0, rsi:0, r8:0, r10:0, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0             |1                  |2             |3           
     locals:  |rsi|QWORD[.]  |stack:72|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 17, duringCall: true, rethrow: false]
              |0             |1                  |2             |3           
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.] 
     stack:   |rsi|QWORD[.]  |                   |              |              <||@
  Comment 1743 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1748 [rdx:0, r8:0, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2            |3            
     locals:  |stack:40|QWORD[.]  |stack:80|QWORD[.]  |r8|QWORD[.]  |rdx|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3           
     locals:  |stack:40|QWORD[.]  |rdx|QWORD[.]       |stack:56|QWORD[.]  |r8|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |                   |              <||@
  Comment 1778 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f8ae42335a8, value=140234155442554]:0x7f8acf05417a}  <||@
  Comment 1783 [rdx:0, rsi:0, r8:0, stack:16, stack:24, stack:32, stack:40, stack:48, stack:56]at List.isShorterThan(List$Element, List$Element) [bci: 14, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at List.tail(List$Element, List$Element, List$Element) [bci: 3, duringCall: true, rethrow: false]
              |0                  |1                  |2            |3            
     locals:  |stack:40|QWORD[.]  |stack:80|QWORD[.]  |r8|QWORD[.]  |rdx|QWORD[.] 
  at List.tail(List$Element, List$Element, List$Element) [bci: 27, duringCall: true, rethrow: false]
              |0                  |1                  |2                  |3           
     locals:  |stack:40|QWORD[.]  |rdx|QWORD[.]       |stack:56|QWORD[.]  |r8|QWORD[.] 
     stack:   |stack:40|QWORD[.]  |stack:72|QWORD[.]  |                   |              <||@
  Comment 1792 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f8acf0b4500:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1792 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1798 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f8ae42335b8, value=140234155441952]:0x7f8acf053f20}  <||@
  Comment 1798 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
