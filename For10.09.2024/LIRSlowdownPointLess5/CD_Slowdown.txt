--- Execution profile ---
Total samples       : 204655
unknown_Java        : 11988 (5.86%)
not_walkable_Java   : 67 (0.03%)
deoptimization      : 1 (0.00%)

--- 9032823248 ns (4.41%), 9031 samples
  [ 0] cd.CollisionDetector.recurse
  [ 1] [unknown_Java]

--- 6854153653 ns (3.35%), 6853 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 6347128389 ns (3.10%), 6345 samples
  [ 0] cd.RedBlackTree.treeMinimum
  [ 1] cd.RedBlackTree$Node.successor
  [ 2] cd.RedBlackTree.forEach
  [ 3] cd.CollisionDetector.reduceCollisionSet
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 5571012029 ns (2.72%), 5570 samples
  [ 0] cd.RedBlackTree.forEach
  [ 1] cd.CollisionDetector.reduceCollisionSet
  [ 2] cd.CollisionDetector.handleNewFrame
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 5174757923 ns (2.53%), 5174 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 4026255855 ns (1.97%), 4026 samples
  [ 0] cd.RedBlackTree.findNode
  [ 1] cd.RedBlackTree.get
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$1
  [ 3] cd.CollisionDetector$$Lambda.0x00007f017c00c810.apply
  [ 4] cd.RedBlackTree.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2572994752 ns (1.26%), 2573 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 2] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 3] som.Vector.forEach
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 2295200549 ns (1.12%), 2295 samples
  [ 0] cd.CallSign.compareTo
  [ 1] cd.RedBlackTree.treeInsert
  [ 2] cd.RedBlackTree.put
  [ 3] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 4] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 5] som.Vector.forEach
  [ 6] cd.CollisionDetector.handleNewFrame
  [ 7] CD.benchmark
  [ 8] CD.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 2144471330 ns (1.05%), 2144 samples
  [ 0] cd.RedBlackTree.leftRotate
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1781373405 ns (0.87%), 1781 samples
  [ 0] som.Vector.<init>
  [ 1] som.Vector.<init>
  [ 2] cd.CollisionDetector.putIntoMap
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 5] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 6] cd.CollisionDetector$$Lambda.0x00007f017c00cc50.apply
  [ 7] som.Vector.forEach
  [ 8] cd.CollisionDetector.reduceCollisionSet
  [ 9] cd.CollisionDetector.handleNewFrame
  [10] CD.benchmark
  [11] CD.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 1680169544 ns (0.82%), 1680 samples
  [ 0] cd.CallSign.compareTo
  [ 1] cd.RedBlackTree.treeInsert
  [ 2] cd.RedBlackTree.put
  [ 3] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 4] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 5] som.Vector.forEach
  [ 6] cd.CollisionDetector.handleNewFrame
  [ 7] CD.benchmark
  [ 8] CD.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1620405869 ns (0.79%), 1620 samples
  [ 0] cd.RedBlackTree.findNode
  [ 1] cd.RedBlackTree.get
  [ 2] cd.CollisionDetector.putIntoMap
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 5] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 6] cd.CollisionDetector$$Lambda.0x00007f017c00cc50.apply
  [ 7] som.Vector.forEach
  [ 8] cd.CollisionDetector.reduceCollisionSet
  [ 9] cd.CollisionDetector.handleNewFrame
  [10] CD.benchmark
  [11] CD.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 1556265597 ns (0.76%), 1556 samples
  [ 0] cd.RedBlackTree.leftRotate
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1491097032 ns (0.73%), 1491 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1431100718 ns (0.70%), 1431 samples
  [ 0] som.Vector.append
  [ 1] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 2] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 3] som.Vector.forEach
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 1409199114 ns (0.69%), 1409 samples
  [ 0] cd.RedBlackTree.findNode
  [ 1] cd.RedBlackTree.get
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$1
  [ 3] cd.CollisionDetector$$Lambda.0x00007f017c00c810.apply
  [ 4] cd.RedBlackTree.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1314322757 ns (0.64%), 1314 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.putIntoMap
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 5] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 6] cd.CollisionDetector$$Lambda.0x00007f017c00cc50.apply
  [ 7] som.Vector.forEach
  [ 8] cd.CollisionDetector.reduceCollisionSet
  [ 9] cd.CollisionDetector.handleNewFrame
  [10] CD.benchmark
  [11] CD.innerBenchmarkLoop
  [12] Run.measure
  [13] Run.doRuns
  [14] Run.runBenchmark
  [15] Harness.main

--- 1310205258 ns (0.64%), 1310 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1237346563 ns (0.60%), 1237 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1080102495 ns (0.53%), 1080 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1035713834 ns (0.51%), 1036 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1028207098 ns (0.50%), 1028 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1023246566 ns (0.50%), 1023 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1010068575 ns (0.49%), 1010 samples
  [ 0] cd.RedBlackTree.leftRotate
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 947124154 ns (0.46%), 947 samples
  [ 0] cd.RedBlackTree.findNode
  [ 1] cd.RedBlackTree.get
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$1
  [ 3] cd.CollisionDetector$$Lambda.0x00007f017c00c810.apply
  [ 4] cd.RedBlackTree.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 942949458 ns (0.46%), 943 samples
  [ 0] cd.RedBlackTree.findNode
  [ 1] cd.RedBlackTree.get
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$1
  [ 3] cd.CollisionDetector$$Lambda.0x00007f017c00c810.apply
  [ 4] cd.RedBlackTree.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 933263595 ns (0.46%), 933 samples
  [ 0] itable stub
  [ 1] som.Vector.forEach
  [ 2] cd.CollisionDetector.handleNewFrame
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 890992222 ns (0.44%), 891 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 885747774 ns (0.43%), 886 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 885154834 ns (0.43%), 885 samples
  [ 0] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 1] [unknown_Java]

--- 843156578 ns (0.41%), 843 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 776182212 ns (0.38%), 776 samples
  [ 0] cd.Vector2D.compareNumbers
  [ 1] cd.Vector2D.compareTo
  [ 2] cd.Vector2D.compareTo
  [ 3] cd.RedBlackTree.findNode
  [ 4] cd.RedBlackTree.get
  [ 5] cd.CollisionDetector.putIntoMap
  [ 6] cd.CollisionDetector.recurse
  [ 7] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 8] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 9] cd.CollisionDetector$$Lambda.0x00007f017c00cc50.apply
  [10] som.Vector.forEach
  [11] cd.CollisionDetector.reduceCollisionSet
  [12] cd.CollisionDetector.handleNewFrame
  [13] CD.benchmark
  [14] CD.innerBenchmarkLoop
  [15] Run.measure
  [16] Run.doRuns
  [17] Run.runBenchmark
  [18] Harness.main

--- 774127943 ns (0.38%), 774 samples
  [ 0] cd.Vector2D.compareTo
  [ 1] cd.RedBlackTree.treeInsert
  [ 2] cd.RedBlackTree.put
  [ 3] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 4] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 5] som.Vector.forEach
  [ 6] cd.CollisionDetector.handleNewFrame
  [ 7] CD.benchmark
  [ 8] CD.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 759178969 ns (0.37%), 759 samples
  [ 0] cd.CallSign.compareTo
  [ 1] cd.CallSign.compareTo
  [ 2] cd.RedBlackTree.treeInsert
  [ 3] cd.RedBlackTree.put
  [ 4] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 5] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.handleNewFrame
  [ 8] CD.benchmark
  [ 9] CD.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 754202345 ns (0.37%), 754 samples
  [ 0] cd.CollisionDetector.lambda$reduceCollisionSet$5
  [ 1] cd.CollisionDetector$$Lambda.0x00007f017c00ce70.apply
  [ 2] cd.RedBlackTree.forEach
  [ 3] cd.CollisionDetector.reduceCollisionSet
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 744283701 ns (0.36%), 744 samples
  [ 0] cd.CollisionDetector$$Lambda.0x00007f017c00cc50.apply
  [ 1] som.Vector.forEach
  [ 2] cd.CollisionDetector.reduceCollisionSet
  [ 3] cd.CollisionDetector.handleNewFrame
  [ 4] CD.benchmark
  [ 5] CD.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 733759726 ns (0.36%), 734 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 723134179 ns (0.35%), 723 samples
  [ 0] cd.RedBlackTree.leftRotate
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 717204280 ns (0.35%), 717 samples
  [ 0] cd.CallSign.compareTo
  [ 1] cd.CallSign.compareTo
  [ 2] cd.RedBlackTree.treeInsert
  [ 3] cd.RedBlackTree.put
  [ 4] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 5] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.handleNewFrame
  [ 8] CD.benchmark
  [ 9] CD.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 711124584 ns (0.35%), 711 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 701082660 ns (0.34%), 701 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 691061624 ns (0.34%), 691 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 690049014 ns (0.34%), 690 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 2] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 3] som.Vector.forEach
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 681976369 ns (0.33%), 682 samples
  [ 0] cd.Vector2D.compareNumbers
  [ 1] cd.Vector2D.compareTo
  [ 2] cd.Vector2D.compareTo
  [ 3] cd.RedBlackTree.findNode
  [ 4] cd.RedBlackTree.get
  [ 5] cd.CollisionDetector.putIntoMap
  [ 6] cd.CollisionDetector.recurse
  [ 7] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 8] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 9] cd.CollisionDetector$$Lambda.0x00007f017c00cc50.apply
  [10] som.Vector.forEach
  [11] cd.CollisionDetector.reduceCollisionSet
  [12] cd.CollisionDetector.handleNewFrame
  [13] CD.benchmark
  [14] CD.innerBenchmarkLoop
  [15] Run.measure
  [16] Run.doRuns
  [17] Run.runBenchmark
  [18] Harness.main

--- 680061037 ns (0.33%), 680 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 671005417 ns (0.33%), 671 samples
  [ 0] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 1] som.Vector.forEach
  [ 2] cd.CollisionDetector.handleNewFrame
  [ 3] CD.benchmark
  [ 4] CD.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 661998398 ns (0.32%), 662 samples
  [ 0] cd.Vector2D.compareTo
  [ 1] cd.RedBlackTree.treeInsert
  [ 2] cd.RedBlackTree.put
  [ 3] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 4] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 5] som.Vector.forEach
  [ 6] cd.CollisionDetector.handleNewFrame
  [ 7] CD.benchmark
  [ 8] CD.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 603031478 ns (0.29%), 603 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 2] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 3] som.Vector.forEach
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 592997673 ns (0.29%), 593 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 592024077 ns (0.29%), 592 samples
  [ 0] som.Vector.forEach
  [ 1] cd.CollisionDetector.handleNewFrame
  [ 2] CD.benchmark
  [ 3] CD.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 590095518 ns (0.29%), 590 samples
  [ 0] cd.Motion.findIntersection
  [ 1] [unknown_Java]

--- 560061716 ns (0.27%), 560 samples
  [ 0] cd.RedBlackTree.findNode
  [ 1] cd.RedBlackTree.get
  [ 2] cd.CollisionDetector.putIntoMap
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.recurse
  [ 5] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 6] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 7] cd.CollisionDetector$$Lambda.0x00007f017c00cc50.apply
  [ 8] som.Vector.forEach
  [ 9] cd.CollisionDetector.reduceCollisionSet
  [10] cd.CollisionDetector.handleNewFrame
  [11] CD.benchmark
  [12] CD.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 556149830 ns (0.27%), 556 samples
  [ 0] cd.RedBlackTree.get
  [ 1] cd.CollisionDetector.lambda$handleNewFrame$1
  [ 2] cd.CollisionDetector$$Lambda.0x00007f017c00c810.apply
  [ 3] cd.RedBlackTree.forEach
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 545164020 ns (0.27%), 545 samples
  [ 0] cd.RedBlackTree.treeMinimum
  [ 1] cd.RedBlackTree$Node.successor
  [ 2] cd.RedBlackTree.forEach
  [ 3] cd.CollisionDetector.handleNewFrame
  [ 4] CD.benchmark
  [ 5] CD.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 539997757 ns (0.26%), 540 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 2] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 3] som.Vector.forEach
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 527087141 ns (0.26%), 527 samples
  [ 0] cd.RedBlackTree.findNode
  [ 1] cd.RedBlackTree.get
  [ 2] cd.CollisionDetector.putIntoMap
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.recurse
  [ 5] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 6] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 7] cd.CollisionDetector$$Lambda.0x00007f017c00cc50.apply
  [ 8] som.Vector.forEach
  [ 9] cd.CollisionDetector.reduceCollisionSet
  [10] cd.CollisionDetector.handleNewFrame
  [11] CD.benchmark
  [12] CD.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 522159060 ns (0.26%), 522 samples
  [ 0] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 1] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 2] som.Vector.forEach
  [ 3] cd.CollisionDetector.handleNewFrame
  [ 4] CD.benchmark
  [ 5] CD.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 512113469 ns (0.25%), 512 samples
  [ 0] cd.CallSign.compareTo
  [ 1] cd.CallSign.compareTo
  [ 2] cd.RedBlackTree.treeInsert
  [ 3] cd.RedBlackTree.put
  [ 4] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 5] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.handleNewFrame
  [ 8] CD.benchmark
  [ 9] CD.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 506184661 ns (0.25%), 506 samples
  [ 0] som.Vector.<init>
  [ 1] som.Vector.<init>
  [ 2] cd.CollisionDetector.putIntoMap
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.recurse
  [ 5] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 6] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 7] cd.CollisionDetector$$Lambda.0x00007f017c00cc50.apply
  [ 8] som.Vector.forEach
  [ 9] cd.CollisionDetector.reduceCollisionSet
  [10] cd.CollisionDetector.handleNewFrame
  [11] CD.benchmark
  [12] CD.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 500991217 ns (0.24%), 501 samples
  [ 0] cd.CallSign.compareTo
  [ 1] cd.CallSign.compareTo
  [ 2] cd.RedBlackTree.treeInsert
  [ 3] cd.RedBlackTree.put
  [ 4] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 5] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.handleNewFrame
  [ 8] CD.benchmark
  [ 9] CD.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 499109177 ns (0.24%), 499 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 2] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 3] som.Vector.forEach
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 491101695 ns (0.24%), 491 samples
  [ 0] som.Vector.<init>
  [ 1] som.Vector.<init>
  [ 2] cd.CollisionDetector.putIntoMap
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.recurse
  [ 5] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 6] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 7] cd.CollisionDetector$$Lambda.0x00007f017c00cc50.apply
  [ 8] som.Vector.forEach
  [ 9] cd.CollisionDetector.reduceCollisionSet
  [10] cd.CollisionDetector.handleNewFrame
  [11] CD.benchmark
  [12] CD.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 487949173 ns (0.24%), 488 samples
  [ 0] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 1] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 2] som.Vector.forEach
  [ 3] cd.CollisionDetector.handleNewFrame
  [ 4] CD.benchmark
  [ 5] CD.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 477982392 ns (0.23%), 478 samples
  [ 0] cd.RedBlackTree.leftRotate
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 477010282 ns (0.23%), 477 samples
  [ 0] cd.CollisionDetector.lambda$handleNewFrame$1
  [ 1] cd.CollisionDetector$$Lambda.0x00007f017c00c810.apply
  [ 2] cd.RedBlackTree.forEach
  [ 3] cd.CollisionDetector.handleNewFrame
  [ 4] CD.benchmark
  [ 5] CD.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 474118002 ns (0.23%), 474 samples
  [ 0] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 1] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 2] cd.CollisionDetector$$Lambda.0x00007f017c00cc50.apply
  [ 3] som.Vector.forEach
  [ 4] cd.CollisionDetector.reduceCollisionSet
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 465142334 ns (0.23%), 465 samples
  [ 0] cd.Vector2D.compareNumbers
  [ 1] cd.Vector2D.compareTo
  [ 2] cd.Vector2D.compareTo
  [ 3] cd.RedBlackTree.treeInsert
  [ 4] cd.RedBlackTree.put
  [ 5] cd.CollisionDetector.putIntoMap
  [ 6] cd.CollisionDetector.recurse
  [ 7] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 8] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 9] cd.CollisionDetector$$Lambda.0x00007f017c00cc50.apply
  [10] som.Vector.forEach
  [11] cd.CollisionDetector.reduceCollisionSet
  [12] cd.CollisionDetector.handleNewFrame
  [13] CD.benchmark
  [14] CD.innerBenchmarkLoop
  [15] Run.measure
  [16] Run.doRuns
  [17] Run.runBenchmark
  [18] Harness.main

--- 464179548 ns (0.23%), 464 samples
  [ 0] som.Vector.append
  [ 1] cd.Simulator.simulate
  [ 2] CD.benchmark
  [ 3] CD.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 457134052 ns (0.22%), 457 samples
  [ 0] som.Vector.append
  [ 1] cd.CollisionDetector.putIntoMap
  [ 2] cd.CollisionDetector.recurse
  [ 3] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 4] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 5] cd.CollisionDetector$$Lambda.0x00007f017c00cc50.apply
  [ 6] som.Vector.forEach
  [ 7] cd.CollisionDetector.reduceCollisionSet
  [ 8] cd.CollisionDetector.handleNewFrame
  [ 9] CD.benchmark
  [10] CD.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 452013977 ns (0.22%), 452 samples
  [ 0] cd.CallSign.compareTo
  [ 1] cd.CallSign.compareTo
  [ 2] cd.RedBlackTree.findNode
  [ 3] cd.RedBlackTree.get
  [ 4] cd.CollisionDetector.lambda$handleNewFrame$1
  [ 5] cd.CollisionDetector$$Lambda.0x00007f017c00c810.apply
  [ 6] cd.RedBlackTree.forEach
  [ 7] cd.CollisionDetector.handleNewFrame
  [ 8] CD.benchmark
  [ 9] CD.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 442001225 ns (0.22%), 442 samples
  [ 0] cd.RedBlackTree.findNode
  [ 1] cd.RedBlackTree.get
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$1
  [ 3] cd.CollisionDetector$$Lambda.0x00007f017c00c810.apply
  [ 4] cd.RedBlackTree.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 438109320 ns (0.21%), 438 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 2] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 3] som.Vector.forEach
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 434043147 ns (0.21%), 434 samples
  [ 0] cd.RedBlackTree.findNode
  [ 1] cd.RedBlackTree.get
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$1
  [ 3] cd.CollisionDetector$$Lambda.0x00007f017c00c810.apply
  [ 4] cd.RedBlackTree.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 432116363 ns (0.21%), 432 samples
  [ 0] cd.CollisionDetector.lambda$handleNewFrame$3
  [ 1] cd.CollisionDetector$$Lambda.0x00007f017c00d090.apply
  [ 2] som.Vector.forEach
  [ 3] cd.CollisionDetector.handleNewFrame
  [ 4] CD.benchmark
  [ 5] CD.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 432027146 ns (0.21%), 432 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 422194511 ns (0.21%), 422 samples
  [ 0] som.Vector.append
  [ 1] cd.Simulator.simulate
  [ 2] CD.benchmark
  [ 3] CD.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 412112880 ns (0.20%), 412 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 2] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 3] som.Vector.forEach
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 409993474 ns (0.20%), 410 samples
  [ 0] cd.RedBlackTree.treeMinimum
  [ 1] cd.RedBlackTree$Node.successor
  [ 2] cd.RedBlackTree.forEach
  [ 3] cd.CollisionDetector.handleNewFrame
  [ 4] CD.benchmark
  [ 5] CD.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 409855561 ns (0.20%), 410 samples
  [ 0] cd.RedBlackTree.forEach
  [ 1] cd.CollisionDetector.handleNewFrame
  [ 2] CD.benchmark
  [ 3] CD.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 404963315 ns (0.20%), 405 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] [unknown_Java]

--- 403074649 ns (0.20%), 403 samples
  [ 0] som.Vector.<init>
  [ 1] som.Vector.<init>
  [ 2] cd.CollisionDetector.putIntoMap
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.recurse
  [ 5] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 6] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 7] cd.CollisionDetector$$Lambda.0x00007f017c00cc50.apply
  [ 8] som.Vector.forEach
  [ 9] cd.CollisionDetector.reduceCollisionSet
  [10] cd.CollisionDetector.handleNewFrame
  [11] CD.benchmark
  [12] CD.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 401022780 ns (0.20%), 401 samples
  [ 0] cd.CollisionDetector.voxelHash
  [ 1] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 2] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 3] cd.CollisionDetector$$Lambda.0x00007f017c00cc50.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.reduceCollisionSet
  [ 6] cd.CollisionDetector.handleNewFrame
  [ 7] CD.benchmark
  [ 8] CD.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 400083496 ns (0.20%), 400 samples
  [ 0] cd.Vector2D.compareTo
  [ 1] cd.RedBlackTree.findNode
  [ 2] cd.RedBlackTree.get
  [ 3] cd.CollisionDetector.putIntoMap
  [ 4] cd.CollisionDetector.recurse
  [ 5] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 6] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 7] cd.CollisionDetector$$Lambda.0x00007f017c00cc50.apply
  [ 8] som.Vector.forEach
  [ 9] cd.CollisionDetector.reduceCollisionSet
  [10] cd.CollisionDetector.handleNewFrame
  [11] CD.benchmark
  [12] CD.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 397986451 ns (0.19%), 398 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 3] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.handleNewFrame
  [ 6] CD.benchmark
  [ 7] CD.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 397323043 ns (0.19%), 397 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 2] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 3] som.Vector.forEach
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 397177408 ns (0.19%), 397 samples
  [ 0] cd.Simulator.simulate
  [ 1] CD.benchmark
  [ 2] CD.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 395047024 ns (0.19%), 395 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.putIntoMap
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.recurse
  [ 5] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 6] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 7] cd.CollisionDetector$$Lambda.0x00007f017c00cc50.apply
  [ 8] som.Vector.forEach
  [ 9] cd.CollisionDetector.reduceCollisionSet
  [10] cd.CollisionDetector.handleNewFrame
  [11] CD.benchmark
  [12] CD.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 385148347 ns (0.19%), 385 samples
  [ 0] cd.Simulator.simulate
  [ 1] CD.benchmark
  [ 2] CD.innerBenchmarkLoop
  [ 3] Run.measure
  [ 4] Run.doRuns
  [ 5] Run.runBenchmark
  [ 6] Harness.main

--- 377094743 ns (0.18%), 377 samples
  [ 0] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 1] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 2] som.Vector.forEach
  [ 3] cd.CollisionDetector.handleNewFrame
  [ 4] CD.benchmark
  [ 5] CD.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 376992432 ns (0.18%), 377 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.putIntoMap
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.recurse
  [ 5] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 6] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 7] cd.CollisionDetector$$Lambda.0x00007f017c00cc50.apply
  [ 8] som.Vector.forEach
  [ 9] cd.CollisionDetector.reduceCollisionSet
  [10] cd.CollisionDetector.handleNewFrame
  [11] CD.benchmark
  [12] CD.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 375112919 ns (0.18%), 375 samples
  [ 0] CD.benchmark
  [ 1] [unknown_Java]

--- 366151012 ns (0.18%), 366 samples
  [ 0] cd.CollisionDetector.isInVoxel
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 3] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 4] cd.CollisionDetector$$Lambda.0x00007f017c00cc50.apply
  [ 5] som.Vector.forEach
  [ 6] cd.CollisionDetector.reduceCollisionSet
  [ 7] cd.CollisionDetector.handleNewFrame
  [ 8] CD.benchmark
  [ 9] CD.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 364062244 ns (0.18%), 364 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 2] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 3] som.Vector.forEach
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 361091860 ns (0.18%), 361 samples
  [ 0] cd.CollisionDetector.putIntoMap
  [ 1] cd.CollisionDetector.recurse
  [ 2] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 3] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 4] cd.CollisionDetector$$Lambda.0x00007f017c00cc50.apply
  [ 5] som.Vector.forEach
  [ 6] cd.CollisionDetector.reduceCollisionSet
  [ 7] cd.CollisionDetector.handleNewFrame
  [ 8] CD.benchmark
  [ 9] CD.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 353020828 ns (0.17%), 353 samples
  [ 0] cd.CallSign.compareTo
  [ 1] cd.RedBlackTree.findNode
  [ 2] cd.RedBlackTree.get
  [ 3] cd.CollisionDetector.putIntoMap
  [ 4] cd.CollisionDetector.recurse
  [ 5] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 6] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 7] cd.CollisionDetector$$Lambda.0x00007f017c00cc50.apply
  [ 8] som.Vector.forEach
  [ 9] cd.CollisionDetector.reduceCollisionSet
  [10] cd.CollisionDetector.handleNewFrame
  [11] CD.benchmark
  [12] CD.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

--- 340221204 ns (0.17%), 340 samples
  [ 0] cd.RedBlackTree.put
  [ 1] cd.CollisionDetector.lambda$handleNewFrame$0
  [ 2] cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  [ 3] som.Vector.forEach
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 320045412 ns (0.16%), 320 samples
  [ 0] cd.RedBlackTree.get
  [ 1] cd.CollisionDetector.lambda$handleNewFrame$1
  [ 2] cd.CollisionDetector$$Lambda.0x00007f017c00c810.apply
  [ 3] cd.RedBlackTree.forEach
  [ 4] cd.CollisionDetector.handleNewFrame
  [ 5] CD.benchmark
  [ 6] CD.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 311065667 ns (0.15%), 311 samples
  [ 0] cd.CollisionDetector.voxelHash
  [ 1] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 2] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 3] cd.CollisionDetector$$Lambda.0x00007f017c00cc50.apply
  [ 4] som.Vector.forEach
  [ 5] cd.CollisionDetector.reduceCollisionSet
  [ 6] cd.CollisionDetector.handleNewFrame
  [ 7] CD.benchmark
  [ 8] CD.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 309101456 ns (0.15%), 309 samples
  [ 0] som.Vector.forEach
  [ 1] cd.CollisionDetector.handleNewFrame
  [ 2] CD.benchmark
  [ 3] CD.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 304174166 ns (0.15%), 304 samples
  [ 0] cd.RedBlackTree.treeInsert
  [ 1] cd.RedBlackTree.put
  [ 2] cd.CollisionDetector.putIntoMap
  [ 3] cd.CollisionDetector.recurse
  [ 4] cd.CollisionDetector.recurse
  [ 5] cd.CollisionDetector.drawMotionOnVoxelMap
  [ 6] cd.CollisionDetector.lambda$reduceCollisionSet$4
  [ 7] cd.CollisionDetector$$Lambda.0x00007f017c00cc50.apply
  [ 8] som.Vector.forEach
  [ 9] cd.CollisionDetector.reduceCollisionSet
  [10] cd.CollisionDetector.handleNewFrame
  [11] CD.benchmark
  [12] CD.innerBenchmarkLoop
  [13] Run.measure
  [14] Run.doRuns
  [15] Run.runBenchmark
  [16] Harness.main

          ns  percent  samples  top
  ----------  -------  -------  ---
 42491819338   20.76%    42488  cd.RedBlackTree.treeInsert
 23732162641   11.59%    23727  cd.CollisionDetector.isInVoxel
 19478524486    9.51%    19475  cd.RedBlackTree.put
 14847899197    7.25%    14846  cd.RedBlackTree.findNode
 11970312230    5.85%    11968  cd.CollisionDetector.recurse
 10781700610    5.27%    10780  cd.RedBlackTree.leftRotate
  9656153959    4.72%     9655  cd.CallSign.compareTo
  9291767217    4.54%     9291  cd.Vector2D.compareNumbers
  9128439127    4.46%     9127  cd.Vector2D.compareTo
  7866259194    3.84%     7864  cd.RedBlackTree.treeMinimum
  6697698149    3.27%     6697  cd.RedBlackTree.forEach
  5357733206    2.62%     5357  som.Vector.<init>
  4674968768    2.28%     4674  som.Vector.append
  1971302058    0.96%     1971  cd.CollisionDetector.putIntoMap
  1949775491    0.95%     1949  cd.CollisionDetector.voxelHash
  1919245995    0.94%     1919  cd.CollisionDetector$$Lambda.0x00007f017c007820.apply
  1820303252    0.89%     1820  cd.CollisionDetector.lambda$handleNewFrame$0
  1776262587    0.87%     1776  cd.Vector2D.minus
  1713439965    0.84%     1713  cd.Vector2D.plus
  1620569898    0.79%     1620  cd.Simulator.simulate
  1507225825    0.74%     1507  som.Vector.forEach
  1363088237    0.67%     1363  cd.Motion.findIntersection
  1253134247    0.61%     1253  cd.RedBlackTree.rightRotate
  1226350975    0.60%     1226  itable stub
  1146242677    0.56%     1146  cd.RedBlackTree.get
  1010357131    0.49%     1010  cd.CollisionDetector$$Lambda.0x00007f017c00cc50.apply
   992092764    0.48%      992  cd.RedBlackTree$Node.successor
   907998025    0.44%      908  __ZN41com_002eoracle_002esvm_002ecore_002ecode_002eIsolateEnterStub74TruffleToLibGraalEntryPoints__validateCompilerOption__Ujs0fEGwUTHHbobHrcnio9EJ32org_002egraalvm_002ejniutils_002eJNI_0024JString31org_002egraalvm_002ejniutils_002eJNI_0024JNIEnv31org_002egraalvm_002ejniutils_002eJNI_0024JClasslS0__S0__
   798174000    0.39%      798  cd.CollisionDetector.lambda$reduceCollisionSet$5
   682168782    0.33%      682  cd.CollisionDetector.lambda$handleNewFrame$3
   538139218    0.26%      538  cd.CollisionDetector.drawMotionOnVoxelMap
   501017941    0.24%      501  cd.CollisionDetector.lambda$handleNewFrame$1
   450342066    0.22%      450  java.util.Arrays.copyOf
   411079763    0.20%      411  som.Vector.at
   385137432    0.19%      385  CD.benchmark
   265344380    0.13%      260  G1ParScanThreadState::trim_queue_to_threshold
   200046615    0.10%      200  cd.CollisionDetector$$Lambda.0x00007f017c00d090.apply
   180032622    0.09%      180  som.Vector.size
   151087946    0.07%      151  cd.Vector3D.minus
   126796279    0.06%      124  _raw_spin_unlock_irqrestore_[k]
   101073712    0.05%      101  oop_disjoint_arraycopy
    83091841    0.04%       82  __memset_avx2_unaligned_erms
    59009737    0.03%       59  cd.Vector3D.times
    58457823    0.03%       58  SpinPause
    50960146    0.02%       50  void OopOopIterateBackwardsDispatch<G1ScanEvacuatedObjClosure>::Table::oop_oop_iterate_backwards<InstanceKlass, narrowOop>
    49963780    0.02%       50  cd.Vector3D.dot
    42009713    0.02%       42  Stub<AMD64MathStub.sin>
    38208215    0.02%       38  clear_page_rep_[k]
    35005841    0.02%       35  java.lang.Math.sqrt
    33001420    0.02%       33  Stub<AMD64MathStub.cos>
    31230262    0.02%       30  __futex_abstimed_wait_common
    31022836    0.02%       31  G1BarrierSetRuntime::write_ref_array_post_entry
    28680034    0.01%       28  HeapRegionManager::par_iterate
    28105675    0.01%       27  [vdso]
    25016095    0.01%       25  Interpreter
    24509037    0.01%       24  G1ParScanThreadState::steal_and_trim_queue
    24005800    0.01%       24  java.lang.Object.getClass
    21577534    0.01%       21  void WeakProcessor::Task::work<G1STWIsAliveClosure, G1KeepAliveClosure>
    15878193    0.01%       15  __get_user_8_[k]
    15496351    0.01%       15  malloc
    15000384    0.01%       15  java.lang.Boolean.booleanValue
    14527238    0.01%       14  futex_wake_[k]
    12999524    0.01%       13  /home/hburchell/Repos/graal-dev/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
    12284814    0.01%       12  FreeListAllocator::reset
    11998852    0.01%       12  cd.CollisionDetector.handleNewFrame
    11988104    0.01%       12  zap_pte_range_[k]
    11001725    0.01%       11  _dl_update_slotinfo
    10005073    0.00%       10  G1BarrierSet::invalidate
     9385425    0.00%        9  syscall_enter_from_user_mode_[k]
     9190775    0.00%        9  G1MergeHeapRootsTask::G1MergeCardSetClosure::do_heap_region
     9049554    0.00%        9  __tls_get_addr
     9007182    0.00%        9  java.lang.System.arraycopy
     9006954    0.00%        9  HandleMark::initialize
     9002572    0.00%        9  cd.Vector3D.plus
     8264542    0.00%        8  futex_q_lock_[k]
     8153492    0.00%        8  __memmove_sse2_unaligned_erms
     8010674    0.00%        8  _invokeBasic
     8008015    0.00%        8  java.lang.invoke.DirectMethodHandle$Holder.invokeStatic
     8006210    0.00%        8  InstanceKlass::allocate_objArray
     7462030    0.00%        7  __rseq_handle_notify_resume_[k]
     7425432    0.00%        7  clock_gettime@GLIBC_2.2.5
     7319940    0.00%        7  _int_malloc
     7248953    0.00%        7  WorkerThread::run
     7154886    0.00%        7  ConstantPool::name_and_type_ref_index_at
     7147923    0.00%        7  G1RebuildFreeListTask::work
     7134702    0.00%        7  __vfprintf_internal
     7112044    0.00%        7  G1CardSet::reset_table_scanner
     7007293    0.00%        7  HeapRegionManager::allocate_free_region
     7006481    0.00%        7  cd.CollisionDetector.reduceCollisionSet
     7005882    0.00%        7  HSpaceCounters::update_used
     7005453    0.00%        7  __ZN41com_002eoracle_002esvm_002ecore_002ecode_002eIsolateEnterStub65CEntryPointNativeFunctions__tearDownIsolate__ke4IYWkkawAn2nvyM2ZSW5EJi37org_002egraalvm_002enativeimage_002eIsolateThread
     7004442    0.00%        7  ClassLoaderData::holder
     7001482    0.00%        7  jdk.internal.misc.Unsafe.allocateInstance
     6101571    0.00%        6  G1FromCardCache::clear
     6002512    0.00%        6  G1Allocator::unsafe_max_tlab_alloc
     5980790    0.00%        6  G1NUMA::index_of_current_thread
     5113111    0.00%        5  sem_post@GLIBC_2.2.5
     5099951    0.00%        5  G1GCParPhaseTimesTracker::~G1GCParPhaseTimesTracker
     5094964    0.00%        5  G1RemSet::prepare_for_scan_heap_roots
     5072842    0.00%        5  WeakProcessorTimes::record_worker_items
     5072742    0.00%        5  __memset_avx2_unaligned
     5020981    0.00%        5  __GI___pthread_mutex_trylock
     5017540    0.00%        5  do_user_addr_fault_[k]
     5010990    0.00%        5  ObjArrayAllocator::initialize
     5008182    0.00%        5  cd.Simulator.<init>
     5003092    0.00%        5  G1CollectedHeap::allocate_new_tlab
     4999922    0.00%        5  Stub<new_instance_or_null(KlassPointer)Object>
     4998661    0.00%        5  java.lang.Math.sin
     4573801    0.00%        4  G1DirtyCardQueueSet::concatenate_log_and_stats
     4238343    0.00%        4  ObjectSynchronizer::is_async_deflation_needed
     4174900    0.00%        4  plist_add_[k]
     4124964    0.00%        4  frame::oops_interpreted_do
     4119941    0.00%        4  G1ParCopyClosure<(G1Barrier)0, false>::do_oop
     4109970    0.00%        4  pthread_mutex_lock@@GLIBC_2.2.5
     4097190    0.00%        4  G1PrepareEvacuationTask::G1PrepareRegionsClosure::do_heap_region
     4093810    0.00%        4  G1ScanCollectionSetRegionClosure::do_heap_region
     4090183    0.00%        4  TruncatedSeq::add
     4086983    0.00%        4  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ul, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ul>::oop_access_barrier
     4085491    0.00%        4  schedule_debug.constprop.0_[k]
     4080630    0.00%        4  OopStorage::BasicParState::BasicParState
     4079530    0.00%        4  G1GCPhaseTimes::record_thread_work_item
     4069791    0.00%        4  __memmove_avx_unaligned_erms
     4047922    0.00%        4  _IO_default_xsputn
     4019041    0.00%        4  next_uptodate_page_[k]
     4018580    0.00%        4  G1CollectionSet::add_eden_region
     4014501    0.00%        4  __rcu_read_unlock_[k]
     4014391    0.00%        4  java.lang.System$2.currentCarrierThread
     4013550    0.00%        4  do_anonymous_page_[k]
     4012732    0.00%        4  java.io.FileOutputStream.write
     4012080    0.00%        4  I2C/C2I adapters(0xb)
     4011251    0.00%        4  java.lang.String.getChars
     4011070    0.00%        4  sun.nio.cs.UTF_8$Encoder.encodeArrayLoop
     4003821    0.00%        4  HeapRegionRemSet::clear_fcc
     4002331    0.00%        4  MemAllocator::mem_allocate_inside_tlab_slow
     4002320    0.00%        4  JVMCIRuntime::new_instance_common
     4001572    0.00%        4  G1CollectedHeap::fill_with_dummy_object
     4001441    0.00%        4  InstanceKlass::check_valid_for_instantiation
     4000891    0.00%        4  java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial
     3218580    0.00%        3  rseq_update_cpu_id_[k]
     3209790    0.00%        3  __condvar_dec_grefs
     3167591    0.00%        3  srso_safe_ret_[k]
     3121271    0.00%        3  futex_wake_mark_[k]
     3111831    0.00%        3  __x64_sys_futex_[k]
     3103501    0.00%        3  FreeCSetClosure::do_heap_region
     3099182    0.00%        3  G1NUMA::is_enabled
     3088560    0.00%        3  HandleArea::oops_do
     3087161    0.00%        3  G1PLABAllocator::waste
     3083310    0.00%        3  Thread::claim_par_threads_do
     3080630    0.00%        3  G1BatchedTask::work
     3071502    0.00%        3  G1RemSet::prepare_region_for_scan
     3071063    0.00%        3  __new_sem_wait_slow64.constprop.0
     3070750    0.00%        3  futex_wait_[k]
     3067871    0.00%        3  G1RootProcessor::process_vm_roots
     3063811    0.00%        3  try_to_wake_up_[k]
     3048371    0.00%        3  __do_softirq_[k]
     3039381    0.00%        3  __mark_inode_dirty_[k]
     3036031    0.00%        3  _int_free
     3026081    0.00%        3  void OopOopIterateBackwardsDispatch<G1ScanEvacuatedObjClosure>::Table::oop_oop_iterate_backwards<InstanceRefKlass, narrowOop>
     3016480    0.00%        3  SafepointMechanism::update_poll_values
     3013332    0.00%        3  get_mem_cgroup_from_mm_[k]
     3009911    0.00%        3  vma_alloc_folio_[k]
     3007180    0.00%        3  java.lang.String.checkBoundsBeginEnd
     3006632    0.00%        3  jdk.internal.misc.Unsafe.allocateUninitializedArray
     3003812    0.00%        3  java.lang.invoke.LambdaForm$MH.0x00007f017c010800.invoke
     3002511    0.00%        3  java.lang.Math.min
     3002230    0.00%        3  java.lang.invoke.Invokers$Holder.linkToTargetMethod
     3001960    0.00%        3  ObjAllocator::initialize
     3001660    0.00%        3  ObjectSampler::is_created
     3000951    0.00%        3  InstanceKlass::allocate_instance
     3000760    0.00%        3  CollectedHeap::fill_with_object
     3000051    0.00%        3  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<598116ul, G1BarrierSet>, (AccessInternal::BarrierType)2, 598116ul>::oop_access_barrier
     2153650    0.00%        2  pthread_cond_timedwait@@GLIBC_2.3.2
     2148972    0.00%        2  PeriodicTask::real_time_tick
     2145990    0.00%        2  finish_task_switch.isra.0_[k]
     2130360    0.00%        2  mem_cgroup_handle_over_high_[k]
     2107660    0.00%        2  wake_q_add_safe_[k]
     2101761    0.00%        2  syscall_trace_enter.constprop.0_[k]
     2094700    0.00%        2  do_futex_[k]
     2094231    0.00%        2  __lll_lock_wake
     2091930    0.00%        2  sched_submit_work_[k]
     2091231    0.00%        2  __GI___pthread_mutex_unlock_usercnt
     2090340    0.00%        2  do_syscall_64_[k]
     2085141    0.00%        2  G1GCParPhaseTimesTracker::G1GCParPhaseTimesTracker
     2075300    0.00%        2  G1CollectedHeap::par_iterate_regions_array
     2069352    0.00%        2  void QuickSort::inner_sort<true, unsigned int, int (*)(unsigned int, unsigned int)>
     2063291    0.00%        2  __get_user_nocheck_4_[k]
     2062153    0.00%        2  HeapRegionClaimer::claim_region
     2060681    0.00%        2  schedule_[k]
     2056582    0.00%        2  HeapRegion::fill_with_dummy_object
     2055780    0.00%        2  Threads::possibly_parallel_oops_do
     2053182    0.00%        2  GCId::current
     2052070    0.00%        2  free
     2051240    0.00%        2  CodeHeap::allocated_capacity
     2051060    0.00%        2  G1YoungCollector::post_evacuate_collection_set
     2050612    0.00%        2  PartialArrayTaskStepper::PartialArrayTaskStepper
     2050131    0.00%        2  CompositeElapsedCounterSource::now
     2045370    0.00%        2  clock_gettime@plt
     2045201    0.00%        2  G1CollectedHeap::prepare_for_mutator_after_young_collection
     2044910    0.00%        2  DerivedPointerTable::clear
     2043971    0.00%        2  G1CollectedHeap::free_region
