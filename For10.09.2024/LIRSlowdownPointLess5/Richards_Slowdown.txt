--- Execution profile ---
Total samples       : 213837
unknown_Java        : 5324 (2.49%)
not_walkable_Java   : 9 (0.00%)

--- 33926791961 ns (15.86%), 33922 samples
  [ 0] itable stub
  [ 1] richards.TaskControlBlock.runTask
  [ 2] richards.Scheduler.schedule
  [ 3] richards.Scheduler.start
  [ 4] Richards.benchmark
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 15229116330 ns (7.12%), 15227 samples
  [ 0] richards.TaskControlBlock.runTask
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 14369771247 ns (6.72%), 14368 samples
  [ 0] richards.Scheduler.schedule
  [ 1] richards.Scheduler.start
  [ 2] Richards.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 11225494958 ns (5.25%), 11224 samples
  [ 0] richards.TaskControlBlock.runTask
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 8611165875 ns (4.03%), 8610 samples
  [ 0] richards.TaskControlBlock.getIdentity
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 7504230455 ns (3.51%), 7503 samples
  [ 0] richards.TaskControlBlock.runTask
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 7127043758 ns (3.33%), 7126 samples
  [ 0] richards.Scheduler.schedule
  [ 1] richards.Scheduler.start
  [ 2] Richards.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 5953674118 ns (2.78%), 5953 samples
  [ 0] richards.Scheduler$$Lambda.0x00007f218c008660.apply
  [ 1] richards.TaskControlBlock.runTask
  [ 2] richards.Scheduler.schedule
  [ 3] richards.Scheduler.start
  [ 4] Richards.benchmark
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 5017645022 ns (2.35%), 5017 samples
  [ 0] richards.TaskState.isTaskHoldingOrWaiting
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 4526803241 ns (2.12%), 4526 samples
  [ 0] richards.HandlerTaskDataRecord.deviceInAdd
  [ 1] richards.Scheduler.lambda$createHandler$1
  [ 2] richards.Scheduler$$Lambda.0x00007f218c008440.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 4518647574 ns (2.11%), 4518 samples
  [ 0] richards.Scheduler.schedule
  [ 1] richards.Scheduler.start
  [ 2] Richards.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 4390498629 ns (2.05%), 4390 samples
  [ 0] richards.Scheduler$$Lambda.0x00007f218c008440.apply
  [ 1] richards.TaskControlBlock.runTask
  [ 2] richards.Scheduler.schedule
  [ 3] richards.Scheduler.start
  [ 4] Richards.benchmark
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 3857409902 ns (1.80%), 3857 samples
  [ 0] richards.Scheduler.lambda$createHandler$1
  [ 1] richards.Scheduler$$Lambda.0x00007f218c008440.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 2856468228 ns (1.34%), 2856 samples
  [ 0] richards.Scheduler.lambda$createDevice$0
  [ 1] richards.Scheduler$$Lambda.0x00007f218c008660.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 2732482392 ns (1.28%), 2732 samples
  [ 0] richards.Scheduler.schedule
  [ 1] richards.Scheduler.start
  [ 2] Richards.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 2712258185 ns (1.27%), 2712 samples
  [ 0] richards.HandlerTaskDataRecord.deviceIn
  [ 1] richards.Scheduler.lambda$createHandler$1
  [ 2] richards.Scheduler$$Lambda.0x00007f218c008440.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 2700340889 ns (1.26%), 2700 samples
  [ 0] richards.TaskState.isTaskHoldingOrWaiting
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 2446480467 ns (1.14%), 2446 samples
  [ 0] richards.Scheduler.lambda$createHandler$1
  [ 1] richards.Scheduler$$Lambda.0x00007f218c008440.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 2413265101 ns (1.13%), 2413 samples
  [ 0] richards.TaskControlBlock.addInputAndCheckPriority
  [ 1] richards.Scheduler.queuePacket
  [ 2] richards.Scheduler.lambda$createDevice$0
  [ 3] richards.Scheduler$$Lambda.0x00007f218c008660.apply
  [ 4] richards.TaskControlBlock.runTask
  [ 5] richards.Scheduler.schedule
  [ 6] richards.Scheduler.start
  [ 7] Richards.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 2245218081 ns (1.05%), 2245 samples
  [ 0] richards.Scheduler.lambda$createHandler$1
  [ 1] [unknown_Java]

--- 2197277218 ns (1.03%), 2197 samples
  [ 0] richards.TaskState.isTaskHoldingOrWaiting
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 2048271262 ns (0.96%), 2048 samples
  [ 0] richards.Scheduler$$Lambda.0x00007f218c008660.apply
  [ 1] richards.TaskControlBlock.runTask
  [ 2] richards.Scheduler.schedule
  [ 3] richards.Scheduler.start
  [ 4] Richards.benchmark
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 2005248352 ns (0.94%), 2005 samples
  [ 0] richards.Scheduler$$Lambda.0x00007f218c008660.apply
  [ 1] [unknown_Java]

--- 1960247219 ns (0.92%), 1960 samples
  [ 0] richards.Packet.setIdentity
  [ 1] richards.Scheduler.queuePacket
  [ 2] richards.Scheduler.lambda$createDevice$0
  [ 3] richards.Scheduler$$Lambda.0x00007f218c008660.apply
  [ 4] richards.TaskControlBlock.runTask
  [ 5] richards.Scheduler.schedule
  [ 6] richards.Scheduler.start
  [ 7] Richards.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1880250180 ns (0.88%), 1880 samples
  [ 0] richards.Scheduler.schedule
  [ 1] richards.Scheduler.start
  [ 2] Richards.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 1746119293 ns (0.82%), 1746 samples
  [ 0] richards.Packet.setLink
  [ 1] richards.RBObject.append
  [ 2] richards.TaskControlBlock.addInputAndCheckPriority
  [ 3] richards.Scheduler.queuePacket
  [ 4] richards.Scheduler.lambda$createHandler$1
  [ 5] richards.Scheduler$$Lambda.0x00007f218c008440.apply
  [ 6] richards.TaskControlBlock.runTask
  [ 7] richards.Scheduler.schedule
  [ 8] richards.Scheduler.start
  [ 9] Richards.benchmark
  [10] Benchmark.innerBenchmarkLoop
  [11] Run.measure
  [12] Run.doRuns
  [13] Run.runBenchmark
  [14] Harness.main

--- 1727220866 ns (0.81%), 1727 samples
  [ 0] richards.TaskState.isTaskHoldingOrWaiting
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 1698254075 ns (0.79%), 1698 samples
  [ 0] richards.Scheduler$$Lambda.0x00007f218c008000.apply
  [ 1] richards.TaskControlBlock.runTask
  [ 2] richards.Scheduler.schedule
  [ 3] richards.Scheduler.start
  [ 4] Richards.benchmark
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 1651170777 ns (0.77%), 1651 samples
  [ 0] richards.TaskState.isTaskHoldingOrWaiting
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 1592210058 ns (0.74%), 1592 samples
  [ 0] richards.Scheduler.lambda$createHandler$1
  [ 1] richards.Scheduler$$Lambda.0x00007f218c008440.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 1541280650 ns (0.72%), 1541 samples
  [ 0] richards.Scheduler.schedule
  [ 1] richards.Scheduler.start
  [ 2] Richards.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 1533235055 ns (0.72%), 1533 samples
  [ 0] richards.Scheduler.queuePacket
  [ 1] richards.Scheduler.lambda$createHandler$1
  [ 2] richards.Scheduler$$Lambda.0x00007f218c008440.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1501234725 ns (0.70%), 1501 samples
  [ 0] richards.Scheduler.schedule
  [ 1] richards.Scheduler.start
  [ 2] Richards.benchmark
  [ 3] Benchmark.innerBenchmarkLoop
  [ 4] Run.measure
  [ 5] Run.doRuns
  [ 6] Run.runBenchmark
  [ 7] Harness.main

--- 1427245018 ns (0.67%), 1427 samples
  [ 0] richards.HandlerTaskDataRecord.deviceIn
  [ 1] richards.Scheduler.lambda$createHandler$1
  [ 2] richards.Scheduler$$Lambda.0x00007f218c008440.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1401113296 ns (0.66%), 1401 samples
  [ 0] richards.Scheduler.queuePacket
  [ 1] richards.Scheduler.lambda$createDevice$0
  [ 2] richards.Scheduler$$Lambda.0x00007f218c008660.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1392289896 ns (0.65%), 1392 samples
  [ 0] richards.DeviceTaskDataRecord.setPending
  [ 1] richards.Scheduler.lambda$createDevice$0
  [ 2] richards.Scheduler$$Lambda.0x00007f218c008660.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1328160312 ns (0.62%), 1328 samples
  [ 0] richards.Scheduler.lambda$createHandler$1
  [ 1] richards.Scheduler$$Lambda.0x00007f218c008440.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 1288076813 ns (0.60%), 1288 samples
  [ 0] richards.RBObject.append
  [ 1] richards.HandlerTaskDataRecord.deviceInAdd
  [ 2] richards.Scheduler.lambda$createHandler$1
  [ 3] richards.Scheduler$$Lambda.0x00007f218c008440.apply
  [ 4] richards.TaskControlBlock.runTask
  [ 5] richards.Scheduler.schedule
  [ 6] richards.Scheduler.start
  [ 7] Richards.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 1205140688 ns (0.56%), 1205 samples
  [ 0] richards.HandlerTaskDataRecord.workIn
  [ 1] richards.Scheduler.lambda$createHandler$1
  [ 2] richards.Scheduler$$Lambda.0x00007f218c008440.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1184232841 ns (0.55%), 1184 samples
  [ 0] richards.TaskControlBlock.getLink
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 1176110512 ns (0.55%), 1176 samples
  [ 0] richards.Scheduler$$Lambda.0x00007f218c008660.apply
  [ 1] richards.TaskControlBlock.runTask
  [ 2] richards.Scheduler.schedule
  [ 3] richards.Scheduler.start
  [ 4] Richards.benchmark
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 1112389971 ns (0.52%), 1112 samples
  [ 0] richards.HandlerTaskDataRecord.workInAdd
  [ 1] richards.Scheduler.lambda$createHandler$1
  [ 2] richards.Scheduler$$Lambda.0x00007f218c008440.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 1108186362 ns (0.52%), 1108 samples
  [ 0] richards.TaskState.isWaitingWithPacket
  [ 1] richards.TaskControlBlock.runTask
  [ 2] richards.Scheduler.schedule
  [ 3] richards.Scheduler.start
  [ 4] Richards.benchmark
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 1098111587 ns (0.51%), 1098 samples
  [ 0] richards.Scheduler.lambda$createHandler$1
  [ 1] richards.Scheduler$$Lambda.0x00007f218c008440.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 1016173412 ns (0.48%), 1016 samples
  [ 0] richards.TaskControlBlock.addInputAndCheckPriority
  [ 1] richards.Scheduler.queuePacket
  [ 2] richards.Scheduler.lambda$createDevice$0
  [ 3] richards.Scheduler$$Lambda.0x00007f218c008660.apply
  [ 4] richards.TaskControlBlock.runTask
  [ 5] richards.Scheduler.schedule
  [ 6] richards.Scheduler.start
  [ 7] Richards.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 892199707 ns (0.42%), 892 samples
  [ 0] richards.Scheduler.lambda$createDevice$0
  [ 1] richards.Scheduler$$Lambda.0x00007f218c008660.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 861163035 ns (0.40%), 861 samples
  [ 0] richards.DeviceTaskDataRecord.setPending
  [ 1] richards.Scheduler.lambda$createDevice$0
  [ 2] richards.Scheduler$$Lambda.0x00007f218c008660.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 846163390 ns (0.40%), 846 samples
  [ 0] richards.Scheduler$$Lambda.0x00007f218c008220.apply
  [ 1] richards.TaskControlBlock.runTask
  [ 2] richards.Scheduler.schedule
  [ 3] richards.Scheduler.start
  [ 4] Richards.benchmark
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 833147167 ns (0.39%), 833 samples
  [ 0] richards.Scheduler.lambda$createIdler$2
  [ 1] richards.Scheduler$$Lambda.0x00007f218c008000.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 779132631 ns (0.36%), 779 samples
  [ 0] richards.Scheduler.lambda$createDevice$0
  [ 1] richards.Scheduler$$Lambda.0x00007f218c008660.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 682084806 ns (0.32%), 682 samples
  [ 0] richards.Packet.getDatum
  [ 1] richards.Scheduler.lambda$createHandler$1
  [ 2] richards.Scheduler$$Lambda.0x00007f218c008440.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 663101795 ns (0.31%), 663 samples
  [ 0] richards.Packet.setLink
  [ 1] richards.RBObject.append
  [ 2] richards.HandlerTaskDataRecord.workInAdd
  [ 3] richards.Scheduler.lambda$createHandler$1
  [ 4] richards.Scheduler$$Lambda.0x00007f218c008440.apply
  [ 5] richards.TaskControlBlock.runTask
  [ 6] richards.Scheduler.schedule
  [ 7] richards.Scheduler.start
  [ 8] Richards.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 614115967 ns (0.29%), 614 samples
  [ 0] richards.TaskState.setTaskHolding
  [ 1] richards.Scheduler.release
  [ 2] richards.Scheduler.lambda$createIdler$2
  [ 3] richards.Scheduler$$Lambda.0x00007f218c008000.apply
  [ 4] richards.TaskControlBlock.runTask
  [ 5] richards.Scheduler.schedule
  [ 6] richards.Scheduler.start
  [ 7] Richards.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 614013675 ns (0.29%), 614 samples
  [ 0] richards.RBObject.append
  [ 1] richards.TaskControlBlock.addInputAndCheckPriority
  [ 2] richards.Scheduler.queuePacket
  [ 3] richards.Scheduler.lambda$createHandler$1
  [ 4] richards.Scheduler$$Lambda.0x00007f218c008440.apply
  [ 5] richards.TaskControlBlock.runTask
  [ 6] richards.Scheduler.schedule
  [ 7] richards.Scheduler.start
  [ 8] Richards.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 605098089 ns (0.28%), 605 samples
  [ 0] richards.Scheduler.lambda$createHandler$1
  [ 1] richards.Scheduler$$Lambda.0x00007f218c008440.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 599032898 ns (0.28%), 599 samples
  [ 0] richards.TaskControlBlock.runTask
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 590050309 ns (0.28%), 590 samples
  [ 0] richards.TaskControlBlock.addInputAndCheckPriority
  [ 1] richards.Scheduler.queuePacket
  [ 2] richards.Scheduler.lambda$createHandler$1
  [ 3] richards.Scheduler$$Lambda.0x00007f218c008440.apply
  [ 4] richards.TaskControlBlock.runTask
  [ 5] richards.Scheduler.schedule
  [ 6] richards.Scheduler.start
  [ 7] Richards.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 589073302 ns (0.28%), 589 samples
  [ 0] richards.TaskState.running
  [ 1] richards.TaskControlBlock.runTask
  [ 2] richards.Scheduler.schedule
  [ 3] richards.Scheduler.start
  [ 4] Richards.benchmark
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 587098783 ns (0.27%), 587 samples
  [ 0] richards.TaskState.setTaskHolding
  [ 1] richards.Scheduler.release
  [ 2] richards.Scheduler.lambda$createIdler$2
  [ 3] richards.Scheduler$$Lambda.0x00007f218c008000.apply
  [ 4] richards.TaskControlBlock.runTask
  [ 5] richards.Scheduler.schedule
  [ 6] richards.Scheduler.start
  [ 7] Richards.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 580156584 ns (0.27%), 580 samples
  [ 0] richards.Scheduler.findTask
  [ 1] richards.Scheduler.release
  [ 2] richards.Scheduler.lambda$createIdler$2
  [ 3] richards.Scheduler$$Lambda.0x00007f218c008000.apply
  [ 4] richards.TaskControlBlock.runTask
  [ 5] richards.Scheduler.schedule
  [ 6] richards.Scheduler.start
  [ 7] Richards.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 574993237 ns (0.27%), 575 samples
  [ 0] richards.TaskControlBlock.addInputAndCheckPriority
  [ 1] richards.Scheduler.queuePacket
  [ 2] richards.Scheduler.lambda$createHandler$1
  [ 3] richards.Scheduler$$Lambda.0x00007f218c008440.apply
  [ 4] richards.TaskControlBlock.runTask
  [ 5] richards.Scheduler.schedule
  [ 6] richards.Scheduler.start
  [ 7] Richards.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 541067829 ns (0.25%), 541 samples
  [ 0] richards.IdleTaskDataRecord.setCount
  [ 1] richards.Scheduler.lambda$createIdler$2
  [ 2] richards.Scheduler$$Lambda.0x00007f218c008000.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 540003521 ns (0.25%), 540 samples
  [ 0] richards.Scheduler.lambda$createWorker$3
  [ 1] richards.Scheduler$$Lambda.0x00007f218c008220.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 521077349 ns (0.24%), 521 samples
  [ 0] richards.Scheduler.lambda$createWorker$3
  [ 1] richards.Scheduler$$Lambda.0x00007f218c008220.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 521059222 ns (0.24%), 521 samples
  [ 0] richards.Scheduler.findTask
  [ 1] richards.Scheduler.release
  [ 2] richards.Scheduler.lambda$createIdler$2
  [ 3] richards.Scheduler$$Lambda.0x00007f218c008000.apply
  [ 4] richards.TaskControlBlock.runTask
  [ 5] richards.Scheduler.schedule
  [ 6] richards.Scheduler.start
  [ 7] Richards.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 510122597 ns (0.24%), 510 samples
  [ 0] richards.TaskState.setTaskHolding
  [ 1] richards.Scheduler.holdSelf
  [ 2] richards.Scheduler.lambda$createDevice$0
  [ 3] richards.Scheduler$$Lambda.0x00007f218c008660.apply
  [ 4] richards.TaskControlBlock.runTask
  [ 5] richards.Scheduler.schedule
  [ 6] richards.Scheduler.start
  [ 7] Richards.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 498043399 ns (0.23%), 498 samples
  [ 0] richards.Packet.setIdentity
  [ 1] richards.Scheduler.queuePacket
  [ 2] richards.Scheduler.lambda$createHandler$1
  [ 3] richards.Scheduler$$Lambda.0x00007f218c008440.apply
  [ 4] richards.TaskControlBlock.runTask
  [ 5] richards.Scheduler.schedule
  [ 6] richards.Scheduler.start
  [ 7] Richards.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 481075568 ns (0.22%), 481 samples
  [ 0] richards.TaskControlBlock.addInputAndCheckPriority
  [ 1] richards.Scheduler.queuePacket
  [ 2] richards.Scheduler.lambda$createDevice$0
  [ 3] richards.Scheduler$$Lambda.0x00007f218c008660.apply
  [ 4] richards.TaskControlBlock.runTask
  [ 5] richards.Scheduler.schedule
  [ 6] richards.Scheduler.start
  [ 7] Richards.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 472038628 ns (0.22%), 472 samples
  [ 0] richards.TaskControlBlock.addInputAndCheckPriority
  [ 1] richards.Scheduler.queuePacket
  [ 2] richards.Scheduler.lambda$createWorker$3
  [ 3] richards.Scheduler$$Lambda.0x00007f218c008220.apply
  [ 4] richards.TaskControlBlock.runTask
  [ 5] richards.Scheduler.schedule
  [ 6] richards.Scheduler.start
  [ 7] Richards.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 465099010 ns (0.22%), 465 samples
  [ 0] richards.Packet.setIdentity
  [ 1] richards.Scheduler.queuePacket
  [ 2] richards.Scheduler.lambda$createWorker$3
  [ 3] richards.Scheduler$$Lambda.0x00007f218c008220.apply
  [ 4] richards.TaskControlBlock.runTask
  [ 5] richards.Scheduler.schedule
  [ 6] richards.Scheduler.start
  [ 7] Richards.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 462080287 ns (0.22%), 462 samples
  [ 0] richards.TaskControlBlock.addInputAndCheckPriority
  [ 1] richards.Scheduler.queuePacket
  [ 2] richards.Scheduler.lambda$createHandler$1
  [ 3] richards.Scheduler$$Lambda.0x00007f218c008440.apply
  [ 4] richards.TaskControlBlock.runTask
  [ 5] richards.Scheduler.schedule
  [ 6] richards.Scheduler.start
  [ 7] Richards.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 461007774 ns (0.22%), 461 samples
  [ 0] richards.Scheduler.lambda$createWorker$3
  [ 1] richards.Scheduler$$Lambda.0x00007f218c008220.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 444030405 ns (0.21%), 444 samples
  [ 0] richards.Scheduler.findTask
  [ 1] richards.Scheduler.queuePacket
  [ 2] richards.Scheduler.lambda$createHandler$1
  [ 3] richards.Scheduler$$Lambda.0x00007f218c008440.apply
  [ 4] richards.TaskControlBlock.runTask
  [ 5] richards.Scheduler.schedule
  [ 6] richards.Scheduler.start
  [ 7] Richards.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 444024485 ns (0.21%), 444 samples
  [ 0] richards.TaskControlBlock.runTask
  [ 1] richards.Scheduler.schedule
  [ 2] richards.Scheduler.start
  [ 3] Richards.benchmark
  [ 4] Benchmark.innerBenchmarkLoop
  [ 5] Run.measure
  [ 6] Run.doRuns
  [ 7] Run.runBenchmark
  [ 8] Harness.main

--- 426077309 ns (0.20%), 426 samples
  [ 0] richards.Scheduler$$Lambda.0x00007f218c008440.apply
  [ 1] [unknown_Java]

--- 424094636 ns (0.20%), 424 samples
  [ 0] richards.Scheduler.lambda$createHandler$1
  [ 1] richards.Scheduler$$Lambda.0x00007f218c008440.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 423089477 ns (0.20%), 423 samples
  [ 0] richards.Scheduler$$Lambda.0x00007f218c008660.apply
  [ 1] richards.TaskControlBlock.runTask
  [ 2] richards.Scheduler.schedule
  [ 3] richards.Scheduler.start
  [ 4] Richards.benchmark
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 402817990 ns (0.19%), 403 samples
  [ 0] richards.IdleTaskDataRecord.setControl
  [ 1] richards.Scheduler.lambda$createIdler$2
  [ 2] richards.Scheduler$$Lambda.0x00007f218c008000.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 397069020 ns (0.19%), 397 samples
  [ 0] richards.Scheduler$$Lambda.0x00007f218c008000.apply
  [ 1] richards.TaskControlBlock.runTask
  [ 2] richards.Scheduler.schedule
  [ 3] richards.Scheduler.start
  [ 4] Richards.benchmark
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 394044104 ns (0.18%), 394 samples
  [ 0] richards.IdleTaskDataRecord.setControl
  [ 1] richards.Scheduler.lambda$createIdler$2
  [ 2] richards.Scheduler$$Lambda.0x00007f218c008000.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 372996764 ns (0.17%), 373 samples
  [ 0] richards.Scheduler.lambda$createHandler$1
  [ 1] richards.Scheduler$$Lambda.0x00007f218c008440.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 370060796 ns (0.17%), 370 samples
  [ 0] richards.Scheduler$$Lambda.0x00007f218c008000.apply
  [ 1] [unknown_Java]

--- 369063652 ns (0.17%), 369 samples
  [ 0] richards.Scheduler.lambda$createHandler$1
  [ 1] richards.Scheduler$$Lambda.0x00007f218c008440.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 366026108 ns (0.17%), 366 samples
  [ 0] richards.Scheduler.findTask
  [ 1] richards.Scheduler.queuePacket
  [ 2] richards.Scheduler.lambda$createWorker$3
  [ 3] richards.Scheduler$$Lambda.0x00007f218c008220.apply
  [ 4] richards.TaskControlBlock.runTask
  [ 5] richards.Scheduler.schedule
  [ 6] richards.Scheduler.start
  [ 7] Richards.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 364042686 ns (0.17%), 364 samples
  [ 0] richards.TaskState.running
  [ 1] richards.TaskControlBlock.runTask
  [ 2] richards.Scheduler.schedule
  [ 3] richards.Scheduler.start
  [ 4] Richards.benchmark
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 363078877 ns (0.17%), 363 samples
  [ 0] richards.Packet.setLink
  [ 1] richards.RBObject.append
  [ 2] richards.HandlerTaskDataRecord.deviceInAdd
  [ 3] richards.Scheduler.lambda$createHandler$1
  [ 4] richards.Scheduler$$Lambda.0x00007f218c008440.apply
  [ 5] richards.TaskControlBlock.runTask
  [ 6] richards.Scheduler.schedule
  [ 7] richards.Scheduler.start
  [ 8] Richards.benchmark
  [ 9] Benchmark.innerBenchmarkLoop
  [10] Run.measure
  [11] Run.doRuns
  [12] Run.runBenchmark
  [13] Harness.main

--- 347010530 ns (0.16%), 347 samples
  [ 0] richards.Scheduler.lambda$createHandler$1
  [ 1] richards.Scheduler$$Lambda.0x00007f218c008440.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 323014735 ns (0.15%), 323 samples
  [ 0] richards.Scheduler.queuePacket
  [ 1] richards.Scheduler.lambda$createHandler$1
  [ 2] richards.Scheduler$$Lambda.0x00007f218c008440.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 298017332 ns (0.14%), 298 samples
  [ 0] richards.TaskControlBlock.addInputAndCheckPriority
  [ 1] richards.Scheduler.queuePacket
  [ 2] richards.Scheduler.lambda$createWorker$3
  [ 3] richards.Scheduler$$Lambda.0x00007f218c008220.apply
  [ 4] richards.TaskControlBlock.runTask
  [ 5] richards.Scheduler.schedule
  [ 6] richards.Scheduler.start
  [ 7] Richards.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 284018844 ns (0.13%), 284 samples
  [ 0] richards.Scheduler.findTask
  [ 1] richards.Scheduler.queuePacket
  [ 2] richards.Scheduler.lambda$createHandler$1
  [ 3] richards.Scheduler$$Lambda.0x00007f218c008440.apply
  [ 4] richards.TaskControlBlock.runTask
  [ 5] richards.Scheduler.schedule
  [ 6] richards.Scheduler.start
  [ 7] Richards.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 282069287 ns (0.13%), 282 samples
  [ 0] richards.Scheduler$$Lambda.0x00007f218c008440.apply
  [ 1] richards.TaskControlBlock.runTask
  [ 2] richards.Scheduler.schedule
  [ 3] richards.Scheduler.start
  [ 4] Richards.benchmark
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 282058122 ns (0.13%), 282 samples
  [ 0] richards.Scheduler.lambda$createIdler$2
  [ 1] richards.Scheduler$$Lambda.0x00007f218c008000.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 282020335 ns (0.13%), 282 samples
  [ 0] richards.Scheduler$$Lambda.0x00007f218c008220.apply
  [ 1] richards.TaskControlBlock.runTask
  [ 2] richards.Scheduler.schedule
  [ 3] richards.Scheduler.start
  [ 4] Richards.benchmark
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 267051141 ns (0.12%), 267 samples
  [ 0] richards.Scheduler$$Lambda.0x00007f218c008220.apply
  [ 1] [unknown_Java]

--- 248053305 ns (0.12%), 248 samples
  [ 0] richards.TaskState.packetPending
  [ 1] richards.TaskControlBlock.runTask
  [ 2] richards.Scheduler.schedule
  [ 3] richards.Scheduler.start
  [ 4] Richards.benchmark
  [ 5] Benchmark.innerBenchmarkLoop
  [ 6] Run.measure
  [ 7] Run.doRuns
  [ 8] Run.runBenchmark
  [ 9] Harness.main

--- 239061271 ns (0.11%), 239 samples
  [ 0] richards.Scheduler.lambda$createIdler$2
  [ 1] richards.Scheduler$$Lambda.0x00007f218c008000.apply
  [ 2] richards.TaskControlBlock.runTask
  [ 3] richards.Scheduler.schedule
  [ 4] richards.Scheduler.start
  [ 5] Richards.benchmark
  [ 6] Benchmark.innerBenchmarkLoop
  [ 7] Run.measure
  [ 8] Run.doRuns
  [ 9] Run.runBenchmark
  [10] Harness.main

--- 238021786 ns (0.11%), 238 samples
  [ 0] richards.Scheduler.markWaiting
  [ 1] richards.Scheduler.lambda$createHandler$1
  [ 2] richards.Scheduler$$Lambda.0x00007f218c008440.apply
  [ 3] richards.TaskControlBlock.runTask
  [ 4] richards.Scheduler.schedule
  [ 5] richards.Scheduler.start
  [ 6] Richards.benchmark
  [ 7] Benchmark.innerBenchmarkLoop
  [ 8] Run.measure
  [ 9] Run.doRuns
  [10] Run.runBenchmark
  [11] Harness.main

--- 234033605 ns (0.11%), 234 samples
  [ 0] richards.TaskControlBlock.addInputAndCheckPriority
  [ 1] richards.Scheduler.queuePacket
  [ 2] richards.Scheduler.lambda$createHandler$1
  [ 3] richards.Scheduler$$Lambda.0x00007f218c008440.apply
  [ 4] richards.TaskControlBlock.runTask
  [ 5] richards.Scheduler.schedule
  [ 6] richards.Scheduler.start
  [ 7] Richards.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 227059458 ns (0.11%), 227 samples
  [ 0] richards.RBObject.append
  [ 1] richards.HandlerTaskDataRecord.deviceInAdd
  [ 2] richards.Scheduler.lambda$createHandler$1
  [ 3] richards.Scheduler$$Lambda.0x00007f218c008440.apply
  [ 4] richards.TaskControlBlock.runTask
  [ 5] richards.Scheduler.schedule
  [ 6] richards.Scheduler.start
  [ 7] Richards.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

--- 227012464 ns (0.11%), 227 samples
  [ 0] richards.Scheduler.findTask
  [ 1] richards.Scheduler.queuePacket
  [ 2] richards.Scheduler.lambda$createDevice$0
  [ 3] richards.Scheduler$$Lambda.0x00007f218c008660.apply
  [ 4] richards.TaskControlBlock.runTask
  [ 5] richards.Scheduler.schedule
  [ 6] richards.Scheduler.start
  [ 7] Richards.benchmark
  [ 8] Benchmark.innerBenchmarkLoop
  [ 9] Run.measure
  [10] Run.doRuns
  [11] Run.runBenchmark
  [12] Harness.main

          ns  percent  samples  top
  ----------  -------  -------  ---
 35027889878   16.38%    35023  richards.TaskControlBlock.runTask
 33927793142   15.86%    33923  itable stub
 33676710959   15.75%    33672  richards.Scheduler.schedule
 15324899069    7.17%    15323  richards.Scheduler.lambda$createHandler$1
 13293654772    6.22%    13292  richards.TaskState.isTaskHoldingOrWaiting
 11606393721    5.43%    11605  richards.Scheduler$$Lambda.0x00007f218c008660.apply
  8611165875    4.03%     8610  richards.TaskControlBlock.getIdentity
  7267836630    3.40%     7267  richards.TaskControlBlock.addInputAndCheckPriority
  5104647426    2.39%     5104  richards.Scheduler$$Lambda.0x00007f218c008440.apply
  4544797604    2.13%     4544  richards.HandlerTaskDataRecord.deviceInAdd
  4528814337    2.12%     4528  richards.Scheduler.lambda$createDevice$0
  4139503203    1.94%     4139  richards.HandlerTaskDataRecord.deviceIn
  3323438857    1.55%     3323  richards.Packet.setIdentity
  3263364908    1.53%     3263  richards.Scheduler.queuePacket
  3015352911    1.41%     3015  richards.Packet.setLink
  2898361664    1.36%     2898  richards.Scheduler.findTask
  2591198331    1.21%     2591  richards.RBObject.append
  2470384202    1.16%     2470  richards.Scheduler$$Lambda.0x00007f218c008000.apply
  2253452931    1.05%     2253  richards.DeviceTaskDataRecord.setPending
  1890145873    0.88%     1890  richards.Scheduler.lambda$createWorker$3
  1711337347    0.80%     1711  richards.TaskState.setTaskHolding
  1562293493    0.73%     1562  richards.Scheduler.lambda$createIdler$2
  1396240826    0.65%     1396  richards.Scheduler$$Lambda.0x00007f218c008220.apply
  1231145860    0.58%     1231  richards.HandlerTaskDataRecord.workIn
  1224198172    0.57%     1224  richards.TaskState.isWaitingWithPacket
  1205237558    0.56%     1205  richards.TaskControlBlock.getLink
  1133384617    0.53%     1133  richards.HandlerTaskDataRecord.workInAdd
   975885528    0.46%      976  richards.IdleTaskDataRecord.setControl
   953115988    0.45%      953  richards.TaskState.running
   682084806    0.32%      682  richards.Packet.getDatum
   541067829    0.25%      541  richards.IdleTaskDataRecord.setCount
   406948742    0.19%      407  __ZN41com_002eoracle_002esvm_002ecore_002ecode_002eIsolateEnterStub74TruffleToLibGraalEntryPoints__validateCompilerOption__Ujs0fEGwUTHHbobHrcnio9EJ32org_002egraalvm_002ejniutils_002eJNI_0024JString31org_002egraalvm_002ejniutils_002eJNI_0024JNIEnv31org_002egraalvm_002ejniutils_002eJNI_0024JClasslS0__S0__
   274037937    0.13%      274  richards.Packet.getIdentity
   248053305    0.12%      248  richards.TaskState.packetPending
   238021786    0.11%      238  richards.Scheduler.markWaiting
   214068124    0.10%      214  richards.IdleTaskDataRecord.getControl
   209074146    0.10%      209  richards.Packet.setDatum
   120002804    0.06%      120  richards.WorkerTaskDataRecord.setDestination
   110991843    0.05%      111  richards.WorkerTaskDataRecord.setCount
    87998931    0.04%       88  richards.Packet.getLink
    75008312    0.04%       75  richards.Scheduler.release
    54018254    0.03%       54  richards.WorkerTaskDataRecord.getCount
    26343420    0.01%       26  _raw_spin_unlock_irqrestore_[k]
    18118474    0.01%       18  clear_page_rep_[k]
    12746786    0.01%       12  clock_gettime@GLIBC_2.2.5
    11976813    0.01%       12  zap_pte_range_[k]
    10000564    0.00%       10  richards.Packet.getData
     9995142    0.00%       10  /home/hburchell/Repos/graal-dev/graal-instrumentation/sdk/mxbuild/linux-amd64/GRAALVM_LIBGRAAL_JAVA21/graalvm-libgraal-openjdk-21.0.2+13.1/lib/libjvmcicompiler.so
     9010861    0.00%        9  Interpreter
     8991942    0.00%        9  InlineCacheBuffer
     8063244    0.00%        8  G1ParScanThreadState::trim_queue_to_threshold
     7017654    0.00%        7  do_user_addr_fault_[k]
     7001140    0.00%        7  richards.Scheduler.createTask
     7000953    0.00%        7  richards.Scheduler.holdSelf
     6979481    0.00%        7  __ZN41com_002eoracle_002esvm_002ecore_002ecode_002eIsolateEnterStub65CEntryPointNativeFunctions__tearDownIsolate__ke4IYWkkawAn2nvyM2ZSW5EJi37org_002egraalvm_002enativeimage_002eIsolateThread
     6024611    0.00%        6  next_uptodate_page_[k]
     6000012    0.00%        6  richards.Scheduler.start
     5341520    0.00%        5  PlatformMonitor::wait
     5278921    0.00%        5  srso_safe_ret_[k]
     4995381    0.00%        5  Benchmark.innerBenchmarkLoop
     4275942    0.00%        4  rseq_update_cpu_id_[k]
     4008460    0.00%        4  java.io.PrintStream.println
     4001733    0.00%        4  richards.Scheduler.<init>
     3999920    0.00%        4  richards.Packet.<init>
     3989481    0.00%        4  filemap_map_pages_[k]
     3226771    0.00%        3  [vdso]
     3208923    0.00%        3  StatSamplerTask::task
     3196871    0.00%        3  Mutex::lock_without_safepoint_check
     3014381    0.00%        3  __memmove_avx_unaligned_erms
     3007581    0.00%        3  __rcu_read_unlock_[k]
     3006441    0.00%        3  java.io.Writer.write
     3001291    0.00%        3  richards.Scheduler.createPacket
     2996020    0.00%        3  handle_mm_fault_[k]
     2994040    0.00%        3  get_mem_cgroup_from_mm_[k]
     2992401    0.00%        3  page_remove_rmap_[k]
     2977810    0.00%        3  readConfiguration0
     2331482    0.00%        2  futex_wait_[k]
     2204121    0.00%        2  futex_setup_timer_[k]
     2155591    0.00%        2  __audit_syscall_entry_[k]
     2146961    0.00%        2  rseq_ip_fixup_[k]
     2127880    0.00%        2  VMError::is_error_reported
     2088451    0.00%        2  _raw_spin_unlock_[k]
     2082320    0.00%        2  __futex_abstimed_wait_common
     2071520    0.00%        2  __tls_get_addr
     2051780    0.00%        2  vma_alloc_folio_[k]
     2034531    0.00%        2  page_add_file_rmap_[k]
     2025060    0.00%        2  policy_node_[k]
     2018930    0.00%        2  _raw_spin_lock_[k]
     2015801    0.00%        2  mem_cgroup_from_task_[k]
     2013010    0.00%        2  folio_memcg_lock.part.0_[k]
     2008800    0.00%        2  java.lang.System$2.currentCarrierThread
     2007911    0.00%        2  java.lang.System$2.encodeASCII
     2007421    0.00%        2  richards.Scheduler.createWorker
     2006330    0.00%        2  java.lang.StringCoding.implEncodeAsciiArray
     2005901    0.00%        2  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<286822ul, G1BarrierSet>, (AccessInternal::BarrierType)3, 286822ul>::oop_access_barrier
     2003730    0.00%        2  InterpreterRuntime::frequency_counter_overflow_inner
     2003461    0.00%        2  charge_memcg_[k]
     2003430    0.00%        2  java.lang.invoke.LambdaForm$MH.0x00007f218c00f800.invoke
     2002720    0.00%        2  MemAllocator::Allocation::notify_allocation_jvmti_sampler
     2002700    0.00%        2  TypeArrayKlass::allocate_common
     2001300    0.00%        2  java.util.Arrays.fill
     2000741    0.00%        2  __rcu_read_lock_[k]
     2000550    0.00%        2  Richards.benchmark
     1999781    0.00%        2  __mod_memcg_lruvec_state_[k]
     1998571    0.00%        2  Symbol::as_C_string
     1998150    0.00%        2  java.io.BufferedWriter.growIfNeeded
     1997170    0.00%        2  I2C/C2I adapters(0xb)
     1993651    0.00%        2  JVMCIEnv::has_pending_exception
     1993440    0.00%        2  _find_first_bit_[k]
     1985811    0.00%        2  lock_page_memcg_[k]
     1981770    0.00%        2  uncharge_folio_[k]
     1178330    0.00%        1  __pthread_mutex_cond_lock
     1164410    0.00%        1  copy_user_generic_string_[k]
     1150030    0.00%        1  syscall_enter_from_user_mode_[k]
     1142161    0.00%        1  do_syscall_64_[k]
     1115350    0.00%        1  __get_user_8_[k]
     1111510    0.00%        1  __get_user_nocheck_4_[k]
     1107680    0.00%        1  schedule_[k]
     1091890    0.00%        1  Monitor::wait_without_safepoint_check
     1089560    0.00%        1  __x64_sys_futex_[k]
     1086150    0.00%        1  __audit_syscall_exit_[k]
     1080921    0.00%        1  ObjectSynchronizer::is_async_deflation_needed
     1077671    0.00%        1  __lll_lock_wake
     1077311    0.00%        1  do_futex_[k]
     1070440    0.00%        1  os::elapsed_counter
     1067642    0.00%        1  os::elapsedVTime
     1063311    0.00%        1  futex_hash_[k]
     1063180    0.00%        1  plist_add_[k]
     1063170    0.00%        1  WatcherThread::sleep
     1056480    0.00%        1  _copy_to_user_[k]
     1039500    0.00%        1  G1ServiceThread::wait_for_task
     1026380    0.00%        1  OopStorage::BasicParState::~BasicParState
     1025460    0.00%        1  smp_call_function_many_cond_[k]
     1023310    0.00%        1  __memmove_sse2_unaligned_erms
     1023190    0.00%        1  unlink_anon_vmas_[k]
     1021120    0.00%        1  CompileBroker::invoke_compiler_on_method
     1016940    0.00%        1  RelocIterator::initialize
     1016430    0.00%        1  nmethod::oops_do
     1016300    0.00%        1  __bitmap_and_[k]
     1014980    0.00%        1  fixClassname
     1012001    0.00%        1  rcu_core_[k]
     1009240    0.00%        1  BarrierSetNMethod::nmethod_osr_entry_barrier
     1008350    0.00%        1  __next_zones_zonelist_[k]
     1007830    0.00%        1  memcg_slab_post_alloc_hook_[k]
     1007310    0.00%        1  down_read_trylock_[k]
     1006830    0.00%        1  free_p4d_range_[k]
     1006750    0.00%        1  __mod_node_page_state_[k]
     1006590    0.00%        1  mutex_lock_[k]
     1006270    0.00%        1  __mem_cgroup_charge_[k]
     1006080    0.00%        1  pipe_write_[k]
     1005991    0.00%        1  c2v_lookupAppendixInPool
     1005721    0.00%        1  folio_batch_move_lru_[k]
     1005421    0.00%        1  _raw_spin_unlock_irq_[k]
     1004850    0.00%        1  __mark_inode_dirty_[k]
     1004531    0.00%        1  java.lang.invoke.StringConcatFactory.makeConcatWithConstants
     1004530    0.00%        1  jdk.internal.misc.InternalLock.unlock
     1004510    0.00%        1  java.lang.invoke.BoundMethodHandle.speciesDataFor
     1004440    0.00%        1  do_wp_page_[k]
     1004420    0.00%        1  G1PLABAllocator::allocate_direct_or_new_plab
     1004320    0.00%        1  InstanceKlass::uncached_lookup_method
     1004181    0.00%        1  __mod_lruvec_page_state_[k]
     1004160    0.00%        1  java.util.concurrent.ConcurrentHashMap$Node.<init>
     1004080    0.00%        1  java.lang.invoke.LambdaFormBuffer.changeName
     1004020    0.00%        1  DebugInformationRecorder::find_sharable_decode_offset
     1003820    0.00%        1  sun.net.www.protocol.jar.Handler.parseContextSpec
     1003631    0.00%        1  java.util.Arrays.equals
     1003581    0.00%        1  jdk.internal.misc.Blocker.begin
     1003570    0.00%        1  sun.nio.cs.StreamEncoder.growByteBufferIfNeeded
     1003480    0.00%        1  java.lang.AbstractStringBuilder.putStringAt
     1003340    0.00%        1  ClassLoaderMetaspace::allocate
     1003301    0.00%        1  sun.nio.cs.UTF_8$Encoder.encodeArrayLoop
     1003130    0.00%        1  c2v_resolveFieldInPool
     1003070    0.00%        1  java.util.Arrays.copyOfRangeByte
     1003061    0.00%        1  find_vma_[k]
     1003010    0.00%        1  _Copy_conjoint_jshorts_atomic
     1002990    0.00%        1  jdk.internal.org.objectweb.asm.Frame.push
     1002980    0.00%        1  java.nio.Buffer.<init>
     1002910    0.00%        1  JVMCIEnv::get_jvmci_type
     1002790    0.00%        1  java.lang.invoke.BoundMethodHandle.makeReinvoker
     1002691    0.00%        1  java.io.BufferedOutputStream.flushBuffer
     1002690    0.00%        1  java.nio.Buffer.clear
     1002680    0.00%        1  sun.nio.cs.StreamEncoder.writeBytes
     1002630    0.00%        1  InstanceKlass::find_method_index
     1002630    0.00%        1  sun.nio.cs.StreamEncoder.lockedFlushBuffer
     1002600    0.00%        1  java.io.BufferedOutputStream.write
     1002570    0.00%        1  java.lang.StringLatin1.inflate
     1002510    0.00%        1  _invokeBasic
     1002490    0.00%        1  lru_cache_add_inactive_or_unevictable_[k]
     1002451    0.00%        1  java.util.concurrent.ConcurrentHashMap.spread
     1002390    0.00%        1  FieldInfoReader::read_field_info
     1002341    0.00%        1  jdk.internal.misc.Unsafe.allocateUninitializedArray
     1002300    0.00%        1  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ul, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ul>::oop_access_barrier
     1002211    0.00%        1  ClassLoaderData::is_alive
     1002121    0.00%        1  java.lang.invoke.LambdaForm$BasicType.basicType
     1002090    0.00%        1  methodHandle::operator=
     1002081    0.00%        1  java.util.ArrayList.add
     1002000    0.00%        1  java.lang.reflect.Modifier.isStatic
     1001970    0.00%        1  java.lang.String.<init>
     1001930    0.00%        1  CodeBuffer::compute_final_layout
     1001921    0.00%        1  java.lang.invoke.LambdaForm$MH.0x00007f218c00ec00.invoke
