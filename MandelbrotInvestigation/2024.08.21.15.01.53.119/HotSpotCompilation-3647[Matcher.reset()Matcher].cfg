begin_compilation
  name " HotSpotCompilation-3647[java.util.regex.Matcher.reset()]"
  method "HotSpotCompilation-3647[java.util.regex.Matcher.reset()]"
  date 1724248920408
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a721 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a721  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.regex.Matcher
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v736 v756 v737 v750 v738 ?10 v747 v739 ?107 v755 v76 v749 v743 ?123 v751 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a721 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a721 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# int[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.groups
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 19]
stamp: n# int[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v739 
lastLocationAccess: - 
=== Succesors ===
next: i722 
=== Usages ===
a141 v740 v741 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v739 lastLocationAccess: - #next: i722  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Matcher.reset()>
localsSize: 2
locksSize: 0
sourceFile: Matcher.java
sourceLine: 448
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
i722 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a721 
=== Succesors ===
=== Usages ===
i722 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a721  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i722 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-36619|0xffffffffffff70f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 22]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v740 
lastLocationAccess: - 
=== Succesors ===
next: v131 
=== Usages ===
i377 v266 v149 j257 i288 i638 v355 v376 
=== Predecessor ===
a721 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v740 lastLocationAccess: - #next: v131  <|@  <|@
f <@~|@floating>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:448) [bci: 1]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v131 v137 v167 v192 v158 v183 i288 i292 v346 v366 v390 v410 v433 v453 v475 v481 v497 v503 v523 v529 v536 v542 v567 v573 v580 v586 v594 v600 v606 v612 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.first
location: Matcher.first
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:448) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v736 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v134 
=== Usages ===
=== Predecessor ===
i722 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v736 lastLocationAccess: - value: i3 stateAfter: - #next: v134  <|@  <|@
f <@~|@floating>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:449) [bci: 6]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 v149 v179 v78 v205 v207 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.last
location: Matcher.last
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:449) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v737 
lastLocationAccess: - 
value: i6 
stateAfter: - 
=== Succesors ===
next: v137 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v737 lastLocationAccess: - value: i6 stateAfter: - #next: v137  <|@  <|@
f <@~|@floating>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.oldLast
location: Matcher.oldLast
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:450) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v738 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v97 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v738 lastLocationAccess: - value: i3 stateAfter: - #next: v97  <|@  <|@
f <@~|@floating>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i722 
y: i6 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i722 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid i485 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i32 [4]
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i510 i508 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i28 i46 i73 i108 i124 i339 i359 i383 i403 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i375 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v376 v419 i507 i509 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i153 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i377 i461 v266 v280 i420 i462 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
profileData: PROFILED designatedSuccessorProbability: 0.047637855530058615
stamp: void
=== Inputs ===
condition: v149 
=== Succesors ===
trueSuccessor: v95 
falseSuccessor: v96 
=== Usages ===
=== Predecessor ===
v137 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v149 #trueSuccessor: v95 #falseSuccessor: v96  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587026159545039280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v105 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v105  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
v95 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v711 
=== Usages ===
v158 
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v711  <|@  <|@
f <@~|@floating>@ <|@
tid i288 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i722 
y: i3 
=== Succesors ===
=== Usages ===
j264 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i722 y: i3  <|@  <|@
f <@~|@floating>@ <|@
tid j264 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-1 - 2147483646]
=== Inputs ===
value: i288 
=== Succesors ===
=== Usages ===
v265 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i288  <|@  <|@
f <@~|@floating>@ <|@
tid j257 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i722 
=== Succesors ===
=== Usages ===
v265 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i722  <|@  <|@
f <@~|@floating>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@6021759f
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j264 
y: j257 
=== Succesors ===
=== Usages ===
v711 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j264 y: j257  <|@  <|@
f <@*|@fixed>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v265 
=== Succesors ===
trueSuccessor: v707 
falseSuccessor: v710 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v265 #trueSuccessor: v707 #falseSuccessor: v710  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v705 
=== Usages ===
=== Predecessor ===
v711 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v705  <|@  <|@
f <@*|@fixed>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v704 
=== Predecessor ===
v707 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v709 
=== Usages ===
=== Predecessor ===
v711 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v709  <|@  <|@
f <@~|@floating>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@6021759f
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i722 
y: i153 
=== Succesors ===
=== Usages ===
v709 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i722 y: i153  <|@  <|@
f <@*|@fixed>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v266 
=== Succesors ===
trueSuccessor: v708 
falseSuccessor: v300 
=== Usages ===
=== Predecessor ===
v710 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v266 #trueSuccessor: v708 #falseSuccessor: v300  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v708 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v706 
=== Usages ===
=== Predecessor ===
v709 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v706  <|@  <|@
f <@*|@fixed>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v704 
=== Predecessor ===
v708 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v705 v706 
=== Succesors ===
next: v158 
=== Usages ===
v271 v369 v614 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v705 v706 #next: v158  <|@  <|@
f <@~|@floating>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a721 
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a721  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v96 
address: v741 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v12 
=== Usages ===
=== Predecessor ===
v704 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v96 address: v741 lastLocationAccess: - value: i3 stateAfter: - #next: v12  <|@  <|@
f <@~|@floating>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@6021759f
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i722 
y: i375 
=== Succesors ===
=== Usages ===
i377 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i722 y: i375  <|@  <|@
f <@~|@floating>@ <|@
tid i377 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2] bits:0...0xx
=== Inputs ===
condition: v376 
trueValue: i722 
falseValue: i153 
=== Succesors ===
=== Usages ===
v18 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v376 trueValue: i722 falseValue: i153  <|@  <|@
f <@~|@floating>@ <|@
tid a141 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 19]
op: Uncompress
stamp: a# int[]
=== Inputs ===
value: a721 
=== Succesors ===
=== Usages ===
v778 v777 v776 v742 v757 v758 v761 v763 v764 v767 v768 v769 v770 v771 v772 v773 v774 v775 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a721  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
v158 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v13 
values: i27 i28 
=== Succesors ===
=== Usages ===
i28 v18 j234 i341 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v13 values: i27 i28  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 19.9917089859139
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
osrLoop: false
peelings: 1
rotated: false
splits: 2
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v12 
=== Succesors ===
next: v23 
=== Usages ===
i108 v20 v29 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v12 #next: v23  <|@  <|@
f <@~|@floating>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@e606376
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i108 
y: i377 
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i108 y: i377  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v18 
=== Succesors ===
trueSuccessor: v22 
falseSuccessor: v20 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v18 #trueSuccessor: v22 #falseSuccessor: v20  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v167 
=== Usages ===
v271 
=== Predecessor ===
v23 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v167  <|@  <|@
f <@~|@floating>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
guards: v704 v22 
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v704 v22  <|@  <|@
f <@~|@floating>@ <|@
tid j234 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i108 
=== Succesors ===
=== Usages ===
v742 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i108  <|@  <|@
f <@~|@floating>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j234 
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j234  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v271 
address: v742 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v29 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v271 address: v742 lastLocationAccess: - value: i3 stateAfter: - #next: v29  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
stamp: i32
=== Inputs ===
x: i108 
y: i27 
=== Succesors ===
=== Usages ===
i108 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i108 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
stamp: void
=== Inputs ===
loopBegin: v13 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v13  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v13 
=== Succesors ===
next: v350 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v13 #next: v350  <|@  <|@
f <@~|@floating>@ <|@
tid i637 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i32 [-16]
stampKind: i32
value: int[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i638 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i638 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-16 - 2147483631]
=== Inputs ===
x: i722 
y: i637 
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i722 y: i637  <|@  <|@
f <@*|@fixed>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
v20 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037918881428452
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v334 
values: i108 i634 
=== Succesors ===
=== Usages ===
v335 i339 j347 i361 i461 i507 i508 i549 i551 i553 i554 i621 i623 i625 i627 i629 i631 i633 i634 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v334 values: i108 i634  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 13
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 19.9917089859139
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 16
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v350 
=== Succesors ===
next: v338 
=== Usages ===
v336 v340 i341 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v350 #next: v338  <|@  <|@
f <@~|@floating>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@e606376
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i341 
y: i638 
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i341 y: i638  <|@  <|@
f <@*|@fixed>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 0.19966822189770994
stamp: void
=== Inputs ===
condition: v335 
=== Succesors ===
trueSuccessor: v337 
falseSuccessor: v336 
=== Usages ===
=== Predecessor ===
v334 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v335 #trueSuccessor: v337 #falseSuccessor: v336  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728355569134986
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v346 
=== Usages ===
v614 
=== Predecessor ===
v338 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v346  <|@  <|@
f <@~|@floating>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
guards: v704 v337 
=== Succesors ===
=== Usages ===
v542 v567 v433 v573 v536 v580 v475 v586 v529 v594 v346 v600 v523 v606 v481 v612 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v704 v337  <|@  <|@
f <@~|@floating>@ <|@
tid j347 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i341 
=== Succesors ===
=== Usages ===
v757 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i341  <|@  <|@
f <@~|@floating>@ <|@
tid v757 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j347 
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j347  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v614 
address: v757 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v433 
=== Usages ===
=== Predecessor ===
v337 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v614 address: v757 lastLocationAccess: - value: i3 stateAfter: - #next: v433  <|@  <|@
f <@~|@floating>@ <|@
tid i339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
stamp: i32
=== Inputs ===
x: i341 
y: i27 
=== Succesors ===
=== Usages ===
j434 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i341 y: i27  <|@  <|@
f <@~|@floating>@ <|@
tid j434 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i339 
=== Succesors ===
=== Usages ===
v761 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i339  <|@  <|@
f <@~|@floating>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j434 
=== Succesors ===
=== Usages ===
v433 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j434  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v614 
address: v761 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v475 
=== Usages ===
=== Predecessor ===
v346 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v614 address: v761 lastLocationAccess: - value: i3 stateAfter: - #next: v475  <|@  <|@
f <@~|@floating>@ <|@
tid i461 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
stamp: i32
=== Inputs ===
x: i341 
y: i153 
=== Succesors ===
=== Usages ===
j476 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i341 y: i153  <|@  <|@
f <@~|@floating>@ <|@
tid j476 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i461 
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i461  <|@  <|@
f <@~|@floating>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j476 
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j476  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v614 
address: v763 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v481 
=== Usages ===
=== Predecessor ===
v433 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v614 address: v763 lastLocationAccess: - value: i3 stateAfter: - #next: v481  <|@  <|@
f <@~|@floating>@ <|@
tid i507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
stamp: i32
=== Inputs ===
x: i341 
y: i375 
=== Succesors ===
=== Usages ===
j482 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i341 y: i375  <|@  <|@
f <@~|@floating>@ <|@
tid j482 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i507 
=== Succesors ===
=== Usages ===
v764 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i507  <|@  <|@
f <@~|@floating>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j482 
=== Succesors ===
=== Usages ===
v481 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j482  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v614 
address: v764 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v523 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v614 address: v764 lastLocationAccess: - value: i3 stateAfter: - #next: v523  <|@  <|@
f <@~|@floating>@ <|@
tid i508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
stamp: i32
=== Inputs ===
x: i341 
y: i485 
=== Succesors ===
=== Usages ===
j524 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i341 y: i485  <|@  <|@
f <@~|@floating>@ <|@
tid j524 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i508 
=== Succesors ===
=== Usages ===
v767 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i508  <|@  <|@
f <@~|@floating>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j524 
=== Succesors ===
=== Usages ===
v523 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j524  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v614 
address: v767 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v529 
=== Usages ===
=== Predecessor ===
v481 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v614 address: v767 lastLocationAccess: - value: i3 stateAfter: - #next: v529  <|@  <|@
f <@~|@floating>@ <|@
tid i548 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
rawvalue: 5
stableDimension: 0
stamp: i32 [5]
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i549 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i549 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
stamp: i32
=== Inputs ===
x: i341 
y: i548 
=== Succesors ===
=== Usages ===
j530 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i341 y: i548  <|@  <|@
f <@~|@floating>@ <|@
tid j530 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i549 
=== Succesors ===
=== Usages ===
v768 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i549  <|@  <|@
f <@~|@floating>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j530 
=== Succesors ===
=== Usages ===
v529 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j530  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v614 
address: v768 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v536 
=== Usages ===
=== Predecessor ===
v523 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v614 address: v768 lastLocationAccess: - value: i3 stateAfter: - #next: v536  <|@  <|@
f <@~|@floating>@ <|@
tid i550 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
rawvalue: 6
stableDimension: 0
stamp: i32 [6]
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i551 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i551 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
stamp: i32
=== Inputs ===
x: i341 
y: i550 
=== Succesors ===
=== Usages ===
j537 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i341 y: i550  <|@  <|@
f <@~|@floating>@ <|@
tid j537 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i551 
=== Succesors ===
=== Usages ===
v769 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i551  <|@  <|@
f <@~|@floating>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j537 
=== Succesors ===
=== Usages ===
v536 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j537  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v614 
address: v769 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v542 
=== Usages ===
=== Predecessor ===
v529 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v614 address: v769 lastLocationAccess: - value: i3 stateAfter: - #next: v542  <|@  <|@
f <@~|@floating>@ <|@
tid i552 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
rawvalue: 7
stableDimension: 0
stamp: i32 [7]
stampKind: i32
value: int[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i553 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i553 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
stamp: i32
=== Inputs ===
x: i341 
y: i552 
=== Succesors ===
=== Usages ===
j543 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i341 y: i552  <|@  <|@
f <@~|@floating>@ <|@
tid j543 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i553 
=== Succesors ===
=== Usages ===
v770 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i553  <|@  <|@
f <@~|@floating>@ <|@
tid v770 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j543 
=== Succesors ===
=== Usages ===
v542 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j543  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v614 
address: v770 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v567 
=== Usages ===
=== Predecessor ===
v536 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v614 address: v770 lastLocationAccess: - value: i3 stateAfter: - #next: v567  <|@  <|@
f <@~|@floating>@ <|@
tid i547 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i32 [8]
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i554 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i554 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
stamp: i32
=== Inputs ===
x: i341 
y: i547 
=== Succesors ===
=== Usages ===
j568 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i341 y: i547  <|@  <|@
f <@~|@floating>@ <|@
tid j568 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i554 
=== Succesors ===
=== Usages ===
v771 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i554  <|@  <|@
f <@~|@floating>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j568 
=== Succesors ===
=== Usages ===
v567 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j568  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v614 
address: v771 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v573 
=== Usages ===
=== Predecessor ===
v542 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v614 address: v771 lastLocationAccess: - value: i3 stateAfter: - #next: v573  <|@  <|@
f <@~|@floating>@ <|@
tid i620 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
rawvalue: 9
stableDimension: 0
stamp: i32 [9]
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
i621 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i621 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
stamp: i32
=== Inputs ===
x: i341 
y: i620 
=== Succesors ===
=== Usages ===
j574 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i341 y: i620  <|@  <|@
f <@~|@floating>@ <|@
tid j574 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i621 
=== Succesors ===
=== Usages ===
v772 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i621  <|@  <|@
f <@~|@floating>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j574 
=== Succesors ===
=== Usages ===
v573 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j574  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v614 
address: v772 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v580 
=== Usages ===
=== Predecessor ===
v567 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v614 address: v772 lastLocationAccess: - value: i3 stateAfter: - #next: v580  <|@  <|@
f <@~|@floating>@ <|@
tid i622 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
rawvalue: 10
stableDimension: 0
stamp: i32 [10]
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
i623 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i623 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
stamp: i32
=== Inputs ===
x: i341 
y: i622 
=== Succesors ===
=== Usages ===
j581 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i341 y: i622  <|@  <|@
f <@~|@floating>@ <|@
tid j581 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i623 
=== Succesors ===
=== Usages ===
v773 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i623  <|@  <|@
f <@~|@floating>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j581 
=== Succesors ===
=== Usages ===
v580 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j581  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v614 
address: v773 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v586 
=== Usages ===
=== Predecessor ===
v573 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v614 address: v773 lastLocationAccess: - value: i3 stateAfter: - #next: v586  <|@  <|@
f <@~|@floating>@ <|@
tid i624 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
rawvalue: 11
stableDimension: 0
stamp: i32 [11]
stampKind: i32
value: int[11|0xb]
=== Inputs ===
=== Succesors ===
=== Usages ===
i625 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i625 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
stamp: i32
=== Inputs ===
x: i341 
y: i624 
=== Succesors ===
=== Usages ===
j587 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i341 y: i624  <|@  <|@
f <@~|@floating>@ <|@
tid j587 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i625 
=== Succesors ===
=== Usages ===
v774 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i625  <|@  <|@
f <@~|@floating>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j587 
=== Succesors ===
=== Usages ===
v586 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j587  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v614 
address: v774 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v594 
=== Usages ===
=== Predecessor ===
v580 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v614 address: v774 lastLocationAccess: - value: i3 stateAfter: - #next: v594  <|@  <|@
f <@~|@floating>@ <|@
tid i626 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
rawvalue: 12
stableDimension: 0
stamp: i32 [12]
stampKind: i32
value: int[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i627 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i627 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
stamp: i32
=== Inputs ===
x: i341 
y: i626 
=== Succesors ===
=== Usages ===
j595 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i341 y: i626  <|@  <|@
f <@~|@floating>@ <|@
tid j595 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i627 
=== Succesors ===
=== Usages ===
v775 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i627  <|@  <|@
f <@~|@floating>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j595 
=== Succesors ===
=== Usages ===
v594 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j595  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v614 
address: v775 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v600 
=== Usages ===
=== Predecessor ===
v586 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v614 address: v775 lastLocationAccess: - value: i3 stateAfter: - #next: v600  <|@  <|@
f <@~|@floating>@ <|@
tid i628 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
rawvalue: 13
stableDimension: 0
stamp: i32 [13]
stampKind: i32
value: int[13|0xd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i629 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i629 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
stamp: i32
=== Inputs ===
x: i341 
y: i628 
=== Succesors ===
=== Usages ===
j601 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i341 y: i628  <|@  <|@
f <@~|@floating>@ <|@
tid j601 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i629 
=== Succesors ===
=== Usages ===
v776 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i629  <|@  <|@
f <@~|@floating>@ <|@
tid v776 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j601 
=== Succesors ===
=== Usages ===
v600 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j601  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v614 
address: v776 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v606 
=== Usages ===
=== Predecessor ===
v594 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v614 address: v776 lastLocationAccess: - value: i3 stateAfter: - #next: v606  <|@  <|@
f <@~|@floating>@ <|@
tid i630 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
rawvalue: 14
stableDimension: 0
stamp: i32 [14]
stampKind: i32
value: int[14|0xe]
=== Inputs ===
=== Succesors ===
=== Usages ===
i631 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i631 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
stamp: i32
=== Inputs ===
x: i341 
y: i630 
=== Succesors ===
=== Usages ===
j607 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i341 y: i630  <|@  <|@
f <@~|@floating>@ <|@
tid j607 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i631 
=== Succesors ===
=== Usages ===
v777 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i631  <|@  <|@
f <@~|@floating>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j607 
=== Succesors ===
=== Usages ===
v606 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j607  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v614 
address: v777 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v612 
=== Usages ===
=== Predecessor ===
v600 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v614 address: v777 lastLocationAccess: - value: i3 stateAfter: - #next: v612  <|@  <|@
f <@~|@floating>@ <|@
tid i632 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
rawvalue: 15
stableDimension: 0
stamp: i32 [15]
stampKind: i32
value: int[15|0xf]
=== Inputs ===
=== Succesors ===
=== Usages ===
i633 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i633 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
stamp: i32
=== Inputs ===
x: i341 
y: i632 
=== Succesors ===
=== Usages ===
j613 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i341 y: i632  <|@  <|@
f <@~|@floating>@ <|@
tid j613 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i633 
=== Succesors ===
=== Usages ===
v778 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i633  <|@  <|@
f <@~|@floating>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j613 
=== Succesors ===
=== Usages ===
v612 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j613  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v614 
address: v778 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v340 
=== Usages ===
=== Predecessor ===
v606 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v614 address: v778 lastLocationAccess: - value: i3 stateAfter: - #next: v340  <|@  <|@
f <@~|@floating>@ <|@
tid i619 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 16
stableDimension: 0
stamp: i32 [16]
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i634 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i634 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
stamp: i32
=== Inputs ===
x: i341 
y: i619 
=== Succesors ===
=== Usages ===
i341 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i341 y: i619  <|@  <|@
f <@*|@fixed>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
stamp: void
=== Inputs ===
loopBegin: v334 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v612 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v334  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v334 
=== Succesors ===
next: v370 
=== Usages ===
=== Predecessor ===
v338 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v334 #next: v370  <|@  <|@
f <@*|@fixed>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v354 
=== Predecessor ===
v336 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v354 
values: i341 i359 
=== Succesors ===
=== Usages ===
v355 i359 j367 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v354 values: i341 i359  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 13
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 19.9917089859139
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v370 
=== Succesors ===
next: v358 
=== Usages ===
v356 v360 i361 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v370 #next: v358  <|@  <|@
f <@~|@floating>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@e606376
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i361 
y: i722 
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i361 y: i722  <|@  <|@
f <@*|@fixed>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v355 
=== Succesors ===
trueSuccessor: v357 
falseSuccessor: v356 
=== Usages ===
=== Predecessor ===
v354 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v355 #trueSuccessor: v357 #falseSuccessor: v356  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v366 
=== Usages ===
v369 
=== Predecessor ===
v358 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v366  <|@  <|@
f <@~|@floating>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
guards: v704 v357 
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v704 v357  <|@  <|@
f <@~|@floating>@ <|@
tid j367 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i361 
=== Succesors ===
=== Usages ===
v758 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i361  <|@  <|@
f <@~|@floating>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j367 
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j367  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v369 
address: v758 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v360 
=== Usages ===
=== Predecessor ===
v357 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v369 address: v758 lastLocationAccess: - value: i3 stateAfter: - #next: v360  <|@  <|@
f <@~|@floating>@ <|@
tid i359 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
stamp: i32
=== Inputs ===
x: i361 
y: i27 
=== Succesors ===
=== Usages ===
i361 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i361 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
stamp: void
=== Inputs ===
loopBegin: v354 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v354  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v354 
=== Succesors ===
next: v104 
=== Usages ===
=== Predecessor ===
v358 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v354 #next: v104  <|@  <|@
f <@*|@fixed>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
v356 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v104 v105 
=== Succesors ===
next: a723 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v104 v105 #next: a723  <|@  <|@
f <@~|@floating>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a723 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a723 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# int[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.locals
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 43]
stamp: n# int[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v743 
lastLocationAccess: - 
=== Succesors ===
next: i724 
=== Usages ===
a172 v744 v745 
=== Predecessor ===
v103 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v743 lastLocationAccess: - #next: i724  <|@  <|@
tid ?107 <|@
d <@d|@=== Debug Properties ===
bci: 39
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Matcher.reset()>
localsSize: 2
locksSize: 0
sourceFile: Matcher.java
sourceLine: 453
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v780 i724 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a723 
=== Succesors ===
=== Usages ===
i724 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a723  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i724 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-44555|0xffffffffffff51f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 46]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?107 
guard: - 
address: v744 
lastLocationAccess: - 
=== Succesors ===
next: v113 
=== Usages ===
i420 v280 v179 j272 i292 i641 v399 v419 
=== Predecessor ===
a723 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?107 guard: - address: v744 lastLocationAccess: - #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i724 
y: i6 
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i724 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
profileData: PROFILED designatedSuccessorProbability: 0.14462118087187847
stamp: void
=== Inputs ===
condition: v179 
=== Succesors ===
trueSuccessor: v111 
falseSuccessor: v112 
=== Usages ===
=== Predecessor ===
i724 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v179 #trueSuccessor: v111 #falseSuccessor: v112  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594378547460811208
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: v121 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v121  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v119 
=== Predecessor ===
v111 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v719 
=== Usages ===
v183 
=== Predecessor ===
v113 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v719  <|@  <|@
f <@~|@floating>@ <|@
tid i292 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i724 
y: i3 
=== Succesors ===
=== Usages ===
j278 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i724 y: i3  <|@  <|@
f <@~|@floating>@ <|@
tid j278 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-1 - 2147483646]
=== Inputs ===
value: i292 
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i292  <|@  <|@
f <@~|@floating>@ <|@
tid j272 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i724 
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i724  <|@  <|@
f <@~|@floating>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@6021759f
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j278 
y: j272 
=== Succesors ===
=== Usages ===
v719 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j278 y: j272  <|@  <|@
f <@*|@fixed>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v279 
=== Succesors ===
trueSuccessor: v715 
falseSuccessor: v718 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v279 #trueSuccessor: v715 #falseSuccessor: v718  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v713 
=== Usages ===
=== Predecessor ===
v719 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v713  <|@  <|@
f <@*|@fixed>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v712 
=== Predecessor ===
v715 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v717 
=== Usages ===
=== Predecessor ===
v719 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v717  <|@  <|@
f <@~|@floating>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@6021759f
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i724 
y: i153 
=== Succesors ===
=== Usages ===
v717 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i724 y: i153  <|@  <|@
f <@*|@fixed>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v280 
=== Succesors ===
trueSuccessor: v716 
falseSuccessor: v308 
=== Usages ===
=== Predecessor ===
v718 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v280 #trueSuccessor: v716 #falseSuccessor: v308  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v714 
=== Usages ===
=== Predecessor ===
v717 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v714  <|@  <|@
f <@*|@fixed>@ <|@
tid v714 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v712 
=== Predecessor ===
v716 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v713 v714 
=== Succesors ===
next: v183 
=== Usages ===
v285 v413 v505 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v713 v714 #next: v183  <|@  <|@
f <@~|@floating>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a723 
=== Succesors ===
=== Usages ===
v183 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a723  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v112 
address: v745 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v112 address: v745 lastLocationAccess: - value: i3 stateAfter: - #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@6021759f
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i724 
y: i375 
=== Succesors ===
=== Usages ===
i420 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i724 y: i375  <|@  <|@
f <@~|@floating>@ <|@
tid i420 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2] bits:0...0xx
=== Inputs ===
condition: v419 
trueValue: i724 
falseValue: i153 
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v419 trueValue: i724 falseValue: i153  <|@  <|@
f <@~|@floating>@ <|@
tid a172 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 43]
op: Uncompress
stamp: a# int[]
=== Inputs ===
value: a723 
=== Succesors ===
=== Usages ===
v766 v765 v762 v746 v759 v760 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a723  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
v183 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605957610921207776
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v32 
values: i27 i46 
=== Succesors ===
=== Usages ===
i46 v37 j236 i385 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v32 values: i27 i46  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 5.914616475756143
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
osrLoop: false
peelings: 1
rotated: false
splits: 2
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v31 
=== Succesors ===
next: v42 
=== Usages ===
i124 v39 v47 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v31 #next: v42  <|@  <|@
f <@~|@floating>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@e606376
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i124 
y: i420 
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i124 y: i420  <|@  <|@
f <@*|@fixed>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v37 
=== Succesors ===
trueSuccessor: v41 
falseSuccessor: v39 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v37 #trueSuccessor: v41 #falseSuccessor: v39  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576134352261649511
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v192 
=== Usages ===
v285 
=== Predecessor ===
v42 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v192  <|@  <|@
f <@~|@floating>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
guards: v712 v41 
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v712 v41  <|@  <|@
f <@~|@floating>@ <|@
tid j236 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i124 
=== Succesors ===
=== Usages ===
v746 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i124  <|@  <|@
f <@~|@floating>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a172 
index: j236 
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a172 index: j236  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v285 
address: v746 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v47 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v285 address: v746 lastLocationAccess: - value: i3 stateAfter: - #next: v47  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 57]
stamp: i32
=== Inputs ===
x: i124 
y: i27 
=== Succesors ===
=== Usages ===
i124 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i124 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
stamp: void
=== Inputs ===
loopBegin: v32 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v32  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v32 
=== Succesors ===
next: v394 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v32 #next: v394  <|@  <|@
f <@~|@floating>@ <|@
tid i640 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i32 [-4]
stampKind: i32
value: int[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i641 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i641 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-4 - 2147483643]
=== Inputs ===
x: i724 
y: i640 
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i724 y: i640  <|@  <|@
f <@*|@fixed>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v378 
=== Predecessor ===
v39 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608375014378939096
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v378 
values: i124 i510 
=== Succesors ===
=== Usages ===
v379 i383 j391 i405 i462 i509 i510 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v378 values: i124 i510  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 32
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 5.914616475756143
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 4
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v394 
=== Succesors ===
next: v382 
=== Usages ===
v380 v384 i385 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v394 #next: v382  <|@  <|@
f <@~|@floating>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@e606376
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i385 
y: i641 
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i385 y: i641  <|@  <|@
f <@*|@fixed>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
profileData: INJECTED designatedSuccessorProbability: 0.3237093197173655
stamp: void
=== Inputs ===
condition: v379 
=== Succesors ===
trueSuccessor: v381 
falseSuccessor: v380 
=== Usages ===
=== Predecessor ===
v378 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v379 #trueSuccessor: v381 #falseSuccessor: v380  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601047265818730565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v390 
=== Usages ===
v505 
=== Predecessor ===
v382 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v390  <|@  <|@
f <@~|@floating>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
guards: v712 v381 
=== Succesors ===
=== Usages ===
v453 v497 v390 v503 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v712 v381  <|@  <|@
f <@~|@floating>@ <|@
tid j391 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i385 
=== Succesors ===
=== Usages ===
v759 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i385  <|@  <|@
f <@~|@floating>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a172 
index: j391 
=== Succesors ===
=== Usages ===
v390 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a172 index: j391  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v505 
address: v759 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v453 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v505 address: v759 lastLocationAccess: - value: i3 stateAfter: - #next: v453  <|@  <|@
f <@~|@floating>@ <|@
tid i383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 57]
stamp: i32
=== Inputs ===
x: i385 
y: i27 
=== Succesors ===
=== Usages ===
j454 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i385 y: i27  <|@  <|@
f <@~|@floating>@ <|@
tid j454 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i383 
=== Succesors ===
=== Usages ===
v762 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i383  <|@  <|@
f <@~|@floating>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a172 
index: j454 
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a172 index: j454  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v505 
address: v762 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v497 
=== Usages ===
=== Predecessor ===
v390 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v505 address: v762 lastLocationAccess: - value: i3 stateAfter: - #next: v497  <|@  <|@
f <@~|@floating>@ <|@
tid i462 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 57]
stamp: i32
=== Inputs ===
x: i385 
y: i153 
=== Succesors ===
=== Usages ===
j498 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i385 y: i153  <|@  <|@
f <@~|@floating>@ <|@
tid j498 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i462 
=== Succesors ===
=== Usages ===
v765 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i462  <|@  <|@
f <@~|@floating>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a172 
index: j498 
=== Succesors ===
=== Usages ===
v497 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a172 index: j498  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v505 
address: v765 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v503 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v505 address: v765 lastLocationAccess: - value: i3 stateAfter: - #next: v503  <|@  <|@
f <@~|@floating>@ <|@
tid i509 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 57]
stamp: i32
=== Inputs ===
x: i385 
y: i375 
=== Succesors ===
=== Usages ===
j504 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i385 y: i375  <|@  <|@
f <@~|@floating>@ <|@
tid j504 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i509 
=== Succesors ===
=== Usages ===
v766 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i509  <|@  <|@
f <@~|@floating>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a172 
index: j504 
=== Succesors ===
=== Usages ===
v503 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a172 index: j504  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v505 
address: v766 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v384 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v505 address: v766 lastLocationAccess: - value: i3 stateAfter: - #next: v384  <|@  <|@
f <@~|@floating>@ <|@
tid i510 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 57]
stamp: i32
=== Inputs ===
x: i385 
y: i485 
=== Succesors ===
=== Usages ===
i385 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i385 y: i485  <|@  <|@
f <@*|@fixed>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
stamp: void
=== Inputs ===
loopBegin: v378 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v503 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v378  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v378 
=== Succesors ===
next: v414 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v378 #next: v414  <|@  <|@
f <@*|@fixed>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
v380 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605957610921207775
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v398 
values: i385 i403 
=== Succesors ===
=== Usages ===
v399 i403 j411 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v398 values: i385 i403  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 32
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 5.914616475756143
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v414 
=== Succesors ===
next: v402 
=== Usages ===
v400 v404 i405 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v414 #next: v402  <|@  <|@
f <@~|@floating>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@e606376
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i405 
y: i724 
=== Succesors ===
=== Usages ===
v402 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i405 y: i724  <|@  <|@
f <@*|@fixed>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v399 
=== Succesors ===
trueSuccessor: v401 
falseSuccessor: v400 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v399 #trueSuccessor: v401 #falseSuccessor: v400  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576134352261649510
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v410 
=== Usages ===
v413 
=== Predecessor ===
v402 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v410  <|@  <|@
f <@~|@floating>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
guards: v712 v401 
=== Succesors ===
=== Usages ===
v410 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v712 v401  <|@  <|@
f <@~|@floating>@ <|@
tid j411 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i405 
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i405  <|@  <|@
f <@~|@floating>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a172 
index: j411 
=== Succesors ===
=== Usages ===
v410 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a172 index: j411  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v413 
address: v760 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v404 
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v413 address: v760 lastLocationAccess: - value: i3 stateAfter: - #next: v404  <|@  <|@
f <@~|@floating>@ <|@
tid i403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 57]
stamp: i32
=== Inputs ===
x: i405 
y: i27 
=== Succesors ===
=== Usages ===
i405 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i405 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
stamp: void
=== Inputs ===
loopBegin: v398 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v410 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v398  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v398 
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v398 #next: v120  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v119 
=== Predecessor ===
v400 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v120 v121 
=== Succesors ===
next: a725 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v120 v121 #next: a725  <|@  <|@
f <@~|@floating>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
displacement: 60
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a725 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a725 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.text
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 1]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v751 
lastLocationAccess: - 
=== Succesors ===
next: v726 
=== Usages ===
v779 v752 v754 
=== Predecessor ===
v119 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v751 lastLocationAccess: - #next: v726  <|@  <|@
tid ?123 <|@
d <@d|@=== Debug Properties ===
bci: 63
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Matcher.reset()>
localsSize: 2
locksSize: 0
sourceFile: Matcher.java
sourceLine: 455
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v682 v726 i728 i730 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a725 
=== Succesors ===
=== Usages ===
v726 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a725  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140080475799552 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-54283|0xffffffffffff2bf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: Klass*!(compressed base: 140080475799552 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?123 
guard: - 
address: v779 
lastLocationAccess: - 
=== Succesors ===
next: v317 
=== Usages ===
v703 
=== Predecessor ===
a725 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?123 guard: - address: v779 lastLocationAccess: - #next: v317  <|@  <|@
f <@~|@floating>@ <|@
tid v702 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140080475799552 shift: 0)
stampKind: Klass*(compressed base: 140080475799552 shift: 0)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v703 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v726 
y: v702 
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v726 y: v702  <|@  <|@
f <@*|@fixed>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v703 
=== Succesors ===
trueSuccessor: v314 
falseSuccessor: v316 
=== Usages ===
=== Predecessor ===
v726 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v703 #trueSuccessor: v314 #falseSuccessor: v316  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
next: a727 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a727  <|@  <|@
f <@~|@floating>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
displacement: 68
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a727 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a727 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.regex.IntHashSet[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.localsPos
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 67]
stamp: n# java.util.regex.IntHashSet[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v747 
lastLocationAccess: - 
=== Succesors ===
next: i728 
=== Usages ===
v748 
=== Predecessor ===
v314 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v747 lastLocationAccess: - #next: i728  <|@  <|@
f <@~|@floating>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a727 
=== Succesors ===
=== Usages ===
i728 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a727  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i728 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-50955|0xffffffffffff38f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 70]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?123 
guard: - 
address: v748 
lastLocationAccess: - 
=== Succesors ===
next: a729 
=== Usages ===
v78 
=== Predecessor ===
a727 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?123 guard: - address: v748 lastLocationAccess: - #next: a729  <|@  <|@
f <@~|@floating>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a725 
=== Succesors ===
=== Usages ===
a729 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a725  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a729 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v752 
lastLocationAccess: - 
=== Succesors ===
next: i730 
=== Usages ===
v753 
=== Predecessor ===
i728 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v752 lastLocationAccess: - #next: i730  <|@  <|@
f <@~|@floating>@ <|@
tid v753 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a729 
=== Succesors ===
=== Usages ===
i730 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a729  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i730 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-56075|0xffffffffffff24f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?123 
guard: - 
address: v753 
lastLocationAccess: - 
=== Succesors ===
next: v332 
=== Usages ===
i90 
=== Predecessor ===
a729 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?123 guard: - address: v753 lastLocationAccess: - #next: v332  <|@  <|@
f <@~|@floating>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 71]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i728 
y: i6 
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i728 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 71]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v78 
=== Succesors ===
trueSuccessor: v330 
falseSuccessor: v331 
=== Usages ===
=== Predecessor ===
i730 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v78 #trueSuccessor: v330 #falseSuccessor: v331  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:459) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v205 
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v205  <|@  <|@
f <@~|@floating>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v205 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.lastAppendPosition
location: Matcher.lastAppendPosition
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:459) [bci: 100]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v749 
lastLocationAccess: - 
value: i6 
stateAfter: - 
=== Succesors ===
next: v207 
=== Usages ===
=== Predecessor ===
v330 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v749 lastLocationAccess: - value: i6 stateAfter: - #next: v207  <|@  <|@
f <@~|@floating>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v207 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.from
location: Matcher.from
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:460) [bci: 105]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v750 
lastLocationAccess: - 
value: i6 
stateAfter: - 
=== Succesors ===
next: i731 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v750 lastLocationAccess: - value: i6 stateAfter: - #next: i731  <|@  <|@
f <@~|@floating>@ <|@
tid v754 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a725 
=== Succesors ===
=== Usages ===
i731 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a725  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i731 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v754 
lastLocationAccess: - 
=== Succesors ===
next: v227 
=== Usages ===
i225 
=== Predecessor ===
v207 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v754 lastLocationAccess: - #next: v227  <|@  <|@
f <@~|@floating>@ <|@
tid v755 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v227 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i225 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i731 
=== Succesors ===
=== Usages ===
i90 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i731  <|@  <|@
f <@~|@floating>@ <|@
tid i90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i730 
y: i225 
=== Succesors ===
=== Usages ===
v227 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i730 y: i225  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.to
location: Matcher.to
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 113]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v755 
lastLocationAccess: - 
value: i90 
stateAfter: - 
=== Succesors ===
next: i732 
=== Usages ===
=== Predecessor ===
i731 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v755 lastLocationAccess: - value: i90 stateAfter: - #next: i732  <|@  <|@
f <@~|@floating>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
displacement: 44
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i732 v231 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i732 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:462) [bci: 118]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v756 
lastLocationAccess: - 
=== Succesors ===
next: v231 
=== Usages ===
i73 
=== Predecessor ===
v227 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v756 lastLocationAccess: - #next: v231  <|@  <|@
f <@~|@floating>@ <|@
tid i73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:462) [bci: 122]
stamp: i32
=== Inputs ===
x: i732 
y: i27 
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i732 y: i27  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.modCount
location: Matcher.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:462) [bci: 123]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v756 
lastLocationAccess: - 
value: i73 
stateAfter: - 
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
i732 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v756 lastLocationAccess: - value: i73 stateAfter: - #next: v76  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:463) [bci: 127]
stamp: void
=== Inputs ===
memoryMap: - 
result: a1 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a1  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 71]
stamp: void
=== Inputs ===
=== Succesors ===
next: v690 
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v690  <|@  <|@
f <@~|@floating>@ <|@
tid j214 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j681 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i691 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
rawvalue: -84243
stableDimension: 0
stamp: i32 [-84243]
stampKind: i32
value: int[-84243|0xfffffffffffeb6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i680 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v677 
=== Predecessor ===
v331 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
next: v685 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v685  <|@  <|@
f <@~|@floating>@ <|@
tid j687 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j681 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i686 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
rawvalue: -54579
stableDimension: 0
stamp: i32 [-54579]
stampKind: i32
value: int[-54579|0xffffffffffff2acd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i680 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v677 
=== Predecessor ===
v316 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i680 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: i32 [-84243 - -54579] bits:1...1xx01xxx1011x01101
valueDescription: i32
=== Inputs ===
merge: v677 
values: i686 i691 
=== Succesors ===
=== Usages ===
v682 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v677 values: i686 i691  <|@  <|@
f <@~|@floating>@ <|@
tid j681 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: i64 [20 - 660] bits:0...0x0x0010100
valueDescription: i64
=== Inputs ===
merge: v677 
values: j687 j214 
=== Succesors ===
=== Usages ===
v682 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v677 values: j687 j214  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v685 v690 
=== Succesors ===
next: v682 
=== Usages ===
i680 j681 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v685 v690 #next: v682  <|@  <|@
f <@*|@fixed>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: void
=== Inputs ===
stateBefore: ?123 
actionAndReason: i680 
speculation: j681 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v677 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?123 actionAndReason: i680 speculation: j681  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v780 
=== Usages ===
=== Predecessor ===
v717 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v780  <|@  <|@
f <@*|@fixed>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 186
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 46]
reason: BoundsCheckException
speculation: {0x0000000000000818[index: 64, len: 24, hash: 0x43878027]: GuardMovement@3[HotSpotMethod<Matcher.reset()>, 41, BoundsCheckException]}
stamp: void
=== Inputs ===
stateBefore: ?107 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v308 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?107  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v299 
=== Usages ===
=== Predecessor ===
v709 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v299  <|@  <|@
tid ?10 <|@
d <@d|@=== Debug Properties ===
bci: 15
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Matcher.reset()>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:450) [bci: 12]
sourceFile: Matcher.java
sourceLine: 451
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v299 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@*|@fixed>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 161
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
reason: BoundsCheckException
speculation: {0x0000000000000518[index: 40, len: 24, hash: 0x42354c0f]: GuardMovement@3[HotSpotMethod<Matcher.reset()>, 17, BoundsCheckException]}
stamp: void
=== Inputs ===
stateBefore: ?10 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?10  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@10010b69 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.047637855530058615 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v1|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v2|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA address: [v2|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v8|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037918881428452
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v11|DWORD) trueDestinationProbability: 0.19966822189770994 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728355569134986
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v12|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA address: [v11|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v13|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = LEA address: [v11|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = LEA address: [v11|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v15|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = LEA address: [v11|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v16|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = LEA address: [v11|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v17|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA address: [v11|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v18|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = LEA address: [v11|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v19|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = LEA address: [v11|DWORD + 9] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v20|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = LEA address: [v11|DWORD + 10] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v21|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = LEA address: [v11|DWORD + 11] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v22|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = LEA address: [v11|DWORD + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = LEA address: [v11|DWORD + 13] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v24|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = LEA address: [v11|DWORD + 14] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v25|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = LEA address: [v11|DWORD + 15] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = LEA address: [v11|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|DWORD] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v28|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v28|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = INC value: v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = MOV input: [v0|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction v31|DWORD = MOV input: [v30|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v31|DWORD, y: v31|DWORD) trueDestinationProbability: 0.14462118087187847 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = DEC value: v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVSXD value: v32|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v34|QWORD, y: v33|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v31|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v30|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v31|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v31|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605957610921207776
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v35|DWORD, y: v37|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576134352261649511
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v37|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = INC value: v37|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v38|DWORD] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = LEA address: [v31|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608375014378939096
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v39|DWORD, y: v40|DWORD) trueDestinationProbability: 0.3237093197173655 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601047265818730565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v40|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = INC value: v40|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v41|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = LEA address: [v40|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v42|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = LEA address: [v40|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v43|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = LEA address: [v40|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|DWORD] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v40|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605957610921207775
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v31|DWORD, y: v45|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576134352261649510
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v45|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = INC value: v45|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v46|DWORD] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594378547460811208
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [v47|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[_] = MOV input: [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v49|DWORD = MOV input: [v48|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[_] = MOV input: [v47|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v51|DWORD = MOV input: [v50|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v49|DWORD, y: v49|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVSXB input: [v47|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = SHR (x: v51|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction INC value: [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587026159545039280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-84243|0xfffffffffffeb6ed], long[20|0x14]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-54579|0xffffffffffff2acd], long[660|0x294]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|DWORD, v55|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a721 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a721  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.regex.Matcher
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v736 v756 v737 v750 v738 ?10 v747 v739 ?107 v755 v76 v749 v743 ?123 v751 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v739 <|@
result [v0|QWORD[.] + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a721 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a721 <|@
result v1|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# int[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.groups
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 19]
stamp: n# int[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v739 
lastLocationAccess: - 
=== Succesors ===
next: i722 
=== Usages ===
a141 v740 v741 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v739 lastLocationAccess: - #next: i722  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Matcher.reset()>
localsSize: 2
locksSize: 0
sourceFile: Matcher.java
sourceLine: 448
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
i722 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v740 <|@
result [v1|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a721 
=== Succesors ===
=== Usages ===
i722 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a721  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i722 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-36619|0xffffffffffff70f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 22]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v740 
lastLocationAccess: - 
=== Succesors ===
next: v131 
=== Usages ===
i377 v266 v149 j257 i288 i638 v355 v376 
=== Predecessor ===
a721 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v740 lastLocationAccess: - #next: v131  <|@  <|@
f <@~|@floating>@ <|@
tid v736 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:448) [bci: 1]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v131 v137 v167 v192 v158 v183 i288 i292 v346 v366 v390 v410 v433 v453 v475 v481 v497 v503 v523 v529 v536 v542 v567 v573 v580 v586 v594 v600 v606 v612 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.first
location: Matcher.first
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:448) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v736 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v134 
=== Usages ===
=== Predecessor ===
i722 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v736 lastLocationAccess: - value: i3 stateAfter: - #next: v134  <|@  <|@
f <@~|@floating>@ <|@
tid v737 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:449) [bci: 6]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v134 v149 v179 v78 v205 v207 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.last
location: Matcher.last
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:449) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v737 
lastLocationAccess: - 
value: i6 
stateAfter: - 
=== Succesors ===
next: v137 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v737 lastLocationAccess: - value: i6 stateAfter: - #next: v137  <|@  <|@
f <@~|@floating>@ <|@
tid v738 <|@
result [v0|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.oldLast
location: Matcher.oldLast
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:450) [bci: 12]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v738 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v97 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v738 lastLocationAccess: - value: i3 stateAfter: - #next: v97  <|@  <|@
f <@~|@floating>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i722 
y: i6 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i722 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid i485 <|@
result int[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i32 [4]
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i510 i508 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i28 i46 i73 i108 i124 i339 i359 i383 i403 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i375 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v376 v419 i507 i509 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i153 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i377 i461 v266 v280 i420 i462 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
profileData: PROFILED designatedSuccessorProbability: 0.047637855530058615
stamp: void
=== Inputs ===
condition: v149 
=== Succesors ===
trueSuccessor: v95 
falseSuccessor: v96 
=== Usages ===
=== Predecessor ===
v137 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v149 #trueSuccessor: v95 #falseSuccessor: v96  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@10010b69 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.047637855530058615 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587026159545039280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
next: v105 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v105  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
v95 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v711 
=== Usages ===
v158 
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v711  <|@  <|@
f <@~|@floating>@ <|@
tid i288 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i722 
y: i3 
=== Succesors ===
=== Usages ===
j264 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i722 y: i3  <|@  <|@
f <@~|@floating>@ <|@
tid j264 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-1 - 2147483646]
=== Inputs ===
value: i288 
=== Succesors ===
=== Usages ===
v265 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i288  <|@  <|@
f <@~|@floating>@ <|@
tid j257 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i722 
=== Succesors ===
=== Usages ===
v265 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i722  <|@  <|@
f <@~|@floating>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@6021759f
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j264 
y: j257 
=== Succesors ===
=== Usages ===
v711 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j264 y: j257  <|@  <|@
f <@*|@fixed>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v265 
=== Succesors ===
trueSuccessor: v707 
falseSuccessor: v710 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v265 #trueSuccessor: v707 #falseSuccessor: v710  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v705 
=== Usages ===
=== Predecessor ===
v711 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v705  <|@  <|@
f <@*|@fixed>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v704 
=== Predecessor ===
v707 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v709 
=== Usages ===
=== Predecessor ===
v711 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v709  <|@  <|@
f <@~|@floating>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@6021759f
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i722 
y: i153 
=== Succesors ===
=== Usages ===
v709 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i722 y: i153  <|@  <|@
f <@*|@fixed>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v266 
=== Succesors ===
trueSuccessor: v708 
falseSuccessor: v300 
=== Usages ===
=== Predecessor ===
v710 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v266 #trueSuccessor: v708 #falseSuccessor: v300  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v708 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v706 
=== Usages ===
=== Predecessor ===
v709 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v706  <|@  <|@
f <@*|@fixed>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v704 
=== Predecessor ===
v708 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v705 v706 
=== Succesors ===
next: v158 
=== Usages ===
v271 v369 v614 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v705 v706 #next: v158  <|@  <|@
f <@~|@floating>@ <|@
tid v741 <|@
result [v1|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a721 
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a721  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v96 
address: v741 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v12 
=== Usages ===
=== Predecessor ===
v704 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v96 address: v741 lastLocationAccess: - value: i3 stateAfter: - #next: v12  <|@  <|@
f <@~|@floating>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@6021759f
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i722 
y: i375 
=== Succesors ===
=== Usages ===
i377 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i722 y: i375  <|@  <|@
f <@~|@floating>@ <|@
tid i377 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2] bits:0...0xx
=== Inputs ===
condition: v376 
trueValue: i722 
falseValue: i153 
=== Succesors ===
=== Usages ===
v18 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v376 trueValue: i722 falseValue: i153  <|@  <|@
f <@~|@floating>@ <|@
tid a141 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 19]
op: Uncompress
stamp: a# int[]
=== Inputs ===
value: a721 
=== Succesors ===
=== Usages ===
v778 v777 v776 v742 v757 v758 v761 v763 v764 v767 v768 v769 v770 v771 v772 v773 v774 v775 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a721  <|@  <|@
f <@*|@fixed>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v13 
=== Predecessor ===
v158 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v1|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v2|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i108 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v13 
values: i27 i28 
=== Succesors ===
=== Usages ===
i28 v18 j234 i341 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v13 values: i27 i28  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 19.9917089859139
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
osrLoop: false
peelings: 1
rotated: false
splits: 2
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v12 
=== Succesors ===
next: v23 
=== Usages ===
i108 v20 v29 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v12 #next: v23  <|@  <|@
f <@~|@floating>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@e606376
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i108 
y: i377 
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i108 y: i377  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v18 
=== Succesors ===
trueSuccessor: v22 
falseSuccessor: v20 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v18 #trueSuccessor: v22 #falseSuccessor: v20  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v167 
=== Usages ===
v271 
=== Predecessor ===
v23 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v167  <|@  <|@
f <@~|@floating>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
guards: v704 v22 
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v704 v22  <|@  <|@
f <@~|@floating>@ <|@
tid j234 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i108 
=== Succesors ===
=== Usages ===
v742 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i108  <|@  <|@
f <@~|@floating>@ <|@
tid v742 <|@
result [v7|QWORD[.] + v8|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j234 
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j234  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v271 
address: v742 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v29 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v271 address: v742 lastLocationAccess: - value: i3 stateAfter: - #next: v29  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
stamp: i32
=== Inputs ===
x: i108 
y: i27 
=== Succesors ===
=== Usages ===
i108 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i108 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
stamp: void
=== Inputs ===
loopBegin: v13 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v13  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v13 
=== Succesors ===
next: v350 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v13 #next: v350  <|@  <|@
f <@~|@floating>@ <|@
tid i637 <|@
result int[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i32 [-16]
stampKind: i32
value: int[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i638 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i638 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-16 - 2147483631]
=== Inputs ===
x: i722 
y: i637 
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i722 y: i637  <|@  <|@
f <@*|@fixed>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
v20 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA address: [v2|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v8|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037918881428452
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i341 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v334 
values: i108 i634 
=== Succesors ===
=== Usages ===
v335 i339 j347 i361 i461 i507 i508 i549 i551 i553 i554 i621 i623 i625 i627 i629 i631 i633 i634 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v334 values: i108 i634  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 13
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 19.9917089859139
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 16
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v350 
=== Succesors ===
next: v338 
=== Usages ===
v336 v340 i341 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v350 #next: v338  <|@  <|@
f <@~|@floating>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@e606376
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i341 
y: i638 
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i341 y: i638  <|@  <|@
f <@*|@fixed>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 0.19966822189770994
stamp: void
=== Inputs ===
condition: v335 
=== Succesors ===
trueSuccessor: v337 
falseSuccessor: v336 
=== Usages ===
=== Predecessor ===
v334 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v335 #trueSuccessor: v337 #falseSuccessor: v336  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v11|DWORD) trueDestinationProbability: 0.19966822189770994 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728355569134986
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v346 
=== Usages ===
v614 
=== Predecessor ===
v338 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v346  <|@  <|@
f <@~|@floating>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
guards: v704 v337 
=== Succesors ===
=== Usages ===
v542 v567 v433 v573 v536 v580 v475 v586 v529 v594 v346 v600 v523 v606 v481 v612 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v704 v337  <|@  <|@
f <@~|@floating>@ <|@
tid j347 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i341 
=== Succesors ===
=== Usages ===
v757 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i341  <|@  <|@
f <@~|@floating>@ <|@
tid v757 <|@
result [v7|QWORD[.] + v11|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j347 
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j347  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v614 
address: v757 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v433 
=== Usages ===
=== Predecessor ===
v337 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v614 address: v757 lastLocationAccess: - value: i3 stateAfter: - #next: v433  <|@  <|@
f <@~|@floating>@ <|@
tid i339 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
stamp: i32
=== Inputs ===
x: i341 
y: i27 
=== Succesors ===
=== Usages ===
j434 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i341 y: i27  <|@  <|@
f <@~|@floating>@ <|@
tid j434 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i339 
=== Succesors ===
=== Usages ===
v761 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i339  <|@  <|@
f <@~|@floating>@ <|@
tid v761 <|@
result [v7|QWORD[.] + v12|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j434 
=== Succesors ===
=== Usages ===
v433 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j434  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v614 
address: v761 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v475 
=== Usages ===
=== Predecessor ===
v346 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v614 address: v761 lastLocationAccess: - value: i3 stateAfter: - #next: v475  <|@  <|@
f <@~|@floating>@ <|@
tid i461 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
stamp: i32
=== Inputs ===
x: i341 
y: i153 
=== Succesors ===
=== Usages ===
j476 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i341 y: i153  <|@  <|@
f <@~|@floating>@ <|@
tid j476 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i461 
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i461  <|@  <|@
f <@~|@floating>@ <|@
tid v763 <|@
result [v7|QWORD[.] + v13|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j476 
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j476  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v614 
address: v763 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v481 
=== Usages ===
=== Predecessor ===
v433 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v614 address: v763 lastLocationAccess: - value: i3 stateAfter: - #next: v481  <|@  <|@
f <@~|@floating>@ <|@
tid i507 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
stamp: i32
=== Inputs ===
x: i341 
y: i375 
=== Succesors ===
=== Usages ===
j482 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i341 y: i375  <|@  <|@
f <@~|@floating>@ <|@
tid j482 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i507 
=== Succesors ===
=== Usages ===
v764 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i507  <|@  <|@
f <@~|@floating>@ <|@
tid v764 <|@
result [v7|QWORD[.] + v14|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j482 
=== Succesors ===
=== Usages ===
v481 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j482  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v614 
address: v764 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v523 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v614 address: v764 lastLocationAccess: - value: i3 stateAfter: - #next: v523  <|@  <|@
f <@~|@floating>@ <|@
tid i508 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
stamp: i32
=== Inputs ===
x: i341 
y: i485 
=== Succesors ===
=== Usages ===
j524 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i341 y: i485  <|@  <|@
f <@~|@floating>@ <|@
tid j524 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i508 
=== Succesors ===
=== Usages ===
v767 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i508  <|@  <|@
f <@~|@floating>@ <|@
tid v767 <|@
result [v7|QWORD[.] + v15|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j524 
=== Succesors ===
=== Usages ===
v523 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j524  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v614 
address: v767 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v529 
=== Usages ===
=== Predecessor ===
v481 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v614 address: v767 lastLocationAccess: - value: i3 stateAfter: - #next: v529  <|@  <|@
f <@~|@floating>@ <|@
tid i548 <|@
result int[5|0x5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
rawvalue: 5
stableDimension: 0
stamp: i32 [5]
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i549 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i549 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
stamp: i32
=== Inputs ===
x: i341 
y: i548 
=== Succesors ===
=== Usages ===
j530 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i341 y: i548  <|@  <|@
f <@~|@floating>@ <|@
tid j530 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i549 
=== Succesors ===
=== Usages ===
v768 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i549  <|@  <|@
f <@~|@floating>@ <|@
tid v768 <|@
result [v7|QWORD[.] + v16|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j530 
=== Succesors ===
=== Usages ===
v529 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j530  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v614 
address: v768 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v536 
=== Usages ===
=== Predecessor ===
v523 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v614 address: v768 lastLocationAccess: - value: i3 stateAfter: - #next: v536  <|@  <|@
f <@~|@floating>@ <|@
tid i550 <|@
result int[6|0x6] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
rawvalue: 6
stableDimension: 0
stamp: i32 [6]
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i551 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i551 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
stamp: i32
=== Inputs ===
x: i341 
y: i550 
=== Succesors ===
=== Usages ===
j537 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i341 y: i550  <|@  <|@
f <@~|@floating>@ <|@
tid j537 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i551 
=== Succesors ===
=== Usages ===
v769 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i551  <|@  <|@
f <@~|@floating>@ <|@
tid v769 <|@
result [v7|QWORD[.] + v17|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j537 
=== Succesors ===
=== Usages ===
v536 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j537  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v614 
address: v769 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v542 
=== Usages ===
=== Predecessor ===
v529 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v614 address: v769 lastLocationAccess: - value: i3 stateAfter: - #next: v542  <|@  <|@
f <@~|@floating>@ <|@
tid i552 <|@
result int[7|0x7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
rawvalue: 7
stableDimension: 0
stamp: i32 [7]
stampKind: i32
value: int[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i553 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i553 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
stamp: i32
=== Inputs ===
x: i341 
y: i552 
=== Succesors ===
=== Usages ===
j543 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i341 y: i552  <|@  <|@
f <@~|@floating>@ <|@
tid j543 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i553 
=== Succesors ===
=== Usages ===
v770 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i553  <|@  <|@
f <@~|@floating>@ <|@
tid v770 <|@
result [v7|QWORD[.] + v18|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j543 
=== Succesors ===
=== Usages ===
v542 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j543  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v614 
address: v770 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v567 
=== Usages ===
=== Predecessor ===
v536 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v614 address: v770 lastLocationAccess: - value: i3 stateAfter: - #next: v567  <|@  <|@
f <@~|@floating>@ <|@
tid i547 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i32 [8]
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i554 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i554 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
stamp: i32
=== Inputs ===
x: i341 
y: i547 
=== Succesors ===
=== Usages ===
j568 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i341 y: i547  <|@  <|@
f <@~|@floating>@ <|@
tid j568 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i554 
=== Succesors ===
=== Usages ===
v771 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i554  <|@  <|@
f <@~|@floating>@ <|@
tid v771 <|@
result [v7|QWORD[.] + v19|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j568 
=== Succesors ===
=== Usages ===
v567 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j568  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v614 
address: v771 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v573 
=== Usages ===
=== Predecessor ===
v542 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v614 address: v771 lastLocationAccess: - value: i3 stateAfter: - #next: v573  <|@  <|@
f <@~|@floating>@ <|@
tid i620 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
rawvalue: 9
stableDimension: 0
stamp: i32 [9]
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
i621 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i621 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
stamp: i32
=== Inputs ===
x: i341 
y: i620 
=== Succesors ===
=== Usages ===
j574 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i341 y: i620  <|@  <|@
f <@~|@floating>@ <|@
tid j574 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i621 
=== Succesors ===
=== Usages ===
v772 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i621  <|@  <|@
f <@~|@floating>@ <|@
tid v772 <|@
result [v7|QWORD[.] + v20|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j574 
=== Succesors ===
=== Usages ===
v573 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j574  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v614 
address: v772 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v580 
=== Usages ===
=== Predecessor ===
v567 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v614 address: v772 lastLocationAccess: - value: i3 stateAfter: - #next: v580  <|@  <|@
f <@~|@floating>@ <|@
tid i622 <|@
result int[10|0xa] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
rawvalue: 10
stableDimension: 0
stamp: i32 [10]
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
i623 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i623 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
stamp: i32
=== Inputs ===
x: i341 
y: i622 
=== Succesors ===
=== Usages ===
j581 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i341 y: i622  <|@  <|@
f <@~|@floating>@ <|@
tid j581 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i623 
=== Succesors ===
=== Usages ===
v773 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i623  <|@  <|@
f <@~|@floating>@ <|@
tid v773 <|@
result [v7|QWORD[.] + v21|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j581 
=== Succesors ===
=== Usages ===
v580 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j581  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v614 
address: v773 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v586 
=== Usages ===
=== Predecessor ===
v573 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v614 address: v773 lastLocationAccess: - value: i3 stateAfter: - #next: v586  <|@  <|@
f <@~|@floating>@ <|@
tid i624 <|@
result int[11|0xb] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
rawvalue: 11
stableDimension: 0
stamp: i32 [11]
stampKind: i32
value: int[11|0xb]
=== Inputs ===
=== Succesors ===
=== Usages ===
i625 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i625 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
stamp: i32
=== Inputs ===
x: i341 
y: i624 
=== Succesors ===
=== Usages ===
j587 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i341 y: i624  <|@  <|@
f <@~|@floating>@ <|@
tid j587 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i625 
=== Succesors ===
=== Usages ===
v774 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i625  <|@  <|@
f <@~|@floating>@ <|@
tid v774 <|@
result [v7|QWORD[.] + v22|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j587 
=== Succesors ===
=== Usages ===
v586 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j587  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v614 
address: v774 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v594 
=== Usages ===
=== Predecessor ===
v580 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v614 address: v774 lastLocationAccess: - value: i3 stateAfter: - #next: v594  <|@  <|@
f <@~|@floating>@ <|@
tid i626 <|@
result int[12|0xc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
rawvalue: 12
stableDimension: 0
stamp: i32 [12]
stampKind: i32
value: int[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i627 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i627 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
stamp: i32
=== Inputs ===
x: i341 
y: i626 
=== Succesors ===
=== Usages ===
j595 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i341 y: i626  <|@  <|@
f <@~|@floating>@ <|@
tid j595 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i627 
=== Succesors ===
=== Usages ===
v775 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i627  <|@  <|@
f <@~|@floating>@ <|@
tid v775 <|@
result [v7|QWORD[.] + v23|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j595 
=== Succesors ===
=== Usages ===
v594 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j595  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v614 
address: v775 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v600 
=== Usages ===
=== Predecessor ===
v586 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v614 address: v775 lastLocationAccess: - value: i3 stateAfter: - #next: v600  <|@  <|@
f <@~|@floating>@ <|@
tid i628 <|@
result int[13|0xd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
rawvalue: 13
stableDimension: 0
stamp: i32 [13]
stampKind: i32
value: int[13|0xd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i629 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i629 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
stamp: i32
=== Inputs ===
x: i341 
y: i628 
=== Succesors ===
=== Usages ===
j601 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i341 y: i628  <|@  <|@
f <@~|@floating>@ <|@
tid j601 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i629 
=== Succesors ===
=== Usages ===
v776 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i629  <|@  <|@
f <@~|@floating>@ <|@
tid v776 <|@
result [v7|QWORD[.] + v24|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j601 
=== Succesors ===
=== Usages ===
v600 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j601  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v614 
address: v776 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v606 
=== Usages ===
=== Predecessor ===
v594 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v614 address: v776 lastLocationAccess: - value: i3 stateAfter: - #next: v606  <|@  <|@
f <@~|@floating>@ <|@
tid i630 <|@
result int[14|0xe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
rawvalue: 14
stableDimension: 0
stamp: i32 [14]
stampKind: i32
value: int[14|0xe]
=== Inputs ===
=== Succesors ===
=== Usages ===
i631 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i631 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
stamp: i32
=== Inputs ===
x: i341 
y: i630 
=== Succesors ===
=== Usages ===
j607 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i341 y: i630  <|@  <|@
f <@~|@floating>@ <|@
tid j607 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i631 
=== Succesors ===
=== Usages ===
v777 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i631  <|@  <|@
f <@~|@floating>@ <|@
tid v777 <|@
result [v7|QWORD[.] + v25|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j607 
=== Succesors ===
=== Usages ===
v606 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j607  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v614 
address: v777 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v612 
=== Usages ===
=== Predecessor ===
v600 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v614 address: v777 lastLocationAccess: - value: i3 stateAfter: - #next: v612  <|@  <|@
f <@~|@floating>@ <|@
tid i632 <|@
result int[15|0xf] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
rawvalue: 15
stableDimension: 0
stamp: i32 [15]
stampKind: i32
value: int[15|0xf]
=== Inputs ===
=== Succesors ===
=== Usages ===
i633 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i633 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
stamp: i32
=== Inputs ===
x: i341 
y: i632 
=== Succesors ===
=== Usages ===
j613 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i341 y: i632  <|@  <|@
f <@~|@floating>@ <|@
tid j613 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i633 
=== Succesors ===
=== Usages ===
v778 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i633  <|@  <|@
f <@~|@floating>@ <|@
tid v778 <|@
result [v7|QWORD[.] + v26|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j613 
=== Succesors ===
=== Usages ===
v612 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j613  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v614 
address: v778 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v340 
=== Usages ===
=== Predecessor ===
v606 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v614 address: v778 lastLocationAccess: - value: i3 stateAfter: - #next: v340  <|@  <|@
f <@~|@floating>@ <|@
tid i619 <|@
result int[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 16
stableDimension: 0
stamp: i32 [16]
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i634 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i634 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
stamp: i32
=== Inputs ===
x: i341 
y: i619 
=== Succesors ===
=== Usages ===
i341 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i341 y: i619  <|@  <|@
f <@*|@fixed>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
stamp: void
=== Inputs ===
loopBegin: v334 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v612 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v334  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v12|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA address: [v11|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v13|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = LEA address: [v11|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = LEA address: [v11|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v15|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = LEA address: [v11|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v16|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = LEA address: [v11|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v17|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA address: [v11|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v18|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = LEA address: [v11|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v19|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = LEA address: [v11|DWORD + 9] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v20|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = LEA address: [v11|DWORD + 10] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v21|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = LEA address: [v11|DWORD + 11] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v22|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = LEA address: [v11|DWORD + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = LEA address: [v11|DWORD + 13] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v24|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = LEA address: [v11|DWORD + 14] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v25|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = LEA address: [v11|DWORD + 15] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = LEA address: [v11|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|DWORD] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v334 
=== Succesors ===
next: v370 
=== Usages ===
=== Predecessor ===
v338 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v334 #next: v370  <|@  <|@
f <@*|@fixed>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v354 
=== Predecessor ===
v336 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i361 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v354 
values: i341 i359 
=== Succesors ===
=== Usages ===
v355 i359 j367 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v354 values: i341 i359  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 13
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 19.9917089859139
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v370 
=== Succesors ===
next: v358 
=== Usages ===
v356 v360 i361 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v370 #next: v358  <|@  <|@
f <@~|@floating>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@e606376
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i361 
y: i722 
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i361 y: i722  <|@  <|@
f <@*|@fixed>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v355 
=== Succesors ===
trueSuccessor: v357 
falseSuccessor: v356 
=== Usages ===
=== Predecessor ===
v354 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v355 #trueSuccessor: v357 #falseSuccessor: v356  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v28|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v366 
=== Usages ===
v369 
=== Predecessor ===
v358 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v366  <|@  <|@
f <@~|@floating>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
guards: v704 v357 
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v704 v357  <|@  <|@
f <@~|@floating>@ <|@
tid j367 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i361 
=== Succesors ===
=== Usages ===
v758 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i361  <|@  <|@
f <@~|@floating>@ <|@
tid v758 <|@
result [v7|QWORD[.] + v28|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a141 
index: j367 
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a141 index: j367  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v369 
address: v758 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v360 
=== Usages ===
=== Predecessor ===
v357 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v369 address: v758 lastLocationAccess: - value: i3 stateAfter: - #next: v360  <|@  <|@
f <@~|@floating>@ <|@
tid i359 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
stamp: i32
=== Inputs ===
x: i361 
y: i27 
=== Succesors ===
=== Usages ===
i361 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i361 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
stamp: void
=== Inputs ===
loopBegin: v354 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v354  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v28|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = INC value: v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v354 
=== Succesors ===
next: v104 
=== Usages ===
=== Predecessor ===
v358 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v354 #next: v104  <|@  <|@
f <@*|@fixed>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
v356 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v104 v105 
=== Succesors ===
next: a723 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v104 v105 #next: a723  <|@  <|@
f <@~|@floating>@ <|@
tid v743 <|@
result [v0|QWORD[.] + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a723 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a723 <|@
result v30|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# int[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.locals
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 43]
stamp: n# int[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v743 
lastLocationAccess: - 
=== Succesors ===
next: i724 
=== Usages ===
a172 v744 v745 
=== Predecessor ===
v103 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v743 lastLocationAccess: - #next: i724  <|@  <|@
tid ?107 <|@
d <@d|@=== Debug Properties ===
bci: 39
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Matcher.reset()>
localsSize: 2
locksSize: 0
sourceFile: Matcher.java
sourceLine: 453
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v780 i724 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v744 <|@
result [v30|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a723 
=== Succesors ===
=== Usages ===
i724 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a723  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i724 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-44555|0xffffffffffff51f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 46]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?107 
guard: - 
address: v744 
lastLocationAccess: - 
=== Succesors ===
next: v113 
=== Usages ===
i420 v280 v179 j272 i292 i641 v399 v419 
=== Predecessor ===
a723 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?107 guard: - address: v744 lastLocationAccess: - #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i724 
y: i6 
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i724 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
profileData: PROFILED designatedSuccessorProbability: 0.14462118087187847
stamp: void
=== Inputs ===
condition: v179 
=== Succesors ===
trueSuccessor: v111 
falseSuccessor: v112 
=== Usages ===
=== Predecessor ===
i724 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v179 #trueSuccessor: v111 #falseSuccessor: v112  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = MOV input: [v0|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction v31|DWORD = MOV input: [v30|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v31|DWORD, y: v31|DWORD) trueDestinationProbability: 0.14462118087187847 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594378547460811208
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: v121 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v121  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v119 
=== Predecessor ===
v111 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v719 
=== Usages ===
v183 
=== Predecessor ===
v113 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v719  <|@  <|@
f <@~|@floating>@ <|@
tid i292 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i724 
y: i3 
=== Succesors ===
=== Usages ===
j278 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i724 y: i3  <|@  <|@
f <@~|@floating>@ <|@
tid j278 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-1 - 2147483646]
=== Inputs ===
value: i292 
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i292  <|@  <|@
f <@~|@floating>@ <|@
tid j272 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i724 
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i724  <|@  <|@
f <@~|@floating>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@6021759f
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j278 
y: j272 
=== Succesors ===
=== Usages ===
v719 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j278 y: j272  <|@  <|@
f <@*|@fixed>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v279 
=== Succesors ===
trueSuccessor: v715 
falseSuccessor: v718 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v279 #trueSuccessor: v715 #falseSuccessor: v718  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = DEC value: v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVSXD value: v32|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v34|QWORD, y: v33|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v713 
=== Usages ===
=== Predecessor ===
v719 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v713  <|@  <|@
f <@*|@fixed>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v712 
=== Predecessor ===
v715 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v717 
=== Usages ===
=== Predecessor ===
v719 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v717  <|@  <|@
f <@~|@floating>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@6021759f
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i724 
y: i153 
=== Succesors ===
=== Usages ===
v717 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i724 y: i153  <|@  <|@
f <@*|@fixed>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v280 
=== Succesors ===
trueSuccessor: v716 
falseSuccessor: v308 
=== Usages ===
=== Predecessor ===
v718 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v280 #trueSuccessor: v716 #falseSuccessor: v308  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v31|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v714 
=== Usages ===
=== Predecessor ===
v717 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v714  <|@  <|@
f <@*|@fixed>@ <|@
tid v714 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v712 
=== Predecessor ===
v716 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v713 v714 
=== Succesors ===
next: v183 
=== Usages ===
v285 v413 v505 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v713 v714 #next: v183  <|@  <|@
f <@~|@floating>@ <|@
tid v745 <|@
result [v30|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a723 
=== Succesors ===
=== Usages ===
v183 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a723  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v112 
address: v745 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v112 address: v745 lastLocationAccess: - value: i3 stateAfter: - #next: v31  <|@  <|@
f <@~|@floating>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@6021759f
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i724 
y: i375 
=== Succesors ===
=== Usages ===
i420 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i724 y: i375  <|@  <|@
f <@~|@floating>@ <|@
tid i420 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2] bits:0...0xx
=== Inputs ===
condition: v419 
trueValue: i724 
falseValue: i153 
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v419 trueValue: i724 falseValue: i153  <|@  <|@
f <@~|@floating>@ <|@
tid a172 <|@
result v36|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 43]
op: Uncompress
stamp: a# int[]
=== Inputs ===
value: a723 
=== Succesors ===
=== Usages ===
v766 v765 v762 v746 v759 v760 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a723  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
v183 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v30|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v31|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v31|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605957610921207776
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i124 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v32 
values: i27 i46 
=== Succesors ===
=== Usages ===
i46 v37 j236 i385 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v32 values: i27 i46  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 5.914616475756143
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
osrLoop: false
peelings: 1
rotated: false
splits: 2
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v31 
=== Succesors ===
next: v42 
=== Usages ===
i124 v39 v47 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v31 #next: v42  <|@  <|@
f <@~|@floating>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@e606376
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i124 
y: i420 
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i124 y: i420  <|@  <|@
f <@*|@fixed>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v37 
=== Succesors ===
trueSuccessor: v41 
falseSuccessor: v39 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v37 #trueSuccessor: v41 #falseSuccessor: v39  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v35|DWORD, y: v37|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576134352261649511
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v192 
=== Usages ===
v285 
=== Predecessor ===
v42 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v192  <|@  <|@
f <@~|@floating>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
guards: v712 v41 
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v712 v41  <|@  <|@
f <@~|@floating>@ <|@
tid j236 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i124 
=== Succesors ===
=== Usages ===
v746 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i124  <|@  <|@
f <@~|@floating>@ <|@
tid v746 <|@
result [v36|QWORD[.] + v37|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a172 
index: j236 
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a172 index: j236  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v285 
address: v746 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v47 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v285 address: v746 lastLocationAccess: - value: i3 stateAfter: - #next: v47  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 57]
stamp: i32
=== Inputs ===
x: i124 
y: i27 
=== Succesors ===
=== Usages ===
i124 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i124 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
stamp: void
=== Inputs ===
loopBegin: v32 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v192 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v32  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v37|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = INC value: v37|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v38|DWORD] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v32 
=== Succesors ===
next: v394 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v32 #next: v394  <|@  <|@
f <@~|@floating>@ <|@
tid i640 <|@
result int[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i32 [-4]
stampKind: i32
value: int[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i641 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i641 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-4 - 2147483643]
=== Inputs ===
x: i724 
y: i640 
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i724 y: i640  <|@  <|@
f <@*|@fixed>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v378 
=== Predecessor ===
v39 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = LEA address: [v31|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608375014378939096
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i385 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v378 
values: i124 i510 
=== Succesors ===
=== Usages ===
v379 i383 j391 i405 i462 i509 i510 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v378 values: i124 i510  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 32
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 5.914616475756143
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 4
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v394 
=== Succesors ===
next: v382 
=== Usages ===
v380 v384 i385 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v394 #next: v382  <|@  <|@
f <@~|@floating>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@e606376
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i385 
y: i641 
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i385 y: i641  <|@  <|@
f <@*|@fixed>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
profileData: INJECTED designatedSuccessorProbability: 0.3237093197173655
stamp: void
=== Inputs ===
condition: v379 
=== Succesors ===
trueSuccessor: v381 
falseSuccessor: v380 
=== Usages ===
=== Predecessor ===
v378 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v379 #trueSuccessor: v381 #falseSuccessor: v380  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v39|DWORD, y: v40|DWORD) trueDestinationProbability: 0.3237093197173655 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601047265818730565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v390 
=== Usages ===
v505 
=== Predecessor ===
v382 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v390  <|@  <|@
f <@~|@floating>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
guards: v712 v381 
=== Succesors ===
=== Usages ===
v453 v497 v390 v503 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v712 v381  <|@  <|@
f <@~|@floating>@ <|@
tid j391 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i385 
=== Succesors ===
=== Usages ===
v759 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i385  <|@  <|@
f <@~|@floating>@ <|@
tid v759 <|@
result [v36|QWORD[.] + v40|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a172 
index: j391 
=== Succesors ===
=== Usages ===
v390 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a172 index: j391  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v505 
address: v759 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v453 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v505 address: v759 lastLocationAccess: - value: i3 stateAfter: - #next: v453  <|@  <|@
f <@~|@floating>@ <|@
tid i383 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 57]
stamp: i32
=== Inputs ===
x: i385 
y: i27 
=== Succesors ===
=== Usages ===
j454 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i385 y: i27  <|@  <|@
f <@~|@floating>@ <|@
tid j454 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i383 
=== Succesors ===
=== Usages ===
v762 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i383  <|@  <|@
f <@~|@floating>@ <|@
tid v762 <|@
result [v36|QWORD[.] + v41|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a172 
index: j454 
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a172 index: j454  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v505 
address: v762 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v497 
=== Usages ===
=== Predecessor ===
v390 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v505 address: v762 lastLocationAccess: - value: i3 stateAfter: - #next: v497  <|@  <|@
f <@~|@floating>@ <|@
tid i462 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 57]
stamp: i32
=== Inputs ===
x: i385 
y: i153 
=== Succesors ===
=== Usages ===
j498 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i385 y: i153  <|@  <|@
f <@~|@floating>@ <|@
tid j498 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i462 
=== Succesors ===
=== Usages ===
v765 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i462  <|@  <|@
f <@~|@floating>@ <|@
tid v765 <|@
result [v36|QWORD[.] + v42|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a172 
index: j498 
=== Succesors ===
=== Usages ===
v497 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a172 index: j498  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v505 
address: v765 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v503 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v505 address: v765 lastLocationAccess: - value: i3 stateAfter: - #next: v503  <|@  <|@
f <@~|@floating>@ <|@
tid i509 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 57]
stamp: i32
=== Inputs ===
x: i385 
y: i375 
=== Succesors ===
=== Usages ===
j504 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i385 y: i375  <|@  <|@
f <@~|@floating>@ <|@
tid j504 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i509 
=== Succesors ===
=== Usages ===
v766 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i509  <|@  <|@
f <@~|@floating>@ <|@
tid v766 <|@
result [v36|QWORD[.] + v43|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a172 
index: j504 
=== Succesors ===
=== Usages ===
v503 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a172 index: j504  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v505 
address: v766 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v384 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v505 address: v766 lastLocationAccess: - value: i3 stateAfter: - #next: v384  <|@  <|@
f <@~|@floating>@ <|@
tid i510 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 57]
stamp: i32
=== Inputs ===
x: i385 
y: i485 
=== Succesors ===
=== Usages ===
i385 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i385 y: i485  <|@  <|@
f <@*|@fixed>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
stamp: void
=== Inputs ===
loopBegin: v378 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v503 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v378  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v40|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = INC value: v40|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v41|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = LEA address: [v40|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v42|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = LEA address: [v40|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v43|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = LEA address: [v40|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|DWORD] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v378 
=== Succesors ===
next: v414 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v378 #next: v414  <|@  <|@
f <@*|@fixed>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
v380 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v40|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605957610921207775
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i405 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v398 
values: i385 i403 
=== Succesors ===
=== Usages ===
v399 i403 j411 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v398 values: i385 i403  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 32
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 5.914616475756143
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v414 
=== Succesors ===
next: v402 
=== Usages ===
v400 v404 i405 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v414 #next: v402  <|@  <|@
f <@~|@floating>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@e606376
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i405 
y: i724 
=== Succesors ===
=== Usages ===
v402 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i405 y: i724  <|@  <|@
f <@*|@fixed>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v399 
=== Succesors ===
trueSuccessor: v401 
falseSuccessor: v400 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v399 #trueSuccessor: v401 #falseSuccessor: v400  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v31|DWORD, y: v45|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576134352261649510
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: v410 
=== Usages ===
v413 
=== Predecessor ===
v402 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v410  <|@  <|@
f <@~|@floating>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
guards: v712 v401 
=== Succesors ===
=== Usages ===
v410 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v712 v401  <|@  <|@
f <@~|@floating>@ <|@
tid j411 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i405 
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i405  <|@  <|@
f <@~|@floating>@ <|@
tid v760 <|@
result [v36|QWORD[.] + v45|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a172 
index: j411 
=== Succesors ===
=== Usages ===
v410 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a172 index: j411  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v413 
address: v760 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v404 
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v413 address: v760 lastLocationAccess: - value: i3 stateAfter: - #next: v404  <|@  <|@
f <@~|@floating>@ <|@
tid i403 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 57]
stamp: i32
=== Inputs ===
x: i405 
y: i27 
=== Succesors ===
=== Usages ===
i405 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i405 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
stamp: void
=== Inputs ===
loopBegin: v398 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v410 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v398  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v45|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = INC value: v45|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v46|DWORD] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v398 
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v398 #next: v120  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v119 
=== Predecessor ===
v400 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v120 v121 
=== Succesors ===
next: a725 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v120 v121 #next: a725  <|@  <|@
f <@~|@floating>@ <|@
tid v751 <|@
result [v0|QWORD[.] + 60] <|@
d <@d|@=== Debug Properties ===
displacement: 60
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a725 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a725 <|@
result v47|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.text
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 1]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v751 
lastLocationAccess: - 
=== Succesors ===
next: v726 
=== Usages ===
v779 v752 v754 
=== Predecessor ===
v119 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v751 lastLocationAccess: - #next: v726  <|@  <|@
tid ?123 <|@
d <@d|@=== Debug Properties ===
bci: 63
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Matcher.reset()>
localsSize: 2
locksSize: 0
sourceFile: Matcher.java
sourceLine: 455
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v682 v726 i728 i730 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v779 <|@
result [v47|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a725 
=== Succesors ===
=== Usages ===
v726 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a725  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140080475799552 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-54283|0xffffffffffff2bf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: Klass*!(compressed base: 140080475799552 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?123 
guard: - 
address: v779 
lastLocationAccess: - 
=== Succesors ===
next: v317 
=== Usages ===
v703 
=== Predecessor ===
a725 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?123 guard: - address: v779 lastLocationAccess: - #next: v317  <|@  <|@
f <@~|@floating>@ <|@
tid v702 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140080475799552 shift: 0)
stampKind: Klass*(compressed base: 140080475799552 shift: 0)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v703 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v726 
y: v702 
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v726 y: v702  <|@  <|@
f <@*|@fixed>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v703 
=== Succesors ===
trueSuccessor: v314 
falseSuccessor: v316 
=== Usages ===
=== Predecessor ===
v726 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v703 #trueSuccessor: v314 #falseSuccessor: v316  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [v47|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
next: a727 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a727  <|@  <|@
f <@~|@floating>@ <|@
tid v747 <|@
result [v0|QWORD[.] + 68] <|@
d <@d|@=== Debug Properties ===
displacement: 68
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a727 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a727 <|@
result v48|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.regex.IntHashSet[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.localsPos
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 67]
stamp: n# java.util.regex.IntHashSet[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v747 
lastLocationAccess: - 
=== Succesors ===
next: i728 
=== Usages ===
v748 
=== Predecessor ===
v314 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v747 lastLocationAccess: - #next: i728  <|@  <|@
f <@~|@floating>@ <|@
tid v748 <|@
result [v48|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a727 
=== Succesors ===
=== Usages ===
i728 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a727  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i728 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-50955|0xffffffffffff38f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 70]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?123 
guard: - 
address: v748 
lastLocationAccess: - 
=== Succesors ===
next: a729 
=== Usages ===
v78 
=== Predecessor ===
a727 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?123 guard: - address: v748 lastLocationAccess: - #next: a729  <|@  <|@
f <@~|@floating>@ <|@
tid v752 <|@
result [v47|DWORD[_] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a725 
=== Succesors ===
=== Usages ===
a729 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a725  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a729 <|@
result v50|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v752 
lastLocationAccess: - 
=== Succesors ===
next: i730 
=== Usages ===
v753 
=== Predecessor ===
i728 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v752 lastLocationAccess: - #next: i730  <|@  <|@
f <@~|@floating>@ <|@
tid v753 <|@
result [v50|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a729 
=== Succesors ===
=== Usages ===
i730 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a729  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i730 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-56075|0xffffffffffff24f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?123 
guard: - 
address: v753 
lastLocationAccess: - 
=== Succesors ===
next: v332 
=== Usages ===
i90 
=== Predecessor ===
a729 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?123 guard: - address: v753 lastLocationAccess: - #next: v332  <|@  <|@
f <@~|@floating>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 71]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i728 
y: i6 
=== Succesors ===
=== Usages ===
v332 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i728 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 71]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v78 
=== Succesors ===
trueSuccessor: v330 
falseSuccessor: v331 
=== Usages ===
=== Predecessor ===
i730 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v78 #trueSuccessor: v330 #falseSuccessor: v331  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[_] = MOV input: [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v49|DWORD = MOV input: [v48|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[_] = MOV input: [v47|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v51|DWORD = MOV input: [v50|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v49|DWORD, y: v49|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:459) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v205 
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v205  <|@  <|@
f <@~|@floating>@ <|@
tid v749 <|@
result [v0|QWORD[.] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v205 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.lastAppendPosition
location: Matcher.lastAppendPosition
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:459) [bci: 100]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v749 
lastLocationAccess: - 
value: i6 
stateAfter: - 
=== Succesors ===
next: v207 
=== Usages ===
=== Predecessor ===
v330 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v749 lastLocationAccess: - value: i6 stateAfter: - #next: v207  <|@  <|@
f <@~|@floating>@ <|@
tid v750 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v207 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.from
location: Matcher.from
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:460) [bci: 105]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v750 
lastLocationAccess: - 
value: i6 
stateAfter: - 
=== Succesors ===
next: i731 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v750 lastLocationAccess: - value: i6 stateAfter: - #next: i731  <|@  <|@
f <@~|@floating>@ <|@
tid v754 <|@
result [v47|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a725 
=== Succesors ===
=== Usages ===
i731 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a725  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i731 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v754 
lastLocationAccess: - 
=== Succesors ===
next: v227 
=== Usages ===
i225 
=== Predecessor ===
v207 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v754 lastLocationAccess: - #next: v227  <|@  <|@
f <@~|@floating>@ <|@
tid v755 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v227 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i225 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i731 
=== Succesors ===
=== Usages ===
i90 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i731  <|@  <|@
f <@~|@floating>@ <|@
tid i90 <|@
result v53|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i730 
y: i225 
=== Succesors ===
=== Usages ===
v227 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i730 y: i225  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.to
location: Matcher.to
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 113]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v755 
lastLocationAccess: - 
value: i90 
stateAfter: - 
=== Succesors ===
next: i732 
=== Usages ===
=== Predecessor ===
i731 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v755 lastLocationAccess: - value: i90 stateAfter: - #next: i732  <|@  <|@
f <@~|@floating>@ <|@
tid v756 <|@
result [v0|QWORD[.] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i732 v231 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i732 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:462) [bci: 118]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v756 
lastLocationAccess: - 
=== Succesors ===
next: v231 
=== Usages ===
i73 
=== Predecessor ===
v227 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v756 lastLocationAccess: - #next: v231  <|@  <|@
f <@~|@floating>@ <|@
tid i73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:462) [bci: 122]
stamp: i32
=== Inputs ===
x: i732 
y: i27 
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i732 y: i27  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.modCount
location: Matcher.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:462) [bci: 123]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v756 
lastLocationAccess: - 
value: i73 
stateAfter: - 
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
i732 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v756 lastLocationAccess: - value: i73 stateAfter: - #next: v76  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:463) [bci: 127]
stamp: void
=== Inputs ===
memoryMap: - 
result: a1 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a1  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVSXB input: [v47|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = SHR (x: v51|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction INC value: [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 71]
stamp: void
=== Inputs ===
=== Succesors ===
next: v690 
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v690  <|@  <|@
f <@~|@floating>@ <|@
tid j214 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j681 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i691 <|@
result int[-84243|0xfffffffffffeb6ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
rawvalue: -84243
stableDimension: 0
stamp: i32 [-84243]
stampKind: i32
value: int[-84243|0xfffffffffffeb6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i680 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v677 
=== Predecessor ===
v331 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-84243|0xfffffffffffeb6ed], long[20|0x14]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
next: v685 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v685  <|@  <|@
f <@~|@floating>@ <|@
tid j687 <|@
result long[660|0x294] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j681 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i686 <|@
result int[-54579|0xffffffffffff2acd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
rawvalue: -54579
stableDimension: 0
stamp: i32 [-54579]
stampKind: i32
value: int[-54579|0xffffffffffff2acd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i680 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v677 
=== Predecessor ===
v316 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-54579|0xffffffffffff2acd], long[660|0x294]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i680 <|@
result v54|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: i32 [-84243 - -54579] bits:1...1xx01xxx1011x01101
valueDescription: i32
=== Inputs ===
merge: v677 
values: i686 i691 
=== Succesors ===
=== Usages ===
v682 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v677 values: i686 i691  <|@  <|@
f <@~|@floating>@ <|@
tid j681 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: i64 [20 - 660] bits:0...0x0x0010100
valueDescription: i64
=== Inputs ===
merge: v677 
values: j687 j214 
=== Succesors ===
=== Usages ===
v682 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v677 values: j687 j214  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v685 v690 
=== Succesors ===
next: v682 
=== Usages ===
i680 j681 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v685 v690 #next: v682  <|@  <|@
f <@*|@fixed>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
stamp: void
=== Inputs ===
stateBefore: ?123 
actionAndReason: i680 
speculation: j681 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v677 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?123 actionAndReason: i680 speculation: j681  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|DWORD, v55|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: v780 
=== Usages ===
=== Predecessor ===
v717 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v780  <|@  <|@
f <@*|@fixed>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 186
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 46]
reason: BoundsCheckException
speculation: {0x0000000000000818[index: 64, len: 24, hash: 0x43878027]: GuardMovement@3[HotSpotMethod<Matcher.reset()>, 41, BoundsCheckException]}
stamp: void
=== Inputs ===
stateBefore: ?107 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v308 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?107  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v299 
=== Usages ===
=== Predecessor ===
v709 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v299  <|@  <|@
tid ?10 <|@
d <@d|@=== Debug Properties ===
bci: 15
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Matcher.reset()>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:450) [bci: 12]
sourceFile: Matcher.java
sourceLine: 451
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v299 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@*|@fixed>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 161
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
reason: BoundsCheckException
speculation: {0x0000000000000518[index: 40, len: 24, hash: 0x42354c0f]: GuardMovement@3[HotSpotMethod<Matcher.reset()>, 17, BoundsCheckException]}
stamp: void
=== Inputs ===
stateBefore: ?10 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?10  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@10010b69 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.047637855530058615 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v1|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v2|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA address: [v2|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v8|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037918881428452
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v11|DWORD) trueDestinationProbability: 0.19966822189770994 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728355569134986
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v12|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA address: [v11|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v13|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = LEA address: [v11|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = LEA address: [v11|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v15|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = LEA address: [v11|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v16|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = LEA address: [v11|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v17|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA address: [v11|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v18|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = LEA address: [v11|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v19|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = LEA address: [v11|DWORD + 9] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v20|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = LEA address: [v11|DWORD + 10] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v21|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = LEA address: [v11|DWORD + 11] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v22|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = LEA address: [v11|DWORD + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = LEA address: [v11|DWORD + 13] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v24|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = LEA address: [v11|DWORD + 14] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v25|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = LEA address: [v11|DWORD + 15] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = LEA address: [v11|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|DWORD] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v28|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v28|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = INC value: v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = MOV input: [v0|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction v31|DWORD = MOV input: [v30|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v31|DWORD, y: v31|DWORD) trueDestinationProbability: 0.14462118087187847 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = DEC value: v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVSXD value: v32|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v34|QWORD, y: v33|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v31|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v30|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v31|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v31|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605957610921207776
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v35|DWORD, y: v37|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576134352261649511
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v37|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = INC value: v37|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v38|DWORD] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = LEA address: [v31|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608375014378939096
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v39|DWORD, y: v40|DWORD) trueDestinationProbability: 0.3237093197173655 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601047265818730565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v40|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = INC value: v40|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v41|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = LEA address: [v40|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v42|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = LEA address: [v40|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v43|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = LEA address: [v40|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|DWORD] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v40|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605957610921207775
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v31|DWORD, y: v45|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576134352261649510
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v45|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = INC value: v45|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v46|DWORD] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594378547460811208
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [v47|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[_] = MOV input: [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v49|DWORD = MOV input: [v48|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[_] = MOV input: [v47|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v51|DWORD = MOV input: [v50|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v49|DWORD, y: v49|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVSXB input: [v47|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = SHR (x: v51|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction INC value: [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587026159545039280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-84243|0xfffffffffffeb6ed], long[20|0x14]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-54579|0xffffffffffff2acd], long[660|0x294]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|DWORD, v55|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@10010b69 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.047637855530058615 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v1|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v2|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA address: [v2|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v8|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037918881428452
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v11|DWORD) trueDestinationProbability: 0.19966822189770994 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728355569134986
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v12|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA address: [v11|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v13|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = LEA address: [v11|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = LEA address: [v11|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v15|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = LEA address: [v11|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v16|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = LEA address: [v11|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v17|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA address: [v11|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v18|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = LEA address: [v11|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v19|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = LEA address: [v11|DWORD + 9] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v20|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = LEA address: [v11|DWORD + 10] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v21|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = LEA address: [v11|DWORD + 11] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v22|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = LEA address: [v11|DWORD + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = LEA address: [v11|DWORD + 13] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v24|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = LEA address: [v11|DWORD + 14] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v25|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = LEA address: [v11|DWORD + 15] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = LEA address: [v11|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|DWORD] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v28|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v28|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = INC value: v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = MOV input: [v0|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction v31|DWORD = MOV input: [v30|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v31|DWORD, y: v31|DWORD) trueDestinationProbability: 0.14462118087187847 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = DEC value: v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVSXD value: v32|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v34|QWORD, y: v33|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v31|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v30|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v31|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v31|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605957610921207776
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v35|DWORD, y: v37|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576134352261649511
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v37|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = INC value: v37|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v38|DWORD] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = LEA address: [v31|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608375014378939096
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v39|DWORD, y: v40|DWORD) trueDestinationProbability: 0.3237093197173655 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601047265818730565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v40|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = INC value: v40|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v41|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = LEA address: [v40|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v42|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = LEA address: [v40|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v43|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = LEA address: [v40|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|DWORD] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v40|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605957610921207775
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v31|DWORD, y: v45|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576134352261649510
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v45|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = INC value: v45|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v46|DWORD] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594378547460811208
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [v47|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[_] = MOV input: [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v49|DWORD = MOV input: [v48|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[_] = MOV input: [v47|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v51|DWORD = MOV input: [v50|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v49|DWORD, y: v49|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVSXB input: [v47|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = SHR (x: v51|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction INC value: [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587026159545039280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-84243|0xfffffffffffeb6ed], long[20|0x14]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-54579|0xffffffffffff2acd], long[660|0x294]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|DWORD, v55|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@10010b69 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.047637855530058615 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v1|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v2|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA address: [v2|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v8|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037918881428452
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v11|DWORD) trueDestinationProbability: 0.19966822189770994 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728355569134986
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v12|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA address: [v11|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v13|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = LEA address: [v11|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = LEA address: [v11|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v15|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = LEA address: [v11|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v16|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = LEA address: [v11|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v17|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA address: [v11|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v18|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = LEA address: [v11|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v19|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = LEA address: [v11|DWORD + 9] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v20|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = LEA address: [v11|DWORD + 10] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v21|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = LEA address: [v11|DWORD + 11] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v22|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = LEA address: [v11|DWORD + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = LEA address: [v11|DWORD + 13] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v24|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = LEA address: [v11|DWORD + 14] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v25|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = LEA address: [v11|DWORD + 15] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = LEA address: [v11|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|DWORD] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v28|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v28|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = INC value: v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = MOV input: [v0|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction v31|DWORD = MOV input: [v30|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v31|DWORD, y: v31|DWORD) trueDestinationProbability: 0.14462118087187847 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = DEC value: v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVSXD value: v32|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v34|QWORD, y: v33|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v31|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v30|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v31|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v31|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605957610921207776
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v35|DWORD, y: v37|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576134352261649511
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v37|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = INC value: v37|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v38|DWORD] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = LEA address: [v31|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608375014378939096
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v39|DWORD, y: v40|DWORD) trueDestinationProbability: 0.3237093197173655 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601047265818730565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v40|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = INC value: v40|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v41|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = LEA address: [v40|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v42|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = LEA address: [v40|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v43|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = LEA address: [v40|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|DWORD] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v40|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605957610921207775
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v31|DWORD, y: v45|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576134352261649510
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v45|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = INC value: v45|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v46|DWORD] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594378547460811208
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [v47|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[_] = MOV input: [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v49|DWORD = MOV input: [v48|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[_] = MOV input: [v47|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v51|DWORD = MOV input: [v50|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v49|DWORD, y: v49|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVSXB input: [v47|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = SHR (x: v51|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction INC value: [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587026159545039280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-84243|0xfffffffffffeb6ed], long[20|0x14]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-54579|0xffffffffffff2acd], long[660|0x294]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|DWORD, v55|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@10010b69 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.047637855530058615 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v1|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v2|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA address: [v2|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v8|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037918881428452
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v11|DWORD) trueDestinationProbability: 0.19966822189770994 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728355569134986
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v12|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA address: [v11|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v13|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = LEA address: [v11|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = LEA address: [v11|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v15|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = LEA address: [v11|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v16|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = LEA address: [v11|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v17|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA address: [v11|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v18|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = LEA address: [v11|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v19|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = LEA address: [v11|DWORD + 9] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v20|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = LEA address: [v11|DWORD + 10] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v21|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = LEA address: [v11|DWORD + 11] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v22|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = LEA address: [v11|DWORD + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = LEA address: [v11|DWORD + 13] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v24|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = LEA address: [v11|DWORD + 14] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v25|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = LEA address: [v11|DWORD + 15] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = LEA address: [v11|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|DWORD] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v28|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v28|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = INC value: v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = MOV input: [v0|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction v31|DWORD = MOV input: [v30|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v31|DWORD, y: v31|DWORD) trueDestinationProbability: 0.14462118087187847 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = DEC value: v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVSXD value: v32|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v34|QWORD, y: v33|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v31|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v30|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v31|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v31|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605957610921207776
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v35|DWORD, y: v37|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576134352261649511
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v37|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = INC value: v37|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v38|DWORD] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = LEA address: [v31|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608375014378939096
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v39|DWORD, y: v40|DWORD) trueDestinationProbability: 0.3237093197173655 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601047265818730565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v40|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = INC value: v40|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v41|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = LEA address: [v40|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v42|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = LEA address: [v40|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v43|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = LEA address: [v40|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|DWORD] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v40|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605957610921207775
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v31|DWORD, y: v45|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576134352261649510
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v45|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = INC value: v45|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v46|DWORD] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594378547460811208
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [v47|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[_] = MOV input: [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v49|DWORD = MOV input: [v48|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[_] = MOV input: [v47|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v51|DWORD = MOV input: [v50|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v49|DWORD, y: v49|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVSXB input: [v47|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = SHR (x: v51|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction INC value: [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587026159545039280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-84243|0xfffffffffffeb6ed], long[20|0x14]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-54579|0xffffffffffff2acd], long[660|0x294]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|DWORD, v55|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@10010b69 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.047637855530058615 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v1|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v2|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA address: [v2|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v8|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037918881428452
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v11|DWORD) trueDestinationProbability: 0.19966822189770994 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728355569134986
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v12|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA address: [v11|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v13|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = LEA address: [v11|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = LEA address: [v11|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v15|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = LEA address: [v11|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v16|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = LEA address: [v11|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v17|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA address: [v11|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v18|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = LEA address: [v11|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v19|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = LEA address: [v11|DWORD + 9] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v20|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = LEA address: [v11|DWORD + 10] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v21|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = LEA address: [v11|DWORD + 11] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v22|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = LEA address: [v11|DWORD + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = LEA address: [v11|DWORD + 13] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v24|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = LEA address: [v11|DWORD + 14] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v25|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = LEA address: [v11|DWORD + 15] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = LEA address: [v11|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|DWORD] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v28|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD[.] + v28|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = INC value: v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|DWORD[_] = MOV input: [v0|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction v31|DWORD = MOV input: [v30|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v31|DWORD, y: v31|DWORD) trueDestinationProbability: 0.14462118087187847 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = DEC value: v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVSXD value: v32|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v34|QWORD, y: v33|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v31|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v30|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v31|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v31|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605957610921207776
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v35|DWORD, y: v37|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576134352261649511
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v37|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = INC value: v37|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v38|DWORD] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = LEA address: [v31|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608375014378939096
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v39|DWORD, y: v40|DWORD) trueDestinationProbability: 0.3237093197173655 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601047265818730565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v40|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = INC value: v40|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v41|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = LEA address: [v40|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v42|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = LEA address: [v40|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v43|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = LEA address: [v40|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|DWORD] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v40|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605957610921207775
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v31|DWORD, y: v45|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576134352261649510
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v36|QWORD[.] + v45|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = INC value: v45|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v46|DWORD] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594378547460811208
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v47|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [v47|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|DWORD[_] = MOV input: [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v49|DWORD = MOV input: [v48|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[_] = MOV input: [v47|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v51|DWORD = MOV input: [v50|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v49|DWORD, y: v49|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVSXB input: [v47|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = SHR (x: v51|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction INC value: [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587026159545039280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-84243|0xfffffffffffeb6ed], long[20|0x14]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-54579|0xffffffffffff2acd], long[660|0x294]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|DWORD, v55|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@10010b69 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction MOV x: [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   38  <|@ instruction MOV x: [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   40  <|@ instruction MOV x: [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.047637855530058615 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction v3|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction v4|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   64  <|@ instruction v5|QWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction MOV x: [v1|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction CMP x: v2|DWORD y: 3 size: DWORD <|@ <|@
      nr  128  <|@ instruction v6|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr  130  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr  134  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction MOV x: [v7|QWORD[.] + v8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  160  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction v10|DWORD = LEA address: [v2|DWORD - 16] size: DWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [v8|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037918881428452
    begin_IR
      LIR
      nr  180  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v11|DWORD) trueDestinationProbability: 0.19966822189770994 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728355569134986
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction MOV x: [v7|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  296  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV x: [v7|QWORD[.] + v12|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  300  <|@ instruction v13|DWORD = LEA address: [v11|DWORD + 2] size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [v7|QWORD[.] + v13|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  304  <|@ instruction v14|DWORD = LEA address: [v11|DWORD + 3] size: DWORD <|@ <|@
      nr  306  <|@ instruction MOV x: [v7|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  308  <|@ instruction v15|DWORD = LEA address: [v11|DWORD + 4] size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV x: [v7|QWORD[.] + v15|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  312  <|@ instruction v16|DWORD = LEA address: [v11|DWORD + 5] size: DWORD <|@ <|@
      nr  314  <|@ instruction MOV x: [v7|QWORD[.] + v16|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  316  <|@ instruction v17|DWORD = LEA address: [v11|DWORD + 6] size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [v7|QWORD[.] + v17|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  320  <|@ instruction v18|DWORD = LEA address: [v11|DWORD + 7] size: DWORD <|@ <|@
      nr  322  <|@ instruction MOV x: [v7|QWORD[.] + v18|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  324  <|@ instruction v19|DWORD = LEA address: [v11|DWORD + 8] size: DWORD <|@ <|@
      nr  326  <|@ instruction MOV x: [v7|QWORD[.] + v19|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  328  <|@ instruction v20|DWORD = LEA address: [v11|DWORD + 9] size: DWORD <|@ <|@
      nr  330  <|@ instruction MOV x: [v7|QWORD[.] + v20|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  332  <|@ instruction v21|DWORD = LEA address: [v11|DWORD + 10] size: DWORD <|@ <|@
      nr  334  <|@ instruction MOV x: [v7|QWORD[.] + v21|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  336  <|@ instruction v22|DWORD = LEA address: [v11|DWORD + 11] size: DWORD <|@ <|@
      nr  338  <|@ instruction MOV x: [v7|QWORD[.] + v22|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  340  <|@ instruction v23|DWORD = LEA address: [v11|DWORD + 12] size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV x: [v7|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  344  <|@ instruction v24|DWORD = LEA address: [v11|DWORD + 13] size: DWORD <|@ <|@
      nr  346  <|@ instruction MOV x: [v7|QWORD[.] + v24|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  348  <|@ instruction v25|DWORD = LEA address: [v11|DWORD + 14] size: DWORD <|@ <|@
      nr  350  <|@ instruction MOV x: [v7|QWORD[.] + v25|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  352  <|@ instruction v26|DWORD = LEA address: [v11|DWORD + 15] size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV x: [v7|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  356  <|@ instruction v27|DWORD = LEA address: [v11|DWORD + 16] size: DWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~outgoingValues: [v27|DWORD] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr  370  <|@ instruction [v28|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v28|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction MOV x: [v7|QWORD[.] + v28|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  396  <|@ instruction v29|DWORD = INC value: v28|DWORD size: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [v29|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction v30|DWORD[_] = MOV input: [v0|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  426  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction v31|DWORD = MOV input: [v30|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: v31|DWORD, y: v31|DWORD) trueDestinationProbability: 0.14462118087187847 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction v32|DWORD = DEC value: v31|DWORD size: DWORD <|@ <|@
      nr  448  <|@ instruction v33|QWORD = MOVSXD value: v32|DWORD size: QWORD <|@ <|@
      nr  450  <|@ instruction v34|QWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction CMPBRANCH (x: v34|QWORD, y: v33|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction CMPCONSTBRANCH x: v31|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction MOV x: [v30|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  512  <|@ instruction CMP x: v31|DWORD y: 3 size: DWORD <|@ <|@
      nr  514  <|@ instruction v35|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v31|DWORD) condition: |<| <|@ <|@
      nr  516  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605957610921207776
    begin_IR
      LIR
      nr  520  <|@ instruction [v37|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction CMPBRANCH (x: v35|DWORD, y: v37|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576134352261649511
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction MOV x: [v36|QWORD[.] + v37|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  546  <|@ instruction v38|DWORD = INC value: v37|DWORD size: DWORD <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [v38|DWORD] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction v39|DWORD = LEA address: [v31|DWORD - 4] size: DWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [v37|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608375014378939096
    begin_IR
      LIR
      nr  566  <|@ instruction [v40|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction CMPBRANCH (x: v39|DWORD, y: v40|DWORD) trueDestinationProbability: 0.3237093197173655 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601047265818730565
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction MOV x: [v36|QWORD[.] + v40|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  610  <|@ instruction v41|DWORD = INC value: v40|DWORD size: DWORD <|@ <|@
      nr  612  <|@ instruction MOV x: [v36|QWORD[.] + v41|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  614  <|@ instruction v42|DWORD = LEA address: [v40|DWORD + 2] size: DWORD <|@ <|@
      nr  616  <|@ instruction MOV x: [v36|QWORD[.] + v42|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  618  <|@ instruction v43|DWORD = LEA address: [v40|DWORD + 3] size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [v36|QWORD[.] + v43|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  622  <|@ instruction v44|DWORD = LEA address: [v40|DWORD + 4] size: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [v44|DWORD] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [v40|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605957610921207775
    begin_IR
      LIR
      nr  636  <|@ instruction [v45|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction CMPBRANCH (x: v31|DWORD, y: v45|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576134352261649510
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction MOV x: [v36|QWORD[.] + v45|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  662  <|@ instruction v46|DWORD = INC value: v45|DWORD size: DWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [v46|DWORD] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594378547460811208
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction v47|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  700  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [v47|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction v48|DWORD[_] = MOV input: [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  722  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v49|DWORD = MOV input: [v48|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  724  <|@ instruction v50|DWORD[_] = MOV input: [v47|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  726  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v51|DWORD = MOV input: [v50|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  728  <|@ instruction TESTBRANCH (x: v49|DWORD, y: v49|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction MOV x: [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  766  <|@ instruction MOV x: [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  768  <|@ instruction v52|DWORD = MOVSXB input: [v47|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  770  <|@ instruction rcx|DWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction v53|DWORD = SHR (x: v51|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v53|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction INC value: [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  778  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587026159545039280
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction MOV x: [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr  810  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  812  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction JUMP ~outgoingValues: [int[-84243|0xfffffffffffeb6ed], long[20|0x14]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction MOV x: [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr  842  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  844  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction JUMP ~outgoingValues: [int[-54579|0xffffffffffff2acd], long[660|0x294]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  856  <|@ instruction [v54|DWORD, v55|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v54|DWORD) size: DWORD <|@ <|@
      nr  874  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v55|QWORD) size: QWORD <|@ <|@
      nr  876  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@10010b69 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction MOV x: [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   38  <|@ instruction MOV x: [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   40  <|@ instruction MOV x: [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.047637855530058615 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction v3|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction v4|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   64  <|@ instruction v5|QWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction MOV x: [v1|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction CMP x: v2|DWORD y: 3 size: DWORD <|@ <|@
      nr  128  <|@ instruction v6|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr  130  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr  134  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction MOV x: [v7|QWORD[.] + v8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  160  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction v10|DWORD = LEA address: [v2|DWORD - 16] size: DWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [v8|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037918881428452
    begin_IR
      LIR
      nr  180  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v11|DWORD) trueDestinationProbability: 0.19966822189770994 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728355569134986
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction MOV x: [v7|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  296  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV x: [v7|QWORD[.] + v12|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  300  <|@ instruction v13|DWORD = LEA address: [v11|DWORD + 2] size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [v7|QWORD[.] + v13|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  304  <|@ instruction v14|DWORD = LEA address: [v11|DWORD + 3] size: DWORD <|@ <|@
      nr  306  <|@ instruction MOV x: [v7|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  308  <|@ instruction v15|DWORD = LEA address: [v11|DWORD + 4] size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV x: [v7|QWORD[.] + v15|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  312  <|@ instruction v16|DWORD = LEA address: [v11|DWORD + 5] size: DWORD <|@ <|@
      nr  314  <|@ instruction MOV x: [v7|QWORD[.] + v16|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  316  <|@ instruction v17|DWORD = LEA address: [v11|DWORD + 6] size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [v7|QWORD[.] + v17|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  320  <|@ instruction v18|DWORD = LEA address: [v11|DWORD + 7] size: DWORD <|@ <|@
      nr  322  <|@ instruction MOV x: [v7|QWORD[.] + v18|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  324  <|@ instruction v19|DWORD = LEA address: [v11|DWORD + 8] size: DWORD <|@ <|@
      nr  326  <|@ instruction MOV x: [v7|QWORD[.] + v19|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  328  <|@ instruction v20|DWORD = LEA address: [v11|DWORD + 9] size: DWORD <|@ <|@
      nr  330  <|@ instruction MOV x: [v7|QWORD[.] + v20|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  332  <|@ instruction v21|DWORD = LEA address: [v11|DWORD + 10] size: DWORD <|@ <|@
      nr  334  <|@ instruction MOV x: [v7|QWORD[.] + v21|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  336  <|@ instruction v22|DWORD = LEA address: [v11|DWORD + 11] size: DWORD <|@ <|@
      nr  338  <|@ instruction MOV x: [v7|QWORD[.] + v22|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  340  <|@ instruction v23|DWORD = LEA address: [v11|DWORD + 12] size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV x: [v7|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  344  <|@ instruction v24|DWORD = LEA address: [v11|DWORD + 13] size: DWORD <|@ <|@
      nr  346  <|@ instruction MOV x: [v7|QWORD[.] + v24|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  348  <|@ instruction v25|DWORD = LEA address: [v11|DWORD + 14] size: DWORD <|@ <|@
      nr  350  <|@ instruction MOV x: [v7|QWORD[.] + v25|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  352  <|@ instruction v26|DWORD = LEA address: [v11|DWORD + 15] size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV x: [v7|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  356  <|@ instruction v27|DWORD = LEA address: [v11|DWORD + 16] size: DWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~outgoingValues: [v27|DWORD] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr  370  <|@ instruction [v28|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v28|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction MOV x: [v7|QWORD[.] + v28|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  396  <|@ instruction v29|DWORD = INC value: v28|DWORD size: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [v29|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction v30|DWORD[_] = MOV input: [v0|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  426  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction v31|DWORD = MOV input: [v30|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: v31|DWORD, y: v31|DWORD) trueDestinationProbability: 0.14462118087187847 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction v32|DWORD = DEC value: v31|DWORD size: DWORD <|@ <|@
      nr  448  <|@ instruction v33|QWORD = MOVSXD value: v32|DWORD size: QWORD <|@ <|@
      nr  450  <|@ instruction v34|QWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction CMPBRANCH (x: v34|QWORD, y: v33|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction CMPCONSTBRANCH x: v31|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction MOV x: [v30|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  512  <|@ instruction CMP x: v31|DWORD y: 3 size: DWORD <|@ <|@
      nr  514  <|@ instruction v35|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v31|DWORD) condition: |<| <|@ <|@
      nr  516  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605957610921207776
    begin_IR
      LIR
      nr  520  <|@ instruction [v37|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction CMPBRANCH (x: v35|DWORD, y: v37|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576134352261649511
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction MOV x: [v36|QWORD[.] + v37|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  546  <|@ instruction v38|DWORD = INC value: v37|DWORD size: DWORD <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [v38|DWORD] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction v39|DWORD = LEA address: [v31|DWORD - 4] size: DWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [v37|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608375014378939096
    begin_IR
      LIR
      nr  566  <|@ instruction [v40|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction CMPBRANCH (x: v39|DWORD, y: v40|DWORD) trueDestinationProbability: 0.3237093197173655 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601047265818730565
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction MOV x: [v36|QWORD[.] + v40|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  610  <|@ instruction v41|DWORD = INC value: v40|DWORD size: DWORD <|@ <|@
      nr  612  <|@ instruction MOV x: [v36|QWORD[.] + v41|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  614  <|@ instruction v42|DWORD = LEA address: [v40|DWORD + 2] size: DWORD <|@ <|@
      nr  616  <|@ instruction MOV x: [v36|QWORD[.] + v42|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  618  <|@ instruction v43|DWORD = LEA address: [v40|DWORD + 3] size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [v36|QWORD[.] + v43|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  622  <|@ instruction v44|DWORD = LEA address: [v40|DWORD + 4] size: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [v44|DWORD] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [v40|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605957610921207775
    begin_IR
      LIR
      nr  636  <|@ instruction [v45|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction CMPBRANCH (x: v31|DWORD, y: v45|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576134352261649510
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction MOV x: [v36|QWORD[.] + v45|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  662  <|@ instruction v46|DWORD = INC value: v45|DWORD size: DWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [v46|DWORD] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594378547460811208
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction v47|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  700  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [v47|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction v48|DWORD[_] = MOV input: [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  722  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v49|DWORD = MOV input: [v48|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  724  <|@ instruction v50|DWORD[_] = MOV input: [v47|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  726  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v51|DWORD = MOV input: [v50|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  728  <|@ instruction TESTBRANCH (x: v49|DWORD, y: v49|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction MOV x: [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  766  <|@ instruction MOV x: [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  768  <|@ instruction v52|DWORD = MOVSXB input: [v47|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  770  <|@ instruction rcx|DWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction v53|DWORD = SHR (x: v51|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v53|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction INC value: [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  778  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587026159545039280
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction MOV x: [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr  810  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  812  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction JUMP ~outgoingValues: [int[-84243|0xfffffffffffeb6ed], long[20|0x14]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction MOV x: [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr  842  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  844  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction JUMP ~outgoingValues: [int[-54579|0xffffffffffff2acd], long[660|0x294]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  856  <|@ instruction [v54|DWORD, v55|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v54|DWORD) size: DWORD <|@ <|@
      nr  874  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v55|QWORD) size: QWORD <|@ <|@
      nr  876  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v0|q [0, 1[[778, 780[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d v52|d [0, 1[[770, 773[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 26[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 30[ "NoSpillStore"
  v0|q QWORD "[v0|q]" v0|q rsi|q [30, 778[[782, 813[[814, 845[[846, 877[30 MustHaveRegister 32 MustHaveRegister 36 MustHaveRegister 38 MustHaveRegister 40 MustHaveRegister 424 MustHaveRegister 698 MustHaveRegister 720 MustHaveRegister 764 MustHaveRegister 766 MustHaveRegister 774 MustHaveRegister 776 MustHaveRegister 778 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d -1 [32, 130[32 MustHaveRegister 34 MustHaveRegister 124 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [34, 400[34 MustHaveRegister 42 MustHaveRegister 60 ShouldHaveRegister 64 ShouldHaveRegister 78 ShouldHaveRegister 126 ShouldHaveRegister 128 MustHaveRegister 176 MustHaveRegister 380 MustHaveRegister 399 LiveAtLoopEnd  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d v2|d [60, 62[60 MustHaveRegister 62 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q -1 [62, 66[62 MustHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q v2|d [64, 66[64 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [128, 164[128 MustHaveRegister 144 MustHaveRegister 163 LiveAtLoopEnd  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q v1|d [130, 400[130 MustHaveRegister 158 MustHaveRegister 163 LiveAtLoopEnd 294 MustHaveRegister 298 MustHaveRegister 302 MustHaveRegister 306 MustHaveRegister 310 MustHaveRegister 314 MustHaveRegister 318 MustHaveRegister 322 MustHaveRegister 326 MustHaveRegister 330 MustHaveRegister 334 MustHaveRegister 338 MustHaveRegister 342 MustHaveRegister 346 MustHaveRegister 350 MustHaveRegister 354 MustHaveRegister 359 LiveAtLoopEnd 394 MustHaveRegister 399 LiveAtLoopEnd  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d v9|d [134, 160[[164, 179[144 ShouldHaveRegister 158 MustHaveRegister 160 ShouldHaveRegister 178 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d v8|d [160, 163[160 MustHaveRegister 162 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d -1 [176, 360[176 MustHaveRegister 190 MustHaveRegister 359 LiveAtLoopEnd  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d v8|d [180, 356[[360, 369[190 ShouldHaveRegister 294 MustHaveRegister 296 ShouldHaveRegister 300 MustHaveRegister 304 MustHaveRegister 308 MustHaveRegister 312 MustHaveRegister 316 MustHaveRegister 320 MustHaveRegister 324 MustHaveRegister 328 MustHaveRegister 332 MustHaveRegister 336 MustHaveRegister 340 MustHaveRegister 344 MustHaveRegister 348 MustHaveRegister 352 MustHaveRegister 356 MustHaveRegister 368 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d v11|d [296, 298[296 MustHaveRegister 298 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d -1 [300, 302[300 MustHaveRegister 302 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d -1 [304, 306[304 MustHaveRegister 306 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d -1 [308, 310[308 MustHaveRegister 310 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[v16|d]" v16|d -1 [312, 314[312 MustHaveRegister 314 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[v17|d]" v17|d -1 [316, 318[316 MustHaveRegister 318 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[v18|d]" v18|d -1 [320, 322[320 MustHaveRegister 322 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[v19|d]" v19|d -1 [324, 326[324 MustHaveRegister 326 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[v20|d]" v20|d -1 [328, 330[328 MustHaveRegister 330 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[v21|d]" v21|d -1 [332, 334[332 MustHaveRegister 334 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[v22|d]" v22|d -1 [336, 338[336 MustHaveRegister 338 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[v23|d]" v23|d -1 [340, 342[340 MustHaveRegister 342 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[v24|d]" v24|d -1 [344, 346[344 MustHaveRegister 346 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[v25|d]" v25|d -1 [348, 350[348 MustHaveRegister 350 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[v26|d]" v26|d -1 [352, 354[352 MustHaveRegister 354 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[v27|d]" v27|d -1 [356, 359[356 MustHaveRegister 358 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[v28|d]" v28|d v11|d [370, 396[380 ShouldHaveRegister 394 MustHaveRegister 396 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[v29|d]" v29|d v28|d [396, 399[396 MustHaveRegister 398 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[v30|d]" v30|d -1 [424, 516[424 MustHaveRegister 426 MustHaveRegister 510 MustHaveRegister 516 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[v31|d]" v31|d -1 [426, 666[426 MustHaveRegister 428 MustHaveRegister 446 ShouldHaveRegister 450 ShouldHaveRegister 464 ShouldHaveRegister 512 ShouldHaveRegister 514 MustHaveRegister 562 MustHaveRegister 646 MustHaveRegister 665 LiveAtLoopEnd  "NoSpillStore"
  v32|d DWORD "[v32|d]" v32|d v31|d [446, 448[446 MustHaveRegister 448 ShouldHaveRegister  "NoSpillStore"
  v33|q QWORD "[v33|q]" v33|q -1 [448, 452[448 MustHaveRegister 452 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[v34|q]" v34|q v31|d [450, 452[450 MustHaveRegister 452 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[v35|d]" v35|d -1 [514, 550[514 MustHaveRegister 530 MustHaveRegister 549 LiveAtLoopEnd  "NoSpillStore"
  v36|q QWORD "[v36|q]" v36|q v30|d [516, 666[516 MustHaveRegister 544 MustHaveRegister 549 LiveAtLoopEnd 608 MustHaveRegister 612 MustHaveRegister 616 MustHaveRegister 620 MustHaveRegister 625 LiveAtLoopEnd 660 MustHaveRegister 665 LiveAtLoopEnd  "NoSpillStore"
  v37|d DWORD "[v37|d]" v37|d v38|d [520, 546[[550, 565[530 ShouldHaveRegister 544 MustHaveRegister 546 ShouldHaveRegister 564 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[v38|d]" v38|d v37|d [546, 549[546 MustHaveRegister 548 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[v39|d]" v39|d -1 [562, 626[562 MustHaveRegister 576 MustHaveRegister 625 LiveAtLoopEnd  "NoSpillStore"
  v40|d DWORD "[v40|d]" v40|d v37|d [566, 622[[626, 635[576 ShouldHaveRegister 608 MustHaveRegister 610 ShouldHaveRegister 614 MustHaveRegister 618 MustHaveRegister 622 MustHaveRegister 634 ShouldHaveRegister  "NoSpillStore"
  v41|d DWORD "[v41|d]" v41|d v40|d [610, 612[610 MustHaveRegister 612 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[v42|d]" v42|d -1 [614, 616[614 MustHaveRegister 616 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[v43|d]" v43|d -1 [618, 620[618 MustHaveRegister 620 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[v44|d]" v44|d -1 [622, 625[622 MustHaveRegister 624 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[v45|d]" v45|d v40|d [636, 662[646 ShouldHaveRegister 660 MustHaveRegister 662 ShouldHaveRegister  "NoSpillStore"
  v46|d DWORD "[v46|d]" v46|d v45|d [662, 665[662 MustHaveRegister 664 ShouldHaveRegister  "NoSpillStore"
  v47|d DWORD "[v47|d]" v47|d -1 [698, 768[698 MustHaveRegister 700 MustHaveRegister 724 MustHaveRegister 768 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[v48|d]" v48|d -1 [720, 722[720 MustHaveRegister 722 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[v49|d]" v49|d -1 [722, 728[722 MustHaveRegister 728 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[v50|d]" v50|d -1 [724, 726[724 MustHaveRegister 726 MustHaveRegister  "NoSpillStore"
  v51|d DWORD "[v51|d]" v51|d -1 [726, 772[726 MustHaveRegister 772 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[v52|d]" v52|d -1 [768, 770[768 MustHaveRegister 770 ShouldHaveRegister  "NoSpillStore"
  v53|d DWORD "[v53|d]" v53|d v51|d [772, 774[772 MustHaveRegister 774 MustHaveRegister  "NoSpillStore"
  v54|d DWORD "[v54|d]" v54|d -1 [856, 872[872 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[v55|q]" v55|q -1 [856, 874[874 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v0|q [0, 1[[778, 780[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d v52|d [0, 1[[770, 773[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 26[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 30[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [30, 778[[782, 813[[814, 845[[846, 877[30 MustHaveRegister 32 MustHaveRegister 36 MustHaveRegister 38 MustHaveRegister 40 MustHaveRegister 424 MustHaveRegister 698 MustHaveRegister 720 MustHaveRegister 764 MustHaveRegister 766 MustHaveRegister 774 MustHaveRegister 776 MustHaveRegister 778 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[rcx|d]" v1|d -1 [32, 130[32 MustHaveRegister 34 MustHaveRegister 124 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [34, 400[34 MustHaveRegister 42 MustHaveRegister 60 ShouldHaveRegister 64 ShouldHaveRegister 78 ShouldHaveRegister 126 ShouldHaveRegister 128 MustHaveRegister 176 MustHaveRegister 380 MustHaveRegister 399 LiveAtLoopEnd  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d v2|d [60, 62[60 MustHaveRegister 62 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[r10|q]" v4|q -1 [62, 66[62 MustHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[r11|q]" v5|q v2|d [64, 66[64 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r10|d]" v6|d -1 [128, 164[128 MustHaveRegister 144 MustHaveRegister 163 LiveAtLoopEnd  "NoSpillStore"
  v7|q QWORD "[rcx|q]" v7|q v1|d [130, 400[130 MustHaveRegister 158 MustHaveRegister 163 LiveAtLoopEnd 294 MustHaveRegister 298 MustHaveRegister 302 MustHaveRegister 306 MustHaveRegister 310 MustHaveRegister 314 MustHaveRegister 318 MustHaveRegister 322 MustHaveRegister 326 MustHaveRegister 330 MustHaveRegister 334 MustHaveRegister 338 MustHaveRegister 342 MustHaveRegister 346 MustHaveRegister 350 MustHaveRegister 354 MustHaveRegister 359 LiveAtLoopEnd 394 MustHaveRegister 399 LiveAtLoopEnd  "NoSpillStore"
  v8|d DWORD "[r11|d]" v8|d v9|d [134, 160[[164, 179[144 ShouldHaveRegister 158 MustHaveRegister 160 ShouldHaveRegister 178 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[r11|d]" v9|d v8|d [160, 163[160 MustHaveRegister 162 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[r10|d]" v10|d -1 [176, 360[176 MustHaveRegister 190 MustHaveRegister 359 LiveAtLoopEnd  "NoSpillStore"
  v11|d DWORD "[r11|d]" v11|d v8|d [180, 356[[360, 369[190 ShouldHaveRegister 294 MustHaveRegister 296 ShouldHaveRegister 300 MustHaveRegister 304 MustHaveRegister 308 MustHaveRegister 312 MustHaveRegister 316 MustHaveRegister 320 MustHaveRegister 324 MustHaveRegister 328 MustHaveRegister 332 MustHaveRegister 336 MustHaveRegister 340 MustHaveRegister 344 MustHaveRegister 348 MustHaveRegister 352 MustHaveRegister 356 MustHaveRegister 368 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[r8|d]" v12|d v11|d [296, 298[296 MustHaveRegister 298 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[r8|d]" v13|d -1 [300, 302[300 MustHaveRegister 302 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[r8|d]" v14|d -1 [304, 306[304 MustHaveRegister 306 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[r8|d]" v15|d -1 [308, 310[308 MustHaveRegister 310 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[r8|d]" v16|d -1 [312, 314[312 MustHaveRegister 314 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[r8|d]" v17|d -1 [316, 318[316 MustHaveRegister 318 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[r8|d]" v18|d -1 [320, 322[320 MustHaveRegister 322 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[r8|d]" v19|d -1 [324, 326[324 MustHaveRegister 326 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[r8|d]" v20|d -1 [328, 330[328 MustHaveRegister 330 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[r8|d]" v21|d -1 [332, 334[332 MustHaveRegister 334 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[r8|d]" v22|d -1 [336, 338[336 MustHaveRegister 338 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[r8|d]" v23|d -1 [340, 342[340 MustHaveRegister 342 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[r8|d]" v24|d -1 [344, 346[344 MustHaveRegister 346 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[r8|d]" v25|d -1 [348, 350[348 MustHaveRegister 350 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[r8|d]" v26|d -1 [352, 354[352 MustHaveRegister 354 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[r11|d]" v27|d -1 [356, 359[356 MustHaveRegister 358 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[r11|d]" v28|d v11|d [370, 396[380 ShouldHaveRegister 394 MustHaveRegister 396 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[r11|d]" v29|d v28|d [396, 399[396 MustHaveRegister 398 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[rcx|d]" v30|d -1 [424, 516[424 MustHaveRegister 426 MustHaveRegister 510 MustHaveRegister 516 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[rax|d]" v31|d -1 [426, 666[426 MustHaveRegister 428 MustHaveRegister 446 ShouldHaveRegister 450 ShouldHaveRegister 464 ShouldHaveRegister 512 ShouldHaveRegister 514 MustHaveRegister 562 MustHaveRegister 646 MustHaveRegister 665 LiveAtLoopEnd  "NoSpillStore"
  v32|d DWORD "[r10|d]" v32|d v31|d [446, 448[446 MustHaveRegister 448 ShouldHaveRegister  "NoSpillStore"
  v33|q QWORD "[r10|q]" v33|q -1 [448, 452[448 MustHaveRegister 452 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[r11|q]" v34|q v31|d [450, 452[450 MustHaveRegister 452 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[r10|d]" v35|d -1 [514, 550[514 MustHaveRegister 530 MustHaveRegister 549 LiveAtLoopEnd  "NoSpillStore"
  v36|q QWORD "[rcx|q]" v36|q v30|d [516, 666[516 MustHaveRegister 544 MustHaveRegister 549 LiveAtLoopEnd 608 MustHaveRegister 612 MustHaveRegister 616 MustHaveRegister 620 MustHaveRegister 625 LiveAtLoopEnd 660 MustHaveRegister 665 LiveAtLoopEnd  "NoSpillStore"
  v37|d DWORD "[r11|d]" v37|d v38|d [520, 546[[550, 565[530 ShouldHaveRegister 544 MustHaveRegister 546 ShouldHaveRegister 564 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[r11|d]" v38|d v37|d [546, 549[546 MustHaveRegister 548 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[r10|d]" v39|d -1 [562, 626[562 MustHaveRegister 576 MustHaveRegister 625 LiveAtLoopEnd  "NoSpillStore"
  v40|d DWORD "[r11|d]" v40|d v37|d [566, 622[[626, 635[576 ShouldHaveRegister 608 MustHaveRegister 610 ShouldHaveRegister 614 MustHaveRegister 618 MustHaveRegister 622 MustHaveRegister 634 ShouldHaveRegister  "NoSpillStore"
  v41|d DWORD "[r8|d]" v41|d v40|d [610, 612[610 MustHaveRegister 612 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[r8|d]" v42|d -1 [614, 616[614 MustHaveRegister 616 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[r8|d]" v43|d -1 [618, 620[618 MustHaveRegister 620 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[r11|d]" v44|d -1 [622, 625[622 MustHaveRegister 624 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[r11|d]" v45|d v40|d [636, 662[646 ShouldHaveRegister 660 MustHaveRegister 662 ShouldHaveRegister  "NoSpillStore"
  v46|d DWORD "[r11|d]" v46|d v45|d [662, 665[662 MustHaveRegister 664 ShouldHaveRegister  "NoSpillStore"
  v47|d DWORD "[rcx|d]" v47|d -1 [698, 768[698 MustHaveRegister 700 MustHaveRegister 724 MustHaveRegister 768 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[rax|d]" v48|d -1 [720, 722[720 MustHaveRegister 722 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[rax|d]" v49|d -1 [722, 728[722 MustHaveRegister 728 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[r10|d]" v50|d -1 [724, 726[724 MustHaveRegister 726 MustHaveRegister  "NoSpillStore"
  v51|d DWORD "[r10|d]" v51|d -1 [726, 772[726 MustHaveRegister 772 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[rcx|d]" v52|d -1 [768, 770[768 MustHaveRegister 770 ShouldHaveRegister  "NoSpillStore"
  v53|d DWORD "[r10|d]" v53|d v51|d [772, 774[772 MustHaveRegister 774 MustHaveRegister  "NoSpillStore"
  v54|d DWORD "[r10|d]" v54|d -1 [856, 872[872 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[r11|q]" v55|q -1 [856, 874[874 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@10010b69 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction MOV x: [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   38  <|@ instruction MOV x: [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   40  <|@ instruction MOV x: [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.047637855530058615 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction v3|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction v4|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   64  <|@ instruction v5|QWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction MOV x: [v1|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction CMP x: v2|DWORD y: 3 size: DWORD <|@ <|@
      nr  128  <|@ instruction v6|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr  130  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr  134  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction MOV x: [v7|QWORD[.] + v8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  160  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction v10|DWORD = LEA address: [v2|DWORD - 16] size: DWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [v8|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037918881428452
    begin_IR
      LIR
      nr  180  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v11|DWORD) trueDestinationProbability: 0.19966822189770994 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728355569134986
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction MOV x: [v7|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  296  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV x: [v7|QWORD[.] + v12|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  300  <|@ instruction v13|DWORD = LEA address: [v11|DWORD + 2] size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [v7|QWORD[.] + v13|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  304  <|@ instruction v14|DWORD = LEA address: [v11|DWORD + 3] size: DWORD <|@ <|@
      nr  306  <|@ instruction MOV x: [v7|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  308  <|@ instruction v15|DWORD = LEA address: [v11|DWORD + 4] size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV x: [v7|QWORD[.] + v15|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  312  <|@ instruction v16|DWORD = LEA address: [v11|DWORD + 5] size: DWORD <|@ <|@
      nr  314  <|@ instruction MOV x: [v7|QWORD[.] + v16|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  316  <|@ instruction v17|DWORD = LEA address: [v11|DWORD + 6] size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [v7|QWORD[.] + v17|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  320  <|@ instruction v18|DWORD = LEA address: [v11|DWORD + 7] size: DWORD <|@ <|@
      nr  322  <|@ instruction MOV x: [v7|QWORD[.] + v18|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  324  <|@ instruction v19|DWORD = LEA address: [v11|DWORD + 8] size: DWORD <|@ <|@
      nr  326  <|@ instruction MOV x: [v7|QWORD[.] + v19|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  328  <|@ instruction v20|DWORD = LEA address: [v11|DWORD + 9] size: DWORD <|@ <|@
      nr  330  <|@ instruction MOV x: [v7|QWORD[.] + v20|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  332  <|@ instruction v21|DWORD = LEA address: [v11|DWORD + 10] size: DWORD <|@ <|@
      nr  334  <|@ instruction MOV x: [v7|QWORD[.] + v21|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  336  <|@ instruction v22|DWORD = LEA address: [v11|DWORD + 11] size: DWORD <|@ <|@
      nr  338  <|@ instruction MOV x: [v7|QWORD[.] + v22|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  340  <|@ instruction v23|DWORD = LEA address: [v11|DWORD + 12] size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV x: [v7|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  344  <|@ instruction v24|DWORD = LEA address: [v11|DWORD + 13] size: DWORD <|@ <|@
      nr  346  <|@ instruction MOV x: [v7|QWORD[.] + v24|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  348  <|@ instruction v25|DWORD = LEA address: [v11|DWORD + 14] size: DWORD <|@ <|@
      nr  350  <|@ instruction MOV x: [v7|QWORD[.] + v25|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  352  <|@ instruction v26|DWORD = LEA address: [v11|DWORD + 15] size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV x: [v7|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  356  <|@ instruction v27|DWORD = LEA address: [v11|DWORD + 16] size: DWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~outgoingValues: [v27|DWORD] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr  370  <|@ instruction [v28|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v28|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction MOV x: [v7|QWORD[.] + v28|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  396  <|@ instruction v29|DWORD = INC value: v28|DWORD size: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [v29|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction v30|DWORD[_] = MOV input: [v0|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  426  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction v31|DWORD = MOV input: [v30|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: v31|DWORD, y: v31|DWORD) trueDestinationProbability: 0.14462118087187847 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction v32|DWORD = DEC value: v31|DWORD size: DWORD <|@ <|@
      nr  448  <|@ instruction v33|QWORD = MOVSXD value: v32|DWORD size: QWORD <|@ <|@
      nr  450  <|@ instruction v34|QWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction CMPBRANCH (x: v34|QWORD, y: v33|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction CMPCONSTBRANCH x: v31|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction MOV x: [v30|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  512  <|@ instruction CMP x: v31|DWORD y: 3 size: DWORD <|@ <|@
      nr  514  <|@ instruction v35|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v31|DWORD) condition: |<| <|@ <|@
      nr  516  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605957610921207776
    begin_IR
      LIR
      nr  520  <|@ instruction [v37|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction CMPBRANCH (x: v35|DWORD, y: v37|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576134352261649511
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction MOV x: [v36|QWORD[.] + v37|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  546  <|@ instruction v38|DWORD = INC value: v37|DWORD size: DWORD <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [v38|DWORD] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction v39|DWORD = LEA address: [v31|DWORD - 4] size: DWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [v37|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608375014378939096
    begin_IR
      LIR
      nr  566  <|@ instruction [v40|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction CMPBRANCH (x: v39|DWORD, y: v40|DWORD) trueDestinationProbability: 0.3237093197173655 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601047265818730565
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction MOV x: [v36|QWORD[.] + v40|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  610  <|@ instruction v41|DWORD = INC value: v40|DWORD size: DWORD <|@ <|@
      nr  612  <|@ instruction MOV x: [v36|QWORD[.] + v41|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  614  <|@ instruction v42|DWORD = LEA address: [v40|DWORD + 2] size: DWORD <|@ <|@
      nr  616  <|@ instruction MOV x: [v36|QWORD[.] + v42|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  618  <|@ instruction v43|DWORD = LEA address: [v40|DWORD + 3] size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [v36|QWORD[.] + v43|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  622  <|@ instruction v44|DWORD = LEA address: [v40|DWORD + 4] size: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [v44|DWORD] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [v40|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605957610921207775
    begin_IR
      LIR
      nr  636  <|@ instruction [v45|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction CMPBRANCH (x: v31|DWORD, y: v45|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576134352261649510
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction MOV x: [v36|QWORD[.] + v45|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  662  <|@ instruction v46|DWORD = INC value: v45|DWORD size: DWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [v46|DWORD] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594378547460811208
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction v47|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  700  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [v47|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction v48|DWORD[_] = MOV input: [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  722  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v49|DWORD = MOV input: [v48|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  724  <|@ instruction v50|DWORD[_] = MOV input: [v47|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  726  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v51|DWORD = MOV input: [v50|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  728  <|@ instruction TESTBRANCH (x: v49|DWORD, y: v49|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction MOV x: [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  766  <|@ instruction MOV x: [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  768  <|@ instruction v52|DWORD = MOVSXB input: [v47|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  770  <|@ instruction rcx|DWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction v53|DWORD = SHR (x: v51|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v53|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction INC value: [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  778  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587026159545039280
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction MOV x: [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr  810  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  812  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction JUMP ~outgoingValues: [int[-84243|0xfffffffffffeb6ed], long[20|0x14]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction MOV x: [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr  842  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  844  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction JUMP ~outgoingValues: [int[-54579|0xffffffffffff2acd], long[660|0x294]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  856  <|@ instruction [v54|DWORD, v55|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v54|DWORD) size: DWORD <|@ <|@
      nr  874  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v55|QWORD) size: QWORD <|@ <|@
      nr  876  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v0|q [0, 1[[778, 780[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d v52|d [0, 1[[770, 773[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 26[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 30[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [30, 778[[782, 813[[814, 845[[846, 877[30 MustHaveRegister 32 MustHaveRegister 36 MustHaveRegister 38 MustHaveRegister 40 MustHaveRegister 424 MustHaveRegister 698 MustHaveRegister 720 MustHaveRegister 764 MustHaveRegister 766 MustHaveRegister 774 MustHaveRegister 776 MustHaveRegister 778 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[rcx|d]" v1|d -1 [32, 130[32 MustHaveRegister 34 MustHaveRegister 124 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [34, 400[34 MustHaveRegister 42 MustHaveRegister 60 ShouldHaveRegister 64 ShouldHaveRegister 78 ShouldHaveRegister 126 ShouldHaveRegister 128 MustHaveRegister 176 MustHaveRegister 380 MustHaveRegister 399 LiveAtLoopEnd  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d v2|d [60, 62[60 MustHaveRegister 62 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[r10|q]" v4|q -1 [62, 66[62 MustHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[r11|q]" v5|q v2|d [64, 66[64 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r10|d]" v6|d -1 [128, 164[128 MustHaveRegister 144 MustHaveRegister 163 LiveAtLoopEnd  "NoSpillStore"
  v7|q QWORD "[rcx|q]" v7|q v1|d [130, 400[130 MustHaveRegister 158 MustHaveRegister 163 LiveAtLoopEnd 294 MustHaveRegister 298 MustHaveRegister 302 MustHaveRegister 306 MustHaveRegister 310 MustHaveRegister 314 MustHaveRegister 318 MustHaveRegister 322 MustHaveRegister 326 MustHaveRegister 330 MustHaveRegister 334 MustHaveRegister 338 MustHaveRegister 342 MustHaveRegister 346 MustHaveRegister 350 MustHaveRegister 354 MustHaveRegister 359 LiveAtLoopEnd 394 MustHaveRegister 399 LiveAtLoopEnd  "NoSpillStore"
  v8|d DWORD "[r11|d]" v8|d v9|d [134, 160[[164, 179[144 ShouldHaveRegister 158 MustHaveRegister 160 ShouldHaveRegister 178 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[r11|d]" v9|d v8|d [160, 163[160 MustHaveRegister 162 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[r10|d]" v10|d -1 [176, 360[176 MustHaveRegister 190 MustHaveRegister 359 LiveAtLoopEnd  "NoSpillStore"
  v11|d DWORD "[r11|d]" v11|d v8|d [180, 356[[360, 369[190 ShouldHaveRegister 294 MustHaveRegister 296 ShouldHaveRegister 300 MustHaveRegister 304 MustHaveRegister 308 MustHaveRegister 312 MustHaveRegister 316 MustHaveRegister 320 MustHaveRegister 324 MustHaveRegister 328 MustHaveRegister 332 MustHaveRegister 336 MustHaveRegister 340 MustHaveRegister 344 MustHaveRegister 348 MustHaveRegister 352 MustHaveRegister 356 MustHaveRegister 368 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[r8|d]" v12|d v11|d [296, 298[296 MustHaveRegister 298 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[r8|d]" v13|d -1 [300, 302[300 MustHaveRegister 302 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[r8|d]" v14|d -1 [304, 306[304 MustHaveRegister 306 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[r8|d]" v15|d -1 [308, 310[308 MustHaveRegister 310 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[r8|d]" v16|d -1 [312, 314[312 MustHaveRegister 314 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[r8|d]" v17|d -1 [316, 318[316 MustHaveRegister 318 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[r8|d]" v18|d -1 [320, 322[320 MustHaveRegister 322 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[r8|d]" v19|d -1 [324, 326[324 MustHaveRegister 326 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[r8|d]" v20|d -1 [328, 330[328 MustHaveRegister 330 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[r8|d]" v21|d -1 [332, 334[332 MustHaveRegister 334 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[r8|d]" v22|d -1 [336, 338[336 MustHaveRegister 338 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[r8|d]" v23|d -1 [340, 342[340 MustHaveRegister 342 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[r8|d]" v24|d -1 [344, 346[344 MustHaveRegister 346 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[r8|d]" v25|d -1 [348, 350[348 MustHaveRegister 350 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[r8|d]" v26|d -1 [352, 354[352 MustHaveRegister 354 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[r11|d]" v27|d -1 [356, 359[356 MustHaveRegister 358 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[r11|d]" v28|d v11|d [370, 396[380 ShouldHaveRegister 394 MustHaveRegister 396 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[r11|d]" v29|d v28|d [396, 399[396 MustHaveRegister 398 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[rcx|d]" v30|d -1 [424, 516[424 MustHaveRegister 426 MustHaveRegister 510 MustHaveRegister 516 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[rax|d]" v31|d -1 [426, 666[426 MustHaveRegister 428 MustHaveRegister 446 ShouldHaveRegister 450 ShouldHaveRegister 464 ShouldHaveRegister 512 ShouldHaveRegister 514 MustHaveRegister 562 MustHaveRegister 646 MustHaveRegister 665 LiveAtLoopEnd  "NoSpillStore"
  v32|d DWORD "[r10|d]" v32|d v31|d [446, 448[446 MustHaveRegister 448 ShouldHaveRegister  "NoSpillStore"
  v33|q QWORD "[r10|q]" v33|q -1 [448, 452[448 MustHaveRegister 452 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[r11|q]" v34|q v31|d [450, 452[450 MustHaveRegister 452 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[r10|d]" v35|d -1 [514, 550[514 MustHaveRegister 530 MustHaveRegister 549 LiveAtLoopEnd  "NoSpillStore"
  v36|q QWORD "[rcx|q]" v36|q v30|d [516, 666[516 MustHaveRegister 544 MustHaveRegister 549 LiveAtLoopEnd 608 MustHaveRegister 612 MustHaveRegister 616 MustHaveRegister 620 MustHaveRegister 625 LiveAtLoopEnd 660 MustHaveRegister 665 LiveAtLoopEnd  "NoSpillStore"
  v37|d DWORD "[r11|d]" v37|d v38|d [520, 546[[550, 565[530 ShouldHaveRegister 544 MustHaveRegister 546 ShouldHaveRegister 564 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[r11|d]" v38|d v37|d [546, 549[546 MustHaveRegister 548 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[r10|d]" v39|d -1 [562, 626[562 MustHaveRegister 576 MustHaveRegister 625 LiveAtLoopEnd  "NoSpillStore"
  v40|d DWORD "[r11|d]" v40|d v37|d [566, 622[[626, 635[576 ShouldHaveRegister 608 MustHaveRegister 610 ShouldHaveRegister 614 MustHaveRegister 618 MustHaveRegister 622 MustHaveRegister 634 ShouldHaveRegister  "NoSpillStore"
  v41|d DWORD "[r8|d]" v41|d v40|d [610, 612[610 MustHaveRegister 612 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[r8|d]" v42|d -1 [614, 616[614 MustHaveRegister 616 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[r8|d]" v43|d -1 [618, 620[618 MustHaveRegister 620 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[r11|d]" v44|d -1 [622, 625[622 MustHaveRegister 624 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[r11|d]" v45|d v40|d [636, 662[646 ShouldHaveRegister 660 MustHaveRegister 662 ShouldHaveRegister  "NoSpillStore"
  v46|d DWORD "[r11|d]" v46|d v45|d [662, 665[662 MustHaveRegister 664 ShouldHaveRegister  "NoSpillStore"
  v47|d DWORD "[rcx|d]" v47|d -1 [698, 768[698 MustHaveRegister 700 MustHaveRegister 724 MustHaveRegister 768 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[rax|d]" v48|d -1 [720, 722[720 MustHaveRegister 722 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[rax|d]" v49|d -1 [722, 728[722 MustHaveRegister 728 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[r10|d]" v50|d -1 [724, 726[724 MustHaveRegister 726 MustHaveRegister  "NoSpillStore"
  v51|d DWORD "[r10|d]" v51|d -1 [726, 772[726 MustHaveRegister 772 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[rcx|d]" v52|d -1 [768, 770[768 MustHaveRegister 770 ShouldHaveRegister  "NoSpillStore"
  v53|d DWORD "[r10|d]" v53|d v51|d [772, 774[772 MustHaveRegister 774 MustHaveRegister  "NoSpillStore"
  v54|d DWORD "[r10|d]" v54|d -1 [856, 872[872 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[r11|q]" v55|q -1 [856, 874[874 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@10010b69 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction MOV x: [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   38  <|@ instruction MOV x: [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   40  <|@ instruction MOV x: [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.047637855530058615 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction v3|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction v4|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   64  <|@ instruction v5|QWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction MOV x: [v1|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction CMP x: v2|DWORD y: 3 size: DWORD <|@ <|@
      nr  128  <|@ instruction v6|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr  130  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr  134  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction MOV x: [v7|QWORD[.] + v8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  160  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [v9|DWORD] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction v10|DWORD = LEA address: [v2|DWORD - 16] size: DWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [v8|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037918881428452
    begin_IR
      LIR
      nr  180  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v11|DWORD) trueDestinationProbability: 0.19966822189770994 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728355569134986
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction MOV x: [v7|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  296  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV x: [v7|QWORD[.] + v12|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  300  <|@ instruction v13|DWORD = LEA address: [v11|DWORD + 2] size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [v7|QWORD[.] + v13|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  304  <|@ instruction v14|DWORD = LEA address: [v11|DWORD + 3] size: DWORD <|@ <|@
      nr  306  <|@ instruction MOV x: [v7|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  308  <|@ instruction v15|DWORD = LEA address: [v11|DWORD + 4] size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV x: [v7|QWORD[.] + v15|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  312  <|@ instruction v16|DWORD = LEA address: [v11|DWORD + 5] size: DWORD <|@ <|@
      nr  314  <|@ instruction MOV x: [v7|QWORD[.] + v16|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  316  <|@ instruction v17|DWORD = LEA address: [v11|DWORD + 6] size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [v7|QWORD[.] + v17|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  320  <|@ instruction v18|DWORD = LEA address: [v11|DWORD + 7] size: DWORD <|@ <|@
      nr  322  <|@ instruction MOV x: [v7|QWORD[.] + v18|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  324  <|@ instruction v19|DWORD = LEA address: [v11|DWORD + 8] size: DWORD <|@ <|@
      nr  326  <|@ instruction MOV x: [v7|QWORD[.] + v19|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  328  <|@ instruction v20|DWORD = LEA address: [v11|DWORD + 9] size: DWORD <|@ <|@
      nr  330  <|@ instruction MOV x: [v7|QWORD[.] + v20|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  332  <|@ instruction v21|DWORD = LEA address: [v11|DWORD + 10] size: DWORD <|@ <|@
      nr  334  <|@ instruction MOV x: [v7|QWORD[.] + v21|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  336  <|@ instruction v22|DWORD = LEA address: [v11|DWORD + 11] size: DWORD <|@ <|@
      nr  338  <|@ instruction MOV x: [v7|QWORD[.] + v22|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  340  <|@ instruction v23|DWORD = LEA address: [v11|DWORD + 12] size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV x: [v7|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  344  <|@ instruction v24|DWORD = LEA address: [v11|DWORD + 13] size: DWORD <|@ <|@
      nr  346  <|@ instruction MOV x: [v7|QWORD[.] + v24|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  348  <|@ instruction v25|DWORD = LEA address: [v11|DWORD + 14] size: DWORD <|@ <|@
      nr  350  <|@ instruction MOV x: [v7|QWORD[.] + v25|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  352  <|@ instruction v26|DWORD = LEA address: [v11|DWORD + 15] size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV x: [v7|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  356  <|@ instruction v27|DWORD = LEA address: [v11|DWORD + 16] size: DWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~outgoingValues: [v27|DWORD] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr  370  <|@ instruction [v28|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v28|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction MOV x: [v7|QWORD[.] + v28|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  396  <|@ instruction v29|DWORD = INC value: v28|DWORD size: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [v29|DWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction v30|DWORD[_] = MOV input: [v0|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  426  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction v31|DWORD = MOV input: [v30|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: v31|DWORD, y: v31|DWORD) trueDestinationProbability: 0.14462118087187847 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction v32|DWORD = DEC value: v31|DWORD size: DWORD <|@ <|@
      nr  448  <|@ instruction v33|QWORD = MOVSXD value: v32|DWORD size: QWORD <|@ <|@
      nr  450  <|@ instruction v34|QWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction CMPBRANCH (x: v34|QWORD, y: v33|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction CMPCONSTBRANCH x: v31|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction MOV x: [v30|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  512  <|@ instruction CMP x: v31|DWORD y: 3 size: DWORD <|@ <|@
      nr  514  <|@ instruction v35|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v31|DWORD) condition: |<| <|@ <|@
      nr  516  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605957610921207776
    begin_IR
      LIR
      nr  520  <|@ instruction [v37|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction CMPBRANCH (x: v35|DWORD, y: v37|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576134352261649511
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction MOV x: [v36|QWORD[.] + v37|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  546  <|@ instruction v38|DWORD = INC value: v37|DWORD size: DWORD <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [v38|DWORD] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction v39|DWORD = LEA address: [v31|DWORD - 4] size: DWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [v37|DWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608375014378939096
    begin_IR
      LIR
      nr  566  <|@ instruction [v40|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction CMPBRANCH (x: v39|DWORD, y: v40|DWORD) trueDestinationProbability: 0.3237093197173655 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601047265818730565
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction MOV x: [v36|QWORD[.] + v40|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  610  <|@ instruction v41|DWORD = INC value: v40|DWORD size: DWORD <|@ <|@
      nr  612  <|@ instruction MOV x: [v36|QWORD[.] + v41|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  614  <|@ instruction v42|DWORD = LEA address: [v40|DWORD + 2] size: DWORD <|@ <|@
      nr  616  <|@ instruction MOV x: [v36|QWORD[.] + v42|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  618  <|@ instruction v43|DWORD = LEA address: [v40|DWORD + 3] size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [v36|QWORD[.] + v43|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  622  <|@ instruction v44|DWORD = LEA address: [v40|DWORD + 4] size: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [v44|DWORD] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [v40|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605957610921207775
    begin_IR
      LIR
      nr  636  <|@ instruction [v45|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction CMPBRANCH (x: v31|DWORD, y: v45|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576134352261649510
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction MOV x: [v36|QWORD[.] + v45|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  662  <|@ instruction v46|DWORD = INC value: v45|DWORD size: DWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [v46|DWORD] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594378547460811208
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction v47|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  700  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [v47|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction v48|DWORD[_] = MOV input: [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  722  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v49|DWORD = MOV input: [v48|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  724  <|@ instruction v50|DWORD[_] = MOV input: [v47|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  726  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v51|DWORD = MOV input: [v50|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  728  <|@ instruction TESTBRANCH (x: v49|DWORD, y: v49|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction MOV x: [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  766  <|@ instruction MOV x: [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  768  <|@ instruction v52|DWORD = MOVSXB input: [v47|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  770  <|@ instruction rcx|DWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction v53|DWORD = SHR (x: v51|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v53|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction INC value: [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  778  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587026159545039280
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction MOV x: [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr  810  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  812  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction JUMP ~outgoingValues: [int[-84243|0xfffffffffffeb6ed], long[20|0x14]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction MOV x: [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr  842  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  844  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction JUMP ~outgoingValues: [int[-54579|0xffffffffffff2acd], long[660|0x294]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  856  <|@ instruction [v54|DWORD, v55|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v54|DWORD) size: DWORD <|@ <|@
      nr  874  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v55|QWORD) size: QWORD <|@ <|@
      nr  876  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v0|q [0, 1[[778, 780[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d v52|d [0, 1[[770, 773[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 26[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 30[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [30, 778[[782, 813[[814, 845[[846, 877[30 MustHaveRegister 32 MustHaveRegister 36 MustHaveRegister 38 MustHaveRegister 40 MustHaveRegister 424 MustHaveRegister 698 MustHaveRegister 720 MustHaveRegister 764 MustHaveRegister 766 MustHaveRegister 774 MustHaveRegister 776 MustHaveRegister 778 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[rcx|d]" v1|d -1 [32, 130[32 MustHaveRegister 34 MustHaveRegister 124 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [34, 400[34 MustHaveRegister 42 MustHaveRegister 60 ShouldHaveRegister 64 ShouldHaveRegister 78 ShouldHaveRegister 126 ShouldHaveRegister 128 MustHaveRegister 176 MustHaveRegister 380 MustHaveRegister 399 LiveAtLoopEnd  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d v2|d [60, 62[60 MustHaveRegister 62 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[r10|q]" v4|q -1 [62, 66[62 MustHaveRegister 66 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[r11|q]" v5|q v2|d [64, 66[64 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r10|d]" v6|d -1 [128, 164[128 MustHaveRegister 144 MustHaveRegister 163 LiveAtLoopEnd  "NoSpillStore"
  v7|q QWORD "[rcx|q]" v7|q v1|d [130, 400[130 MustHaveRegister 158 MustHaveRegister 163 LiveAtLoopEnd 294 MustHaveRegister 298 MustHaveRegister 302 MustHaveRegister 306 MustHaveRegister 310 MustHaveRegister 314 MustHaveRegister 318 MustHaveRegister 322 MustHaveRegister 326 MustHaveRegister 330 MustHaveRegister 334 MustHaveRegister 338 MustHaveRegister 342 MustHaveRegister 346 MustHaveRegister 350 MustHaveRegister 354 MustHaveRegister 359 LiveAtLoopEnd 394 MustHaveRegister 399 LiveAtLoopEnd  "NoSpillStore"
  v8|d DWORD "[r11|d]" v8|d v9|d [134, 160[[164, 179[144 ShouldHaveRegister 158 MustHaveRegister 160 ShouldHaveRegister 178 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[r11|d]" v9|d v8|d [160, 163[160 MustHaveRegister 162 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[r10|d]" v10|d -1 [176, 360[176 MustHaveRegister 190 MustHaveRegister 359 LiveAtLoopEnd  "NoSpillStore"
  v11|d DWORD "[r11|d]" v11|d v8|d [180, 356[[360, 369[190 ShouldHaveRegister 294 MustHaveRegister 296 ShouldHaveRegister 300 MustHaveRegister 304 MustHaveRegister 308 MustHaveRegister 312 MustHaveRegister 316 MustHaveRegister 320 MustHaveRegister 324 MustHaveRegister 328 MustHaveRegister 332 MustHaveRegister 336 MustHaveRegister 340 MustHaveRegister 344 MustHaveRegister 348 MustHaveRegister 352 MustHaveRegister 356 MustHaveRegister 368 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[r8|d]" v12|d v11|d [296, 298[296 MustHaveRegister 298 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[r8|d]" v13|d -1 [300, 302[300 MustHaveRegister 302 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[r8|d]" v14|d -1 [304, 306[304 MustHaveRegister 306 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[r8|d]" v15|d -1 [308, 310[308 MustHaveRegister 310 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[r8|d]" v16|d -1 [312, 314[312 MustHaveRegister 314 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[r8|d]" v17|d -1 [316, 318[316 MustHaveRegister 318 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[r8|d]" v18|d -1 [320, 322[320 MustHaveRegister 322 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[r8|d]" v19|d -1 [324, 326[324 MustHaveRegister 326 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[r8|d]" v20|d -1 [328, 330[328 MustHaveRegister 330 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[r8|d]" v21|d -1 [332, 334[332 MustHaveRegister 334 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[r8|d]" v22|d -1 [336, 338[336 MustHaveRegister 338 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[r8|d]" v23|d -1 [340, 342[340 MustHaveRegister 342 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[r8|d]" v24|d -1 [344, 346[344 MustHaveRegister 346 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[r8|d]" v25|d -1 [348, 350[348 MustHaveRegister 350 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[r8|d]" v26|d -1 [352, 354[352 MustHaveRegister 354 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[r11|d]" v27|d -1 [356, 359[356 MustHaveRegister 358 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[r11|d]" v28|d v11|d [370, 396[380 ShouldHaveRegister 394 MustHaveRegister 396 ShouldHaveRegister  "NoSpillStore"
  v29|d DWORD "[r11|d]" v29|d v28|d [396, 399[396 MustHaveRegister 398 ShouldHaveRegister  "NoSpillStore"
  v30|d DWORD "[rcx|d]" v30|d -1 [424, 516[424 MustHaveRegister 426 MustHaveRegister 510 MustHaveRegister 516 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[rax|d]" v31|d -1 [426, 666[426 MustHaveRegister 428 MustHaveRegister 446 ShouldHaveRegister 450 ShouldHaveRegister 464 ShouldHaveRegister 512 ShouldHaveRegister 514 MustHaveRegister 562 MustHaveRegister 646 MustHaveRegister 665 LiveAtLoopEnd  "NoSpillStore"
  v32|d DWORD "[r10|d]" v32|d v31|d [446, 448[446 MustHaveRegister 448 ShouldHaveRegister  "NoSpillStore"
  v33|q QWORD "[r10|q]" v33|q -1 [448, 452[448 MustHaveRegister 452 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[r11|q]" v34|q v31|d [450, 452[450 MustHaveRegister 452 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[r10|d]" v35|d -1 [514, 550[514 MustHaveRegister 530 MustHaveRegister 549 LiveAtLoopEnd  "NoSpillStore"
  v36|q QWORD "[rcx|q]" v36|q v30|d [516, 666[516 MustHaveRegister 544 MustHaveRegister 549 LiveAtLoopEnd 608 MustHaveRegister 612 MustHaveRegister 616 MustHaveRegister 620 MustHaveRegister 625 LiveAtLoopEnd 660 MustHaveRegister 665 LiveAtLoopEnd  "NoSpillStore"
  v37|d DWORD "[r11|d]" v37|d v38|d [520, 546[[550, 565[530 ShouldHaveRegister 544 MustHaveRegister 546 ShouldHaveRegister 564 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[r11|d]" v38|d v37|d [546, 549[546 MustHaveRegister 548 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[r10|d]" v39|d -1 [562, 626[562 MustHaveRegister 576 MustHaveRegister 625 LiveAtLoopEnd  "NoSpillStore"
  v40|d DWORD "[r11|d]" v40|d v37|d [566, 622[[626, 635[576 ShouldHaveRegister 608 MustHaveRegister 610 ShouldHaveRegister 614 MustHaveRegister 618 MustHaveRegister 622 MustHaveRegister 634 ShouldHaveRegister  "NoSpillStore"
  v41|d DWORD "[r8|d]" v41|d v40|d [610, 612[610 MustHaveRegister 612 MustHaveRegister  "NoSpillStore"
  v42|d DWORD "[r8|d]" v42|d -1 [614, 616[614 MustHaveRegister 616 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[r8|d]" v43|d -1 [618, 620[618 MustHaveRegister 620 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[r11|d]" v44|d -1 [622, 625[622 MustHaveRegister 624 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[r11|d]" v45|d v40|d [636, 662[646 ShouldHaveRegister 660 MustHaveRegister 662 ShouldHaveRegister  "NoSpillStore"
  v46|d DWORD "[r11|d]" v46|d v45|d [662, 665[662 MustHaveRegister 664 ShouldHaveRegister  "NoSpillStore"
  v47|d DWORD "[rcx|d]" v47|d -1 [698, 768[698 MustHaveRegister 700 MustHaveRegister 724 MustHaveRegister 768 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[rax|d]" v48|d -1 [720, 722[720 MustHaveRegister 722 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[rax|d]" v49|d -1 [722, 728[722 MustHaveRegister 728 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[r10|d]" v50|d -1 [724, 726[724 MustHaveRegister 726 MustHaveRegister  "NoSpillStore"
  v51|d DWORD "[r10|d]" v51|d -1 [726, 772[726 MustHaveRegister 772 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[rcx|d]" v52|d -1 [768, 770[768 MustHaveRegister 770 ShouldHaveRegister  "NoSpillStore"
  v53|d DWORD "[r10|d]" v53|d v51|d [772, 774[772 MustHaveRegister 774 MustHaveRegister  "NoSpillStore"
  v54|d DWORD "[r10|d]" v54|d -1 [856, 872[872 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[r11|q]" v55|q -1 [856, 874[874 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@10010b69 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction MOV x: [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   38  <|@ instruction MOV x: [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   40  <|@ instruction MOV x: [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.047637855530058615 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction v3|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction v4|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   64  <|@ instruction v5|QWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction MOV x: [v1|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction CMP x: v2|DWORD y: 3 size: DWORD <|@ <|@
      nr  128  <|@ instruction v6|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr  130  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr  134  <|@ instruction [v8|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction MOV x: [v7|QWORD[.] + v8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  160  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction v10|DWORD = LEA address: [v2|DWORD - 16] size: DWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037918881428452
    begin_IR
      LIR
      nr  180  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v11|DWORD) trueDestinationProbability: 0.19966822189770994 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728355569134986
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction MOV x: [v7|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  296  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV x: [v7|QWORD[.] + v12|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  300  <|@ instruction v13|DWORD = LEA address: [v11|DWORD + 2] size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [v7|QWORD[.] + v13|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  304  <|@ instruction v14|DWORD = LEA address: [v11|DWORD + 3] size: DWORD <|@ <|@
      nr  306  <|@ instruction MOV x: [v7|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  308  <|@ instruction v15|DWORD = LEA address: [v11|DWORD + 4] size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV x: [v7|QWORD[.] + v15|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  312  <|@ instruction v16|DWORD = LEA address: [v11|DWORD + 5] size: DWORD <|@ <|@
      nr  314  <|@ instruction MOV x: [v7|QWORD[.] + v16|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  316  <|@ instruction v17|DWORD = LEA address: [v11|DWORD + 6] size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [v7|QWORD[.] + v17|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  320  <|@ instruction v18|DWORD = LEA address: [v11|DWORD + 7] size: DWORD <|@ <|@
      nr  322  <|@ instruction MOV x: [v7|QWORD[.] + v18|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  324  <|@ instruction v19|DWORD = LEA address: [v11|DWORD + 8] size: DWORD <|@ <|@
      nr  326  <|@ instruction MOV x: [v7|QWORD[.] + v19|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  328  <|@ instruction v20|DWORD = LEA address: [v11|DWORD + 9] size: DWORD <|@ <|@
      nr  330  <|@ instruction MOV x: [v7|QWORD[.] + v20|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  332  <|@ instruction v21|DWORD = LEA address: [v11|DWORD + 10] size: DWORD <|@ <|@
      nr  334  <|@ instruction MOV x: [v7|QWORD[.] + v21|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  336  <|@ instruction v22|DWORD = LEA address: [v11|DWORD + 11] size: DWORD <|@ <|@
      nr  338  <|@ instruction MOV x: [v7|QWORD[.] + v22|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  340  <|@ instruction v23|DWORD = LEA address: [v11|DWORD + 12] size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV x: [v7|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  344  <|@ instruction v24|DWORD = LEA address: [v11|DWORD + 13] size: DWORD <|@ <|@
      nr  346  <|@ instruction MOV x: [v7|QWORD[.] + v24|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  348  <|@ instruction v25|DWORD = LEA address: [v11|DWORD + 14] size: DWORD <|@ <|@
      nr  350  <|@ instruction MOV x: [v7|QWORD[.] + v25|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  352  <|@ instruction v26|DWORD = LEA address: [v11|DWORD + 15] size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV x: [v7|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  356  <|@ instruction v27|DWORD = LEA address: [v11|DWORD + 16] size: DWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr  370  <|@ instruction [v28|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v28|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction MOV x: [v7|QWORD[.] + v28|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  396  <|@ instruction v29|DWORD = INC value: v28|DWORD size: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction v30|DWORD[_] = MOV input: [v0|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  426  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction v31|DWORD = MOV input: [v30|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: v31|DWORD, y: v31|DWORD) trueDestinationProbability: 0.14462118087187847 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction v32|DWORD = DEC value: v31|DWORD size: DWORD <|@ <|@
      nr  448  <|@ instruction v33|QWORD = MOVSXD value: v32|DWORD size: QWORD <|@ <|@
      nr  450  <|@ instruction v34|QWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction CMPBRANCH (x: v34|QWORD, y: v33|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction CMPCONSTBRANCH x: v31|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction MOV x: [v30|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  512  <|@ instruction CMP x: v31|DWORD y: 3 size: DWORD <|@ <|@
      nr  514  <|@ instruction v35|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v31|DWORD) condition: |<| <|@ <|@
      nr  516  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605957610921207776
    begin_IR
      LIR
      nr  520  <|@ instruction [v37|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction CMPBRANCH (x: v35|DWORD, y: v37|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576134352261649511
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction MOV x: [v36|QWORD[.] + v37|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  546  <|@ instruction v38|DWORD = INC value: v37|DWORD size: DWORD <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction v39|DWORD = LEA address: [v31|DWORD - 4] size: DWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608375014378939096
    begin_IR
      LIR
      nr  566  <|@ instruction [v40|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction CMPBRANCH (x: v39|DWORD, y: v40|DWORD) trueDestinationProbability: 0.3237093197173655 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601047265818730565
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction MOV x: [v36|QWORD[.] + v40|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  610  <|@ instruction v41|DWORD = INC value: v40|DWORD size: DWORD <|@ <|@
      nr  612  <|@ instruction MOV x: [v36|QWORD[.] + v41|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  614  <|@ instruction v42|DWORD = LEA address: [v40|DWORD + 2] size: DWORD <|@ <|@
      nr  616  <|@ instruction MOV x: [v36|QWORD[.] + v42|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  618  <|@ instruction v43|DWORD = LEA address: [v40|DWORD + 3] size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [v36|QWORD[.] + v43|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  622  <|@ instruction v44|DWORD = LEA address: [v40|DWORD + 4] size: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605957610921207775
    begin_IR
      LIR
      nr  636  <|@ instruction [v45|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction CMPBRANCH (x: v31|DWORD, y: v45|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576134352261649510
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction MOV x: [v36|QWORD[.] + v45|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  662  <|@ instruction v46|DWORD = INC value: v45|DWORD size: DWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594378547460811208
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction v47|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  700  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [v47|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction v48|DWORD[_] = MOV input: [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  722  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v49|DWORD = MOV input: [v48|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  724  <|@ instruction v50|DWORD[_] = MOV input: [v47|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  726  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v51|DWORD = MOV input: [v50|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  728  <|@ instruction TESTBRANCH (x: v49|DWORD, y: v49|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction MOV x: [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  766  <|@ instruction MOV x: [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  768  <|@ instruction v52|DWORD = MOVSXB input: [v47|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  770  <|@ instruction rcx|DWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction v53|DWORD = SHR (x: v51|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v53|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction INC value: [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  778  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587026159545039280
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction MOV x: [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr  810  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  812  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] // MoveResolver resolve mapping <|@ <|@
      nr  822  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction MOV x: [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr  842  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  844  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVE input: int[-54579|0xffffffffffff2acd] // MoveResolver resolve mapping <|@ <|@
      nr  854  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  856  <|@ instruction [v54|DWORD, v55|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v54|DWORD) size: DWORD <|@ <|@
      nr  874  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v55|QWORD) size: QWORD <|@ <|@
      nr  876  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@10010b69 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction MOV x: [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   38  <|@ instruction MOV x: [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   40  <|@ instruction MOV x: [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.047637855530058615 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction v3|DWORD = DEC value: v2|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction v4|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   64  <|@ instruction v5|QWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: v5|QWORD, y: v4|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction MOV x: [v1|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction CMP x: v2|DWORD y: 3 size: DWORD <|@ <|@
      nr  128  <|@ instruction v6|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v2|DWORD) condition: |<| <|@ <|@
      nr  130  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: v6|DWORD, y: v8|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction MOV x: [v7|QWORD[.] + v8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  160  <|@ instruction v9|DWORD = INC value: v8|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction v10|DWORD = LEA address: [v2|DWORD - 16] size: DWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037918881428452
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v11|DWORD) trueDestinationProbability: 0.19966822189770994 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728355569134986
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction MOV x: [v7|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  296  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV x: [v7|QWORD[.] + v12|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  300  <|@ instruction v13|DWORD = LEA address: [v11|DWORD + 2] size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [v7|QWORD[.] + v13|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  304  <|@ instruction v14|DWORD = LEA address: [v11|DWORD + 3] size: DWORD <|@ <|@
      nr  306  <|@ instruction MOV x: [v7|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  308  <|@ instruction v15|DWORD = LEA address: [v11|DWORD + 4] size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV x: [v7|QWORD[.] + v15|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  312  <|@ instruction v16|DWORD = LEA address: [v11|DWORD + 5] size: DWORD <|@ <|@
      nr  314  <|@ instruction MOV x: [v7|QWORD[.] + v16|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  316  <|@ instruction v17|DWORD = LEA address: [v11|DWORD + 6] size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [v7|QWORD[.] + v17|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  320  <|@ instruction v18|DWORD = LEA address: [v11|DWORD + 7] size: DWORD <|@ <|@
      nr  322  <|@ instruction MOV x: [v7|QWORD[.] + v18|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  324  <|@ instruction v19|DWORD = LEA address: [v11|DWORD + 8] size: DWORD <|@ <|@
      nr  326  <|@ instruction MOV x: [v7|QWORD[.] + v19|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  328  <|@ instruction v20|DWORD = LEA address: [v11|DWORD + 9] size: DWORD <|@ <|@
      nr  330  <|@ instruction MOV x: [v7|QWORD[.] + v20|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  332  <|@ instruction v21|DWORD = LEA address: [v11|DWORD + 10] size: DWORD <|@ <|@
      nr  334  <|@ instruction MOV x: [v7|QWORD[.] + v21|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  336  <|@ instruction v22|DWORD = LEA address: [v11|DWORD + 11] size: DWORD <|@ <|@
      nr  338  <|@ instruction MOV x: [v7|QWORD[.] + v22|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  340  <|@ instruction v23|DWORD = LEA address: [v11|DWORD + 12] size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV x: [v7|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  344  <|@ instruction v24|DWORD = LEA address: [v11|DWORD + 13] size: DWORD <|@ <|@
      nr  346  <|@ instruction MOV x: [v7|QWORD[.] + v24|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  348  <|@ instruction v25|DWORD = LEA address: [v11|DWORD + 14] size: DWORD <|@ <|@
      nr  350  <|@ instruction MOV x: [v7|QWORD[.] + v25|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  352  <|@ instruction v26|DWORD = LEA address: [v11|DWORD + 15] size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV x: [v7|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  356  <|@ instruction v27|DWORD = LEA address: [v11|DWORD + 16] size: DWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction CMPBRANCH (x: v2|DWORD, y: v28|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction MOV x: [v7|QWORD[.] + v28|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  396  <|@ instruction v29|DWORD = INC value: v28|DWORD size: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction v30|DWORD[_] = MOV input: [v0|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  426  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction v31|DWORD = MOV input: [v30|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: v31|DWORD, y: v31|DWORD) trueDestinationProbability: 0.14462118087187847 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction v32|DWORD = DEC value: v31|DWORD size: DWORD <|@ <|@
      nr  448  <|@ instruction v33|QWORD = MOVSXD value: v32|DWORD size: QWORD <|@ <|@
      nr  450  <|@ instruction v34|QWORD = MOVE input: v31|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction CMPBRANCH (x: v34|QWORD, y: v33|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction CMPCONSTBRANCH x: v31|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction MOV x: [v30|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  512  <|@ instruction CMP x: v31|DWORD y: 3 size: DWORD <|@ <|@
      nr  514  <|@ instruction v35|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v31|DWORD) condition: |<| <|@ <|@
      nr  516  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605957610921207776
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction CMPBRANCH (x: v35|DWORD, y: v37|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576134352261649511
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction MOV x: [v36|QWORD[.] + v37|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  546  <|@ instruction v38|DWORD = INC value: v37|DWORD size: DWORD <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction v39|DWORD = LEA address: [v31|DWORD - 4] size: DWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608375014378939096
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction CMPBRANCH (x: v39|DWORD, y: v40|DWORD) trueDestinationProbability: 0.3237093197173655 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601047265818730565
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction MOV x: [v36|QWORD[.] + v40|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  610  <|@ instruction v41|DWORD = INC value: v40|DWORD size: DWORD <|@ <|@
      nr  612  <|@ instruction MOV x: [v36|QWORD[.] + v41|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  614  <|@ instruction v42|DWORD = LEA address: [v40|DWORD + 2] size: DWORD <|@ <|@
      nr  616  <|@ instruction MOV x: [v36|QWORD[.] + v42|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  618  <|@ instruction v43|DWORD = LEA address: [v40|DWORD + 3] size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [v36|QWORD[.] + v43|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  622  <|@ instruction v44|DWORD = LEA address: [v40|DWORD + 4] size: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605957610921207775
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction CMPBRANCH (x: v31|DWORD, y: v45|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576134352261649510
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction MOV x: [v36|QWORD[.] + v45|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  662  <|@ instruction v46|DWORD = INC value: v45|DWORD size: DWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594378547460811208
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction v47|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  700  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [v47|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction v48|DWORD[_] = MOV input: [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  722  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v49|DWORD = MOV input: [v48|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  724  <|@ instruction v50|DWORD[_] = MOV input: [v47|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  726  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction v51|DWORD = MOV input: [v50|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  728  <|@ instruction TESTBRANCH (x: v49|DWORD, y: v49|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction MOV x: [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  766  <|@ instruction MOV x: [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  768  <|@ instruction v52|DWORD = MOVSXB input: [v47|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  770  <|@ instruction rcx|DWORD = MOVE input: v52|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction v53|DWORD = SHR (x: v51|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v53|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction INC value: [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  778  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587026159545039280
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction MOV x: [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr  810  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  812  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] // MoveResolver resolve mapping <|@ <|@
      nr  822  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction MOV x: [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr  842  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  844  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVE input: int[-54579|0xffffffffffff2acd] // MoveResolver resolve mapping <|@ <|@
      nr  854  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v54|DWORD) size: DWORD <|@ <|@
      nr  874  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v55|QWORD) size: QWORD <|@ <|@
      nr  876  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@10010b69 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction MOV x: [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   38  <|@ instruction MOV x: [rsi|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   40  <|@ instruction MOV x: [rsi|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.047637855530058615 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction r10|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction r10|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr   64  <|@ instruction r11|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction MOV x: [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction CMP x: rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  128  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr  130  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  160  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction r10|DWORD = LEA address: [rax|DWORD - 16] size: DWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037918881428452
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.19966822189770994 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728355569134986
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  296  <|@ instruction r8|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  300  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 2] size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  304  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  306  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  308  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  312  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 5] size: DWORD <|@ <|@
      nr  314  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  316  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 6] size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  320  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 7] size: DWORD <|@ <|@
      nr  322  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  324  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  326  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  328  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 9] size: DWORD <|@ <|@
      nr  330  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  332  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 10] size: DWORD <|@ <|@
      nr  334  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  336  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 11] size: DWORD <|@ <|@
      nr  338  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  340  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 12] size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  344  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 13] size: DWORD <|@ <|@
      nr  346  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  348  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 14] size: DWORD <|@ <|@
      nr  350  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  352  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 15] size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  356  <|@ instruction r11|DWORD = LEA address: [r11|DWORD + 16] size: DWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  396  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  426  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.14462118087187847 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction r10|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  448  <|@ instruction r10|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr  450  <|@ instruction r11|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction MOV x: [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  512  <|@ instruction CMP x: rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  514  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr  516  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605957610921207776
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576134352261649511
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  546  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction r10|DWORD = LEA address: [rax|DWORD - 4] size: DWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608375014378939096
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.3237093197173655 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601047265818730565
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  610  <|@ instruction r8|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  612  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  614  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 2] size: DWORD <|@ <|@
      nr  616  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  618  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  622  <|@ instruction r11|DWORD = LEA address: [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605957610921207775
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576134352261649510
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  662  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594378547460811208
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  700  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  722  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  724  <|@ instruction r10|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  726  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  728  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction MOV x: [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  766  <|@ instruction MOV x: [rsi|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  768  <|@ instruction rcx|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  772  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction INC value: [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  778  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587026159545039280
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction MOV x: [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr  810  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  812  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] // MoveResolver resolve mapping <|@ <|@
      nr  822  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction MOV x: [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr  842  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  844  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-54579|0xffffffffffff2acd] // MoveResolver resolve mapping <|@ <|@
      nr  854  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  874  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  876  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@10010b69 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction MOV x: [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   38  <|@ instruction MOV x: [rsi|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   40  <|@ instruction MOV x: [rsi|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.047637855530058615 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction r10|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction r10|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr   64  <|@ instruction r11|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction MOV x: [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction CMP x: rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  128  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr  130  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  160  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction r10|DWORD = LEA address: [rax|DWORD - 16] size: DWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037918881428452
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.19966822189770994 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728355569134986
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  296  <|@ instruction r8|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  300  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 2] size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  304  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  306  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  308  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  312  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 5] size: DWORD <|@ <|@
      nr  314  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  316  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 6] size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  320  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 7] size: DWORD <|@ <|@
      nr  322  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  324  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  326  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  328  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 9] size: DWORD <|@ <|@
      nr  330  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  332  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 10] size: DWORD <|@ <|@
      nr  334  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  336  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 11] size: DWORD <|@ <|@
      nr  338  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  340  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 12] size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  344  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 13] size: DWORD <|@ <|@
      nr  346  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  348  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 14] size: DWORD <|@ <|@
      nr  350  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  352  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 15] size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  356  <|@ instruction r11|DWORD = LEA address: [r11|DWORD + 16] size: DWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  396  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  426  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.14462118087187847 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction r10|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  448  <|@ instruction r10|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr  450  <|@ instruction r11|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction MOV x: [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  512  <|@ instruction CMP x: rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  514  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr  516  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605957610921207776
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576134352261649511
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  546  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction r10|DWORD = LEA address: [rax|DWORD - 4] size: DWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608375014378939096
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.3237093197173655 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601047265818730565
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  610  <|@ instruction r8|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  612  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  614  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 2] size: DWORD <|@ <|@
      nr  616  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  618  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  622  <|@ instruction r11|DWORD = LEA address: [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605957610921207775
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576134352261649510
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  662  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594378547460811208
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  700  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  722  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  724  <|@ instruction r10|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  726  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  728  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction MOV x: [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  766  <|@ instruction MOV x: [rsi|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  768  <|@ instruction rcx|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  772  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction INC value: [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  778  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587026159545039280
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction MOV x: [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr  810  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  812  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] // MoveResolver resolve mapping <|@ <|@
      nr  822  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction MOV x: [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr  842  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  844  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-54579|0xffffffffffff2acd] // MoveResolver resolve mapping <|@ <|@
      nr  854  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  874  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  876  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@10010b69 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction MOV x: [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   38  <|@ instruction MOV x: [rsi|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   40  <|@ instruction MOV x: [rsi|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.047637855530058615 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction r10|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction r10|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr   64  <|@ instruction r11|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction MOV x: [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction CMP x: rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  128  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr  130  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  160  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction r10|DWORD = LEA address: [rax|DWORD - 16] size: DWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037918881428452
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.19966822189770994 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728355569134986
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  296  <|@ instruction r8|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  300  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 2] size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  304  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  306  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  308  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  312  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 5] size: DWORD <|@ <|@
      nr  314  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  316  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 6] size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  320  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 7] size: DWORD <|@ <|@
      nr  322  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  324  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  326  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  328  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 9] size: DWORD <|@ <|@
      nr  330  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  332  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 10] size: DWORD <|@ <|@
      nr  334  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  336  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 11] size: DWORD <|@ <|@
      nr  338  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  340  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 12] size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  344  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 13] size: DWORD <|@ <|@
      nr  346  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  348  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 14] size: DWORD <|@ <|@
      nr  350  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  352  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 15] size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  356  <|@ instruction r11|DWORD = LEA address: [r11|DWORD + 16] size: DWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  396  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  426  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.14462118087187847 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction r10|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  448  <|@ instruction r10|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr  450  <|@ instruction r11|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction MOV x: [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  512  <|@ instruction CMP x: rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  514  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr  516  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605957610921207776
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576134352261649511
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  546  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction r10|DWORD = LEA address: [rax|DWORD - 4] size: DWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608375014378939096
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.3237093197173655 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601047265818730565
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  610  <|@ instruction r8|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  612  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  614  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 2] size: DWORD <|@ <|@
      nr  616  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  618  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  622  <|@ instruction r11|DWORD = LEA address: [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605957610921207775
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576134352261649510
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  662  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594378547460811208
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  700  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  722  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  724  <|@ instruction r10|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  726  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  728  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction MOV x: [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  766  <|@ instruction MOV x: [rsi|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  768  <|@ instruction rcx|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  772  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction INC value: [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  778  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587026159545039280
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction MOV x: [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr  810  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  812  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] // MoveResolver resolve mapping <|@ <|@
      nr  822  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction MOV x: [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr  842  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  844  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-54579|0xffffffffffff2acd] // MoveResolver resolve mapping <|@ <|@
      nr  854  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  874  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  876  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@10010b69 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction MOV x: [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   38  <|@ instruction MOV x: [rsi|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   40  <|@ instruction MOV x: [rsi|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.047637855530058615 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction r10|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction r10|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr   64  <|@ instruction r11|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction MOV x: [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction CMP x: rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  128  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr  130  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  160  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction r10|DWORD = LEA address: [rax|DWORD - 16] size: DWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037918881428452
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.19966822189770994 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728355569134986
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  296  <|@ instruction r8|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  300  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 2] size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  304  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  306  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  308  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  312  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 5] size: DWORD <|@ <|@
      nr  314  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  316  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 6] size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  320  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 7] size: DWORD <|@ <|@
      nr  322  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  324  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  326  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  328  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 9] size: DWORD <|@ <|@
      nr  330  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  332  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 10] size: DWORD <|@ <|@
      nr  334  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  336  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 11] size: DWORD <|@ <|@
      nr  338  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  340  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 12] size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  344  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 13] size: DWORD <|@ <|@
      nr  346  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  348  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 14] size: DWORD <|@ <|@
      nr  350  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  352  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 15] size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  356  <|@ instruction r11|DWORD = LEA address: [r11|DWORD + 16] size: DWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  396  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  426  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.14462118087187847 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction r10|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  448  <|@ instruction r10|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr  450  <|@ instruction r11|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction MOV x: [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  512  <|@ instruction CMP x: rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  514  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr  516  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605957610921207776
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576134352261649511
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  546  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction r10|DWORD = LEA address: [rax|DWORD - 4] size: DWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608375014378939096
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.3237093197173655 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601047265818730565
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  610  <|@ instruction r8|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  612  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  614  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 2] size: DWORD <|@ <|@
      nr  616  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  618  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  622  <|@ instruction r11|DWORD = LEA address: [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605957610921207775
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576134352261649510
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  662  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594378547460811208
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  700  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  722  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  724  <|@ instruction r10|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  726  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  728  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction MOV x: [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  766  <|@ instruction MOV x: [rsi|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  768  <|@ instruction rcx|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  772  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction INC value: [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  778  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587026159545039280
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction MOV x: [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr  810  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  812  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] // MoveResolver resolve mapping <|@ <|@
      nr  822  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction MOV x: [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr  842  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  844  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-54579|0xffffffffffff2acd] // MoveResolver resolve mapping <|@ <|@
      nr  854  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  874  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  876  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@10010b69 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction MOV x: [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   38  <|@ instruction MOV x: [rsi|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   40  <|@ instruction MOV x: [rsi|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.047637855530058615 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction r10|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction r10|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr   64  <|@ instruction r11|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction MOV x: [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction CMP x: rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  128  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr  130  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  160  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction r10|DWORD = LEA address: [rax|DWORD - 16] size: DWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037918881428452
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.19966822189770994 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728355569134986
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  296  <|@ instruction r8|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  300  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 2] size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  304  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  306  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  308  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  312  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 5] size: DWORD <|@ <|@
      nr  314  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  316  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 6] size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  320  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 7] size: DWORD <|@ <|@
      nr  322  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  324  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  326  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  328  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 9] size: DWORD <|@ <|@
      nr  330  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  332  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 10] size: DWORD <|@ <|@
      nr  334  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  336  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 11] size: DWORD <|@ <|@
      nr  338  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  340  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 12] size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  344  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 13] size: DWORD <|@ <|@
      nr  346  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  348  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 14] size: DWORD <|@ <|@
      nr  350  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  352  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 15] size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  356  <|@ instruction r11|DWORD = LEA address: [r11|DWORD + 16] size: DWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  396  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  426  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.14462118087187847 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction r10|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  448  <|@ instruction r10|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr  450  <|@ instruction r11|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction MOV x: [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  512  <|@ instruction CMP x: rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  514  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr  516  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605957610921207776
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576134352261649511
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  546  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction r10|DWORD = LEA address: [rax|DWORD - 4] size: DWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608375014378939096
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.3237093197173655 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601047265818730565
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  610  <|@ instruction r8|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  612  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  614  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 2] size: DWORD <|@ <|@
      nr  616  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  618  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  622  <|@ instruction r11|DWORD = LEA address: [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605957610921207775
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576134352261649510
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  662  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594378547460811208
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  700  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  722  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  724  <|@ instruction r10|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  726  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  728  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction MOV x: [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  766  <|@ instruction MOV x: [rsi|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  768  <|@ instruction rcx|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  772  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction INC value: [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  778  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587026159545039280
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction MOV x: [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr  810  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  812  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] // MoveResolver resolve mapping <|@ <|@
      nr  822  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction MOV x: [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr  842  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  844  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-54579|0xffffffffffff2acd] // MoveResolver resolve mapping <|@ <|@
      nr  854  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  874  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  876  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@10010b69 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction MOV x: [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   38  <|@ instruction MOV x: [rsi|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   40  <|@ instruction MOV x: [rsi|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.047637855530058615 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction r10|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction r10|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr   64  <|@ instruction r11|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction MOV x: [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction CMP x: rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  128  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr  130  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  160  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction r10|DWORD = LEA address: [rax|DWORD - 16] size: DWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037918881428452
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.19966822189770994 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728355569134986
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  296  <|@ instruction r8|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  300  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 2] size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  304  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  306  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  308  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  312  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 5] size: DWORD <|@ <|@
      nr  314  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  316  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 6] size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  320  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 7] size: DWORD <|@ <|@
      nr  322  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  324  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  326  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  328  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 9] size: DWORD <|@ <|@
      nr  330  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  332  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 10] size: DWORD <|@ <|@
      nr  334  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  336  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 11] size: DWORD <|@ <|@
      nr  338  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  340  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 12] size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  344  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 13] size: DWORD <|@ <|@
      nr  346  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  348  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 14] size: DWORD <|@ <|@
      nr  350  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  352  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 15] size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  356  <|@ instruction r11|DWORD = LEA address: [r11|DWORD + 16] size: DWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  396  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  426  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.14462118087187847 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction r10|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  448  <|@ instruction r10|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr  450  <|@ instruction r11|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction MOV x: [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  512  <|@ instruction CMP x: rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  514  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr  516  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605957610921207776
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576134352261649511
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  546  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction r10|DWORD = LEA address: [rax|DWORD - 4] size: DWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608375014378939096
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.3237093197173655 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601047265818730565
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  610  <|@ instruction r8|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  612  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  614  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 2] size: DWORD <|@ <|@
      nr  616  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  618  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  622  <|@ instruction r11|DWORD = LEA address: [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605957610921207775
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576134352261649510
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  662  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594378547460811208
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  700  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  722  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  724  <|@ instruction r10|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  726  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  728  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction MOV x: [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  766  <|@ instruction MOV x: [rsi|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  768  <|@ instruction rcx|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  772  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction INC value: [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  778  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587026159545039280
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction MOV x: [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr  810  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  812  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] // MoveResolver resolve mapping <|@ <|@
      nr  822  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction MOV x: [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr  842  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  844  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-54579|0xffffffffffff2acd] // MoveResolver resolve mapping <|@ <|@
      nr  854  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  874  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  876  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@10010b69 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction MOV x: [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   38  <|@ instruction MOV x: [rsi|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   40  <|@ instruction MOV x: [rsi|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.047637855530058615 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction r10|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction r10|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr   64  <|@ instruction r11|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction MOV x: [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction CMP x: rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  128  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr  130  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  160  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction r10|DWORD = LEA address: [rax|DWORD - 16] size: DWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037918881428452
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.19966822189770994 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728355569134986
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  296  <|@ instruction r8|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  300  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 2] size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  304  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  306  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  308  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  312  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 5] size: DWORD <|@ <|@
      nr  314  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  316  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 6] size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  320  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 7] size: DWORD <|@ <|@
      nr  322  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  324  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  326  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  328  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 9] size: DWORD <|@ <|@
      nr  330  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  332  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 10] size: DWORD <|@ <|@
      nr  334  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  336  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 11] size: DWORD <|@ <|@
      nr  338  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  340  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 12] size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  344  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 13] size: DWORD <|@ <|@
      nr  346  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  348  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 14] size: DWORD <|@ <|@
      nr  350  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  352  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 15] size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  356  <|@ instruction r11|DWORD = LEA address: [r11|DWORD + 16] size: DWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  396  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  426  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.14462118087187847 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction r10|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  448  <|@ instruction r10|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr  450  <|@ instruction r11|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction MOV x: [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  512  <|@ instruction CMP x: rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  514  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr  516  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605957610921207776
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576134352261649511
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  546  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction r10|DWORD = LEA address: [rax|DWORD - 4] size: DWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608375014378939096
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.3237093197173655 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601047265818730565
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  610  <|@ instruction r8|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  612  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  614  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 2] size: DWORD <|@ <|@
      nr  616  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  618  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  622  <|@ instruction r11|DWORD = LEA address: [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605957610921207775
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576134352261649510
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  662  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594378547460811208
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  700  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  722  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  724  <|@ instruction r10|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  726  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  728  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction MOV x: [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  766  <|@ instruction MOV x: [rsi|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  768  <|@ instruction rcx|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  772  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction INC value: [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  778  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587026159545039280
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction MOV x: [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr  810  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  812  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] // MoveResolver resolve mapping <|@ <|@
      nr  822  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction MOV x: [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr  842  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  844  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-54579|0xffffffffffff2acd] // MoveResolver resolve mapping <|@ <|@
      nr  854  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  874  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  876  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@10010b69 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction MOV x: [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   38  <|@ instruction MOV x: [rsi|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   40  <|@ instruction MOV x: [rsi|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.047637855530058615 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction r10|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction r10|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr   64  <|@ instruction r11|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction MOV x: [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction CMP x: rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  128  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr  130  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  160  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction r10|DWORD = LEA address: [rax|DWORD - 16] size: DWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037918881428452
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.19966822189770994 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728355569134986
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  296  <|@ instruction r8|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  300  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 2] size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  304  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  306  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  308  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  312  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 5] size: DWORD <|@ <|@
      nr  314  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  316  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 6] size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  320  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 7] size: DWORD <|@ <|@
      nr  322  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  324  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  326  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  328  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 9] size: DWORD <|@ <|@
      nr  330  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  332  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 10] size: DWORD <|@ <|@
      nr  334  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  336  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 11] size: DWORD <|@ <|@
      nr  338  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  340  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 12] size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  344  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 13] size: DWORD <|@ <|@
      nr  346  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  348  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 14] size: DWORD <|@ <|@
      nr  350  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  352  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 15] size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  356  <|@ instruction r11|DWORD = LEA address: [r11|DWORD + 16] size: DWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  396  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  426  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.14462118087187847 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction r10|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  448  <|@ instruction r10|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr  450  <|@ instruction r11|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction MOV x: [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  512  <|@ instruction CMP x: rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  514  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr  516  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605957610921207776
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576134352261649511
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  546  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction r10|DWORD = LEA address: [rax|DWORD - 4] size: DWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608375014378939096
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.3237093197173655 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601047265818730565
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  610  <|@ instruction r8|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  612  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  614  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 2] size: DWORD <|@ <|@
      nr  616  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  618  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  622  <|@ instruction r11|DWORD = LEA address: [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605957610921207775
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576134352261649510
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  662  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594378547460811208
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  700  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  722  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  724  <|@ instruction r10|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  726  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  728  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction MOV x: [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  766  <|@ instruction MOV x: [rsi|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  768  <|@ instruction rcx|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  772  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction INC value: [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  778  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587026159545039280
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction MOV x: [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr  810  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  812  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] // MoveResolver resolve mapping <|@ <|@
      nr  822  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction MOV x: [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr  842  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  844  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-54579|0xffffffffffff2acd] // MoveResolver resolve mapping <|@ <|@
      nr  854  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  874  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  876  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@10010b69 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction MOV x: [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   38  <|@ instruction MOV x: [rsi|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   40  <|@ instruction MOV x: [rsi|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.047637855530058615 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction r10|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction r10|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr   64  <|@ instruction r11|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction MOV x: [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction CMP x: rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  128  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr  130  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  160  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction r10|DWORD = LEA address: [rax|DWORD - 16] size: DWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728355569134986
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  296  <|@ instruction r8|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  300  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 2] size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  304  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  306  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  308  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  312  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 5] size: DWORD <|@ <|@
      nr  314  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  316  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 6] size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  320  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 7] size: DWORD <|@ <|@
      nr  322  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  324  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  326  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  328  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 9] size: DWORD <|@ <|@
      nr  330  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  332  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 10] size: DWORD <|@ <|@
      nr  334  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  336  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 11] size: DWORD <|@ <|@
      nr  338  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  340  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 12] size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  344  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 13] size: DWORD <|@ <|@
      nr  346  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  348  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 14] size: DWORD <|@ <|@
      nr  350  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  352  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 15] size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  356  <|@ instruction r11|DWORD = LEA address: [r11|DWORD + 16] size: DWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037918881428452
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.19966822189770994 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  396  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  426  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.14462118087187847 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction r10|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  448  <|@ instruction r10|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr  450  <|@ instruction r11|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction MOV x: [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  512  <|@ instruction CMP x: rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  514  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr  516  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576134352261649511
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  546  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605957610921207776
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction r10|DWORD = LEA address: [rax|DWORD - 4] size: DWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601047265818730565
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  610  <|@ instruction r8|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  612  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  614  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 2] size: DWORD <|@ <|@
      nr  616  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  618  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  622  <|@ instruction r11|DWORD = LEA address: [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608375014378939096
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.3237093197173655 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576134352261649510
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  662  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605957610921207775
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  700  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  722  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  724  <|@ instruction r10|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  726  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  728  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction MOV x: [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  766  <|@ instruction MOV x: [rsi|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  768  <|@ instruction rcx|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  772  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction INC value: [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  778  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594378547460811208
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587026159545039280
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction MOV x: [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr  842  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  844  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction MOV x: [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr  810  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  812  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] // MoveResolver resolve mapping <|@ <|@
      nr  822  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  874  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  876  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-54579|0xffffffffffff2acd] // MoveResolver resolve mapping <|@ <|@
      nr  854  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@10010b69 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction MOV x: [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   38  <|@ instruction MOV x: [rsi|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   40  <|@ instruction MOV x: [rsi|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.047637855530058615 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction r10|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction r10|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr   64  <|@ instruction r11|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction MOV x: [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction CMP x: rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  128  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr  130  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  160  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction r10|DWORD = LEA address: [rax|DWORD - 16] size: DWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728355569134986
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  296  <|@ instruction r8|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  300  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 2] size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  304  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  306  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  308  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  312  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 5] size: DWORD <|@ <|@
      nr  314  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  316  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 6] size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  320  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 7] size: DWORD <|@ <|@
      nr  322  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  324  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  326  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  328  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 9] size: DWORD <|@ <|@
      nr  330  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  332  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 10] size: DWORD <|@ <|@
      nr  334  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  336  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 11] size: DWORD <|@ <|@
      nr  338  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  340  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 12] size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  344  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 13] size: DWORD <|@ <|@
      nr  346  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  348  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 14] size: DWORD <|@ <|@
      nr  350  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  352  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 15] size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  356  <|@ instruction r11|DWORD = LEA address: [r11|DWORD + 16] size: DWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037918881428452
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.19966822189770994 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  396  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  426  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.14462118087187847 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction r10|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  448  <|@ instruction r10|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr  450  <|@ instruction r11|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction MOV x: [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  512  <|@ instruction CMP x: rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  514  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr  516  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576134352261649511
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  546  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605957610921207776
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction r10|DWORD = LEA address: [rax|DWORD - 4] size: DWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601047265818730565
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  610  <|@ instruction r8|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  612  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  614  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 2] size: DWORD <|@ <|@
      nr  616  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  618  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  622  <|@ instruction r11|DWORD = LEA address: [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608375014378939096
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.3237093197173655 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576134352261649510
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  662  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605957610921207775
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  700  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  722  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  724  <|@ instruction r10|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  726  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  728  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction MOV x: [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  766  <|@ instruction MOV x: [rsi|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  768  <|@ instruction rcx|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  772  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction INC value: [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  778  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594378547460811208
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587026159545039280
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction MOV x: [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr  842  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  844  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction MOV x: [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr  810  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  812  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] // MoveResolver resolve mapping <|@ <|@
      nr  822  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  874  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  876  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-54579|0xffffffffffff2acd] // MoveResolver resolve mapping <|@ <|@
      nr  854  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@10010b69 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction MOV x: [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   38  <|@ instruction MOV x: [rsi|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   40  <|@ instruction MOV x: [rsi|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.047637855530058615 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction r10|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction r10|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr   64  <|@ instruction r11|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction MOV x: [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction CMP x: rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  128  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr  130  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  160  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction r10|DWORD = LEA address: [rax|DWORD - 16] size: DWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728355569134986
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  296  <|@ instruction r8|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  300  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 2] size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  304  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  306  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  308  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  312  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 5] size: DWORD <|@ <|@
      nr  314  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  316  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 6] size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  320  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 7] size: DWORD <|@ <|@
      nr  322  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  324  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  326  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  328  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 9] size: DWORD <|@ <|@
      nr  330  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  332  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 10] size: DWORD <|@ <|@
      nr  334  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  336  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 11] size: DWORD <|@ <|@
      nr  338  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  340  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 12] size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  344  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 13] size: DWORD <|@ <|@
      nr  346  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  348  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 14] size: DWORD <|@ <|@
      nr  350  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  352  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 15] size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  356  <|@ instruction r11|DWORD = LEA address: [r11|DWORD + 16] size: DWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037918881428452
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.19966822189770994 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  396  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  426  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.14462118087187847 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction r10|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  448  <|@ instruction r10|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr  450  <|@ instruction r11|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction MOV x: [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  512  <|@ instruction CMP x: rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  514  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr  516  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576134352261649511
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  546  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605957610921207776
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction r10|DWORD = LEA address: [rax|DWORD - 4] size: DWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601047265818730565
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  610  <|@ instruction r8|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  612  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  614  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 2] size: DWORD <|@ <|@
      nr  616  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  618  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  622  <|@ instruction r11|DWORD = LEA address: [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608375014378939096
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.3237093197173655 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576134352261649510
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  662  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605957610921207775
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  700  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  722  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  724  <|@ instruction r10|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  726  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  728  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction MOV x: [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  766  <|@ instruction MOV x: [rsi|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  768  <|@ instruction rcx|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  772  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction INC value: [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  778  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594378547460811208
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587026159545039280
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction MOV x: [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr  842  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  844  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction MOV x: [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr  810  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  812  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] // MoveResolver resolve mapping <|@ <|@
      nr  822  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  874  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  876  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-54579|0xffffffffffff2acd] // MoveResolver resolve mapping <|@ <|@
      nr  854  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@10010b69 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction MOV x: [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   38  <|@ instruction MOV x: [rsi|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   40  <|@ instruction MOV x: [rsi|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.047637855530058615 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction r10|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction r10|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr   64  <|@ instruction r11|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction MOV x: [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction CMP x: rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  128  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr  130  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  160  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction r10|DWORD = LEA address: [rax|DWORD - 16] size: DWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728355569134986
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  296  <|@ instruction r8|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  300  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 2] size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  304  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  306  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  308  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  312  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 5] size: DWORD <|@ <|@
      nr  314  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  316  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 6] size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  320  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 7] size: DWORD <|@ <|@
      nr  322  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  324  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  326  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  328  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 9] size: DWORD <|@ <|@
      nr  330  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  332  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 10] size: DWORD <|@ <|@
      nr  334  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  336  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 11] size: DWORD <|@ <|@
      nr  338  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  340  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 12] size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  344  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 13] size: DWORD <|@ <|@
      nr  346  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  348  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 14] size: DWORD <|@ <|@
      nr  350  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  352  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 15] size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  356  <|@ instruction r11|DWORD = LEA address: [r11|DWORD + 16] size: DWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037918881428452
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.19966822189770994 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  396  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  426  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.14462118087187847 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction r10|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  448  <|@ instruction r10|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr  450  <|@ instruction r11|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction MOV x: [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  512  <|@ instruction CMP x: rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  514  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr  516  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576134352261649511
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  546  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605957610921207776
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction r10|DWORD = LEA address: [rax|DWORD - 4] size: DWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601047265818730565
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  610  <|@ instruction r8|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  612  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  614  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 2] size: DWORD <|@ <|@
      nr  616  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  618  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  622  <|@ instruction r11|DWORD = LEA address: [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608375014378939096
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.3237093197173655 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576134352261649510
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  662  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605957610921207775
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  700  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  722  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  724  <|@ instruction r10|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  726  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  728  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction MOV x: [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  766  <|@ instruction MOV x: [rsi|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  768  <|@ instruction rcx|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  772  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction INC value: [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  778  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594378547460811208
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587026159545039280
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction MOV x: [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr  842  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  844  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction MOV x: [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr  810  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  812  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] // MoveResolver resolve mapping <|@ <|@
      nr  822  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  874  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  876  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-54579|0xffffffffffff2acd] // MoveResolver resolve mapping <|@ <|@
      nr  854  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@10010b69 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction MOV x: [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   38  <|@ instruction MOV x: [rsi|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   40  <|@ instruction MOV x: [rsi|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.047637855530058615 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction r10|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction r10|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr   64  <|@ instruction r11|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B39" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction MOV x: [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  126  <|@ instruction CMP x: rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  128  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr  130  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B7" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  160  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  162  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" 
    successors "B8" "B9" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction r10|DWORD = LEA address: [rax|DWORD - 16] size: DWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B10" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597728355569134986
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  296  <|@ instruction r8|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  300  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 2] size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  304  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  306  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  308  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  312  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 5] size: DWORD <|@ <|@
      nr  314  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  316  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 6] size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  320  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 7] size: DWORD <|@ <|@
      nr  322  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  324  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 8] size: DWORD <|@ <|@
      nr  326  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  328  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 9] size: DWORD <|@ <|@
      nr  330  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  332  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 10] size: DWORD <|@ <|@
      nr  334  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  336  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 11] size: DWORD <|@ <|@
      nr  338  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  340  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 12] size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  344  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 13] size: DWORD <|@ <|@
      nr  346  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  348  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 14] size: DWORD <|@ <|@
      nr  350  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  352  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 15] size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  356  <|@ instruction r11|DWORD = LEA address: [r11|DWORD + 16] size: DWORD <|@ <|@
      nr  358  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" 
    successors "B11" "B12" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608037918881428452
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.19966822189770994 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699070248391260
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  396  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606839982775491759
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4606753335143189605
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B1" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  426  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:39] <|@ <|@
      nr  428  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.14462118087187847 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction r10|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  448  <|@ instruction r10|QWORD = MOVSXD value: r10|DWORD size: QWORD <|@ <|@
      nr  450  <|@ instruction r11|QWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B38" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" 
    successors "B23" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction MOV x: [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  512  <|@ instruction CMP x: rax|DWORD y: 3 size: DWORD <|@ <|@
      nr  514  <|@ instruction r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<| <|@ <|@
      nr  516  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B23" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576134352261649511
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  546  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B24" 
    successors "B24" "B25" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4605957610921207776
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4605879787007448462
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction r10|DWORD = LEA address: [rax|DWORD - 4] size: DWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B26" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4601047265818730565
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  610  <|@ instruction r8|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  612  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  614  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 2] size: DWORD <|@ <|@
      nr  616  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  618  <|@ instruction r8|DWORD = LEA address: [r11|DWORD + 3] size: DWORD <|@ <|@
      nr  620  <|@ instruction MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  622  <|@ instruction r11|DWORD = LEA address: [r11|DWORD + 4] size: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" 
    successors "B27" "B28" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608375014378939096
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.3237093197173655 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576134352261649510
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  662  <|@ instruction r11|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B30" "B31" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4605957610921207775
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4605879787007448461
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B17" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  700  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction CMPCONSTBRANCH x: [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  722  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  724  <|@ instruction r10|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 20] size: DWORD <|@ <|@
      nr  726  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:63] <|@ <|@
      nr  728  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction MOV x: [rsi|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  766  <|@ instruction MOV x: [rsi|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr  768  <|@ instruction rcx|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  772  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction INC value: [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  778  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  780  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4602249735515819109
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B22" 
    xhandlers
    flags 
    probability 4601376187380077966
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594378547460811208
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B16" 
    xhandlers
    flags 
    probability 4587026159545039280
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction MOV x: [r15|QWORD + 1156] y: -47643 size: DWORD <|@ <|@
      nr  842  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr  844  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:39] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  792  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction MOV x: [r15|QWORD + 1156] y: -41243 size: DWORD <|@ <|@
      nr  810  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1304 size: QWORD <|@ <|@
      nr  812  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed] // MoveResolver resolve mapping <|@ <|@
      nr  822  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  874  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  876  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:63] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  846  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-54579|0xffffffffffff2acd] // MoveResolver resolve mapping <|@ <|@
      nr  854  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_m1     
     2: putfield      #2          // first:int
     5: aload_0       
     6: iconst_0      
     7: putfield      #3          // last:int
    10: aload_0       
    11: iconst_m1     
    12: putfield      #4          // oldLast:int
    15: iconst_0      
    16: istore_1      
    17: iload_1       
    18: aload_0       
    19: getfield      #12         // groups:int[]
    22: arraylength   
    23: if_icmpge     39
    26: aload_0       
    27: getfield      #12         // groups:int[]
    30: iload_1       
    31: iconst_m1     
    32: iastore       
    33: iinc          
    36: goto          17
    39: iconst_0      
    40: istore_1      
    41: iload_1       
    42: aload_0       
    43: getfield      #14         // locals:int[]
    46: arraylength   
    47: if_icmpge     63
    50: aload_0       
    51: getfield      #14         // locals:int[]
    54: iload_1       
    55: iconst_m1     
    56: iastore       
    57: iinc          
    60: goto          41
    63: iconst_0      
    64: istore_1      
    65: iload_1       
    66: aload_0       
    67: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    70: arraylength   
    71: if_icmpge     98
    74: aload_0       
    75: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    78: iload_1       
    79: aaload        
    80: ifnull        92
    83: aload_0       
    84: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    87: iload_1       
    88: aaload        
    89: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    92: iinc          
    95: goto          65
    98: aload_0       
    99: iconst_0      
   100: putfield      #5          // lastAppendPosition:int
   103: aload_0       
   104: iconst_0      
   105: putfield      #33         // from:int
   108: aload_0       
   109: aload_0       
   110: invokevirtual #34         // getTextLength:()int
   113: putfield      #35         // to:int
   116: aload_0       
   117: dup           
   118: getfield      #31         // modCount:int
   121: iconst_1      
   122: iadd          
   123: putfield      #31         // modCount:int
   126: aload_0       
   127: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc00000007677f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec189041817f20000000000f85a804000090909090909090909090909048896c24108b4e388b04cd0c000000c7461cffffffffc7462000000000c74624ffffffff85c00f84d003000090909090909090448bd041ffca4d63d2448bd84d3bda0f879c0300009090909083f8020f83d90300009090909090909090909090909090c704cd10000000ffffffff83f80341ba02000000440f42d048c1e10341bb01000000e9210000006666660f1f8400000000006666669090909090909042c7449910ffffffff41ffc390909090453bd37fe69090909090448d50f0e91c0100006666660f1f84000000000066666690660f1f840000000000909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909042c7449910ffffffff458bc341ffc042c7448110ffffffff458d430242c7448110ffffffff458d430342c7448110ffffffff458d430442c7448110ffffffff458d430542c7448110ffffffff458d430642c7448110ffffffff458d430742c7448110ffffffff458d430842c7448110ffffffff458d430942c7448110ffffffff458d430a42c7448110ffffffff458d430b42c7448110ffffffff458d430c42c7448110ffffffff458d430d42c7448110ffffffff458d430e42c7448110ffffffff458d430f42c7448110ffffffff458d5b1090909090453bd30f8feffeffff909090e9180000000f1f8000000000909090909042c7449910ffffffff41ffc390909090413bc37fe69090909090909090908b4e408b04cd0c00000085c00f84c501000090909090909090448bd041ffca4d63d2448bd84d3bda0f87a10100009090909083f8020f83ac0100009090909090909090909090909090c704cd10000000ffffffff83f80341ba02000000440f42d048c1e10341bb01000000e91e000000660f1f84000000000066666690909090909042c7449910ffffffff41ffc390909090453bd37fe69090909090448d50fce95c0000006666660f1f84000000000066666690660f1f840000000000909090909090909090909090909042c7449910ffffffff458bc341ffc042c7448110ffffffff458d430242c7448110ffffffff458d430342c7448110ffffffff458d5b0490909090453bd37fb3909090e91c0000006666660f1f840000000000909090909042c7449910ffffffff41ffc390909090413bc37fe690909090909090908b4e3c813ccd08000000addeadde0f851a01000090909090909090908b46448b04c50c000000448b14cd14000000468b14d50c00000085c00f85be00000090909090909090909090909090909090c7462800000000c7460c000000000fbe0ccd1000000041d3ea44895610ff462c488bc6488b6c24104883c418493ba7500400000f87c9000000c3909090e96cfcffff909090e967feffff909090e95bffffff909090e913feffff9090909090909041c78784040000e545ffff49c7879004000018080000e8000000000f1f8400000000009090909090909041c78784040000e55effff49c7879004000018050000e8000000000f1f84000000000090909049c7c31400000041baedb6feff90909090909090458997840400004d899f90040000e8000000000f1f84000000000090909049c7c39402000041bacd2affffebcc48896c2410e800000000e949fbfffff4488d0d23ffffff49898f68040000e9fbfafffff441c78784040000f570ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f551ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f52bffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f538ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f524ffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f678da335c8, value=140082329178240]:0x7f6775785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 75 28 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@10010b69 slotKind: QWORD  <||@
  Comment 75 32 rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 56] size: DWORD  <||@
  Comment 78 34 rax|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 78 [rcx:0, rsi:0]at java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 78 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 85 36 MOV x: [rsi|QWORD[.] + 28] y: -1 size: DWORD  <||@
  Comment 92 38 MOV x: [rsi|QWORD[.] + 32] y: 0 size: DWORD  <||@
  Comment 99 40 MOV x: [rsi|QWORD[.] + 36] y: -1 size: DWORD  <||@
  Comment 106 42 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.047637855530058615 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 114 block B2 null  <||@
  Comment 114 44 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 114 46 NOP  <||@
  Comment 115 48 NOP  <||@
  Comment 116 50 NOP  <||@
  Comment 117 52 NOP  <||@
  Comment 118 54 NOP  <||@
  Comment 119 56 NOP  <||@
  Comment 120 58 NOP  <||@
  Comment 121 60 r10|DWORD = DEC value: rax|DWORD size: DWORD  <||@
  Comment 127 62 r10|QWORD = MOVSXD value: r10|DWORD size: QWORD  <||@
  Comment 130 64 r11|QWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 133 66 CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD  <||@
  Comment 142 block B4 null  <||@
  Comment 142 68 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 142 70 NOP  <||@
  Comment 143 72 NOP  <||@
  Comment 144 74 NOP  <||@
  Comment 145 76 NOP  <||@
  Comment 146 78 CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null  <||@
  Comment 155 block B5 null  <||@
  Comment 155 80 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 155 82 NOP  <||@
  Comment 156 84 NOP  <||@
  Comment 157 86 NOP  <||@
  Comment 158 88 JUMP ~outgoingValues: [] destination: B5 -> B6  <||@
  Comment 158 block B6 null  <||@
  Comment 158 100 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 158 102 NOP  <||@
  Comment 159 104 NOP  <||@
  Comment 160 106 NOP  <||@
  Comment 161 108 NOP  <||@
  Comment 162 110 NOP  <||@
  Comment 163 112 NOP  <||@
  Comment 164 114 NOP  <||@
  Comment 165 116 NOP  <||@
  Comment 166 118 NOP  <||@
  Comment 167 120 NOP  <||@
  Comment 168 122 NOP  <||@
  Comment 169 124 MOV x: [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD  <||@
  Comment 180 126 CMP x: rax|DWORD y: 3 size: DWORD  <||@
  Comment 183 128 r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<|  <||@
  Comment 193 130 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3  <||@
  Comment 197 -1 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 203 132 JUMP ~outgoingValues: [] destination: B6 -> B7  <||@
  Comment 208 block B8 loop 0 depth 1 header:13|LoopBegin  <||@
  Comment 208 146 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 224 148 NOP  <||@
  Comment 225 150 NOP  <||@
  Comment 226 152 NOP  <||@
  Comment 227 154 NOP  <||@
  Comment 228 156 NOP  <||@
  Comment 229 158 MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 238 160 r11|DWORD = INC value: r11|DWORD size: DWORD  <||@
  Comment 241 162 JUMP ~outgoingValues: [] destination: B8 -> B7  <||@
  Comment 241 block B7 loop 0 depth 1 header:13|LoopBegin  <||@
  Comment 241 134 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 241 136 NOP  <||@
  Comment 242 138 NOP  <||@
  Comment 243 140 NOP  <||@
  Comment 244 142 NOP  <||@
  Comment 245 144 CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD  <||@
  Comment 250 block B9 null  <||@
  Comment 250 164 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 250 166 NOP  <||@
  Comment 251 168 NOP  <||@
  Comment 252 170 NOP  <||@
  Comment 253 172 NOP  <||@
  Comment 254 174 NOP  <||@
  Comment 255 176 r10|DWORD = LEA address: [rax|DWORD - 16] size: DWORD  <||@
  Comment 259 178 JUMP ~outgoingValues: [] destination: B9 -> B10  <||@
  Comment 264 block B11 loop 1 depth 1 header:334|LoopBegin  <||@
  Comment 264 192 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 288 194 NOP  <||@
  Comment 289 196 NOP  <||@
  Comment 290 198 NOP  <||@
  Comment 291 200 NOP  <||@
  Comment 292 202 NOP  <||@
  Comment 293 204 NOP  <||@
  Comment 294 206 NOP  <||@
  Comment 295 208 NOP  <||@
  Comment 296 210 NOP  <||@
  Comment 297 212 NOP  <||@
  Comment 298 214 NOP  <||@
  Comment 299 216 NOP  <||@
  Comment 300 218 NOP  <||@
  Comment 301 220 NOP  <||@
  Comment 302 222 NOP  <||@
  Comment 303 224 NOP  <||@
  Comment 304 226 NOP  <||@
  Comment 305 228 NOP  <||@
  Comment 306 230 NOP  <||@
  Comment 307 232 NOP  <||@
  Comment 308 234 NOP  <||@
  Comment 309 236 NOP  <||@
  Comment 310 238 NOP  <||@
  Comment 311 240 NOP  <||@
  Comment 312 242 NOP  <||@
  Comment 313 244 NOP  <||@
  Comment 314 246 NOP  <||@
  Comment 315 248 NOP  <||@
  Comment 316 250 NOP  <||@
  Comment 317 252 NOP  <||@
  Comment 318 254 NOP  <||@
  Comment 319 256 NOP  <||@
  Comment 320 258 NOP  <||@
  Comment 321 260 NOP  <||@
  Comment 322 262 NOP  <||@
  Comment 323 264 NOP  <||@
  Comment 324 266 NOP  <||@
  Comment 325 268 NOP  <||@
  Comment 326 270 NOP  <||@
  Comment 327 272 NOP  <||@
  Comment 328 274 NOP  <||@
  Comment 329 276 NOP  <||@
  Comment 330 278 NOP  <||@
  Comment 331 280 NOP  <||@
  Comment 332 282 NOP  <||@
  Comment 333 284 NOP  <||@
  Comment 334 286 NOP  <||@
  Comment 335 288 NOP  <||@
  Comment 336 290 NOP  <||@
  Comment 337 292 NOP  <||@
  Comment 338 294 MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 347 296 r8|DWORD = INC value: r11|DWORD size: DWORD  <||@
  Comment 353 298 MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 362 300 r8|DWORD = LEA address: [r11|DWORD + 2] size: DWORD  <||@
  Comment 366 302 MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 375 304 r8|DWORD = LEA address: [r11|DWORD + 3] size: DWORD  <||@
  Comment 379 306 MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 388 308 r8|DWORD = LEA address: [r11|DWORD + 4] size: DWORD  <||@
  Comment 392 310 MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 401 312 r8|DWORD = LEA address: [r11|DWORD + 5] size: DWORD  <||@
  Comment 405 314 MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 414 316 r8|DWORD = LEA address: [r11|DWORD + 6] size: DWORD  <||@
  Comment 418 318 MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 427 320 r8|DWORD = LEA address: [r11|DWORD + 7] size: DWORD  <||@
  Comment 431 322 MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 440 324 r8|DWORD = LEA address: [r11|DWORD + 8] size: DWORD  <||@
  Comment 444 326 MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 453 328 r8|DWORD = LEA address: [r11|DWORD + 9] size: DWORD  <||@
  Comment 457 330 MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 466 332 r8|DWORD = LEA address: [r11|DWORD + 10] size: DWORD  <||@
  Comment 470 334 MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 479 336 r8|DWORD = LEA address: [r11|DWORD + 11] size: DWORD  <||@
  Comment 483 338 MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 492 340 r8|DWORD = LEA address: [r11|DWORD + 12] size: DWORD  <||@
  Comment 496 342 MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 505 344 r8|DWORD = LEA address: [r11|DWORD + 13] size: DWORD  <||@
  Comment 509 346 MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 518 348 r8|DWORD = LEA address: [r11|DWORD + 14] size: DWORD  <||@
  Comment 522 350 MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 531 352 r8|DWORD = LEA address: [r11|DWORD + 15] size: DWORD  <||@
  Comment 535 354 MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 544 356 r11|DWORD = LEA address: [r11|DWORD + 16] size: DWORD  <||@
  Comment 548 358 JUMP ~outgoingValues: [] destination: B11 -> B10  <||@
  Comment 548 block B10 loop 1 depth 1 header:334|LoopBegin  <||@
  Comment 548 180 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 548 182 NOP  <||@
  Comment 549 184 NOP  <||@
  Comment 550 186 NOP  <||@
  Comment 551 188 NOP  <||@
  Comment 552 190 CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.19966822189770994 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD  <||@
  Comment 561 block B12 null  <||@
  Comment 561 360 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 561 362 NOP  <||@
  Comment 562 364 NOP  <||@
  Comment 563 366 NOP  <||@
  Comment 564 368 JUMP ~outgoingValues: [] destination: B12 -> B13  <||@
  Comment 569 block B14 loop 2 depth 1 header:354|LoopBegin  <||@
  Comment 569 382 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 576 384 NOP  <||@
  Comment 577 386 NOP  <||@
  Comment 578 388 NOP  <||@
  Comment 579 390 NOP  <||@
  Comment 580 392 NOP  <||@
  Comment 581 394 MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 590 396 r11|DWORD = INC value: r11|DWORD size: DWORD  <||@
  Comment 593 398 JUMP ~outgoingValues: [] destination: B14 -> B13  <||@
  Comment 593 block B13 loop 2 depth 1 header:354|LoopBegin  <||@
  Comment 593 370 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 593 372 NOP  <||@
  Comment 594 374 NOP  <||@
  Comment 595 376 NOP  <||@
  Comment 596 378 NOP  <||@
  Comment 597 380 CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD  <||@
  Comment 602 block B15 null  <||@
  Comment 602 400 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 602 402 NOP  <||@
  Comment 603 404 NOP  <||@
  Comment 604 406 NOP  <||@
  Comment 605 408 JUMP ~outgoingValues: [] destination: B15 -> B16  <||@
  Comment 605 block B16 null  <||@
  Comment 605 410 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 605 412 NOP  <||@
  Comment 606 414 NOP  <||@
  Comment 607 416 NOP  <||@
  Comment 608 418 NOP  <||@
  Comment 609 420 NOP  <||@
  Comment 610 422 NOP  <||@
  Comment 611 424 rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 64] size: DWORD  <||@
  Comment 614 426 rax|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:39]  <||@
  Comment 614 [rcx:0, rsi:0]at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 614 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 621 428 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.14462118087187847 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD  <||@
  Comment 629 block B18 null  <||@
  Comment 629 430 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 629 432 NOP  <||@
  Comment 630 434 NOP  <||@
  Comment 631 436 NOP  <||@
  Comment 632 438 NOP  <||@
  Comment 633 440 NOP  <||@
  Comment 634 442 NOP  <||@
  Comment 635 444 NOP  <||@
  Comment 636 446 r10|DWORD = DEC value: rax|DWORD size: DWORD  <||@
  Comment 642 448 r10|QWORD = MOVSXD value: r10|DWORD size: QWORD  <||@
  Comment 645 450 r11|QWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 648 452 CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD  <||@
  Comment 657 block B20 null  <||@
  Comment 657 454 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 657 456 NOP  <||@
  Comment 658 458 NOP  <||@
  Comment 659 460 NOP  <||@
  Comment 660 462 NOP  <||@
  Comment 661 464 CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null  <||@
  Comment 670 block B21 null  <||@
  Comment 670 466 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 670 468 NOP  <||@
  Comment 671 470 NOP  <||@
  Comment 672 472 NOP  <||@
  Comment 673 474 JUMP ~outgoingValues: [] destination: B21 -> B22  <||@
  Comment 673 block B22 null  <||@
  Comment 673 486 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 673 488 NOP  <||@
  Comment 674 490 NOP  <||@
  Comment 675 492 NOP  <||@
  Comment 676 494 NOP  <||@
  Comment 677 496 NOP  <||@
  Comment 678 498 NOP  <||@
  Comment 679 500 NOP  <||@
  Comment 680 502 NOP  <||@
  Comment 681 504 NOP  <||@
  Comment 682 506 NOP  <||@
  Comment 683 508 NOP  <||@
  Comment 684 510 MOV x: [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD  <||@
  Comment 695 512 CMP x: rax|DWORD y: 3 size: DWORD  <||@
  Comment 698 514 r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<|  <||@
  Comment 708 516 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3  <||@
  Comment 712 -1 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 718 518 JUMP ~outgoingValues: [] destination: B22 -> B23  <||@
  Comment 723 block B24 loop 3 depth 1 header:32|LoopBegin  <||@
  Comment 723 532 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 736 534 NOP  <||@
  Comment 737 536 NOP  <||@
  Comment 738 538 NOP  <||@
  Comment 739 540 NOP  <||@
  Comment 740 542 NOP  <||@
  Comment 741 544 MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 750 546 r11|DWORD = INC value: r11|DWORD size: DWORD  <||@
  Comment 753 548 JUMP ~outgoingValues: [] destination: B24 -> B23  <||@
  Comment 753 block B23 loop 3 depth 1 header:32|LoopBegin  <||@
  Comment 753 520 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 753 522 NOP  <||@
  Comment 754 524 NOP  <||@
  Comment 755 526 NOP  <||@
  Comment 756 528 NOP  <||@
  Comment 757 530 CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD  <||@
  Comment 762 block B25 null  <||@
  Comment 762 550 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 762 552 NOP  <||@
  Comment 763 554 NOP  <||@
  Comment 764 556 NOP  <||@
  Comment 765 558 NOP  <||@
  Comment 766 560 NOP  <||@
  Comment 767 562 r10|DWORD = LEA address: [rax|DWORD - 4] size: DWORD  <||@
  Comment 771 564 JUMP ~outgoingValues: [] destination: B25 -> B26  <||@
  Comment 776 block B27 loop 4 depth 1 header:378|LoopBegin  <||@
  Comment 776 578 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 800 580 NOP  <||@
  Comment 801 582 NOP  <||@
  Comment 802 584 NOP  <||@
  Comment 803 586 NOP  <||@
  Comment 804 588 NOP  <||@
  Comment 805 590 NOP  <||@
  Comment 806 592 NOP  <||@
  Comment 807 594 NOP  <||@
  Comment 808 596 NOP  <||@
  Comment 809 598 NOP  <||@
  Comment 810 600 NOP  <||@
  Comment 811 602 NOP  <||@
  Comment 812 604 NOP  <||@
  Comment 813 606 NOP  <||@
  Comment 814 608 MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 823 610 r8|DWORD = INC value: r11|DWORD size: DWORD  <||@
  Comment 829 612 MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 838 614 r8|DWORD = LEA address: [r11|DWORD + 2] size: DWORD  <||@
  Comment 842 616 MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 851 618 r8|DWORD = LEA address: [r11|DWORD + 3] size: DWORD  <||@
  Comment 855 620 MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 864 622 r11|DWORD = LEA address: [r11|DWORD + 4] size: DWORD  <||@
  Comment 868 624 JUMP ~outgoingValues: [] destination: B27 -> B26  <||@
  Comment 868 block B26 loop 4 depth 1 header:378|LoopBegin  <||@
  Comment 868 566 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 868 568 NOP  <||@
  Comment 869 570 NOP  <||@
  Comment 870 572 NOP  <||@
  Comment 871 574 NOP  <||@
  Comment 872 576 CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.3237093197173655 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD  <||@
  Comment 877 block B28 null  <||@
  Comment 877 626 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 877 628 NOP  <||@
  Comment 878 630 NOP  <||@
  Comment 879 632 NOP  <||@
  Comment 880 634 JUMP ~outgoingValues: [] destination: B28 -> B29  <||@
  Comment 885 block B30 loop 5 depth 1 header:398|LoopBegin  <||@
  Comment 885 648 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 896 650 NOP  <||@
  Comment 897 652 NOP  <||@
  Comment 898 654 NOP  <||@
  Comment 899 656 NOP  <||@
  Comment 900 658 NOP  <||@
  Comment 901 660 MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 910 662 r11|DWORD = INC value: r11|DWORD size: DWORD  <||@
  Comment 913 664 JUMP ~outgoingValues: [] destination: B30 -> B29  <||@
  Comment 913 block B29 loop 5 depth 1 header:398|LoopBegin  <||@
  Comment 913 636 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 913 638 NOP  <||@
  Comment 914 640 NOP  <||@
  Comment 915 642 NOP  <||@
  Comment 916 644 NOP  <||@
  Comment 917 646 CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD  <||@
  Comment 922 block B31 null  <||@
  Comment 922 666 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 922 668 NOP  <||@
  Comment 923 670 NOP  <||@
  Comment 924 672 NOP  <||@
  Comment 925 674 JUMP ~outgoingValues: [] destination: B31 -> B32  <||@
  Comment 925 block B32 null  <||@
  Comment 925 686 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 925 688 NOP  <||@
  Comment 926 690 NOP  <||@
  Comment 927 692 NOP  <||@
  Comment 928 694 NOP  <||@
  Comment 929 696 NOP  <||@
  Comment 930 698 rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD  <||@
  Comment 933 700 CMPCONSTBRANCH x: [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63]  <||@
  Comment 933 [rcx:0, rsi:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 933 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 933 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 950 block B33 null  <||@
  Comment 950 702 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 950 704 NOP  <||@
  Comment 951 706 NOP  <||@
  Comment 952 708 NOP  <||@
  Comment 953 710 NOP  <||@
  Comment 954 712 NOP  <||@
  Comment 955 714 NOP  <||@
  Comment 956 716 NOP  <||@
  Comment 957 718 NOP  <||@
  Comment 958 720 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 68] size: DWORD  <||@
  Comment 961 722 rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:63]  <||@
  Comment 961 [rcx:0, rsi:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 961 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 968 724 r10|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 976 726 r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:63]  <||@
  Comment 976 [rcx:0, rsi:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 976 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 984 728 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD  <||@
  Comment 992 block B34 null  <||@
  Comment 992 730 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 992 732 NOP  <||@
  Comment 993 734 NOP  <||@
  Comment 994 736 NOP  <||@
  Comment 995 738 NOP  <||@
  Comment 996 740 NOP  <||@
  Comment 997 742 NOP  <||@
  Comment 998 744 NOP  <||@
  Comment 999 746 NOP  <||@
  Comment 1000 748 NOP  <||@
  Comment 1001 750 NOP  <||@
  Comment 1002 752 NOP  <||@
  Comment 1003 754 NOP  <||@
  Comment 1004 756 NOP  <||@
  Comment 1005 758 NOP  <||@
  Comment 1006 760 NOP  <||@
  Comment 1007 762 NOP  <||@
  Comment 1008 764 MOV x: [rsi|QWORD[.] + 40] y: 0 size: DWORD  <||@
  Comment 1015 766 MOV x: [rsi|QWORD[.] + 12] y: 0 size: DWORD  <||@
  Comment 1022 768 rcx|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1030 772 r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1033 774 MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 1037 776 INC value: [rsi|QWORD[.] + 44] size: DWORD  <||@
  Comment 1040 778 rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1043 780 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93  <||@
  Comment 1052 POLL_RETURN_FAR  <||@
  Comment 1066 block B3 null  <||@
  Comment 1066 90 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1066 92 NOP  <||@
  Comment 1067 94 NOP  <||@
  Comment 1068 96 NOP  <||@
  Comment 1069 98 JUMP ~outgoingValues: [] destination: B3 -> B6  <||@
  Comment 1074 block B19 null  <||@
  Comment 1074 476 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1074 478 NOP  <||@
  Comment 1075 480 NOP  <||@
  Comment 1076 482 NOP  <||@
  Comment 1077 484 JUMP ~outgoingValues: [] destination: B19 -> B22  <||@
  Comment 1082 block B17 null  <||@
  Comment 1082 676 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1082 678 NOP  <||@
  Comment 1083 680 NOP  <||@
  Comment 1084 682 NOP  <||@
  Comment 1085 684 JUMP ~outgoingValues: [] destination: B17 -> B32  <||@
  Comment 1090 block B1 null  <||@
  Comment 1090 782 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1090 784 NOP  <||@
  Comment 1091 786 NOP  <||@
  Comment 1092 788 NOP  <||@
  Comment 1093 790 JUMP ~outgoingValues: [] destination: B1 -> B16  <||@
  Comment 1098 block B38 null  <||@
  Comment 1098 824 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1098 826 NOP  <||@
  Comment 1099 828 NOP  <||@
  Comment 1100 830 NOP  <||@
  Comment 1101 832 NOP  <||@
  Comment 1102 834 NOP  <||@
  Comment 1103 836 NOP  <||@
  Comment 1104 838 NOP  <||@
  Comment 1105 840 MOV x: [r15|QWORD + 1156] y: -47643 size: DWORD  <||@
  Comment 1116 842 MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD  <||@
  Comment 1127 844 DEOPT info [bci:39]  <||@
  Comment 1127 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f678da335a8, value=140082329203066]:0x7f677578b17a}  <||@
  Comment 1132 [rsi:0]at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1140 block B39 null  <||@
  Comment 1140 792 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1140 794 NOP  <||@
  Comment 1141 796 NOP  <||@
  Comment 1142 798 NOP  <||@
  Comment 1143 800 NOP  <||@
  Comment 1144 802 NOP  <||@
  Comment 1145 804 NOP  <||@
  Comment 1146 806 NOP  <||@
  Comment 1147 808 MOV x: [r15|QWORD + 1156] y: -41243 size: DWORD  <||@
  Comment 1158 810 MOV x: [r15|QWORD + 1168] y: 1304 size: QWORD  <||@
  Comment 1169 812 DEOPT info [bci:15]  <||@
  Comment 1169 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f678da335a8, value=140082329203066]:0x7f677578b17a}  <||@
  Comment 1174 [rsi:0]at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1182 block B35 null  <||@
  Comment 1182 814 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1182 816 NOP  <||@
  Comment 1183 818 NOP  <||@
  Comment 1184 820 NOP  <||@
  Comment 1185 -1 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 1192 -1 r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed]  <||@
  Comment 1198 822 JUMP ~outgoingValues: [] destination: B35 -> B37  <||@
  Comment 1198 block B37 null  <||@
  Comment 1198 856 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1198 858 NOP  <||@
  Comment 1199 860 NOP  <||@
  Comment 1200 862 NOP  <||@
  Comment 1201 864 NOP  <||@
  Comment 1202 866 NOP  <||@
  Comment 1203 868 NOP  <||@
  Comment 1204 870 NOP  <||@
  Comment 1205 872 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 1212 874 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 1219 876 DEOPT info [bci:63]  <||@
  Comment 1219 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f678da335a8, value=140082329203066]:0x7f677578b17a}  <||@
  Comment 1224 [rsi:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1232 block B36 null  <||@
  Comment 1232 846 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1232 848 NOP  <||@
  Comment 1233 850 NOP  <||@
  Comment 1234 852 NOP  <||@
  Comment 1235 -1 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 1242 -1 r10|DWORD = MOVE input: int[-54579|0xffffffffffff2acd]  <||@
  Comment 1248 854 JUMP ~outgoingValues: [] destination: B36 -> B37  <||@
  Comment 1255 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f678da33598, value=140082329072160]:0x7f677576b220}  <||@
  Comment 1280 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f678da335a0, value=140082329206784]:0x7f677578c000}  <||@
  Comment 1308 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f678da335a8, value=140082329203066]:0x7f677578b17a}  <||@
  Comment 1313 [rcx:0, rsi:0]at java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1343 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f678da335a8, value=140082329203066]:0x7f677578b17a}  <||@
  Comment 1348 [rcx:0, rsi:0]at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1378 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f678da335a8, value=140082329203066]:0x7f677578b17a}  <||@
  Comment 1383 [rcx:0, rsi:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1413 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f678da335a8, value=140082329203066]:0x7f677578b17a}  <||@
  Comment 1418 [rcx:0, rsi:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1448 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f678da335a8, value=140082329203066]:0x7f677578b17a}  <||@
  Comment 1453 [rcx:0, rsi:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1461 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f67758c4e80:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1461 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1467 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f678da335b8, value=140082329202464]:0x7f677578af20}  <||@
  Comment 1467 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-3647[java.util.regex.Matcher.reset()]"
  method "HotSpotCompilation-3647[java.util.regex.Matcher.reset()]"
  date 1724248922158
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f67764f9ba0 448b560849bc00000007677f00004d03d44d33e4493bc20f85c3b428ff66669089842400c0feff4883ec189041817f20030000000f85a804000090909090909090909090909048896c24108b4e388b04cd0c000000c7461cffffffffc7462000000000c74624ffffffff85c00f84d003000090909090909090448bd041ffca4d63d2448bd84d3bda0f879c0300009090909083f8020f83d90300009090909090909090909090909090c704cd10000000ffffffff83f80341ba02000000440f42d048c1e10341bb01000000e9210000006666660f1f8400000000006666669090909090909042c7449910ffffffff41ffc390909090453bd37fe69090909090448d50f0e91c0100006666660f1f84000000000066666690660f1f840000000000909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909042c7449910ffffffff458bc341ffc042c7448110ffffffff458d430242c7448110ffffffff458d430342c7448110ffffffff458d430442c7448110ffffffff458d430542c7448110ffffffff458d430642c7448110ffffffff458d430742c7448110ffffffff458d430842c7448110ffffffff458d430942c7448110ffffffff458d430a42c7448110ffffffff458d430b42c7448110ffffffff458d430c42c7448110ffffffff458d430d42c7448110ffffffff458d430e42c7448110ffffffff458d430f42c7448110ffffffff458d5b1090909090453bd30f8feffeffff909090e9180000000f1f8000000000909090909042c7449910ffffffff41ffc390909090413bc37fe69090909090909090908b4e408b04cd0c00000085c00f84c501000090909090909090448bd041ffca4d63d2448bd84d3bda0f87a10100009090909083f8020f83ac0100009090909090909090909090909090c704cd10000000ffffffff83f80341ba02000000440f42d048c1e10341bb01000000e91e000000660f1f84000000000066666690909090909042c7449910ffffffff41ffc390909090453bd37fe69090909090448d50fce95c0000006666660f1f84000000000066666690660f1f840000000000909090909090909090909090909042c7449910ffffffff458bc341ffc042c7448110ffffffff458d430242c7448110ffffffff458d430342c7448110ffffffff458d5b0490909090453bd37fb3909090e91c0000006666660f1f840000000000909090909042c7449910ffffffff41ffc390909090413bc37fe690909090909090908b4e3c813ccd08000000d8e800000f851a01000090909090909090908b46448b04c50c000000448b14cd14000000468b14d50c00000085c00f85be00000090909090909090909090909090909090c7462800000000c7460c000000000fbe0ccd1000000041d3ea44895610ff462c488bc6488b6c24104883c418493ba7500400000f87c9000000c3909090e96cfcffff909090e967feffff909090e95bffffff909090e913feffff9090909090909041c78784040000e545ffff49c7879004000018080000e86e1129ff0f1f8400000000009090909090909041c78784040000e55effff49c7879004000018050000e8441129ff0f1f84000000000090909049c7c31400000041baedb6feff90909090909090458997840400004d899f90040000e8121129ff0f1f84000000000090909049c7c39402000041bacd2affffebcc48896c2410e8941127ffe949fbfffff4488d0d23ffffff49898f68040000e95b1f29fff441c78784040000f570ffff49c7879004000000000000e8b91029ff0f1f84000000000041c78784040000f551ffff49c7879004000000000000e8961029ff0f1f84000000000041c78784040000f52bffff49c7879004000000000000e8731029ff0f1f84000000000041c78784040000f538ffff49c7879004000000000000e8501029ff0f1f84000000000041c78784040000f524ffff49c7879004000000000000e82d1029ff0f1f840000000000e826ad3cfff4e8c00d29fff4f4f4f4f4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f678da335c8, value=140082329178240]:0x7f6775785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 75 28 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@10010b69 slotKind: QWORD  <||@
  Comment 75 32 rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 56] size: DWORD  <||@
  Comment 78 34 rax|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 78 [rcx:0, rsi:0]at java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 78 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 85 36 MOV x: [rsi|QWORD[.] + 28] y: -1 size: DWORD  <||@
  Comment 92 38 MOV x: [rsi|QWORD[.] + 32] y: 0 size: DWORD  <||@
  Comment 99 40 MOV x: [rsi|QWORD[.] + 36] y: -1 size: DWORD  <||@
  Comment 106 42 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.047637855530058615 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 114 block B2 null  <||@
  Comment 114 44 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 114 46 NOP  <||@
  Comment 115 48 NOP  <||@
  Comment 116 50 NOP  <||@
  Comment 117 52 NOP  <||@
  Comment 118 54 NOP  <||@
  Comment 119 56 NOP  <||@
  Comment 120 58 NOP  <||@
  Comment 121 60 r10|DWORD = DEC value: rax|DWORD size: DWORD  <||@
  Comment 127 62 r10|QWORD = MOVSXD value: r10|DWORD size: QWORD  <||@
  Comment 130 64 r11|QWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 133 66 CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: QWORD  <||@
  Comment 142 block B4 null  <||@
  Comment 142 68 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 142 70 NOP  <||@
  Comment 143 72 NOP  <||@
  Comment 144 74 NOP  <||@
  Comment 145 76 NOP  <||@
  Comment 146 78 CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B4 -> B5 falseDestination: B4 -> B39 y: 2 size: DWORD inlinedY: null  <||@
  Comment 155 block B5 null  <||@
  Comment 155 80 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 155 82 NOP  <||@
  Comment 156 84 NOP  <||@
  Comment 157 86 NOP  <||@
  Comment 158 88 JUMP ~outgoingValues: [] destination: B5 -> B6  <||@
  Comment 158 block B6 null  <||@
  Comment 158 100 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 158 102 NOP  <||@
  Comment 159 104 NOP  <||@
  Comment 160 106 NOP  <||@
  Comment 161 108 NOP  <||@
  Comment 162 110 NOP  <||@
  Comment 163 112 NOP  <||@
  Comment 164 114 NOP  <||@
  Comment 165 116 NOP  <||@
  Comment 166 118 NOP  <||@
  Comment 167 120 NOP  <||@
  Comment 168 122 NOP  <||@
  Comment 169 124 MOV x: [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD  <||@
  Comment 180 126 CMP x: rax|DWORD y: 3 size: DWORD  <||@
  Comment 183 128 r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<|  <||@
  Comment 193 130 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3  <||@
  Comment 197 -1 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 203 132 JUMP ~outgoingValues: [] destination: B6 -> B7  <||@
  Comment 208 block B8 loop 0 depth 1 header:13|LoopBegin  <||@
  Comment 208 146 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 224 148 NOP  <||@
  Comment 225 150 NOP  <||@
  Comment 226 152 NOP  <||@
  Comment 227 154 NOP  <||@
  Comment 228 156 NOP  <||@
  Comment 229 158 MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 238 160 r11|DWORD = INC value: r11|DWORD size: DWORD  <||@
  Comment 241 162 JUMP ~outgoingValues: [] destination: B8 -> B7  <||@
  Comment 241 block B7 loop 0 depth 1 header:13|LoopBegin  <||@
  Comment 241 134 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 241 136 NOP  <||@
  Comment 242 138 NOP  <||@
  Comment 243 140 NOP  <||@
  Comment 244 142 NOP  <||@
  Comment 245 144 CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD  <||@
  Comment 250 block B9 null  <||@
  Comment 250 164 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 250 166 NOP  <||@
  Comment 251 168 NOP  <||@
  Comment 252 170 NOP  <||@
  Comment 253 172 NOP  <||@
  Comment 254 174 NOP  <||@
  Comment 255 176 r10|DWORD = LEA address: [rax|DWORD - 16] size: DWORD  <||@
  Comment 259 178 JUMP ~outgoingValues: [] destination: B9 -> B10  <||@
  Comment 264 block B11 loop 1 depth 1 header:334|LoopBegin  <||@
  Comment 264 192 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 288 194 NOP  <||@
  Comment 289 196 NOP  <||@
  Comment 290 198 NOP  <||@
  Comment 291 200 NOP  <||@
  Comment 292 202 NOP  <||@
  Comment 293 204 NOP  <||@
  Comment 294 206 NOP  <||@
  Comment 295 208 NOP  <||@
  Comment 296 210 NOP  <||@
  Comment 297 212 NOP  <||@
  Comment 298 214 NOP  <||@
  Comment 299 216 NOP  <||@
  Comment 300 218 NOP  <||@
  Comment 301 220 NOP  <||@
  Comment 302 222 NOP  <||@
  Comment 303 224 NOP  <||@
  Comment 304 226 NOP  <||@
  Comment 305 228 NOP  <||@
  Comment 306 230 NOP  <||@
  Comment 307 232 NOP  <||@
  Comment 308 234 NOP  <||@
  Comment 309 236 NOP  <||@
  Comment 310 238 NOP  <||@
  Comment 311 240 NOP  <||@
  Comment 312 242 NOP  <||@
  Comment 313 244 NOP  <||@
  Comment 314 246 NOP  <||@
  Comment 315 248 NOP  <||@
  Comment 316 250 NOP  <||@
  Comment 317 252 NOP  <||@
  Comment 318 254 NOP  <||@
  Comment 319 256 NOP  <||@
  Comment 320 258 NOP  <||@
  Comment 321 260 NOP  <||@
  Comment 322 262 NOP  <||@
  Comment 323 264 NOP  <||@
  Comment 324 266 NOP  <||@
  Comment 325 268 NOP  <||@
  Comment 326 270 NOP  <||@
  Comment 327 272 NOP  <||@
  Comment 328 274 NOP  <||@
  Comment 329 276 NOP  <||@
  Comment 330 278 NOP  <||@
  Comment 331 280 NOP  <||@
  Comment 332 282 NOP  <||@
  Comment 333 284 NOP  <||@
  Comment 334 286 NOP  <||@
  Comment 335 288 NOP  <||@
  Comment 336 290 NOP  <||@
  Comment 337 292 NOP  <||@
  Comment 338 294 MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 347 296 r8|DWORD = INC value: r11|DWORD size: DWORD  <||@
  Comment 353 298 MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 362 300 r8|DWORD = LEA address: [r11|DWORD + 2] size: DWORD  <||@
  Comment 366 302 MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 375 304 r8|DWORD = LEA address: [r11|DWORD + 3] size: DWORD  <||@
  Comment 379 306 MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 388 308 r8|DWORD = LEA address: [r11|DWORD + 4] size: DWORD  <||@
  Comment 392 310 MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 401 312 r8|DWORD = LEA address: [r11|DWORD + 5] size: DWORD  <||@
  Comment 405 314 MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 414 316 r8|DWORD = LEA address: [r11|DWORD + 6] size: DWORD  <||@
  Comment 418 318 MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 427 320 r8|DWORD = LEA address: [r11|DWORD + 7] size: DWORD  <||@
  Comment 431 322 MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 440 324 r8|DWORD = LEA address: [r11|DWORD + 8] size: DWORD  <||@
  Comment 444 326 MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 453 328 r8|DWORD = LEA address: [r11|DWORD + 9] size: DWORD  <||@
  Comment 457 330 MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 466 332 r8|DWORD = LEA address: [r11|DWORD + 10] size: DWORD  <||@
  Comment 470 334 MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 479 336 r8|DWORD = LEA address: [r11|DWORD + 11] size: DWORD  <||@
  Comment 483 338 MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 492 340 r8|DWORD = LEA address: [r11|DWORD + 12] size: DWORD  <||@
  Comment 496 342 MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 505 344 r8|DWORD = LEA address: [r11|DWORD + 13] size: DWORD  <||@
  Comment 509 346 MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 518 348 r8|DWORD = LEA address: [r11|DWORD + 14] size: DWORD  <||@
  Comment 522 350 MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 531 352 r8|DWORD = LEA address: [r11|DWORD + 15] size: DWORD  <||@
  Comment 535 354 MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 544 356 r11|DWORD = LEA address: [r11|DWORD + 16] size: DWORD  <||@
  Comment 548 358 JUMP ~outgoingValues: [] destination: B11 -> B10  <||@
  Comment 548 block B10 loop 1 depth 1 header:334|LoopBegin  <||@
  Comment 548 180 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 548 182 NOP  <||@
  Comment 549 184 NOP  <||@
  Comment 550 186 NOP  <||@
  Comment 551 188 NOP  <||@
  Comment 552 190 CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.19966822189770994 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B12 size: DWORD  <||@
  Comment 561 block B12 null  <||@
  Comment 561 360 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 561 362 NOP  <||@
  Comment 562 364 NOP  <||@
  Comment 563 366 NOP  <||@
  Comment 564 368 JUMP ~outgoingValues: [] destination: B12 -> B13  <||@
  Comment 569 block B14 loop 2 depth 1 header:354|LoopBegin  <||@
  Comment 569 382 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 576 384 NOP  <||@
  Comment 577 386 NOP  <||@
  Comment 578 388 NOP  <||@
  Comment 579 390 NOP  <||@
  Comment 580 392 NOP  <||@
  Comment 581 394 MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 590 396 r11|DWORD = INC value: r11|DWORD size: DWORD  <||@
  Comment 593 398 JUMP ~outgoingValues: [] destination: B14 -> B13  <||@
  Comment 593 block B13 loop 2 depth 1 header:354|LoopBegin  <||@
  Comment 593 370 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 593 372 NOP  <||@
  Comment 594 374 NOP  <||@
  Comment 595 376 NOP  <||@
  Comment 596 378 NOP  <||@
  Comment 597 380 CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: DWORD  <||@
  Comment 602 block B15 null  <||@
  Comment 602 400 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 602 402 NOP  <||@
  Comment 603 404 NOP  <||@
  Comment 604 406 NOP  <||@
  Comment 605 408 JUMP ~outgoingValues: [] destination: B15 -> B16  <||@
  Comment 605 block B16 null  <||@
  Comment 605 410 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 605 412 NOP  <||@
  Comment 606 414 NOP  <||@
  Comment 607 416 NOP  <||@
  Comment 608 418 NOP  <||@
  Comment 609 420 NOP  <||@
  Comment 610 422 NOP  <||@
  Comment 611 424 rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 64] size: DWORD  <||@
  Comment 614 426 rax|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:39]  <||@
  Comment 614 [rcx:0, rsi:0]at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 614 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 621 428 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.14462118087187847 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: DWORD  <||@
  Comment 629 block B18 null  <||@
  Comment 629 430 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 629 432 NOP  <||@
  Comment 630 434 NOP  <||@
  Comment 631 436 NOP  <||@
  Comment 632 438 NOP  <||@
  Comment 633 440 NOP  <||@
  Comment 634 442 NOP  <||@
  Comment 635 444 NOP  <||@
  Comment 636 446 r10|DWORD = DEC value: rax|DWORD size: DWORD  <||@
  Comment 642 448 r10|QWORD = MOVSXD value: r10|DWORD size: QWORD  <||@
  Comment 645 450 r11|QWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 648 452 CMPBRANCH (x: r11|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD  <||@
  Comment 657 block B20 null  <||@
  Comment 657 454 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 657 456 NOP  <||@
  Comment 658 458 NOP  <||@
  Comment 659 460 NOP  <||@
  Comment 660 462 NOP  <||@
  Comment 661 464 CMPCONSTBRANCH x: rax|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B38 y: 2 size: DWORD inlinedY: null  <||@
  Comment 670 block B21 null  <||@
  Comment 670 466 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 670 468 NOP  <||@
  Comment 671 470 NOP  <||@
  Comment 672 472 NOP  <||@
  Comment 673 474 JUMP ~outgoingValues: [] destination: B21 -> B22  <||@
  Comment 673 block B22 null  <||@
  Comment 673 486 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 673 488 NOP  <||@
  Comment 674 490 NOP  <||@
  Comment 675 492 NOP  <||@
  Comment 676 494 NOP  <||@
  Comment 677 496 NOP  <||@
  Comment 678 498 NOP  <||@
  Comment 679 500 NOP  <||@
  Comment 680 502 NOP  <||@
  Comment 681 504 NOP  <||@
  Comment 682 506 NOP  <||@
  Comment 683 508 NOP  <||@
  Comment 684 510 MOV x: [rcx|DWORD[_] * 8 + 16] y: -1 size: DWORD  <||@
  Comment 695 512 CMP x: rax|DWORD y: 3 size: DWORD  <||@
  Comment 698 514 r10|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rax|DWORD) condition: |<|  <||@
  Comment 708 516 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@38102065 encoding: base: 0 shift: 3  <||@
  Comment 712 -1 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 718 518 JUMP ~outgoingValues: [] destination: B22 -> B23  <||@
  Comment 723 block B24 loop 3 depth 1 header:32|LoopBegin  <||@
  Comment 723 532 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 736 534 NOP  <||@
  Comment 737 536 NOP  <||@
  Comment 738 538 NOP  <||@
  Comment 739 540 NOP  <||@
  Comment 740 542 NOP  <||@
  Comment 741 544 MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 750 546 r11|DWORD = INC value: r11|DWORD size: DWORD  <||@
  Comment 753 548 JUMP ~outgoingValues: [] destination: B24 -> B23  <||@
  Comment 753 block B23 loop 3 depth 1 header:32|LoopBegin  <||@
  Comment 753 520 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 753 522 NOP  <||@
  Comment 754 524 NOP  <||@
  Comment 755 526 NOP  <||@
  Comment 756 528 NOP  <||@
  Comment 757 530 CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: DWORD  <||@
  Comment 762 block B25 null  <||@
  Comment 762 550 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 762 552 NOP  <||@
  Comment 763 554 NOP  <||@
  Comment 764 556 NOP  <||@
  Comment 765 558 NOP  <||@
  Comment 766 560 NOP  <||@
  Comment 767 562 r10|DWORD = LEA address: [rax|DWORD - 4] size: DWORD  <||@
  Comment 771 564 JUMP ~outgoingValues: [] destination: B25 -> B26  <||@
  Comment 776 block B27 loop 4 depth 1 header:378|LoopBegin  <||@
  Comment 776 578 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 800 580 NOP  <||@
  Comment 801 582 NOP  <||@
  Comment 802 584 NOP  <||@
  Comment 803 586 NOP  <||@
  Comment 804 588 NOP  <||@
  Comment 805 590 NOP  <||@
  Comment 806 592 NOP  <||@
  Comment 807 594 NOP  <||@
  Comment 808 596 NOP  <||@
  Comment 809 598 NOP  <||@
  Comment 810 600 NOP  <||@
  Comment 811 602 NOP  <||@
  Comment 812 604 NOP  <||@
  Comment 813 606 NOP  <||@
  Comment 814 608 MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 823 610 r8|DWORD = INC value: r11|DWORD size: DWORD  <||@
  Comment 829 612 MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 838 614 r8|DWORD = LEA address: [r11|DWORD + 2] size: DWORD  <||@
  Comment 842 616 MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 851 618 r8|DWORD = LEA address: [r11|DWORD + 3] size: DWORD  <||@
  Comment 855 620 MOV x: [rcx|QWORD[.] + r8|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 864 622 r11|DWORD = LEA address: [r11|DWORD + 4] size: DWORD  <||@
  Comment 868 624 JUMP ~outgoingValues: [] destination: B27 -> B26  <||@
  Comment 868 block B26 loop 4 depth 1 header:378|LoopBegin  <||@
  Comment 868 566 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 868 568 NOP  <||@
  Comment 869 570 NOP  <||@
  Comment 870 572 NOP  <||@
  Comment 871 574 NOP  <||@
  Comment 872 576 CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.3237093197173655 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 size: DWORD  <||@
  Comment 877 block B28 null  <||@
  Comment 877 626 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 877 628 NOP  <||@
  Comment 878 630 NOP  <||@
  Comment 879 632 NOP  <||@
  Comment 880 634 JUMP ~outgoingValues: [] destination: B28 -> B29  <||@
  Comment 885 block B30 loop 5 depth 1 header:398|LoopBegin  <||@
  Comment 885 648 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 896 650 NOP  <||@
  Comment 897 652 NOP  <||@
  Comment 898 654 NOP  <||@
  Comment 899 656 NOP  <||@
  Comment 900 658 NOP  <||@
  Comment 901 660 MOV x: [rcx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 910 662 r11|DWORD = INC value: r11|DWORD size: DWORD  <||@
  Comment 913 664 JUMP ~outgoingValues: [] destination: B30 -> B29  <||@
  Comment 913 block B29 loop 5 depth 1 header:398|LoopBegin  <||@
  Comment 913 636 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 913 638 NOP  <||@
  Comment 914 640 NOP  <||@
  Comment 915 642 NOP  <||@
  Comment 916 644 NOP  <||@
  Comment 917 646 CMPBRANCH (x: rax|DWORD, y: r11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD  <||@
  Comment 922 block B31 null  <||@
  Comment 922 666 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 922 668 NOP  <||@
  Comment 923 670 NOP  <||@
  Comment 924 672 NOP  <||@
  Comment 925 674 JUMP ~outgoingValues: [] destination: B31 -> B32  <||@
  Comment 925 block B32 null  <||@
  Comment 925 686 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 925 688 NOP  <||@
  Comment 926 690 NOP  <||@
  Comment 927 692 NOP  <||@
  Comment 928 694 NOP  <||@
  Comment 929 696 NOP  <||@
  Comment 930 698 rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD  <||@
  Comment 933 700 CMPCONSTBRANCH x: [rcx|DWORD[_] * 8 + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63]  <||@
  Comment 933 [rcx:0, rsi:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 933 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 933 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 950 block B33 null  <||@
  Comment 950 702 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 950 704 NOP  <||@
  Comment 951 706 NOP  <||@
  Comment 952 708 NOP  <||@
  Comment 953 710 NOP  <||@
  Comment 954 712 NOP  <||@
  Comment 955 714 NOP  <||@
  Comment 956 716 NOP  <||@
  Comment 957 718 NOP  <||@
  Comment 958 720 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 68] size: DWORD  <||@
  Comment 961 722 rax|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:63]  <||@
  Comment 961 [rcx:0, rsi:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 961 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 968 724 r10|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 20] size: DWORD  <||@
  Comment 976 726 r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:63]  <||@
  Comment 976 [rcx:0, rsi:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 976 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 984 728 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD  <||@
  Comment 992 block B34 null  <||@
  Comment 992 730 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 992 732 NOP  <||@
  Comment 993 734 NOP  <||@
  Comment 994 736 NOP  <||@
  Comment 995 738 NOP  <||@
  Comment 996 740 NOP  <||@
  Comment 997 742 NOP  <||@
  Comment 998 744 NOP  <||@
  Comment 999 746 NOP  <||@
  Comment 1000 748 NOP  <||@
  Comment 1001 750 NOP  <||@
  Comment 1002 752 NOP  <||@
  Comment 1003 754 NOP  <||@
  Comment 1004 756 NOP  <||@
  Comment 1005 758 NOP  <||@
  Comment 1006 760 NOP  <||@
  Comment 1007 762 NOP  <||@
  Comment 1008 764 MOV x: [rsi|QWORD[.] + 40] y: 0 size: DWORD  <||@
  Comment 1015 766 MOV x: [rsi|QWORD[.] + 12] y: 0 size: DWORD  <||@
  Comment 1022 768 rcx|DWORD = MOVSXB input: [rcx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1030 772 r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1033 774 MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 1037 776 INC value: [rsi|QWORD[.] + 44] size: DWORD  <||@
  Comment 1040 778 rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1043 780 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93  <||@
  Comment 1052 POLL_RETURN_FAR  <||@
  Comment 1066 block B3 null  <||@
  Comment 1066 90 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1066 92 NOP  <||@
  Comment 1067 94 NOP  <||@
  Comment 1068 96 NOP  <||@
  Comment 1069 98 JUMP ~outgoingValues: [] destination: B3 -> B6  <||@
  Comment 1074 block B19 null  <||@
  Comment 1074 476 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1074 478 NOP  <||@
  Comment 1075 480 NOP  <||@
  Comment 1076 482 NOP  <||@
  Comment 1077 484 JUMP ~outgoingValues: [] destination: B19 -> B22  <||@
  Comment 1082 block B17 null  <||@
  Comment 1082 676 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1082 678 NOP  <||@
  Comment 1083 680 NOP  <||@
  Comment 1084 682 NOP  <||@
  Comment 1085 684 JUMP ~outgoingValues: [] destination: B17 -> B32  <||@
  Comment 1090 block B1 null  <||@
  Comment 1090 782 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1090 784 NOP  <||@
  Comment 1091 786 NOP  <||@
  Comment 1092 788 NOP  <||@
  Comment 1093 790 JUMP ~outgoingValues: [] destination: B1 -> B16  <||@
  Comment 1098 block B38 null  <||@
  Comment 1098 824 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1098 826 NOP  <||@
  Comment 1099 828 NOP  <||@
  Comment 1100 830 NOP  <||@
  Comment 1101 832 NOP  <||@
  Comment 1102 834 NOP  <||@
  Comment 1103 836 NOP  <||@
  Comment 1104 838 NOP  <||@
  Comment 1105 840 MOV x: [r15|QWORD + 1156] y: -47643 size: DWORD  <||@
  Comment 1116 842 MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD  <||@
  Comment 1127 844 DEOPT info [bci:39]  <||@
  Comment 1127 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f678da335a8, value=140082329203066]:0x7f677578b17a}  <||@
  Comment 1132 [rsi:0]at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1140 block B39 null  <||@
  Comment 1140 792 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1140 794 NOP  <||@
  Comment 1141 796 NOP  <||@
  Comment 1142 798 NOP  <||@
  Comment 1143 800 NOP  <||@
  Comment 1144 802 NOP  <||@
  Comment 1145 804 NOP  <||@
  Comment 1146 806 NOP  <||@
  Comment 1147 808 MOV x: [r15|QWORD + 1156] y: -41243 size: DWORD  <||@
  Comment 1158 810 MOV x: [r15|QWORD + 1168] y: 1304 size: QWORD  <||@
  Comment 1169 812 DEOPT info [bci:15]  <||@
  Comment 1169 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f678da335a8, value=140082329203066]:0x7f677578b17a}  <||@
  Comment 1174 [rsi:0]at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 15, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1182 block B35 null  <||@
  Comment 1182 814 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1182 816 NOP  <||@
  Comment 1183 818 NOP  <||@
  Comment 1184 820 NOP  <||@
  Comment 1185 -1 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 1192 -1 r10|DWORD = MOVE input: int[-84243|0xfffffffffffeb6ed]  <||@
  Comment 1198 822 JUMP ~outgoingValues: [] destination: B35 -> B37  <||@
  Comment 1198 block B37 null  <||@
  Comment 1198 856 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1198 858 NOP  <||@
  Comment 1199 860 NOP  <||@
  Comment 1200 862 NOP  <||@
  Comment 1201 864 NOP  <||@
  Comment 1202 866 NOP  <||@
  Comment 1203 868 NOP  <||@
  Comment 1204 870 NOP  <||@
  Comment 1205 872 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 1212 874 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 1219 876 DEOPT info [bci:63]  <||@
  Comment 1219 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f678da335a8, value=140082329203066]:0x7f677578b17a}  <||@
  Comment 1224 [rsi:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1232 block B36 null  <||@
  Comment 1232 846 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1232 848 NOP  <||@
  Comment 1233 850 NOP  <||@
  Comment 1234 852 NOP  <||@
  Comment 1235 -1 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 1242 -1 r10|DWORD = MOVE input: int[-54579|0xffffffffffff2acd]  <||@
  Comment 1248 854 JUMP ~outgoingValues: [] destination: B36 -> B37  <||@
  Comment 1255 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f678da33598, value=140082329072160]:0x7f677576b220}  <||@
  Comment 1280 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f678da335a0, value=140082329206784]:0x7f677578c000}  <||@
  Comment 1308 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f678da335a8, value=140082329203066]:0x7f677578b17a}  <||@
  Comment 1313 [rcx:0, rsi:0]at java.util.regex.Matcher.reset(Matcher.java:448) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1343 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f678da335a8, value=140082329203066]:0x7f677578b17a}  <||@
  Comment 1348 [rcx:0, rsi:0]at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1378 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f678da335a8, value=140082329203066]:0x7f677578b17a}  <||@
  Comment 1383 [rcx:0, rsi:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1413 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f678da335a8, value=140082329203066]:0x7f677578b17a}  <||@
  Comment 1418 [rcx:0, rsi:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1448 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f678da335a8, value=140082329203066]:0x7f677578b17a}  <||@
  Comment 1453 [rcx:0, rsi:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 1461 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f67758c4e80:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1461 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1467 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f678da335b8, value=140082329202464]:0x7f677578af20}  <||@
  Comment 1467 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
