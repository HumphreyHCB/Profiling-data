begin_compilation
  name " HotSpotCompilation-1783[java.util.HashMap$HashIterator.nextNode()]"
  method "HotSpotCompilation-1783[java.util.HashMap$HashIterator.nextNode()]"
  date 1724248915424
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a290 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a290  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! java.util.HashMap$HashIterator
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v303 v304 v306 v307 ?16 ?68 v311 v263 v265 v267 v270 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a290 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a290 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$HashIterator.this$0
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1604) [bci: 6]
stamp: n java.util.HashMap
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v304 
lastLocationAccess: - 
=== Succesors ===
next: i291 
=== Usages ===
v309 v305 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v304 lastLocationAccess: - #next: i291  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.nextNode()>
localsSize: 3
locksSize: 0
sourceFile: HashMap.java
sourceLine: 1603
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v314 i291 a294 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a290 
=== Succesors ===
=== Usages ===
i291 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i291 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-28171|0xffffffffffff91f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1604) [bci: 9]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v305 
lastLocationAccess: - 
=== Succesors ===
next: a292 
=== Usages ===
v7 
=== Predecessor ===
a290 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v305 lastLocationAccess: - #next: a292  <|@  <|@
f <@~|@floating>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a290 
=== Succesors ===
=== Usages ===
a292 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a292 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.table
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 60]
stamp: n java.util.HashMap$Node[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v309 
lastLocationAccess: - 
=== Succesors ===
next: a293 
=== Usages ===
a132 v310 
=== Predecessor ===
i291 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v309 lastLocationAccess: - #next: a293  <|@  <|@
f <@~|@floating>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a293 v128 v154 v167 v264 v265 v266 v267 v268 v270 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a293 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$HashIterator.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 1]
stamp: n java.util.HashMap$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v303 
lastLocationAccess: - 
=== Succesors ===
next: a294 
=== Usages ===
a104 v120 v308 
=== Predecessor ===
a292 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v303 lastLocationAccess: - #next: a294  <|@  <|@
f <@~|@floating>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a293 
=== Succesors ===
=== Usages ===
a294 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a293  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a294 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node
barrierType: NONE
deoptReasonAndAction: int[-31243|0xffffffffffff85f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$Node.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 46]
stamp: n java.util.HashMap$Node
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v308 
lastLocationAccess: - 
=== Succesors ===
next: i295 
=== Usages ===
a126 v170 v128 
=== Predecessor ===
a293 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v308 lastLocationAccess: - #next: i295  <|@  <|@
f <@~|@floating>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i295 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i295 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$HashIterator.expectedModCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1604) [bci: 13]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v306 
lastLocationAccess: - 
=== Succesors ===
next: v234 
=== Usages ===
v7 
=== Predecessor ===
a294 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v306 lastLocationAccess: - #next: v234  <|@  <|@
f <@~|@floating>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1604) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i291 
y: i295 
=== Succesors ===
=== Usages ===
v234 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i291 y: i295  <|@  <|@
f <@*|@fixed>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1604) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v7 
=== Succesors ===
trueSuccessor: v232 
falseSuccessor: v233 
=== Usages ===
=== Predecessor ===
i295 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v7 #trueSuccessor: v232 #falseSuccessor: v233  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1606) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v262 
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v262  <|@  <|@
f <@~|@floating>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v120 v262 v263 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
precise: true
stamp: void
=== Inputs ===
address: v307 
value: - 
stateBefore: - 
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v307 value: - stateBefore: - #next: v120  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.current
location: HashMap$HashIterator.current
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v307 
lastLocationAccess: - 
value: a293 
stateAfter: - 
=== Succesors ===
next: v263 
=== Usages ===
=== Predecessor ===
v262 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v307 lastLocationAccess: - value: a293 stateAfter: - #next: v263  <|@  <|@
f <@~|@floating>@ <|@
tid a104 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 1]
op: Uncompress
stamp: a java.util.HashMap$Node
=== Inputs ===
value: a293 
=== Succesors ===
=== Usages ===
?68 v263 ?16 v55 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a293  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
precise: false
stamp: void
=== Inputs ===
address: v307 
value: a104 
object: a1 
=== Succesors ===
next: v264 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v307 value: a104 object: a1 #next: v264  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
precise: true
stamp: void
=== Inputs ===
address: v303 
value: - 
stateBefore: - 
=== Succesors ===
next: v128 
=== Usages ===
=== Predecessor ===
v263 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v303 value: - stateBefore: - #next: v128  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.next
location: HashMap$HashIterator.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v303 
lastLocationAccess: - 
value: a294 
stateAfter: - 
=== Succesors ===
next: v265 
=== Usages ===
=== Predecessor ===
v264 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v303 lastLocationAccess: - value: a294 stateAfter: - #next: v265  <|@  <|@
f <@~|@floating>@ <|@
tid a126 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 46]
op: Uncompress
stamp: a java.util.HashMap$Node
=== Inputs ===
value: a294 
=== Succesors ===
=== Usages ===
?16 v265 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a294  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
precise: false
stamp: void
=== Inputs ===
address: v303 
value: a126 
object: a1 
=== Succesors ===
next: v20 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v303 value: a126 object: a1 #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a294 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a294  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
profileData: PROFILED designatedSuccessorProbability: 0.873445133019547
stamp: void
=== Inputs ===
condition: v170 
=== Succesors ===
trueSuccessor: v19 
falseSuccessor: v18 
=== Usages ===
=== Predecessor ===
v265 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v170 #trueSuccessor: v19 #falseSuccessor: v18  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606042513896467226
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: i296 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i296  <|@  <|@
tid ?16 <|@
d <@d|@=== Debug Properties ===
bci: 53
bytecode: ifnonnull
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.nextNode()>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
sourceFile: HashMap.java
sourceLine: 1608
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a126 a1 - a104 
=== Succesors ===
=== Usages ===
v315 i296 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a126 a1 - a104  <|@  <|@
f <@~|@floating>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a292 
=== Succesors ===
=== Usages ===
i296 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a292  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i296 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-34315|0xffffffffffff79f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 73]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?16 
guard: - 
address: v310 
lastLocationAccess: - 
=== Succesors ===
next: i297 
=== Usages ===
v31 v58 v143 v207 j195 i196 v204 
=== Predecessor ===
v19 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?16 guard: - address: v310 lastLocationAccess: - #next: i297  <|@  <|@
f <@~|@floating>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i297 v141 v155 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i297 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$HashIterator.index
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 69]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v311 
lastLocationAccess: - 
=== Succesors ===
next: v61 
=== Usages ===
v58 i63 v143 j171 
=== Predecessor ===
i296 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v311 lastLocationAccess: - #next: v61  <|@  <|@
f <@~|@floating>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 74]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@e606376
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i297 
y: i296 
=== Succesors ===
=== Usages ===
v61 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i297 y: i296  <|@  <|@
f <@*|@fixed>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 74]
profileData: PROFILED designatedSuccessorProbability: 0.9805333640964465
stamp: void
=== Inputs ===
condition: v58 
=== Succesors ===
trueSuccessor: v60 
falseSuccessor: v59 
=== Usages ===
=== Predecessor ===
i297 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v58 #trueSuccessor: v60 #falseSuccessor: v59  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v225 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v225  <|@  <|@
f <@~|@floating>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@6021759f
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i297 
y: i296 
=== Succesors ===
=== Usages ===
v225 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i297 y: i296  <|@  <|@
f <@*|@fixed>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v143 
=== Succesors ===
trueSuccessor: v222 
falseSuccessor: v224 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v143 #trueSuccessor: v222 #falseSuccessor: v224  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B19" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v141 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v141  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 85]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i41 i63 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 86]
stamp: i32
=== Inputs ===
x: i297 
y: i40 
=== Succesors ===
=== Usages ===
v141 i87 i196 j300 v204 v207 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i297 y: i40  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.index
location: HashMap$HashIterator.index
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 87]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v311 
lastLocationAccess: - 
value: i63 
stateAfter: - 
=== Succesors ===
next: v266 
=== Usages ===
=== Predecessor ===
v222 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v311 lastLocationAccess: - value: i63 stateAfter: - #next: v266  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
precise: true
stamp: void
=== Inputs ===
address: v303 
value: - 
stateBefore: - 
=== Succesors ===
next: a298 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v303 value: - stateBefore: - #next: a298  <|@  <|@
f <@~|@floating>@ <|@
tid a132 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 60]
op: Uncompress
stamp: a java.util.HashMap$Node[]
=== Inputs ===
value: a292 
=== Succesors ===
=== Usages ===
v313 ?68 v312 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a292  <|@  <|@
f <@~|@floating>@ <|@
tid j171 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i297 
=== Succesors ===
=== Usages ===
v312 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i297  <|@  <|@
f <@~|@floating>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a132 
index: j171 
=== Succesors ===
=== Usages ===
a298 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a132 index: j171  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a298 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: n java.util.HashMap$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v312 
lastLocationAccess: - 
=== Succesors ===
next: v154 
=== Usages ===
a152 v172 v154 
=== Predecessor ===
v266 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v312 lastLocationAccess: - #next: v154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.next
location: HashMap$HashIterator.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v303 
lastLocationAccess: - 
value: a298 
stateAfter: - 
=== Succesors ===
next: v267 
=== Usages ===
=== Predecessor ===
a298 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v303 lastLocationAccess: - value: a298 stateAfter: - #next: v267  <|@  <|@
f <@~|@floating>@ <|@
tid a152 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
op: Uncompress
stamp: a java.util.HashMap$Node
=== Inputs ===
value: a298 
=== Succesors ===
=== Usages ===
?68 v267 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a298  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
precise: false
stamp: void
=== Inputs ===
address: v303 
value: a152 
object: a1 
=== Succesors ===
next: v73 
=== Usages ===
=== Predecessor ===
v154 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v303 value: a152 object: a1 #next: v73  <|@  <|@
f <@~|@floating>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a298 
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a298  <|@  <|@
f <@*|@fixed>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
profileData: PROFILED designatedSuccessorProbability: 0.8751451405213353
stamp: void
=== Inputs ===
condition: v172 
=== Succesors ===
trueSuccessor: v72 
falseSuccessor: v70 
=== Usages ===
=== Predecessor ===
v267 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v172 #trueSuccessor: v72 #falseSuccessor: v70  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B12" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: v280 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v280  <|@  <|@
f <@~|@floating>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@e606376
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i63 
y: i296 
=== Succesors ===
=== Usages ===
v280 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i63 y: i296  <|@  <|@
f <@*|@fixed>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v207 
=== Succesors ===
trueSuccessor: v279 
falseSuccessor: v276 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v207 #trueSuccessor: v279 #falseSuccessor: v276  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v288 
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v288  <|@  <|@
f <@~|@floating>@ <|@
tid i196 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i296 
y: i63 
=== Succesors ===
=== Usages ===
j199 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i296 y: i63  <|@  <|@
f <@~|@floating>@ <|@
tid j199 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i196 
=== Succesors ===
=== Usages ===
j241 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i196  <|@  <|@
f <@~|@floating>@ <|@
tid j300 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i63 
=== Succesors ===
=== Usages ===
j241 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i63  <|@  <|@
f <@~|@floating>@ <|@
tid j241 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483648 - 6442450942]
=== Inputs ===
x: j199 
y: j300 
=== Succesors ===
=== Usages ===
j242 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j199 y: j300  <|@  <|@
f <@~|@floating>@ <|@
tid j200 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1]
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j242 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j242 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483649 - 6442450941]
=== Inputs ===
x: j241 
y: j200 
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j241 y: j200  <|@  <|@
f <@~|@floating>@ <|@
tid j195 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i296 
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i296  <|@  <|@
f <@~|@floating>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@6021759f
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j242 
y: j195 
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j242 y: j195  <|@  <|@
f <@*|@fixed>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v203 
=== Succesors ===
trueSuccessor: v287 
falseSuccessor: v284 
=== Usages ===
=== Predecessor ===
v279 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v203 #trueSuccessor: v287 #falseSuccessor: v284  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v286 
=== Usages ===
=== Predecessor ===
v288 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v286  <|@  <|@
f <@~|@floating>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@6021759f
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i63 
y: i296 
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i63 y: i296  <|@  <|@
f <@*|@fixed>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v204 
=== Succesors ===
trueSuccessor: v277 
falseSuccessor: v285 
=== Usages ===
=== Predecessor ===
v287 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v204 #trueSuccessor: v277 #falseSuccessor: v285  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v275 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v275  <|@  <|@
f <@*|@fixed>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v273 
=== Predecessor ===
v277 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v283 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v283  <|@  <|@
f <@*|@fixed>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v281 
=== Predecessor ===
v285 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v282 
=== Usages ===
=== Predecessor ===
v288 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v282  <|@  <|@
f <@*|@fixed>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v281 
=== Predecessor ===
v284 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v282 v283 
=== Succesors ===
next: v227 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v282 v283 #next: v227  <|@  <|@
tid ?68 <|@
d <@d|@=== Debug Properties ===
bci: 95
bytecode: ifnull
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.nextNode()>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
sourceFile: HashMap.java
sourceLine: 1609
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a152 a1 a132 a104 
=== Succesors ===
=== Usages ===
v227 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a152 a1 a132 a104  <|@  <|@
f <@*|@fixed>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 158
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
reason: BoundsCheckException
speculation: {0x0000000000000798[index: 60, len: 24, hash: 0xddb2b6fd]: GuardMovement@3[HotSpotMethod<HashMap$HashIterator.nextNode()>, 68, BoundsCheckException]}
stamp: void
=== Inputs ===
stateBefore: ?68 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v281 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?68  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v274 
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v274  <|@  <|@
f <@*|@fixed>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v273 
=== Predecessor ===
v276 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v274 v275 
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v274 v275 #next: v26  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
v273 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B15" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617633362313920969
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 68]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v27 
values: i63 i41 
=== Succesors ===
=== Usages ===
v31 i41 j173 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v27 values: i63 i41  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 68]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v26 
=== Succesors ===
next: v38 
=== Usages ===
v35 v49 v51 i87 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v26 #next: v38  <|@  <|@
f <@~|@floating>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 74]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@e606376
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i87 
y: i296 
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i87 y: i296  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 74]
profileData: PROFILED designatedSuccessorProbability: 0.9805333640964465
stamp: void
=== Inputs ===
condition: v31 
=== Succesors ===
trueSuccessor: v37 
falseSuccessor: v35 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v31 #trueSuccessor: v37 #falseSuccessor: v35  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617517587535888605
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v155 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v155  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 86]
stamp: i32
=== Inputs ===
x: i87 
y: i40 
=== Succesors ===
=== Usages ===
v155 i87 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i87 y: i40  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.index
location: HashMap$HashIterator.index
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 87]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v311 
lastLocationAccess: - 
value: i41 
stateAfter: - 
=== Succesors ===
next: v268 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v311 lastLocationAccess: - value: i41 stateAfter: - #next: v268  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
precise: true
stamp: void
=== Inputs ===
address: v303 
value: - 
stateBefore: - 
=== Succesors ===
next: a299 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v303 value: - stateBefore: - #next: a299  <|@  <|@
f <@~|@floating>@ <|@
tid j173 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i87 
=== Succesors ===
=== Usages ===
v313 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i87  <|@  <|@
f <@~|@floating>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a132 
index: j173 
=== Succesors ===
=== Usages ===
a299 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a132 index: j173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a299 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: n java.util.HashMap$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v313 
lastLocationAccess: - 
=== Succesors ===
next: v167 
=== Usages ===
v167 v174 a269 
=== Predecessor ===
v268 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v313 lastLocationAccess: - #next: v167  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.next
location: HashMap$HashIterator.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v303 
lastLocationAccess: - 
value: a299 
stateAfter: - 
=== Succesors ===
next: v270 
=== Usages ===
=== Predecessor ===
a299 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v303 lastLocationAccess: - value: a299 stateAfter: - #next: v270  <|@  <|@
f <@~|@floating>@ <|@
tid a269 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
op: Uncompress
stamp: a java.util.HashMap$Node
=== Inputs ===
value: a299 
=== Succesors ===
=== Usages ===
v270 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a299  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
precise: false
stamp: void
=== Inputs ===
address: v303 
value: a269 
object: a1 
=== Succesors ===
next: v53 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v303 value: a269 object: a1 #next: v53  <|@  <|@
f <@~|@floating>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a299 
=== Succesors ===
=== Usages ===
v53 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a299  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
profileData: PROFILED designatedSuccessorProbability: 0.8751451405213353
stamp: void
=== Inputs ===
condition: v174 
=== Succesors ===
trueSuccessor: v52 
falseSuccessor: v49 
=== Usages ===
=== Predecessor ===
v270 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v174 #trueSuccessor: v52 #falseSuccessor: v49  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616789487794306628
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: v51 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v51  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 68]
stamp: void
=== Inputs ===
loopBegin: v27 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v27  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4604000017477932232
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v27 
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v27 #next: v48  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
v49 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592074006457236209
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v27 
=== Succesors ===
next: v34 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v27 #next: v34  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
v35 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592369608179927877
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v85 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v85  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
v70 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v315 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v315  <|@  <|@
f <@*|@fixed>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 144
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 73]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@4f0c9db9
stamp: void
=== Inputs ===
stateBefore: ?16 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?16  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 4580558013558206796
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v86 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v86  <|@  <|@
f <@*|@fixed>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
v59 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593727639904736152
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v32  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
v18 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B18" "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v32 v34 v48 v85 v86 
=== Succesors ===
next: v55 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v32 v34 v48 v85 v86 #next: v55  <|@  <|@
f <@*|@fixed>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 99]
stamp: void
=== Inputs ===
memoryMap: - 
result: a104 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v33 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a104  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1604) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v314 
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v314  <|@  <|@
f <@*|@fixed>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 231
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1604) [bci: 9]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0xef35ee76]: UnreachedCode@6[HotSpotMethod<HashMap$HashIterator.nextNode()>, 19]}
stamp: void
=== Inputs ===
stateBefore: ?2 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v233 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7304a70d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 24], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v8|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v11|QWORD, temp2: v12|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v13|QWORD[.]) {temp: v14|QWORD, temp2: v15|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.873445133019547 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606042513896467226
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v13|QWORD[.] 
locals: v0|QWORD[.] - v8|QWORD[.] 
>@ <|@ instruction v16|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v17|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v17|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B19" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = INC value: v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v19|QWORD, temp2: v20|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = MOV input: [v21|QWORD[.] + v17|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v23|QWORD[.]) {temp: v24|QWORD, temp2: v25|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|DWORD[_], y: v22|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B12" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v18|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SUB (x: v16|DWORD, ~y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVSXD value: v26|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = ADD (x: v27|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = DEC value: v29|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v31|QWORD, y: v30|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v18|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B15" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617633362313920969
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v32|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617517587535888605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = INC value: v32|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v34|QWORD, temp2: v35|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[_] = MOV input: [v21|QWORD[.] + v32|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v36|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v37|QWORD[.]) {temp: v38|QWORD, temp2: v39|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v36|DWORD[_], y: v36|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616789487794306628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|DWORD] destination: B16 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4604000017477932232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593727639904736152
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592369608179927877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592074006457236209
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 4580558013558206796
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B18" "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: v23|QWORD[.] 
locals: v0|QWORD[.] v21|QWORD[.] v8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v13|QWORD[.] 
locals: v0|QWORD[.] - v8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a290 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a290  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! java.util.HashMap$HashIterator
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v303 v304 v306 v307 ?16 ?68 v311 v263 v265 v267 v270 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v304 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a290 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a290 <|@
result v1|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$HashIterator.this$0
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1604) [bci: 6]
stamp: n java.util.HashMap
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v304 
lastLocationAccess: - 
=== Succesors ===
next: i291 
=== Usages ===
v309 v305 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v304 lastLocationAccess: - #next: i291  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.nextNode()>
localsSize: 3
locksSize: 0
sourceFile: HashMap.java
sourceLine: 1603
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v314 i291 a294 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v305 <|@
result [v1|DWORD[_] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a290 
=== Succesors ===
=== Usages ===
i291 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i291 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-28171|0xffffffffffff91f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1604) [bci: 9]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v305 
lastLocationAccess: - 
=== Succesors ===
next: a292 
=== Usages ===
v7 
=== Predecessor ===
a290 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v305 lastLocationAccess: - #next: a292  <|@  <|@
f <@~|@floating>@ <|@
tid v309 <|@
result [v1|DWORD[_] * 8 + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a290 
=== Succesors ===
=== Usages ===
a292 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a292 <|@
result v3|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.table
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 60]
stamp: n java.util.HashMap$Node[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v309 
lastLocationAccess: - 
=== Succesors ===
next: a293 
=== Usages ===
a132 v310 
=== Predecessor ===
i291 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v309 lastLocationAccess: - #next: a293  <|@  <|@
f <@~|@floating>@ <|@
tid v303 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a293 v128 v154 v167 v264 v265 v266 v267 v268 v270 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a293 <|@
result v4|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$HashIterator.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 1]
stamp: n java.util.HashMap$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v303 
lastLocationAccess: - 
=== Succesors ===
next: a294 
=== Usages ===
a104 v120 v308 
=== Predecessor ===
a292 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v303 lastLocationAccess: - #next: a294  <|@  <|@
f <@~|@floating>@ <|@
tid v308 <|@
result [v4|DWORD[_] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a293 
=== Succesors ===
=== Usages ===
a294 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a293  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a294 <|@
result v5|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node
barrierType: NONE
deoptReasonAndAction: int[-31243|0xffffffffffff85f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$Node.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 46]
stamp: n java.util.HashMap$Node
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v308 
lastLocationAccess: - 
=== Succesors ===
next: i295 
=== Usages ===
a126 v170 v128 
=== Predecessor ===
a293 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v308 lastLocationAccess: - #next: i295  <|@  <|@
f <@~|@floating>@ <|@
tid v306 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i295 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i295 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$HashIterator.expectedModCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1604) [bci: 13]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v306 
lastLocationAccess: - 
=== Succesors ===
next: v234 
=== Usages ===
v7 
=== Predecessor ===
a294 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v306 lastLocationAccess: - #next: v234  <|@  <|@
f <@~|@floating>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1604) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i291 
y: i295 
=== Succesors ===
=== Usages ===
v234 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i291 y: i295  <|@  <|@
f <@*|@fixed>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1604) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v7 
=== Succesors ===
trueSuccessor: v232 
falseSuccessor: v233 
=== Usages ===
=== Predecessor ===
i295 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v7 #trueSuccessor: v232 #falseSuccessor: v233  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7304a70d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1606) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v262 
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v262  <|@  <|@
f <@~|@floating>@ <|@
tid v307 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v120 v262 v263 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
precise: true
stamp: void
=== Inputs ===
address: v307 
value: - 
stateBefore: - 
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v307 value: - stateBefore: - #next: v120  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.current
location: HashMap$HashIterator.current
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v307 
lastLocationAccess: - 
value: a293 
stateAfter: - 
=== Succesors ===
next: v263 
=== Usages ===
=== Predecessor ===
v262 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v307 lastLocationAccess: - value: a293 stateAfter: - #next: v263  <|@  <|@
f <@~|@floating>@ <|@
tid a104 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 1]
op: Uncompress
stamp: a java.util.HashMap$Node
=== Inputs ===
value: a293 
=== Succesors ===
=== Usages ===
?68 v263 ?16 v55 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a293  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 43]
precise: false
stamp: void
=== Inputs ===
address: v307 
value: a104 
object: a1 
=== Succesors ===
next: v264 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v307 value: a104 object: a1 #next: v264  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
precise: true
stamp: void
=== Inputs ===
address: v303 
value: - 
stateBefore: - 
=== Succesors ===
next: v128 
=== Usages ===
=== Predecessor ===
v263 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v303 value: - stateBefore: - #next: v128  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.next
location: HashMap$HashIterator.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v303 
lastLocationAccess: - 
value: a294 
stateAfter: - 
=== Succesors ===
next: v265 
=== Usages ===
=== Predecessor ===
v264 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v303 lastLocationAccess: - value: a294 stateAfter: - #next: v265  <|@  <|@
f <@~|@floating>@ <|@
tid a126 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 46]
op: Uncompress
stamp: a java.util.HashMap$Node
=== Inputs ===
value: a294 
=== Succesors ===
=== Usages ===
?16 v265 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a294  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
precise: false
stamp: void
=== Inputs ===
address: v303 
value: a126 
object: a1 
=== Succesors ===
next: v20 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v303 value: a126 object: a1 #next: v20  <|@  <|@
f <@~|@floating>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a294 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a294  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
profileData: PROFILED designatedSuccessorProbability: 0.873445133019547
stamp: void
=== Inputs ===
condition: v170 
=== Succesors ===
trueSuccessor: v19 
falseSuccessor: v18 
=== Usages ===
=== Predecessor ===
v265 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v170 #trueSuccessor: v19 #falseSuccessor: v18  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 24], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v8|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v11|QWORD, temp2: v12|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v13|QWORD[.]) {temp: v14|QWORD, temp2: v15|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.873445133019547 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606042513896467226
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 56]
stamp: void
=== Inputs ===
=== Succesors ===
next: i296 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i296  <|@  <|@
tid ?16 <|@
d <@d|@=== Debug Properties ===
bci: 53
bytecode: ifnonnull
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.nextNode()>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 50]
sourceFile: HashMap.java
sourceLine: 1608
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a126 a1 - a104 
=== Succesors ===
=== Usages ===
v315 i296 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a126 a1 - a104  <|@  <|@
f <@~|@floating>@ <|@
tid v310 <|@
result [v3|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a292 
=== Succesors ===
=== Usages ===
i296 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a292  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i296 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-34315|0xffffffffffff79f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 73]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?16 
guard: - 
address: v310 
lastLocationAccess: - 
=== Succesors ===
next: i297 
=== Usages ===
v31 v58 v143 v207 j195 i196 v204 
=== Predecessor ===
v19 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?16 guard: - address: v310 lastLocationAccess: - #next: i297  <|@  <|@
f <@~|@floating>@ <|@
tid v311 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i297 v141 v155 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i297 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap$HashIterator.index
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 69]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v311 
lastLocationAccess: - 
=== Succesors ===
next: v61 
=== Usages ===
v58 i63 v143 j171 
=== Predecessor ===
i296 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v311 lastLocationAccess: - #next: v61  <|@  <|@
f <@~|@floating>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 74]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@e606376
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i297 
y: i296 
=== Succesors ===
=== Usages ===
v61 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i297 y: i296  <|@  <|@
f <@*|@fixed>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 74]
profileData: PROFILED designatedSuccessorProbability: 0.9805333640964465
stamp: void
=== Inputs ===
condition: v58 
=== Succesors ===
trueSuccessor: v60 
falseSuccessor: v59 
=== Usages ===
=== Predecessor ===
i297 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v58 #trueSuccessor: v60 #falseSuccessor: v59  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v13|QWORD[.] 
locals: v0|QWORD[.] - v8|QWORD[.] 
>@ <|@ instruction v16|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v17|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v225 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v225  <|@  <|@
f <@~|@floating>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@6021759f
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i297 
y: i296 
=== Succesors ===
=== Usages ===
v225 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i297 y: i296  <|@  <|@
f <@*|@fixed>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v143 
=== Succesors ===
trueSuccessor: v222 
falseSuccessor: v224 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v143 #trueSuccessor: v222 #falseSuccessor: v224  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v17|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B19" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v141 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v141  <|@  <|@
f <@~|@floating>@ <|@
tid i40 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 85]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i41 i63 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i63 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 86]
stamp: i32
=== Inputs ===
x: i297 
y: i40 
=== Succesors ===
=== Usages ===
v141 i87 i196 j300 v204 v207 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i297 y: i40  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.index
location: HashMap$HashIterator.index
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 87]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v311 
lastLocationAccess: - 
value: i63 
stateAfter: - 
=== Succesors ===
next: v266 
=== Usages ===
=== Predecessor ===
v222 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v311 lastLocationAccess: - value: i63 stateAfter: - #next: v266  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
precise: true
stamp: void
=== Inputs ===
address: v303 
value: - 
stateBefore: - 
=== Succesors ===
next: a298 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v303 value: - stateBefore: - #next: a298  <|@  <|@
f <@~|@floating>@ <|@
tid a132 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 60]
op: Uncompress
stamp: a java.util.HashMap$Node[]
=== Inputs ===
value: a292 
=== Succesors ===
=== Usages ===
v313 ?68 v312 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a292  <|@  <|@
f <@~|@floating>@ <|@
tid j171 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i297 
=== Succesors ===
=== Usages ===
v312 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i297  <|@  <|@
f <@~|@floating>@ <|@
tid v312 <|@
result [v21|QWORD[.] + v17|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a132 
index: j171 
=== Succesors ===
=== Usages ===
a298 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a132 index: j171  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a298 <|@
result v22|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: n java.util.HashMap$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v312 
lastLocationAccess: - 
=== Succesors ===
next: v154 
=== Usages ===
a152 v172 v154 
=== Predecessor ===
v266 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v312 lastLocationAccess: - #next: v154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.next
location: HashMap$HashIterator.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v303 
lastLocationAccess: - 
value: a298 
stateAfter: - 
=== Succesors ===
next: v267 
=== Usages ===
=== Predecessor ===
a298 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v303 lastLocationAccess: - value: a298 stateAfter: - #next: v267  <|@  <|@
f <@~|@floating>@ <|@
tid a152 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
op: Uncompress
stamp: a java.util.HashMap$Node
=== Inputs ===
value: a298 
=== Succesors ===
=== Usages ===
?68 v267 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a298  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
precise: false
stamp: void
=== Inputs ===
address: v303 
value: a152 
object: a1 
=== Succesors ===
next: v73 
=== Usages ===
=== Predecessor ===
v154 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v303 value: a152 object: a1 #next: v73  <|@  <|@
f <@~|@floating>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a298 
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a298  <|@  <|@
f <@*|@fixed>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
profileData: PROFILED designatedSuccessorProbability: 0.8751451405213353
stamp: void
=== Inputs ===
condition: v172 
=== Succesors ===
trueSuccessor: v72 
falseSuccessor: v70 
=== Usages ===
=== Predecessor ===
v267 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v172 #trueSuccessor: v72 #falseSuccessor: v70  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = INC value: v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v19|QWORD, temp2: v20|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = MOV input: [v21|QWORD[.] + v17|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v23|QWORD[.]) {temp: v24|QWORD, temp2: v25|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|DWORD[_], y: v22|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B12" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: v280 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v280  <|@  <|@
f <@~|@floating>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@e606376
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i63 
y: i296 
=== Succesors ===
=== Usages ===
v280 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i63 y: i296  <|@  <|@
f <@*|@fixed>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v207 
=== Succesors ===
trueSuccessor: v279 
falseSuccessor: v276 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v207 #trueSuccessor: v279 #falseSuccessor: v276  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v18|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v288 
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v288  <|@  <|@
f <@~|@floating>@ <|@
tid i196 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i296 
y: i63 
=== Succesors ===
=== Usages ===
j199 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i296 y: i63  <|@  <|@
f <@~|@floating>@ <|@
tid j199 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i196 
=== Succesors ===
=== Usages ===
j241 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i196  <|@  <|@
f <@~|@floating>@ <|@
tid j300 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i63 
=== Succesors ===
=== Usages ===
j241 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i63  <|@  <|@
f <@~|@floating>@ <|@
tid j241 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483648 - 6442450942]
=== Inputs ===
x: j199 
y: j300 
=== Succesors ===
=== Usages ===
j242 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j199 y: j300  <|@  <|@
f <@~|@floating>@ <|@
tid j200 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1]
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j242 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j242 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-2147483649 - 6442450941]
=== Inputs ===
x: j241 
y: j200 
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j241 y: j200  <|@  <|@
f <@~|@floating>@ <|@
tid j195 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i296 
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i296  <|@  <|@
f <@~|@floating>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@6021759f
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j242 
y: j195 
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j242 y: j195  <|@  <|@
f <@*|@fixed>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v203 
=== Succesors ===
trueSuccessor: v287 
falseSuccessor: v284 
=== Usages ===
=== Predecessor ===
v279 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v203 #trueSuccessor: v287 #falseSuccessor: v284  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SUB (x: v16|DWORD, ~y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVSXD value: v26|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = ADD (x: v27|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = DEC value: v29|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v31|QWORD, y: v30|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v286 
=== Usages ===
=== Predecessor ===
v288 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v286  <|@  <|@
f <@~|@floating>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@6021759f
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i63 
y: i296 
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i63 y: i296  <|@  <|@
f <@*|@fixed>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v204 
=== Succesors ===
trueSuccessor: v277 
falseSuccessor: v285 
=== Usages ===
=== Predecessor ===
v287 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v204 #trueSuccessor: v277 #falseSuccessor: v285  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v18|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v275 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v275  <|@  <|@
f <@*|@fixed>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v273 
=== Predecessor ===
v277 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v283 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v283  <|@  <|@
f <@*|@fixed>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v281 
=== Predecessor ===
v285 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v282 
=== Usages ===
=== Predecessor ===
v288 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v282  <|@  <|@
f <@*|@fixed>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v281 
=== Predecessor ===
v284 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v282 v283 
=== Succesors ===
next: v227 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v282 v283 #next: v227  <|@  <|@
tid ?68 <|@
d <@d|@=== Debug Properties ===
bci: 95
bytecode: ifnull
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.nextNode()>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
sourceFile: HashMap.java
sourceLine: 1609
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a152 a1 a132 a104 
=== Succesors ===
=== Usages ===
v227 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a152 a1 a132 a104  <|@  <|@
f <@*|@fixed>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 158
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
reason: BoundsCheckException
speculation: {0x0000000000000798[index: 60, len: 24, hash: 0xddb2b6fd]: GuardMovement@3[HotSpotMethod<HashMap$HashIterator.nextNode()>, 68, BoundsCheckException]}
stamp: void
=== Inputs ===
stateBefore: ?68 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v281 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?68  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: v23|QWORD[.] 
locals: v0|QWORD[.] v21|QWORD[.] v8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v274 
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v274  <|@  <|@
f <@*|@fixed>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v273 
=== Predecessor ===
v276 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v274 v275 
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v274 v275 #next: v26  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
v273 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B15" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617633362313920969
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i87 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 68]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v27 
values: i63 i41 
=== Succesors ===
=== Usages ===
v31 i41 j173 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v27 values: i63 i41  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 68]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v26 
=== Succesors ===
next: v38 
=== Usages ===
v35 v49 v51 i87 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v26 #next: v38  <|@  <|@
f <@~|@floating>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 74]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@e606376
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i87 
y: i296 
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i87 y: i296  <|@  <|@
f <@*|@fixed>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 74]
profileData: PROFILED designatedSuccessorProbability: 0.9805333640964465
stamp: void
=== Inputs ===
condition: v31 
=== Succesors ===
trueSuccessor: v37 
falseSuccessor: v35 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v31 #trueSuccessor: v37 #falseSuccessor: v35  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v32|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617517587535888605
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 77]
stamp: void
=== Inputs ===
=== Succesors ===
next: v155 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v155  <|@  <|@
f <@~|@floating>@ <|@
tid i41 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 86]
stamp: i32
=== Inputs ===
x: i87 
y: i40 
=== Succesors ===
=== Usages ===
v155 i87 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i87 y: i40  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.index
location: HashMap$HashIterator.index
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 87]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v311 
lastLocationAccess: - 
value: i41 
stateAfter: - 
=== Succesors ===
next: v268 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v311 lastLocationAccess: - value: i41 stateAfter: - #next: v268  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
precise: true
stamp: void
=== Inputs ===
address: v303 
value: - 
stateBefore: - 
=== Succesors ===
next: a299 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v303 value: - stateBefore: - #next: a299  <|@  <|@
f <@~|@floating>@ <|@
tid j173 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i87 
=== Succesors ===
=== Usages ===
v313 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i87  <|@  <|@
f <@~|@floating>@ <|@
tid v313 <|@
result [v21|QWORD[.] + v32|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a132 
index: j173 
=== Succesors ===
=== Usages ===
a299 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a132 index: j173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a299 <|@
result v36|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: n java.util.HashMap$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v313 
lastLocationAccess: - 
=== Succesors ===
next: v167 
=== Usages ===
v167 v174 a269 
=== Predecessor ===
v268 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v313 lastLocationAccess: - #next: v167  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.next
location: HashMap$HashIterator.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v303 
lastLocationAccess: - 
value: a299 
stateAfter: - 
=== Succesors ===
next: v270 
=== Usages ===
=== Predecessor ===
a299 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v303 lastLocationAccess: - value: a299 stateAfter: - #next: v270  <|@  <|@
f <@~|@floating>@ <|@
tid a269 <|@
result v37|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
op: Uncompress
stamp: a java.util.HashMap$Node
=== Inputs ===
value: a299 
=== Succesors ===
=== Usages ===
v270 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a299  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 92]
precise: false
stamp: void
=== Inputs ===
address: v303 
value: a269 
object: a1 
=== Succesors ===
next: v53 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v303 value: a269 object: a1 #next: v53  <|@  <|@
f <@~|@floating>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a299 
=== Succesors ===
=== Usages ===
v53 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a299  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
profileData: PROFILED designatedSuccessorProbability: 0.8751451405213353
stamp: void
=== Inputs ===
condition: v174 
=== Succesors ===
trueSuccessor: v52 
falseSuccessor: v49 
=== Usages ===
=== Predecessor ===
v270 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v174 #trueSuccessor: v52 #falseSuccessor: v49  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = INC value: v32|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v34|QWORD, temp2: v35|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[_] = MOV input: [v21|QWORD[.] + v32|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v36|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v37|QWORD[.]) {temp: v38|QWORD, temp2: v39|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v36|DWORD[_], y: v36|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616789487794306628
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: v51 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v51  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 68]
stamp: void
=== Inputs ===
loopBegin: v27 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v27  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|DWORD] destination: B16 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4604000017477932232
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v27 
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v27 #next: v48  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
v49 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592074006457236209
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v27 
=== Succesors ===
next: v34 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v27 #next: v34  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
v35 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592369608179927877
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v85 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v85  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
v70 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v315 
=== Usages ===
=== Predecessor ===
v225 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v315  <|@  <|@
f <@*|@fixed>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 144
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 73]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@4f0c9db9
stamp: void
=== Inputs ===
stateBefore: ?16 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?16  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v13|QWORD[.] 
locals: v0|QWORD[.] - v8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 4580558013558206796
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v86 
=== Usages ===
=== Predecessor ===
v61 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v86  <|@  <|@
f <@*|@fixed>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
v59 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593727639904736152
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v32  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
v18 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B18" "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 98]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v32 v34 v48 v85 v86 
=== Succesors ===
next: v55 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v32 v34 v48 v85 v86 #next: v55  <|@  <|@
f <@*|@fixed>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1611) [bci: 99]
stamp: void
=== Inputs ===
memoryMap: - 
result: a104 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v33 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a104  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1604) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v314 
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v314  <|@  <|@
f <@*|@fixed>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 231
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap$HashIterator.nextNode(HashMap.java:1604) [bci: 9]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0xef35ee76]: UnreachedCode@6[HotSpotMethod<HashMap$HashIterator.nextNode()>, 19]}
stamp: void
=== Inputs ===
stateBefore: ?2 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v233 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7304a70d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 24], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v8|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v11|QWORD, temp2: v12|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v13|QWORD[.]) {temp: v14|QWORD, temp2: v15|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.873445133019547 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606042513896467226
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v13|QWORD[.] 
locals: v0|QWORD[.] - v8|QWORD[.] 
>@ <|@ instruction v16|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v17|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v17|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B19" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = INC value: v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v19|QWORD, temp2: v20|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = MOV input: [v21|QWORD[.] + v17|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v23|QWORD[.]) {temp: v24|QWORD, temp2: v25|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|DWORD[_], y: v22|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B12" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v18|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SUB (x: v16|DWORD, ~y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVSXD value: v26|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = ADD (x: v27|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = DEC value: v29|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v31|QWORD, y: v30|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v18|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B15" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617633362313920969
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v32|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617517587535888605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = INC value: v32|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v34|QWORD, temp2: v35|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[_] = MOV input: [v21|QWORD[.] + v32|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v36|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v37|QWORD[.]) {temp: v38|QWORD, temp2: v39|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v36|DWORD[_], y: v36|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616789487794306628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|DWORD] destination: B16 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4604000017477932232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593727639904736152
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592369608179927877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592074006457236209
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 4580558013558206796
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B18" "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: v23|QWORD[.] 
locals: v0|QWORD[.] v21|QWORD[.] v8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v13|QWORD[.] 
locals: v0|QWORD[.] - v8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7304a70d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 24], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v8|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v11|QWORD, temp2: v12|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v13|QWORD[.]) {temp: v14|QWORD, temp2: v15|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.873445133019547 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606042513896467226
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v13|QWORD[.] 
locals: v0|QWORD[.] - v8|QWORD[.] 
>@ <|@ instruction v16|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v17|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v17|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B19" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = INC value: v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v19|QWORD, temp2: v20|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = MOV input: [v21|QWORD[.] + v17|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v23|QWORD[.]) {temp: v24|QWORD, temp2: v25|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|DWORD[_], y: v22|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B12" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v18|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SUB (x: v16|DWORD, ~y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVSXD value: v26|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = ADD (x: v27|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = DEC value: v29|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v31|QWORD, y: v30|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v18|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B15" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617633362313920969
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v32|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617517587535888605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = INC value: v32|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v34|QWORD, temp2: v35|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[_] = MOV input: [v21|QWORD[.] + v32|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v36|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v37|QWORD[.]) {temp: v38|QWORD, temp2: v39|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v36|DWORD[_], y: v36|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616789487794306628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|DWORD] destination: B16 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4604000017477932232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593727639904736152
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592369608179927877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592074006457236209
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 4580558013558206796
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B18" "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: v23|QWORD[.] 
locals: v0|QWORD[.] v21|QWORD[.] v8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v13|QWORD[.] 
locals: v0|QWORD[.] - v8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7304a70d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 24], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v8|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v11|QWORD, temp2: v12|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v13|QWORD[.]) {temp: v14|QWORD, temp2: v15|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.873445133019547 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606042513896467226
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v13|QWORD[.] 
locals: v0|QWORD[.] - v8|QWORD[.] 
>@ <|@ instruction v16|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v17|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v17|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B19" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = INC value: v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v19|QWORD, temp2: v20|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = MOV input: [v21|QWORD[.] + v17|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v23|QWORD[.]) {temp: v24|QWORD, temp2: v25|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|DWORD[_], y: v22|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B12" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v18|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SUB (x: v16|DWORD, ~y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVSXD value: v26|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = ADD (x: v27|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = DEC value: v29|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v31|QWORD, y: v30|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v18|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B15" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617633362313920969
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v32|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617517587535888605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = INC value: v32|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v34|QWORD, temp2: v35|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[_] = MOV input: [v21|QWORD[.] + v32|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v36|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v37|QWORD[.]) {temp: v38|QWORD, temp2: v39|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v36|DWORD[_], y: v36|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616789487794306628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|DWORD] destination: B16 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4604000017477932232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593727639904736152
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592369608179927877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592074006457236209
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 4580558013558206796
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B18" "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: v23|QWORD[.] 
locals: v0|QWORD[.] v21|QWORD[.] v8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v13|QWORD[.] 
locals: v0|QWORD[.] - v8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7304a70d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 24], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v8|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v11|QWORD, temp2: v12|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v13|QWORD[.]) {temp: v14|QWORD, temp2: v15|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.873445133019547 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606042513896467226
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v13|QWORD[.] 
locals: v0|QWORD[.] - v8|QWORD[.] 
>@ <|@ instruction v16|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v17|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v17|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B19" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = INC value: v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v19|QWORD, temp2: v20|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = MOV input: [v21|QWORD[.] + v17|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v23|QWORD[.]) {temp: v24|QWORD, temp2: v25|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|DWORD[_], y: v22|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B12" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v18|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SUB (x: v16|DWORD, ~y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVSXD value: v26|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = ADD (x: v27|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = DEC value: v29|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v31|QWORD, y: v30|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v18|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B15" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617633362313920969
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v32|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617517587535888605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = INC value: v32|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v34|QWORD, temp2: v35|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[_] = MOV input: [v21|QWORD[.] + v32|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v36|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v37|QWORD[.]) {temp: v38|QWORD, temp2: v39|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v36|DWORD[_], y: v36|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616789487794306628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|DWORD] destination: B16 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4604000017477932232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593727639904736152
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592369608179927877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592074006457236209
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 4580558013558206796
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B18" "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: v23|QWORD[.] 
locals: v0|QWORD[.] v21|QWORD[.] v8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v13|QWORD[.] 
locals: v0|QWORD[.] - v8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7304a70d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 24], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v8|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v11|QWORD, temp2: v12|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v13|QWORD[.]) {temp: v14|QWORD, temp2: v15|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.873445133019547 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606042513896467226
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v13|QWORD[.] 
locals: v0|QWORD[.] - v8|QWORD[.] 
>@ <|@ instruction v16|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v17|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v17|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B19" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = INC value: v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v19|QWORD, temp2: v20|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = MOV input: [v21|QWORD[.] + v17|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v23|QWORD[.]) {temp: v24|QWORD, temp2: v25|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|DWORD[_], y: v22|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B12" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v18|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = SUB (x: v16|DWORD, ~y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVSXD value: v26|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = ADD (x: v27|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = DEC value: v29|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v31|QWORD, y: v30|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v18|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B15" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617633362313920969
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v32|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617517587535888605
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = INC value: v32|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v34|QWORD, temp2: v35|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[_] = MOV input: [v21|QWORD[.] + v32|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v36|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v37|QWORD[.]) {temp: v38|QWORD, temp2: v39|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v36|DWORD[_], y: v36|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616789487794306628
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v33|DWORD] destination: B16 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4604000017477932232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593727639904736152
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592369608179927877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592074006457236209
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 4580558013558206796
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B18" "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: v23|QWORD[.] 
locals: v0|QWORD[.] v21|QWORD[.] v8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v13|QWORD[.] 
locals: v0|QWORD[.] - v8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7304a70d slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction v3|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   38  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 24], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  200  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr  202  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v8|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  206  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v11|QWORD, temp2: v12|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  208  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr  210  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  212  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v13|QWORD[.]) {temp: v14|QWORD, temp2: v15|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  214  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.873445133019547 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606042513896467226
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v13|QWORD[.] 
locals: v0|QWORD[.] - v8|QWORD[.] 
>@ <|@ instruction v16|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  232  <|@ instruction v17|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v17|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v17|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B19" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction v18|DWORD = INC value: v17|DWORD size: DWORD <|@ <|@
      nr  340  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v18|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v19|QWORD, temp2: v20|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  344  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  346  <|@ instruction v22|DWORD[_] = MOV input: [v21|QWORD[.] + v17|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  348  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr  350  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v23|QWORD[.]) {temp: v24|QWORD, temp2: v25|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: v22|DWORD[_], y: v22|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B12" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v18|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction v26|DWORD = SUB (x: v16|DWORD, ~y: v18|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction v27|QWORD = MOVSXD value: v26|DWORD size: QWORD <|@ <|@
      nr  404  <|@ instruction v28|QWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction v29|QWORD = ADD (x: v27|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction v30|QWORD = DEC value: v29|QWORD size: QWORD <|@ <|@
      nr  410  <|@ instruction v31|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction CMPBRANCH (x: v31|QWORD, y: v30|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v18|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B15" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617633362313920969
    begin_IR
      LIR
      nr  446  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v32|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617517587535888605
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction v33|DWORD = INC value: v32|DWORD size: DWORD <|@ <|@
      nr  548  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v33|DWORD) size: DWORD <|@ <|@
      nr  550  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v34|QWORD, temp2: v35|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  552  <|@ instruction v36|DWORD[_] = MOV input: [v21|QWORD[.] + v32|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  554  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v36|DWORD[_]) size: DWORD <|@ <|@
      nr  556  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  558  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v37|QWORD[.]) {temp: v38|QWORD, temp2: v39|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  560  <|@ instruction TESTBRANCH (x: v36|DWORD[_], y: v36|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616789487794306628
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [v33|DWORD] destination: B16 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4604000017477932232
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593727639904736152
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592369608179927877
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592074006457236209
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 4580558013558206796
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B18" "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction rax|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr  684  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: v23|QWORD[.] 
locals: v0|QWORD[.] v21|QWORD[.] v8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction MOV x: [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr  706  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  708  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  728  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  730  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v13|QWORD[.] 
locals: v0|QWORD[.] - v8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7304a70d slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction v3|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   38  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 24], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  200  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr  202  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v8|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  206  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v11|QWORD, temp2: v12|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  208  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr  210  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  212  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v13|QWORD[.]) {temp: v14|QWORD, temp2: v15|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  214  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.873445133019547 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606042513896467226
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v13|QWORD[.] 
locals: v0|QWORD[.] - v8|QWORD[.] 
>@ <|@ instruction v16|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  232  <|@ instruction v17|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v17|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v17|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B19" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction v18|DWORD = INC value: v17|DWORD size: DWORD <|@ <|@
      nr  340  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v18|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v19|QWORD, temp2: v20|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  344  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  346  <|@ instruction v22|DWORD[_] = MOV input: [v21|QWORD[.] + v17|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  348  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr  350  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v23|QWORD[.]) {temp: v24|QWORD, temp2: v25|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: v22|DWORD[_], y: v22|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B12" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v18|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction v26|DWORD = SUB (x: v16|DWORD, ~y: v18|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction v27|QWORD = MOVSXD value: v26|DWORD size: QWORD <|@ <|@
      nr  404  <|@ instruction v28|QWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction v29|QWORD = ADD (x: v27|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction v30|QWORD = DEC value: v29|QWORD size: QWORD <|@ <|@
      nr  410  <|@ instruction v31|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction CMPBRANCH (x: v31|QWORD, y: v30|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v18|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B15" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617633362313920969
    begin_IR
      LIR
      nr  446  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v32|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617517587535888605
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction v33|DWORD = INC value: v32|DWORD size: DWORD <|@ <|@
      nr  548  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v33|DWORD) size: DWORD <|@ <|@
      nr  550  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v34|QWORD, temp2: v35|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  552  <|@ instruction v36|DWORD[_] = MOV input: [v21|QWORD[.] + v32|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  554  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v36|DWORD[_]) size: DWORD <|@ <|@
      nr  556  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  558  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v37|QWORD[.]) {temp: v38|QWORD, temp2: v39|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  560  <|@ instruction TESTBRANCH (x: v36|DWORD[_], y: v36|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616789487794306628
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [v33|DWORD] destination: B16 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4604000017477932232
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593727639904736152
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592369608179927877
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592074006457236209
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 4580558013558206796
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B18" "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction rax|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr  684  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: v23|QWORD[.] 
locals: v0|QWORD[.] v21|QWORD[.] v8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction MOV x: [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr  706  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  708  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  728  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  730  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v13|QWORD[.] 
locals: v0|QWORD[.] - v8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v8|q [0, 1[[642, 644[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 26[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 30[ "NoSpillStore"
  v0|q QWORD "[v0|q]" v0|q rsi|q [30, 572[[646, 687[[688, 709[[710, 731[30 MustHaveRegister 32 MustHaveRegister 38 MustHaveRegister 42 MustHaveRegister 198 MustHaveRegister 200 MustHaveRegister 204 MustHaveRegister 206 MustHaveRegister 208 MustHaveRegister 212 MustHaveRegister 232 MustHaveRegister 340 MustHaveRegister 342 MustHaveRegister 348 MustHaveRegister 352 MustHaveRegister 548 MustHaveRegister 550 MustHaveRegister 554 MustHaveRegister 558 MustHaveRegister 571 LiveAtLoopEnd  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d -1 [32, 36[32 MustHaveRegister 34 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [34, 42[34 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [36, 344[36 MustHaveRegister 230 MustHaveRegister 344 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [38, 202[38 MustHaveRegister 40 MustHaveRegister 200 MustHaveRegister 202 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [40, 214[40 MustHaveRegister 208 MustHaveRegister 210 MustHaveRegister 214 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q -1 [198, 199[198 MustHaveRegister  "NoDefinitionFound"
  v7|q QWORD "[v7|q]" v7|q -1 [198, 199[198 MustHaveRegister  "NoDefinitionFound"
  v8|q QWORD "[v8|q]" v8|q v4|d [202, 642[[646, 687[[710, 731[202 MustHaveRegister 204 MustHaveRegister 642 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q -1 [204, 205[204 MustHaveRegister  "NoDefinitionFound"
  v10|q QWORD "[v10|q]" v10|q -1 [204, 205[204 MustHaveRegister  "NoDefinitionFound"
  v11|q QWORD "[v11|q]" v11|q -1 [206, 207[206 MustHaveRegister  "NoDefinitionFound"
  v12|q QWORD "[v12|q]" v12|q -1 [206, 207[206 MustHaveRegister  "NoDefinitionFound"
  v13|q QWORD "[v13|q]" v13|q v5|d [210, 248[[710, 731[210 MustHaveRegister 212 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q -1 [212, 213[212 MustHaveRegister  "NoDefinitionFound"
  v15|q QWORD "[v15|q]" v15|q -1 [212, 213[212 MustHaveRegister  "NoDefinitionFound"
  v16|d DWORD "[v16|d]" v16|d -1 [230, 572[230 MustHaveRegister 234 MustHaveRegister 246 MustHaveRegister 366 MustHaveRegister 400 MustHaveRegister 410 ShouldHaveRegister 424 MustHaveRegister 456 MustHaveRegister 571 LiveAtLoopEnd  "NoSpillStore"
  v17|d DWORD "[v17|d]" v17|d -1 [232, 346[232 MustHaveRegister 234 ShouldHaveRegister 246 ShouldHaveRegister 338 ShouldHaveRegister 346 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[v18|d]" v18|d v17|d [338, 445[338 MustHaveRegister 340 MustHaveRegister 366 ShouldHaveRegister 400 ShouldHaveRegister 404 ShouldHaveRegister 424 ShouldHaveRegister 444 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q -1 [342, 343[342 MustHaveRegister  "NoDefinitionFound"
  v20|q QWORD "[v20|q]" v20|q -1 [342, 343[342 MustHaveRegister  "NoDefinitionFound"
  v21|q QWORD "[v21|q]" v21|q v3|d [344, 572[[646, 687[344 MustHaveRegister 346 MustHaveRegister 552 MustHaveRegister 571 LiveAtLoopEnd  "NoSpillStore"
  v22|d DWORD "[v22|d]" v22|d -1 [346, 354[346 MustHaveRegister 348 MustHaveRegister 350 MustHaveRegister 354 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[v23|q]" v23|q v22|d [350, 368[[378, 426[[646, 687[350 MustHaveRegister 352 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[v24|q]" v24|q -1 [352, 353[352 MustHaveRegister  "NoDefinitionFound"
  v25|q QWORD "[v25|q]" v25|q -1 [352, 353[352 MustHaveRegister  "NoDefinitionFound"
  v26|d DWORD "[v26|d]" v26|d v16|d [400, 402[400 MustHaveRegister 402 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[v27|q]" v27|q -1 [402, 406[402 MustHaveRegister 406 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[v28|q]" v28|q v18|d [404, 406[404 MustHaveRegister 406 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[v29|q]" v29|q v27|q [406, 408[406 MustHaveRegister 408 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[v30|q]" v30|q v29|q [408, 412[408 MustHaveRegister 412 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[v31|q]" v31|q v16|d [410, 412[410 MustHaveRegister 412 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[v32|d]" v32|d v33|d [446, 552[456 ShouldHaveRegister 546 ShouldHaveRegister 552 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[v33|d]" v33|d v32|d [546, 571[546 MustHaveRegister 548 MustHaveRegister 570 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[v34|q]" v34|q -1 [550, 551[550 MustHaveRegister  "NoDefinitionFound"
  v35|q QWORD "[v35|q]" v35|q -1 [550, 551[550 MustHaveRegister  "NoDefinitionFound"
  v36|d DWORD "[v36|d]" v36|d -1 [552, 560[552 MustHaveRegister 554 MustHaveRegister 556 MustHaveRegister 560 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[v37|q]" v37|q v36|d [556, 559[556 MustHaveRegister 558 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[v38|q]" v38|q -1 [558, 559[558 MustHaveRegister  "NoDefinitionFound"
  v39|q QWORD "[v39|q]" v39|q -1 [558, 559[558 MustHaveRegister  "NoDefinitionFound"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v8|q [0, 1[[642, 644[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 26[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 30[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [30, 572[[646, 687[[688, 709[[710, 731[30 MustHaveRegister 32 MustHaveRegister 38 MustHaveRegister 42 MustHaveRegister 198 MustHaveRegister 200 MustHaveRegister 204 MustHaveRegister 206 MustHaveRegister 208 MustHaveRegister 212 MustHaveRegister 232 MustHaveRegister 340 MustHaveRegister 342 MustHaveRegister 348 MustHaveRegister 352 MustHaveRegister 548 MustHaveRegister 550 MustHaveRegister 554 MustHaveRegister 558 MustHaveRegister 571 LiveAtLoopEnd  "NoSpillStore"
  v1|d DWORD "[rax|d]" v1|d -1 [32, 36[32 MustHaveRegister 34 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r10|d]" v2|d -1 [34, 42[34 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [36, 344[36 MustHaveRegister 230 MustHaveRegister 344 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r11|d]" v4|d -1 [38, 202[38 MustHaveRegister 40 MustHaveRegister 200 MustHaveRegister 202 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r8|d]" v5|d -1 [40, 214[40 MustHaveRegister 208 MustHaveRegister 210 MustHaveRegister 214 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[r10|q]" v6|q -1 [198, 199[198 MustHaveRegister  "NoDefinitionFound"
  v7|q QWORD "[r9|q]" v7|q -1 [198, 199[198 MustHaveRegister  "NoDefinitionFound"
  v8|q QWORD "[r11|q]" v8|q v4|d [202, 642[[646, 687[[710, 731[202 MustHaveRegister 204 MustHaveRegister 642 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[r10|q]" v9|q -1 [204, 205[204 MustHaveRegister  "NoDefinitionFound"
  v10|q QWORD "[r9|q]" v10|q -1 [204, 205[204 MustHaveRegister  "NoDefinitionFound"
  v11|q QWORD "[r10|q]" v11|q -1 [206, 207[206 MustHaveRegister  "NoDefinitionFound"
  v12|q QWORD "[r9|q]" v12|q -1 [206, 207[206 MustHaveRegister  "NoDefinitionFound"
  v13|q QWORD "[r10|q]" v13|q v5|d [210, 248[[710, 731[210 MustHaveRegister 212 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[r9|q]" v14|q -1 [212, 213[212 MustHaveRegister  "NoDefinitionFound"
  v15|q QWORD "[rcx|q]" v15|q -1 [212, 213[212 MustHaveRegister  "NoDefinitionFound"
  v16|d DWORD "[r8|d]" v16|d -1 [230, 572[230 MustHaveRegister 234 MustHaveRegister 246 MustHaveRegister 366 MustHaveRegister 400 MustHaveRegister 410 ShouldHaveRegister 424 MustHaveRegister 456 MustHaveRegister 571 LiveAtLoopEnd  "NoSpillStore"
  v17|d DWORD "[r9|d]" v17|d -1 [232, 346[232 MustHaveRegister 234 ShouldHaveRegister 246 ShouldHaveRegister 338 ShouldHaveRegister 346 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[r10|d]" v18|d v17|d [338, 445[338 MustHaveRegister 340 MustHaveRegister 366 ShouldHaveRegister 400 ShouldHaveRegister 404 ShouldHaveRegister 424 ShouldHaveRegister 444 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rcx|q]" v19|q -1 [342, 343[342 MustHaveRegister  "NoDefinitionFound"
  v20|q QWORD "[rbx|q]" v20|q -1 [342, 343[342 MustHaveRegister  "NoDefinitionFound"
  v21|q QWORD "[rax|q]" v21|q v3|d [344, 572[[646, 687[344 MustHaveRegister 346 MustHaveRegister 552 MustHaveRegister 571 LiveAtLoopEnd  "NoSpillStore"
  v22|d DWORD "[r9|d]" v22|d -1 [346, 354[346 MustHaveRegister 348 MustHaveRegister 350 MustHaveRegister 354 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rcx|q]" v23|q v22|d [350, 368[[378, 426[[646, 687[350 MustHaveRegister 352 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[rbx|q]" v24|q -1 [352, 353[352 MustHaveRegister  "NoDefinitionFound"
  v25|q QWORD "[rdi|q]" v25|q -1 [352, 353[352 MustHaveRegister  "NoDefinitionFound"
  v26|d DWORD "[r9|d]" v26|d v16|d [400, 402[400 MustHaveRegister 402 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[r9|q]" v27|q -1 [402, 406[402 MustHaveRegister 406 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[rbx|q]" v28|q v18|d [404, 406[404 MustHaveRegister 406 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[r9|q]" v29|q v27|q [406, 408[406 MustHaveRegister 408 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[r9|q]" v30|q v29|q [408, 412[408 MustHaveRegister 412 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[rbx|q]" v31|q v16|d [410, 412[410 MustHaveRegister 412 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[r10|d]" v32|d v33|d [446, 552[456 ShouldHaveRegister 546 ShouldHaveRegister 552 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[r9|d]" v33|d v32|d [546, 571[546 MustHaveRegister 548 MustHaveRegister 570 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[rcx|q]" v34|q -1 [550, 551[550 MustHaveRegister  "NoDefinitionFound"
  v35|q QWORD "[rbx|q]" v35|q -1 [550, 551[550 MustHaveRegister  "NoDefinitionFound"
  v36|d DWORD "[r10|d]" v36|d -1 [552, 560[552 MustHaveRegister 554 MustHaveRegister 556 MustHaveRegister 560 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rcx|q]" v37|q v36|d [556, 559[556 MustHaveRegister 558 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rbx|q]" v38|q -1 [558, 559[558 MustHaveRegister  "NoDefinitionFound"
  v39|q QWORD "[rdi|q]" v39|q -1 [558, 559[558 MustHaveRegister  "NoDefinitionFound"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7304a70d slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction v3|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   38  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 24], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  200  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr  202  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v8|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  206  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v11|QWORD, temp2: v12|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  208  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr  210  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  212  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v13|QWORD[.]) {temp: v14|QWORD, temp2: v15|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  214  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.873445133019547 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606042513896467226
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v13|QWORD[.] 
locals: v0|QWORD[.] - v8|QWORD[.] 
>@ <|@ instruction v16|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  232  <|@ instruction v17|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v17|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v17|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B19" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction v18|DWORD = INC value: v17|DWORD size: DWORD <|@ <|@
      nr  340  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v18|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v19|QWORD, temp2: v20|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  344  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  346  <|@ instruction v22|DWORD[_] = MOV input: [v21|QWORD[.] + v17|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  348  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr  350  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v23|QWORD[.]) {temp: v24|QWORD, temp2: v25|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: v22|DWORD[_], y: v22|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B12" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v18|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction v26|DWORD = SUB (x: v16|DWORD, ~y: v18|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction v27|QWORD = MOVSXD value: v26|DWORD size: QWORD <|@ <|@
      nr  404  <|@ instruction v28|QWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction v29|QWORD = ADD (x: v27|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction v30|QWORD = DEC value: v29|QWORD size: QWORD <|@ <|@
      nr  410  <|@ instruction v31|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction CMPBRANCH (x: v31|QWORD, y: v30|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v18|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B15" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617633362313920969
    begin_IR
      LIR
      nr  446  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v32|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617517587535888605
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction v33|DWORD = INC value: v32|DWORD size: DWORD <|@ <|@
      nr  548  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v33|DWORD) size: DWORD <|@ <|@
      nr  550  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v34|QWORD, temp2: v35|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  552  <|@ instruction v36|DWORD[_] = MOV input: [v21|QWORD[.] + v32|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  554  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v36|DWORD[_]) size: DWORD <|@ <|@
      nr  556  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  558  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v37|QWORD[.]) {temp: v38|QWORD, temp2: v39|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  560  <|@ instruction TESTBRANCH (x: v36|DWORD[_], y: v36|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616789487794306628
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [v33|DWORD] destination: B16 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4604000017477932232
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593727639904736152
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592369608179927877
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592074006457236209
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 4580558013558206796
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B18" "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction rax|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr  684  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: v23|QWORD[.] 
locals: v0|QWORD[.] v21|QWORD[.] v8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction MOV x: [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr  706  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  708  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  728  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  730  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v13|QWORD[.] 
locals: v0|QWORD[.] - v8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v8|q [0, 1[[642, 644[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 26[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 30[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [30, 572[[646, 687[[688, 709[[710, 731[30 MustHaveRegister 32 MustHaveRegister 38 MustHaveRegister 42 MustHaveRegister 198 MustHaveRegister 200 MustHaveRegister 204 MustHaveRegister 206 MustHaveRegister 208 MustHaveRegister 212 MustHaveRegister 232 MustHaveRegister 340 MustHaveRegister 342 MustHaveRegister 348 MustHaveRegister 352 MustHaveRegister 548 MustHaveRegister 550 MustHaveRegister 554 MustHaveRegister 558 MustHaveRegister 571 LiveAtLoopEnd  "NoSpillStore"
  v1|d DWORD "[rax|d]" v1|d -1 [32, 36[32 MustHaveRegister 34 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r10|d]" v2|d -1 [34, 42[34 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [36, 344[36 MustHaveRegister 230 MustHaveRegister 344 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r11|d]" v4|d -1 [38, 202[38 MustHaveRegister 40 MustHaveRegister 200 MustHaveRegister 202 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r8|d]" v5|d -1 [40, 214[40 MustHaveRegister 208 MustHaveRegister 210 MustHaveRegister 214 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[r10|q]" v6|q -1 [198, 199[198 MustHaveRegister  "NoDefinitionFound"
  v7|q QWORD "[r9|q]" v7|q -1 [198, 199[198 MustHaveRegister  "NoDefinitionFound"
  v8|q QWORD "[r11|q]" v8|q v4|d [202, 642[[646, 687[[710, 731[202 MustHaveRegister 204 MustHaveRegister 642 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[r10|q]" v9|q -1 [204, 205[204 MustHaveRegister  "NoDefinitionFound"
  v10|q QWORD "[r9|q]" v10|q -1 [204, 205[204 MustHaveRegister  "NoDefinitionFound"
  v11|q QWORD "[r10|q]" v11|q -1 [206, 207[206 MustHaveRegister  "NoDefinitionFound"
  v12|q QWORD "[r9|q]" v12|q -1 [206, 207[206 MustHaveRegister  "NoDefinitionFound"
  v13|q QWORD "[r10|q]" v13|q v5|d [210, 248[[710, 731[210 MustHaveRegister 212 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[r9|q]" v14|q -1 [212, 213[212 MustHaveRegister  "NoDefinitionFound"
  v15|q QWORD "[rcx|q]" v15|q -1 [212, 213[212 MustHaveRegister  "NoDefinitionFound"
  v16|d DWORD "[r8|d]" v16|d -1 [230, 572[230 MustHaveRegister 234 MustHaveRegister 246 MustHaveRegister 366 MustHaveRegister 400 MustHaveRegister 410 ShouldHaveRegister 424 MustHaveRegister 456 MustHaveRegister 571 LiveAtLoopEnd  "NoSpillStore"
  v17|d DWORD "[r9|d]" v17|d -1 [232, 346[232 MustHaveRegister 234 ShouldHaveRegister 246 ShouldHaveRegister 338 ShouldHaveRegister 346 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[r10|d]" v18|d v17|d [338, 445[338 MustHaveRegister 340 MustHaveRegister 366 ShouldHaveRegister 400 ShouldHaveRegister 404 ShouldHaveRegister 424 ShouldHaveRegister 444 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rcx|q]" v19|q -1 [342, 343[342 MustHaveRegister  "NoDefinitionFound"
  v20|q QWORD "[rbx|q]" v20|q -1 [342, 343[342 MustHaveRegister  "NoDefinitionFound"
  v21|q QWORD "[rax|q]" v21|q v3|d [344, 572[[646, 687[344 MustHaveRegister 346 MustHaveRegister 552 MustHaveRegister 571 LiveAtLoopEnd  "NoSpillStore"
  v22|d DWORD "[r9|d]" v22|d -1 [346, 354[346 MustHaveRegister 348 MustHaveRegister 350 MustHaveRegister 354 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rcx|q]" v23|q v22|d [350, 368[[378, 426[[646, 687[350 MustHaveRegister 352 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[rbx|q]" v24|q -1 [352, 353[352 MustHaveRegister  "NoDefinitionFound"
  v25|q QWORD "[rdi|q]" v25|q -1 [352, 353[352 MustHaveRegister  "NoDefinitionFound"
  v26|d DWORD "[r9|d]" v26|d v16|d [400, 402[400 MustHaveRegister 402 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[r9|q]" v27|q -1 [402, 406[402 MustHaveRegister 406 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[rbx|q]" v28|q v18|d [404, 406[404 MustHaveRegister 406 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[r9|q]" v29|q v27|q [406, 408[406 MustHaveRegister 408 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[r9|q]" v30|q v29|q [408, 412[408 MustHaveRegister 412 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[rbx|q]" v31|q v16|d [410, 412[410 MustHaveRegister 412 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[r10|d]" v32|d v33|d [446, 552[456 ShouldHaveRegister 546 ShouldHaveRegister 552 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[r9|d]" v33|d v32|d [546, 571[546 MustHaveRegister 548 MustHaveRegister 570 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[rcx|q]" v34|q -1 [550, 551[550 MustHaveRegister  "NoDefinitionFound"
  v35|q QWORD "[rbx|q]" v35|q -1 [550, 551[550 MustHaveRegister  "NoDefinitionFound"
  v36|d DWORD "[r10|d]" v36|d -1 [552, 560[552 MustHaveRegister 554 MustHaveRegister 556 MustHaveRegister 560 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rcx|q]" v37|q v36|d [556, 559[556 MustHaveRegister 558 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rbx|q]" v38|q -1 [558, 559[558 MustHaveRegister  "NoDefinitionFound"
  v39|q QWORD "[rdi|q]" v39|q -1 [558, 559[558 MustHaveRegister  "NoDefinitionFound"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7304a70d slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction v3|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   38  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 24], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  200  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr  202  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v8|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  206  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v11|QWORD, temp2: v12|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  208  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr  210  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  212  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v13|QWORD[.]) {temp: v14|QWORD, temp2: v15|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  214  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.873445133019547 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606042513896467226
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v13|QWORD[.] 
locals: v0|QWORD[.] - v8|QWORD[.] 
>@ <|@ instruction v16|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  232  <|@ instruction v17|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v17|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v17|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B19" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction v18|DWORD = INC value: v17|DWORD size: DWORD <|@ <|@
      nr  340  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v18|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v19|QWORD, temp2: v20|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  344  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  346  <|@ instruction v22|DWORD[_] = MOV input: [v21|QWORD[.] + v17|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  348  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr  350  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v23|QWORD[.]) {temp: v24|QWORD, temp2: v25|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: v22|DWORD[_], y: v22|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B12" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v18|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction v26|DWORD = SUB (x: v16|DWORD, ~y: v18|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction v27|QWORD = MOVSXD value: v26|DWORD size: QWORD <|@ <|@
      nr  404  <|@ instruction v28|QWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction v29|QWORD = ADD (x: v27|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction v30|QWORD = DEC value: v29|QWORD size: QWORD <|@ <|@
      nr  410  <|@ instruction v31|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction CMPBRANCH (x: v31|QWORD, y: v30|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v18|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B15" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617633362313920969
    begin_IR
      LIR
      nr  446  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v32|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617517587535888605
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction v33|DWORD = INC value: v32|DWORD size: DWORD <|@ <|@
      nr  548  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v33|DWORD) size: DWORD <|@ <|@
      nr  550  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v34|QWORD, temp2: v35|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  552  <|@ instruction v36|DWORD[_] = MOV input: [v21|QWORD[.] + v32|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  554  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v36|DWORD[_]) size: DWORD <|@ <|@
      nr  556  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  558  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v37|QWORD[.]) {temp: v38|QWORD, temp2: v39|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  560  <|@ instruction TESTBRANCH (x: v36|DWORD[_], y: v36|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616789487794306628
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [v33|DWORD] destination: B16 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4604000017477932232
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593727639904736152
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592369608179927877
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592074006457236209
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 4580558013558206796
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B18" "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction rax|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr  684  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: v23|QWORD[.] 
locals: v0|QWORD[.] v21|QWORD[.] v8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction MOV x: [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr  706  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  708  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  728  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  730  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v13|QWORD[.] 
locals: v0|QWORD[.] - v8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v8|q [0, 1[[642, 644[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 26[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 30[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [30, 572[[646, 687[[688, 709[[710, 731[30 MustHaveRegister 32 MustHaveRegister 38 MustHaveRegister 42 MustHaveRegister 198 MustHaveRegister 200 MustHaveRegister 204 MustHaveRegister 206 MustHaveRegister 208 MustHaveRegister 212 MustHaveRegister 232 MustHaveRegister 340 MustHaveRegister 342 MustHaveRegister 348 MustHaveRegister 352 MustHaveRegister 548 MustHaveRegister 550 MustHaveRegister 554 MustHaveRegister 558 MustHaveRegister 571 LiveAtLoopEnd  "NoSpillStore"
  v1|d DWORD "[rax|d]" v1|d -1 [32, 36[32 MustHaveRegister 34 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r10|d]" v2|d -1 [34, 42[34 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [36, 344[36 MustHaveRegister 230 MustHaveRegister 344 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r11|d]" v4|d -1 [38, 202[38 MustHaveRegister 40 MustHaveRegister 200 MustHaveRegister 202 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[r8|d]" v5|d -1 [40, 214[40 MustHaveRegister 208 MustHaveRegister 210 MustHaveRegister 214 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[r10|q]" v6|q -1 [198, 199[198 MustHaveRegister  "NoDefinitionFound"
  v7|q QWORD "[r9|q]" v7|q -1 [198, 199[198 MustHaveRegister  "NoDefinitionFound"
  v8|q QWORD "[r11|q]" v8|q v4|d [202, 642[[646, 687[[710, 731[202 MustHaveRegister 204 MustHaveRegister 642 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[r10|q]" v9|q -1 [204, 205[204 MustHaveRegister  "NoDefinitionFound"
  v10|q QWORD "[r9|q]" v10|q -1 [204, 205[204 MustHaveRegister  "NoDefinitionFound"
  v11|q QWORD "[r10|q]" v11|q -1 [206, 207[206 MustHaveRegister  "NoDefinitionFound"
  v12|q QWORD "[r9|q]" v12|q -1 [206, 207[206 MustHaveRegister  "NoDefinitionFound"
  v13|q QWORD "[r10|q]" v13|q v5|d [210, 248[[710, 731[210 MustHaveRegister 212 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[r9|q]" v14|q -1 [212, 213[212 MustHaveRegister  "NoDefinitionFound"
  v15|q QWORD "[rcx|q]" v15|q -1 [212, 213[212 MustHaveRegister  "NoDefinitionFound"
  v16|d DWORD "[r8|d]" v16|d -1 [230, 572[230 MustHaveRegister 234 MustHaveRegister 246 MustHaveRegister 366 MustHaveRegister 400 MustHaveRegister 410 ShouldHaveRegister 424 MustHaveRegister 456 MustHaveRegister 571 LiveAtLoopEnd  "NoSpillStore"
  v17|d DWORD "[r9|d]" v17|d -1 [232, 346[232 MustHaveRegister 234 ShouldHaveRegister 246 ShouldHaveRegister 338 ShouldHaveRegister 346 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[r10|d]" v18|d v17|d [338, 445[338 MustHaveRegister 340 MustHaveRegister 366 ShouldHaveRegister 400 ShouldHaveRegister 404 ShouldHaveRegister 424 ShouldHaveRegister 444 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rcx|q]" v19|q -1 [342, 343[342 MustHaveRegister  "NoDefinitionFound"
  v20|q QWORD "[rbx|q]" v20|q -1 [342, 343[342 MustHaveRegister  "NoDefinitionFound"
  v21|q QWORD "[rax|q]" v21|q v3|d [344, 572[[646, 687[344 MustHaveRegister 346 MustHaveRegister 552 MustHaveRegister 571 LiveAtLoopEnd  "NoSpillStore"
  v22|d DWORD "[r9|d]" v22|d -1 [346, 354[346 MustHaveRegister 348 MustHaveRegister 350 MustHaveRegister 354 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rcx|q]" v23|q v22|d [350, 368[[378, 426[[646, 687[350 MustHaveRegister 352 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[rbx|q]" v24|q -1 [352, 353[352 MustHaveRegister  "NoDefinitionFound"
  v25|q QWORD "[rdi|q]" v25|q -1 [352, 353[352 MustHaveRegister  "NoDefinitionFound"
  v26|d DWORD "[r9|d]" v26|d v16|d [400, 402[400 MustHaveRegister 402 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[r9|q]" v27|q -1 [402, 406[402 MustHaveRegister 406 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[rbx|q]" v28|q v18|d [404, 406[404 MustHaveRegister 406 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[r9|q]" v29|q v27|q [406, 408[406 MustHaveRegister 408 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[r9|q]" v30|q v29|q [408, 412[408 MustHaveRegister 412 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[rbx|q]" v31|q v16|d [410, 412[410 MustHaveRegister 412 MustHaveRegister  "NoSpillStore"
  v32|d DWORD "[r10|d]" v32|d v33|d [446, 552[456 ShouldHaveRegister 546 ShouldHaveRegister 552 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[r9|d]" v33|d v32|d [546, 571[546 MustHaveRegister 548 MustHaveRegister 570 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[rcx|q]" v34|q -1 [550, 551[550 MustHaveRegister  "NoDefinitionFound"
  v35|q QWORD "[rbx|q]" v35|q -1 [550, 551[550 MustHaveRegister  "NoDefinitionFound"
  v36|d DWORD "[r10|d]" v36|d -1 [552, 560[552 MustHaveRegister 554 MustHaveRegister 556 MustHaveRegister 560 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rcx|q]" v37|q v36|d [556, 559[556 MustHaveRegister 558 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rbx|q]" v38|q -1 [558, 559[558 MustHaveRegister  "NoDefinitionFound"
  v39|q QWORD "[rdi|q]" v39|q -1 [558, 559[558 MustHaveRegister  "NoDefinitionFound"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7304a70d slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction v3|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   38  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 24], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  200  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr  202  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v8|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  206  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v11|QWORD, temp2: v12|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  208  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr  210  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  212  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v13|QWORD[.]) {temp: v14|QWORD, temp2: v15|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  214  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.873445133019547 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606042513896467226
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v13|QWORD[.] 
locals: v0|QWORD[.] - v8|QWORD[.] 
>@ <|@ instruction v16|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  232  <|@ instruction v17|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v17|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v17|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B19" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction v18|DWORD = INC value: v17|DWORD size: DWORD <|@ <|@
      nr  340  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v18|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v19|QWORD, temp2: v20|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  344  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  346  <|@ instruction v22|DWORD[_] = MOV input: [v21|QWORD[.] + v17|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  348  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr  350  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v23|QWORD[.]) {temp: v24|QWORD, temp2: v25|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: v22|DWORD[_], y: v22|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B12" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v18|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction v26|DWORD = SUB (x: v16|DWORD, ~y: v18|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction v27|QWORD = MOVSXD value: v26|DWORD size: QWORD <|@ <|@
      nr  404  <|@ instruction v28|QWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction v29|QWORD = ADD (x: v27|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction v30|QWORD = DEC value: v29|QWORD size: QWORD <|@ <|@
      nr  410  <|@ instruction v31|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction CMPBRANCH (x: v31|QWORD, y: v30|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v18|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B15" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617633362313920969
    begin_IR
      LIR
      nr  446  <|@ instruction [v32|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v32|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617517587535888605
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction v33|DWORD = INC value: v32|DWORD size: DWORD <|@ <|@
      nr  548  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v33|DWORD) size: DWORD <|@ <|@
      nr  550  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v34|QWORD, temp2: v35|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  552  <|@ instruction v36|DWORD[_] = MOV input: [v21|QWORD[.] + v32|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  554  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v36|DWORD[_]) size: DWORD <|@ <|@
      nr  556  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  558  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v37|QWORD[.]) {temp: v38|QWORD, temp2: v39|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  560  <|@ instruction TESTBRANCH (x: v36|DWORD[_], y: v36|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616789487794306628
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: v33|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4604000017477932232
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593727639904736152
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592369608179927877
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592074006457236209
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 4580558013558206796
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B18" "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction rax|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr  684  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: v23|QWORD[.] 
locals: v0|QWORD[.] v21|QWORD[.] v8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction MOV x: [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr  706  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  708  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  728  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  730  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v13|QWORD[.] 
locals: v0|QWORD[.] - v8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7304a70d slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction v3|DWORD[_] = MOV input: [v1|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   38  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction v5|DWORD[_] = MOV input: [v4|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 24], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  200  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v4|DWORD[_]) size: DWORD <|@ <|@
      nr  202  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v8|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  206  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v11|QWORD, temp2: v12|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  208  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr  210  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  212  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v13|QWORD[.]) {temp: v14|QWORD, temp2: v15|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  214  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.873445133019547 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606042513896467226
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v13|QWORD[.] 
locals: v0|QWORD[.] - v8|QWORD[.] 
>@ <|@ instruction v16|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  232  <|@ instruction v17|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v17|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v17|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B19" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction v18|DWORD = INC value: v17|DWORD size: DWORD <|@ <|@
      nr  340  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v18|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v19|QWORD, temp2: v20|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  344  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  346  <|@ instruction v22|DWORD[_] = MOV input: [v21|QWORD[.] + v17|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  348  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v22|DWORD[_]) size: DWORD <|@ <|@
      nr  350  <|@ instruction v23|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v23|QWORD[.]) {temp: v24|QWORD, temp2: v25|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: v22|DWORD[_], y: v22|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B12" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v18|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction v26|DWORD = SUB (x: v16|DWORD, ~y: v18|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction v27|QWORD = MOVSXD value: v26|DWORD size: QWORD <|@ <|@
      nr  404  <|@ instruction v28|QWORD = MOVE input: v18|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction v29|QWORD = ADD (x: v27|QWORD, y: v28|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction v30|QWORD = DEC value: v29|QWORD size: QWORD <|@ <|@
      nr  410  <|@ instruction v31|QWORD = MOVE input: v16|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction CMPBRANCH (x: v31|QWORD, y: v30|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v18|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B15" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617633362313920969
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction CMPBRANCH (x: v16|DWORD, y: v32|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617517587535888605
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction v33|DWORD = INC value: v32|DWORD size: DWORD <|@ <|@
      nr  548  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v33|DWORD) size: DWORD <|@ <|@
      nr  550  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v34|QWORD, temp2: v35|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  552  <|@ instruction v36|DWORD[_] = MOV input: [v21|QWORD[.] + v32|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  554  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v36|DWORD[_]) size: DWORD <|@ <|@
      nr  556  <|@ instruction v37|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  558  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v37|QWORD[.]) {temp: v38|QWORD, temp2: v39|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  560  <|@ instruction TESTBRANCH (x: v36|DWORD[_], y: v36|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616789487794306628
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE input: v33|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4604000017477932232
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593727639904736152
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592369608179927877
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592074006457236209
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 4580558013558206796
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B18" "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction rax|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr  684  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: v23|QWORD[.] 
locals: v0|QWORD[.] v21|QWORD[.] v8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction MOV x: [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr  706  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  708  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: v0|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  728  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  730  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: v13|QWORD[.] 
locals: v0|QWORD[.] - v8|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7304a70d slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   38  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 24], ~expectedObject: -) {temp: r10|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  200  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  202  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: r10|QWORD, temp2: r9|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  206  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  208  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  210  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  212  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r10|QWORD[.]) {temp: r9|QWORD, temp2: rcx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  214  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.873445133019547 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606042513896467226
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] - r11|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  232  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B19" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction r10|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  340  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  344  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  346  <|@ instruction r9|DWORD[_] = MOV input: [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  348  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rbx|QWORD, temp2: rdi|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B12" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction r9|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction r9|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr  404  <|@ instruction rbx|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction r9|QWORD = ADD (x: r9|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction r9|QWORD = DEC value: r9|QWORD size: QWORD <|@ <|@
      nr  410  <|@ instruction rbx|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: r9|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B15" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617633362313920969
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617517587535888605
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction r9|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  548  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr  550  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  552  <|@ instruction r10|DWORD[_] = MOV input: [rax|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  554  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  556  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  558  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rbx|QWORD, temp2: rdi|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  560  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616789487794306628
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4604000017477932232
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593727639904736152
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592369608179927877
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592074006457236209
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 4580558013558206796
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B18" "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr  684  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: rcx|QWORD[.] 
locals: rsi|QWORD[.] rax|QWORD[.] r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction MOV x: [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr  706  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  708  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  728  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  730  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] - r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7304a70d slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   38  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 24], ~expectedObject: -) {temp: r10|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  200  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  202  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: r10|QWORD, temp2: r9|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  206  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  208  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  210  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  212  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r10|QWORD[.]) {temp: r9|QWORD, temp2: rcx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  214  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.873445133019547 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606042513896467226
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] - r11|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  232  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B19" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction r10|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  340  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  344  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  346  <|@ instruction r9|DWORD[_] = MOV input: [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  348  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rbx|QWORD, temp2: rdi|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B12" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction r9|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction r9|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr  404  <|@ instruction rbx|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction r9|QWORD = ADD (x: r9|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction r9|QWORD = DEC value: r9|QWORD size: QWORD <|@ <|@
      nr  410  <|@ instruction rbx|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: r9|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B15" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617633362313920969
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617517587535888605
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction r9|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  548  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr  550  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  552  <|@ instruction r10|DWORD[_] = MOV input: [rax|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  554  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  556  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  558  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rbx|QWORD, temp2: rdi|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  560  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616789487794306628
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4604000017477932232
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593727639904736152
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592369608179927877
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592074006457236209
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 4580558013558206796
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B18" "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr  684  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: rcx|QWORD[.] 
locals: rsi|QWORD[.] rax|QWORD[.] r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction MOV x: [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr  706  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  708  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  728  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  730  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] - r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7304a70d slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   38  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 24], ~expectedObject: -) {temp: r10|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  200  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  202  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: r10|QWORD, temp2: r9|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  206  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  208  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  210  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  212  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r10|QWORD[.]) {temp: r9|QWORD, temp2: rcx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  214  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.873445133019547 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606042513896467226
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] - r11|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  232  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B19" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction r10|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  340  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  344  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  346  <|@ instruction r9|DWORD[_] = MOV input: [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  348  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rbx|QWORD, temp2: rdi|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B12" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction r9|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction r9|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr  404  <|@ instruction rbx|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction r9|QWORD = ADD (x: r9|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction r9|QWORD = DEC value: r9|QWORD size: QWORD <|@ <|@
      nr  410  <|@ instruction rbx|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: r9|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B15" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617633362313920969
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617517587535888605
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction r9|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  548  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr  550  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  552  <|@ instruction r10|DWORD[_] = MOV input: [rax|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  554  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  556  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  558  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rbx|QWORD, temp2: rdi|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  560  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616789487794306628
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4604000017477932232
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593727639904736152
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592369608179927877
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592074006457236209
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 4580558013558206796
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B18" "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr  684  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: rcx|QWORD[.] 
locals: rsi|QWORD[.] rax|QWORD[.] r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction MOV x: [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr  706  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  708  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  728  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  730  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] - r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7304a70d slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   38  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 24], ~expectedObject: -) {temp: r10|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  200  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  202  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: r10|QWORD, temp2: r9|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  206  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  208  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  210  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  212  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r10|QWORD[.]) {temp: r9|QWORD, temp2: rcx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  214  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.873445133019547 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606042513896467226
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] - r11|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  232  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B19" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction r10|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  340  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  344  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  346  <|@ instruction r9|DWORD[_] = MOV input: [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  348  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rbx|QWORD, temp2: rdi|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B12" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction r9|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction r9|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr  404  <|@ instruction rbx|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction r9|QWORD = ADD (x: r9|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction r9|QWORD = DEC value: r9|QWORD size: QWORD <|@ <|@
      nr  410  <|@ instruction rbx|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: r9|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B15" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617633362313920969
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617517587535888605
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction r9|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  548  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr  550  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  552  <|@ instruction r10|DWORD[_] = MOV input: [rax|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  554  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  556  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  558  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rbx|QWORD, temp2: rdi|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  560  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616789487794306628
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4604000017477932232
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593727639904736152
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592369608179927877
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592074006457236209
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 4580558013558206796
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B18" "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr  684  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: rcx|QWORD[.] 
locals: rsi|QWORD[.] rax|QWORD[.] r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction MOV x: [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr  706  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  708  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  728  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  730  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] - r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7304a70d slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   38  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 24], ~expectedObject: -) {temp: r10|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  200  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  202  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: r10|QWORD, temp2: r9|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  206  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  208  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  210  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  212  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r10|QWORD[.]) {temp: r9|QWORD, temp2: rcx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  214  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.873445133019547 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606042513896467226
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] - r11|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  232  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B19" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction r10|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  340  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  344  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  346  <|@ instruction r9|DWORD[_] = MOV input: [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  348  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rbx|QWORD, temp2: rdi|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B12" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction r9|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction r9|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr  404  <|@ instruction rbx|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction r9|QWORD = ADD (x: r9|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction r9|QWORD = DEC value: r9|QWORD size: QWORD <|@ <|@
      nr  410  <|@ instruction rbx|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: r9|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B15" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617633362313920969
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617517587535888605
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction r9|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  548  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr  550  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  552  <|@ instruction r10|DWORD[_] = MOV input: [rax|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  554  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  556  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  558  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rbx|QWORD, temp2: rdi|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  560  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616789487794306628
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4604000017477932232
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593727639904736152
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592369608179927877
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592074006457236209
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 4580558013558206796
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B18" "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr  684  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: rcx|QWORD[.] 
locals: rsi|QWORD[.] rax|QWORD[.] r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction MOV x: [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr  706  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  708  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  728  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  730  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] - r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7304a70d slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   38  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 24], ~expectedObject: -) {temp: r10|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  200  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  202  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: r10|QWORD, temp2: r9|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  206  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  208  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  210  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  212  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r10|QWORD[.]) {temp: r9|QWORD, temp2: rcx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  214  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.873445133019547 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606042513896467226
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] - r11|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  232  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B19" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction r10|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  340  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  344  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  346  <|@ instruction r9|DWORD[_] = MOV input: [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  348  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rbx|QWORD, temp2: rdi|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B12" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction r9|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction r9|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr  404  <|@ instruction rbx|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction r9|QWORD = ADD (x: r9|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction r9|QWORD = DEC value: r9|QWORD size: QWORD <|@ <|@
      nr  410  <|@ instruction rbx|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: r9|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B15" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617633362313920969
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617517587535888605
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction r9|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  548  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr  550  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  552  <|@ instruction r10|DWORD[_] = MOV input: [rax|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  554  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  556  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  558  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rbx|QWORD, temp2: rdi|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  560  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616789487794306628
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4604000017477932232
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593727639904736152
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592369608179927877
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592074006457236209
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 4580558013558206796
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B18" "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr  684  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: rcx|QWORD[.] 
locals: rsi|QWORD[.] rax|QWORD[.] r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction MOV x: [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr  706  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  708  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  728  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  730  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] - r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7304a70d slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   38  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 24], ~expectedObject: -) {temp: r10|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  200  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  202  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: r10|QWORD, temp2: r9|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  206  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  208  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  210  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  212  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r10|QWORD[.]) {temp: r9|QWORD, temp2: rcx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  214  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.873445133019547 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606042513896467226
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] - r11|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  232  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B19" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction r10|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  340  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  344  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  346  <|@ instruction r9|DWORD[_] = MOV input: [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  348  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rbx|QWORD, temp2: rdi|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B12" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction r9|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction r9|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr  404  <|@ instruction rbx|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction r9|QWORD = ADD (x: r9|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction r9|QWORD = DEC value: r9|QWORD size: QWORD <|@ <|@
      nr  410  <|@ instruction rbx|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: r9|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B15" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617633362313920969
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617517587535888605
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction r9|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  548  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr  550  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  552  <|@ instruction r10|DWORD[_] = MOV input: [rax|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  554  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  556  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  558  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rbx|QWORD, temp2: rdi|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  560  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616789487794306628
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4604000017477932232
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593727639904736152
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592369608179927877
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592074006457236209
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 4580558013558206796
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B18" "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr  684  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: rcx|QWORD[.] 
locals: rsi|QWORD[.] rax|QWORD[.] r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction MOV x: [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr  706  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  708  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  728  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  730  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] - r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7304a70d slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   38  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 24], ~expectedObject: -) {temp: r10|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  200  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  202  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: r10|QWORD, temp2: r9|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  206  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  208  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  210  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  212  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r10|QWORD[.]) {temp: r9|QWORD, temp2: rcx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  214  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.873445133019547 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606042513896467226
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] - r11|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  232  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B19" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction r10|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  340  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  344  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  346  <|@ instruction r9|DWORD[_] = MOV input: [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  348  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rbx|QWORD, temp2: rdi|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B12" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction r9|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction r9|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr  404  <|@ instruction rbx|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction r9|QWORD = ADD (x: r9|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction r9|QWORD = DEC value: r9|QWORD size: QWORD <|@ <|@
      nr  410  <|@ instruction rbx|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: r9|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B15" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617633362313920969
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617517587535888605
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction r9|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  548  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr  550  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  552  <|@ instruction r10|DWORD[_] = MOV input: [rax|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  554  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  556  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  558  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rbx|QWORD, temp2: rdi|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  560  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616789487794306628
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4604000017477932232
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593727639904736152
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592369608179927877
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592074006457236209
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 4580558013558206796
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B18" "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr  684  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: rcx|QWORD[.] 
locals: rsi|QWORD[.] rax|QWORD[.] r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction MOV x: [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr  706  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  708  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  728  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  730  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] - r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7304a70d slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   38  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 24], ~expectedObject: -) {temp: r10|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  200  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  202  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: r10|QWORD, temp2: r9|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  206  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  208  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  210  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  212  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r10|QWORD[.]) {temp: r9|QWORD, temp2: rcx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  214  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.873445133019547 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606042513896467226
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] - r11|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  232  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B19" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction r10|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  340  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  344  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  346  <|@ instruction r9|DWORD[_] = MOV input: [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  348  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rbx|QWORD, temp2: rdi|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B12" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617517587535888605
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction r9|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  548  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr  550  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  552  <|@ instruction r10|DWORD[_] = MOV input: [rax|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  554  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  556  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  558  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rbx|QWORD, temp2: rdi|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  560  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616789487794306628
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B15" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617633362313920969
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4604000017477932232
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B18" "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction r9|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction r9|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr  404  <|@ instruction rbx|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction r9|QWORD = ADD (x: r9|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction r9|QWORD = DEC value: r9|QWORD size: QWORD <|@ <|@
      nr  410  <|@ instruction rbx|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: r9|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593727639904736152
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592369608179927877
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592074006457236209
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 4580558013558206796
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr  684  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: rcx|QWORD[.] 
locals: rsi|QWORD[.] rax|QWORD[.] r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction MOV x: [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr  706  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  708  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  728  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  730  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] - r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7304a70d slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   38  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 24], ~expectedObject: -) {temp: r10|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  200  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  202  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: r10|QWORD, temp2: r9|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  206  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  208  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  210  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  212  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r10|QWORD[.]) {temp: r9|QWORD, temp2: rcx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  214  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.873445133019547 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606042513896467226
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] - r11|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  232  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B19" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction r10|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  340  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  344  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  346  <|@ instruction r9|DWORD[_] = MOV input: [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  348  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rbx|QWORD, temp2: rdi|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B12" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617517587535888605
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction r9|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  548  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr  550  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  552  <|@ instruction r10|DWORD[_] = MOV input: [rax|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  554  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  556  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  558  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rbx|QWORD, temp2: rdi|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  560  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616789487794306628
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B15" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617633362313920969
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4604000017477932232
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B18" "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction r9|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction r9|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr  404  <|@ instruction rbx|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction r9|QWORD = ADD (x: r9|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction r9|QWORD = DEC value: r9|QWORD size: QWORD <|@ <|@
      nr  410  <|@ instruction rbx|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: r9|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593727639904736152
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592369608179927877
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592074006457236209
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 4580558013558206796
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr  684  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: rcx|QWORD[.] 
locals: rsi|QWORD[.] rax|QWORD[.] r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction MOV x: [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr  706  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  708  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  728  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  730  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] - r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7304a70d slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   38  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 24], ~expectedObject: -) {temp: r10|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  200  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  202  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: r10|QWORD, temp2: r9|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  206  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  208  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  210  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  212  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r10|QWORD[.]) {temp: r9|QWORD, temp2: rcx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  214  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.873445133019547 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606042513896467226
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] - r11|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  232  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B19" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction r10|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  340  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  344  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  346  <|@ instruction r9|DWORD[_] = MOV input: [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  348  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rbx|QWORD, temp2: rdi|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B12" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617517587535888605
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction r9|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  548  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr  550  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  552  <|@ instruction r10|DWORD[_] = MOV input: [rax|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  554  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  556  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  558  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rbx|QWORD, temp2: rdi|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  560  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616789487794306628
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B15" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617633362313920969
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4604000017477932232
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B18" "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction r9|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction r9|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr  404  <|@ instruction rbx|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction r9|QWORD = ADD (x: r9|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction r9|QWORD = DEC value: r9|QWORD size: QWORD <|@ <|@
      nr  410  <|@ instruction rbx|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: r9|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593727639904736152
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592369608179927877
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592074006457236209
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 4580558013558206796
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr  684  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  686  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: rcx|QWORD[.] 
locals: rsi|QWORD[.] rax|QWORD[.] r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction MOV x: [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr  706  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  708  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  728  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  730  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] - r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7304a70d slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   38  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [rax:0, rsi:0, r11:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 24], ~expectedObject: -) {temp: r10|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  200  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  202  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: r10|QWORD, temp2: r9|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  206  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  208  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  210  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  212  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r10|QWORD[.]) {temp: r9|QWORD, temp2: rcx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  214  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.873445133019547 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606042513896467226
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, r11:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] - r11|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  232  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B19" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction r10|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  340  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  344  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  346  <|@ instruction r9|DWORD[_] = MOV input: [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  348  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rbx|QWORD, temp2: rdi|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B12" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617517587535888605
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction r9|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  548  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr  550  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  552  <|@ instruction r10|DWORD[_] = MOV input: [rax|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  554  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  556  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  558  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rbx|QWORD, temp2: rdi|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  560  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616789487794306628
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B15" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617633362313920969
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4604000017477932232
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B18" "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction r9|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction r9|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr  404  <|@ instruction rbx|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction r9|QWORD = ADD (x: r9|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction r9|QWORD = DEC value: r9|QWORD size: QWORD <|@ <|@
      nr  410  <|@ instruction rbx|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: r9|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593727639904736152
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592369608179927877
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592074006457236209
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 4580558013558206796
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr  684  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  686  <|@ st <@st|@reference-map: [rax:0, rcx:0, rsi:0, r11:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: rcx|QWORD[.] 
locals: rsi|QWORD[.] rax|QWORD[.] r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction MOV x: [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr  706  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  708  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  728  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  730  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] - r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7304a70d slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 36] size: DWORD <|@ <|@
      nr   38  <|@ instruction r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [rax:0, rsi:0, r11:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD state [bci:0] <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B22" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 24], ~expectedObject: -) {temp: r10|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  200  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  202  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: r10|QWORD, temp2: r9|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  206  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  208  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  210  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  212  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r10|QWORD[.]) {temp: r9|QWORD, temp2: rcx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  214  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.873445133019547 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B21" 
    xhandlers
    flags 
    probability 4606042513896467226
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0, r11:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] - r11|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:53] <|@ <|@
      nr  232  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B20" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B19" 
    xhandlers
    flags 
    probability 4605889364141786512
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction r10|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  340  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  342  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  344  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  346  <|@ instruction r9|DWORD[_] = MOV input: [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  348  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  350  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  352  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rbx|QWORD, temp2: rdi|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B12" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B12 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B8" 
    successors "B14" 
    xhandlers
    flags 
    probability 4604926215702191143
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4617517587535888605
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction r9|DWORD = INC value: r10|DWORD size: DWORD <|@ <|@
      nr  548  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr  550  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  552  <|@ instruction r10|DWORD[_] = MOV input: [rax|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  554  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  556  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3 <|@ <|@
      nr  558  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rbx|QWORD, temp2: rdi|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d <|@ <|@
      nr  560  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B14" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4616789487794306628
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" "B16" 
    successors "B15" "B18" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4617633362313920969
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B23" 
    xhandlers
    flags 
    probability 4604000017477932232
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" "B18" "B17" "B19" "B21" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017407
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B10" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction r9|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction r9|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr  404  <|@ instruction rbx|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  406  <|@ instruction r9|QWORD = ADD (x: r9|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction r9|QWORD = DEC value: r9|QWORD size: QWORD <|@ <|@
      nr  410  <|@ instruction rbx|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: r9|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4600422616074820647
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B23" 
    xhandlers
    flags 
    probability 4593727639904736152
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592369608179927877
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4592074006457236209
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" 
    xhandlers
    flags 
    probability 4580558013558206796
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction MOV x: [r15|QWORD + 1156] y: -40475 size: DWORD <|@ <|@
      nr  684  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1944 size: QWORD <|@ <|@
      nr  686  <|@ st <@st|@reference-map: [rax:0, rcx:0, rsi:0, r11:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95]
stack: rcx|QWORD[.] 
locals: rsi|QWORD[.] rax|QWORD[.] r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:95] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction MOV x: [r15|QWORD + 1156] y: -59155 size: DWORD <|@ <|@
      nr  706  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  708  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0]
locals: rsi|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  728  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  730  <|@ st <@st|@reference-map: [rsi:0, r10:0, r11:0]
live-base-pointers: []
java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53]
stack: r10|QWORD[.] 
locals: rsi|QWORD[.] - r11|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:53] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #5          // next:java.util.HashMap$Node
     4: astore_2      
     5: aload_0       
     6: getfield      #0          // this$0:java.util.HashMap
     9: getfield      #2          // java.util.HashMap.modCount:int
    12: aload_0       
    13: getfield      #3          // expectedModCount:int
    16: if_icmpeq     27
    19: new           #39         // java.util.ConcurrentModificationException
    22: dup           
    23: invokespecial #9          // java.util.ConcurrentModificationException.<init>:()void
    26: athrow        
    27: aload_2       
    28: ifnonnull     39
    31: new           #42         // java.util.NoSuchElementException
    34: dup           
    35: invokespecial #10         // java.util.NoSuchElementException.<init>:()void
    38: athrow        
    39: aload_0       
    40: aload_0       
    41: aload_2       
    42: dup_x1        
    43: putfield      #6          // current:java.util.HashMap$Node
    46: getfield      #11         // java.util.HashMap$Node.next:java.util.HashMap$Node
    49: dup_x1        
    50: putfield      #5          // next:java.util.HashMap$Node
    53: ifnonnull     98
    56: aload_0       
    57: getfield      #0          // this$0:java.util.HashMap
    60: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    63: dup           
    64: astore_1      
    65: ifnull        98
    68: aload_0       
    69: getfield      #7          // index:int
    72: aload_1       
    73: arraylength   
    74: if_icmpge     98
    77: aload_0       
    78: aload_1       
    79: aload_0       
    80: dup           
    81: getfield      #7          // index:int
    84: dup_x1        
    85: iconst_1      
    86: iadd          
    87: putfield      #7          // index:int
    90: aaload        
    91: dup_x1        
    92: putfield      #5          // next:java.util.HashMap$Node
    95: ifnull        68
    98: aload_2       
    99: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc00000007677f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec189041817f20000000000f85fc04000090909090909090909090909048896c24108b461c448b14c5180000008b04c524000000448b5e14468b04dd18000000443b560c0f856f0400009090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f842e000000448b4e1849c1e1034d85c90f841d0000004d8b57284983fa000f845d0400004983ea084d8957284d0357384d890a44895e1849c1e3034c8bd64d33d349c1ea160f844e0000004d85db0f84450000004c8bd649c1ea0949b900d02669677f00004d03d141803a02742bf08304240041803a00742041c602004d8b4f484d85c90f84060400004983e9084d894f484d034f584d891141807f40000f842e000000448b4e1449c1e1034d85c90f841d0000004d8b57284983fa000f84dc0300004983ea084d8957284d0357384d890a44894614458bd049c1e2034c8bce4d33ca49c1e9160f844e0000004d85d20f84450000004c8bce49c1e90948b900d02669677f00004c03c941803902742bf08304240041803900742041c60100498b4f484885c90f84820300004883e90849894f4849034f584c89094585c00f8593020000909090909090448b04c50c000000448b4e10453bc10f8e8702000090909090453bc10f86db0200009090909090909090909090909090909090909090909090909090909090909090909090909090909090909090458bd141ffc24489561041807f40000f842d0000008b5e1448c1e3034885db0f841d000000498b4f284883f9000f84f20200004883e90849894f2849034f3848891948c1e003468b4c881044894e14418bc948c1e103488bde4833d948c1eb160f844b0000004885c90f8442000000488bde48c1eb0948bf00d02669677f00004803df803b027429f083042400803b00741fc60300498b7f484885ff0f84920200004883ef0849897f4849037f5848891f4585c90f858a01000090909090453bc20f8f3b010000909090909090e9f80000006666660f1f84000000000066666690669090909090909090909090909090909090909090909090909090909090909090909090909090909090909090458bca41ffc144894e1041807f40000f842d0000008b5e1448c1e3034885db0f841d000000498b4f284883f9000f84020200004883e90849894f2849034f38488919468b54901044895614418bca48c1e103488bde4833d948c1eb160f844b0000004885c90f8442000000488bde48c1eb0948bf00d02669677f00004803df803b027429f083042400803b00741fc60300498b7f484885ff0f84a60100004883ef0849897f4849037f5848891f4585d20f8518000000909090458bd190909090453bc20f8f0cffffffe96d000000909090909090909090909090498bc3488b6c24104883c418493ba7500400000f8760010000c390909090909090909090458bc8452bca4d63c9418bda4c03cb49ffc9418bd8493bd90f862900000090909090453bc20f8649000000909090e98bfeffff909090eb9b909090eb96909090eb91909090eb8c9090909090909090909041c78784040000e561ffff49c7879004000098070000e8000000000f1f840000000000909090ebd19090909090909041c78784040000ed18ffff49c7879004000014000000e8000000000f1f8400000000009090909090909041c78784040000e56fffff49c7879004000000000000e8000000000f1f84000000000048896c2410e800000000e9f5fafffff44c890c24e800000000e9a4fbfffff44c891424e800000000e9fbfbfffff44c890c24e800000000e925fcfffff44c890c24e800000000e97ffcfffff448891c24e800000000e90ffdfffff448891c24e800000000e96ffdfffff448891c24e800000000e9fffdfffff448891c24e800000000e95bfefffff4488d0d8cfeffff49898f68040000e92ffafffff441c78784040000f591ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f585ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f579ffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f678da335c8, value=140082329178240]:0x7f6775785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 75 28 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7304a70d slotKind: QWORD  <||@
  Comment 75 32 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 78 34 r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 24] size: DWORD state [bci:0]  <||@
  Comment 78 [rax:0, rsi:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 78 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 86 36 rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 36] size: DWORD  <||@
  Comment 93 38 r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 97 40 r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD state [bci:0]  <||@
  Comment 97 [rax:0, rsi:0, r11:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 97 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 105 42 CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: DWORD  <||@
  Comment 115 block B1 null  <||@
  Comment 115 44 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 115 46 NOP  <||@
  Comment 116 48 NOP  <||@
  Comment 117 50 NOP  <||@
  Comment 118 52 NOP  <||@
  Comment 119 54 NOP  <||@
  Comment 120 56 NOP  <||@
  Comment 121 58 NOP  <||@
  Comment 122 60 NOP  <||@
  Comment 123 62 NOP  <||@
  Comment 124 64 NOP  <||@
  Comment 125 66 NOP  <||@
  Comment 126 68 NOP  <||@
  Comment 127 70 NOP  <||@
  Comment 128 72 NOP  <||@
  Comment 129 74 NOP  <||@
  Comment 130 76 NOP  <||@
  Comment 131 78 NOP  <||@
  Comment 132 80 NOP  <||@
  Comment 133 82 NOP  <||@
  Comment 134 84 NOP  <||@
  Comment 135 86 NOP  <||@
  Comment 136 88 NOP  <||@
  Comment 137 90 NOP  <||@
  Comment 138 92 NOP  <||@
  Comment 139 94 NOP  <||@
  Comment 140 96 NOP  <||@
  Comment 141 98 NOP  <||@
  Comment 142 100 NOP  <||@
  Comment 143 102 NOP  <||@
  Comment 144 104 NOP  <||@
  Comment 145 106 NOP  <||@
  Comment 146 108 NOP  <||@
  Comment 147 110 NOP  <||@
  Comment 148 112 NOP  <||@
  Comment 149 114 NOP  <||@
  Comment 150 116 NOP  <||@
  Comment 151 118 NOP  <||@
  Comment 152 120 NOP  <||@
  Comment 153 122 NOP  <||@
  Comment 154 124 NOP  <||@
  Comment 155 126 NOP  <||@
  Comment 156 128 NOP  <||@
  Comment 157 130 NOP  <||@
  Comment 158 132 NOP  <||@
  Comment 159 134 NOP  <||@
  Comment 160 136 NOP  <||@
  Comment 161 138 NOP  <||@
  Comment 162 140 NOP  <||@
  Comment 163 142 NOP  <||@
  Comment 164 144 NOP  <||@
  Comment 165 146 NOP  <||@
  Comment 166 148 NOP  <||@
  Comment 167 150 NOP  <||@
  Comment 168 152 NOP  <||@
  Comment 169 154 NOP  <||@
  Comment 170 156 NOP  <||@
  Comment 171 158 NOP  <||@
  Comment 172 160 NOP  <||@
  Comment 173 162 NOP  <||@
  Comment 174 164 NOP  <||@
  Comment 175 166 NOP  <||@
  Comment 176 168 NOP  <||@
  Comment 177 170 NOP  <||@
  Comment 178 172 NOP  <||@
  Comment 179 174 NOP  <||@
  Comment 180 176 NOP  <||@
  Comment 181 178 NOP  <||@
  Comment 182 180 NOP  <||@
  Comment 183 182 NOP  <||@
  Comment 184 184 NOP  <||@
  Comment 185 186 NOP  <||@
  Comment 186 188 NOP  <||@
  Comment 187 190 NOP  <||@
  Comment 188 192 NOP  <||@
  Comment 189 194 NOP  <||@
  Comment 190 196 NOP  <||@
  Comment 191 198 AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 24], ~expectedObject: -) {temp: r10|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d  <||@
  Comment 248 200 MOV (x: [rsi|QWORD[.] + 24], y: r11|DWORD[_]) size: DWORD  <||@
  Comment 252 202 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3  <||@
  Comment 256 204 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: r10|QWORD, temp2: r9|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d  <||@
  Comment 350 206 AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d  <||@
  Comment 407 208 MOV (x: [rsi|QWORD[.] + 20], y: r8|DWORD[_]) size: DWORD  <||@
  Comment 411 210 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3  <||@
  Comment 418 212 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r10|QWORD[.]) {temp: r9|QWORD, temp2: rcx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d  <||@
  Comment 512 214 TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.873445133019547 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B22 size: DWORD  <||@
  Comment 521 block B2 null  <||@
  Comment 521 216 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 521 218 NOP  <||@
  Comment 522 220 NOP  <||@
  Comment 523 222 NOP  <||@
  Comment 524 224 NOP  <||@
  Comment 525 226 NOP  <||@
  Comment 526 228 NOP  <||@
  Comment 527 230 r8|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:53]  <||@
  Comment 527 [rax:0, rsi:0, r10:0, r11:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53, duringCall: false, rethrow: false]
              |0             |1  |2            
     locals:  |rsi|QWORD[.]  |-  |r11|QWORD[.] 
     stack:   |r10|QWORD[.]  |   |               <||@
  Comment 527 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 535 232 r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 539 234 CMPBRANCH (x: r8|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B21 size: DWORD  <||@
  Comment 548 block B3 null  <||@
  Comment 548 236 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 548 238 NOP  <||@
  Comment 549 240 NOP  <||@
  Comment 550 242 NOP  <||@
  Comment 551 244 NOP  <||@
  Comment 552 246 CMPBRANCH (x: r8|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD  <||@
  Comment 561 block B4 null  <||@
  Comment 561 248 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 561 250 NOP  <||@
  Comment 562 252 NOP  <||@
  Comment 563 254 NOP  <||@
  Comment 564 256 NOP  <||@
  Comment 565 258 NOP  <||@
  Comment 566 260 NOP  <||@
  Comment 567 262 NOP  <||@
  Comment 568 264 NOP  <||@
  Comment 569 266 NOP  <||@
  Comment 570 268 NOP  <||@
  Comment 571 270 NOP  <||@
  Comment 572 272 NOP  <||@
  Comment 573 274 NOP  <||@
  Comment 574 276 NOP  <||@
  Comment 575 278 NOP  <||@
  Comment 576 280 NOP  <||@
  Comment 577 282 NOP  <||@
  Comment 578 284 NOP  <||@
  Comment 579 286 NOP  <||@
  Comment 580 288 NOP  <||@
  Comment 581 290 NOP  <||@
  Comment 582 292 NOP  <||@
  Comment 583 294 NOP  <||@
  Comment 584 296 NOP  <||@
  Comment 585 298 NOP  <||@
  Comment 586 300 NOP  <||@
  Comment 587 302 NOP  <||@
  Comment 588 304 NOP  <||@
  Comment 589 306 NOP  <||@
  Comment 590 308 NOP  <||@
  Comment 591 310 NOP  <||@
  Comment 592 312 NOP  <||@
  Comment 593 314 NOP  <||@
  Comment 594 316 NOP  <||@
  Comment 595 318 NOP  <||@
  Comment 596 320 NOP  <||@
  Comment 597 322 NOP  <||@
  Comment 598 324 NOP  <||@
  Comment 599 326 NOP  <||@
  Comment 600 328 NOP  <||@
  Comment 601 330 NOP  <||@
  Comment 602 332 NOP  <||@
  Comment 603 334 NOP  <||@
  Comment 604 336 NOP  <||@
  Comment 605 338 r10|DWORD = INC value: r9|DWORD size: DWORD  <||@
  Comment 611 340 MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 615 342 AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d  <||@
  Comment 671 344 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3  <||@
  Comment 675 346 r9|DWORD[_] = MOV input: [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 680 348 MOV (x: [rsi|QWORD[.] + 20], y: r9|DWORD[_]) size: DWORD  <||@
  Comment 684 350 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3  <||@
  Comment 691 352 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rbx|QWORD, temp2: rdi|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d  <||@
  Comment 782 354 TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B19 size: DWORD  <||@
  Comment 791 block B5 null  <||@
  Comment 791 356 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 791 358 NOP  <||@
  Comment 792 360 NOP  <||@
  Comment 793 362 NOP  <||@
  Comment 794 364 NOP  <||@
  Comment 795 366 CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B12 size: DWORD  <||@
  Comment 804 block B12 null  <||@
  Comment 804 368 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 804 370 NOP  <||@
  Comment 805 372 NOP  <||@
  Comment 806 374 NOP  <||@
  Comment 807 376 JUMP ~outgoingValues: [] destination: B12 -> B13  <||@
  Comment 807 block B13 null  <||@
  Comment 807 436 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 807 438 NOP  <||@
  Comment 808 440 NOP  <||@
  Comment 809 442 NOP  <||@
  Comment 810 444 JUMP ~outgoingValues: [] destination: B13 -> B14  <||@
  Comment 815 block B15 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 815 458 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 832 460 NOP  <||@
  Comment 833 462 NOP  <||@
  Comment 834 464 NOP  <||@
  Comment 835 466 NOP  <||@
  Comment 836 468 NOP  <||@
  Comment 837 470 NOP  <||@
  Comment 838 472 NOP  <||@
  Comment 839 474 NOP  <||@
  Comment 840 476 NOP  <||@
  Comment 841 478 NOP  <||@
  Comment 842 480 NOP  <||@
  Comment 843 482 NOP  <||@
  Comment 844 484 NOP  <||@
  Comment 845 486 NOP  <||@
  Comment 846 488 NOP  <||@
  Comment 847 490 NOP  <||@
  Comment 848 492 NOP  <||@
  Comment 849 494 NOP  <||@
  Comment 850 496 NOP  <||@
  Comment 851 498 NOP  <||@
  Comment 852 500 NOP  <||@
  Comment 853 502 NOP  <||@
  Comment 854 504 NOP  <||@
  Comment 855 506 NOP  <||@
  Comment 856 508 NOP  <||@
  Comment 857 510 NOP  <||@
  Comment 858 512 NOP  <||@
  Comment 859 514 NOP  <||@
  Comment 860 516 NOP  <||@
  Comment 861 518 NOP  <||@
  Comment 862 520 NOP  <||@
  Comment 863 522 NOP  <||@
  Comment 864 524 NOP  <||@
  Comment 865 526 NOP  <||@
  Comment 866 528 NOP  <||@
  Comment 867 530 NOP  <||@
  Comment 868 532 NOP  <||@
  Comment 869 534 NOP  <||@
  Comment 870 536 NOP  <||@
  Comment 871 538 NOP  <||@
  Comment 872 540 NOP  <||@
  Comment 873 542 NOP  <||@
  Comment 874 544 NOP  <||@
  Comment 875 546 r9|DWORD = INC value: r10|DWORD size: DWORD  <||@
  Comment 881 548 MOV (x: [rsi|QWORD[.] + 16], y: r9|DWORD) size: DWORD  <||@
  Comment 885 550 AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d  <||@
  Comment 941 552 r10|DWORD[_] = MOV input: [rax|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD  <||@
  Comment 946 554 MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD  <||@
  Comment 950 556 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3  <||@
  Comment 957 558 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rbx|QWORD, temp2: rdi|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d  <||@
  Comment 1048 560 TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD  <||@
  Comment 1057 block B16 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 1057 562 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1057 564 NOP  <||@
  Comment 1058 566 NOP  <||@
  Comment 1059 568 NOP  <||@
  Comment 1060 -1 r10|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1063 570 JUMP ~outgoingValues: [] destination: B16 -> B14  <||@
  Comment 1063 block B14 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 1063 446 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1063 448 NOP  <||@
  Comment 1064 450 NOP  <||@
  Comment 1065 452 NOP  <||@
  Comment 1066 454 NOP  <||@
  Comment 1067 456 CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD  <||@
  Comment 1081 block B17 null  <||@
  Comment 1081 572 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1081 574 NOP  <||@
  Comment 1082 576 NOP  <||@
  Comment 1083 578 NOP  <||@
  Comment 1084 580 JUMP ~outgoingValues: [] destination: B17 -> B23  <||@
  Comment 1084 block B23 null  <||@
  Comment 1084 622 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1084 624 NOP  <||@
  Comment 1085 626 NOP  <||@
  Comment 1086 628 NOP  <||@
  Comment 1087 630 NOP  <||@
  Comment 1088 632 NOP  <||@
  Comment 1089 634 NOP  <||@
  Comment 1090 636 NOP  <||@
  Comment 1091 638 NOP  <||@
  Comment 1092 640 NOP  <||@
  Comment 1093 642 rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1096 644 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93  <||@
  Comment 1105 POLL_RETURN_FAR  <||@
  Comment 1119 block B6 null  <||@
  Comment 1119 378 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1119 380 NOP  <||@
  Comment 1120 382 NOP  <||@
  Comment 1121 384 NOP  <||@
  Comment 1122 386 NOP  <||@
  Comment 1123 388 NOP  <||@
  Comment 1124 390 NOP  <||@
  Comment 1125 392 NOP  <||@
  Comment 1126 394 NOP  <||@
  Comment 1127 396 NOP  <||@
  Comment 1128 398 NOP  <||@
  Comment 1129 400 r9|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 1135 402 r9|QWORD = MOVSXD value: r9|DWORD size: QWORD  <||@
  Comment 1138 404 rbx|QWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 1141 406 r9|QWORD = ADD (x: r9|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 1144 408 r9|QWORD = DEC value: r9|QWORD size: QWORD  <||@
  Comment 1147 410 rbx|QWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1150 412 CMPBRANCH (x: rbx|QWORD, y: r9|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD  <||@
  Comment 1159 block B7 null  <||@
  Comment 1159 414 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1159 416 NOP  <||@
  Comment 1160 418 NOP  <||@
  Comment 1161 420 NOP  <||@
  Comment 1162 422 NOP  <||@
  Comment 1163 424 CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD  <||@
  Comment 1172 block B8 null  <||@
  Comment 1172 426 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1172 428 NOP  <||@
  Comment 1173 430 NOP  <||@
  Comment 1174 432 NOP  <||@
  Comment 1175 434 JUMP ~outgoingValues: [] destination: B8 -> B13  <||@
  Comment 1180 block B22 null  <||@
  Comment 1180 582 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1180 584 NOP  <||@
  Comment 1181 586 NOP  <||@
  Comment 1182 588 NOP  <||@
  Comment 1183 590 JUMP ~outgoingValues: [] destination: B22 -> B23  <||@
  Comment 1185 block B19 null  <||@
  Comment 1185 592 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1185 594 NOP  <||@
  Comment 1186 596 NOP  <||@
  Comment 1187 598 NOP  <||@
  Comment 1188 600 JUMP ~outgoingValues: [] destination: B19 -> B23  <||@
  Comment 1190 block B18 null  <||@
  Comment 1190 602 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1190 604 NOP  <||@
  Comment 1191 606 NOP  <||@
  Comment 1192 608 NOP  <||@
  Comment 1193 610 JUMP ~outgoingValues: [] destination: B18 -> B23  <||@
  Comment 1195 block B21 null  <||@
  Comment 1195 612 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1195 614 NOP  <||@
  Comment 1196 616 NOP  <||@
  Comment 1197 618 NOP  <||@
  Comment 1198 620 JUMP ~outgoingValues: [] destination: B21 -> B23  <||@
  Comment 1200 block B10 null  <||@
  Comment 1200 646 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1200 648 NOP  <||@
  Comment 1201 650 NOP  <||@
  Comment 1202 652 NOP  <||@
  Comment 1203 654 JUMP ~outgoingValues: [] destination: B10 -> B11  <||@
  Comment 1203 block B11 null  <||@
  Comment 1203 666 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1203 668 NOP  <||@
  Comment 1204 670 NOP  <||@
  Comment 1205 672 NOP  <||@
  Comment 1206 674 NOP  <||@
  Comment 1207 676 NOP  <||@
  Comment 1208 678 NOP  <||@
  Comment 1209 680 NOP  <||@
  Comment 1210 682 MOV x: [r15|QWORD + 1156] y: -40475 size: DWORD  <||@
  Comment 1221 684 MOV x: [r15|QWORD + 1168] y: 1944 size: QWORD  <||@
  Comment 1232 686 DEOPT info [bci:95]  <||@
  Comment 1232 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f678da335a8, value=140082329203066]:0x7f677578b17a}  <||@
  Comment 1237 [rax:0, rcx:0, rsi:0, r11:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95, duringCall: false, rethrow: false]
              |0             |1             |2            
     locals:  |rsi|QWORD[.]  |rax|QWORD[.]  |r11|QWORD[.] 
     stack:   |rcx|QWORD[.]  |              |               <||@
  Comment 1245 block B9 null  <||@
  Comment 1245 656 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1245 658 NOP  <||@
  Comment 1246 660 NOP  <||@
  Comment 1247 662 NOP  <||@
  Comment 1248 664 JUMP ~outgoingValues: [] destination: B9 -> B11  <||@
  Comment 1250 block B24 null  <||@
  Comment 1250 688 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1250 690 NOP  <||@
  Comment 1251 692 NOP  <||@
  Comment 1252 694 NOP  <||@
  Comment 1253 696 NOP  <||@
  Comment 1254 698 NOP  <||@
  Comment 1255 700 NOP  <||@
  Comment 1256 702 NOP  <||@
  Comment 1257 704 MOV x: [r15|QWORD + 1156] y: -59155 size: DWORD  <||@
  Comment 1268 706 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 1279 708 DEOPT info [bci:0]  <||@
  Comment 1279 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f678da335a8, value=140082329203066]:0x7f677578b17a}  <||@
  Comment 1284 [rsi:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 1292 block B20 null  <||@
  Comment 1292 710 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1292 712 NOP  <||@
  Comment 1293 714 NOP  <||@
  Comment 1294 716 NOP  <||@
  Comment 1295 718 NOP  <||@
  Comment 1296 720 NOP  <||@
  Comment 1297 722 NOP  <||@
  Comment 1298 724 NOP  <||@
  Comment 1299 726 MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD  <||@
  Comment 1310 728 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1321 730 DEOPT info [bci:53]  <||@
  Comment 1321 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f678da335a8, value=140082329203066]:0x7f677578b17a}  <||@
  Comment 1326 [rsi:0, r10:0, r11:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53, duringCall: false, rethrow: false]
              |0             |1  |2            
     locals:  |rsi|QWORD[.]  |-  |r11|QWORD[.] 
     stack:   |r10|QWORD[.]  |   |               <||@
  Comment 1339 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f678da33598, value=140082329072160]:0x7f677576b220}  <||@
  Comment 1354 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 1369 {Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 1384 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 1399 {Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 1414 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 1429 {Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 1444 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 1459 {Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 1484 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f678da335a0, value=140082329206784]:0x7f677578c000}  <||@
  Comment 1512 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f678da335a8, value=140082329203066]:0x7f677578b17a}  <||@
  Comment 1517 [rax:0, rsi:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 1547 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f678da335a8, value=140082329203066]:0x7f677578b17a}  <||@
  Comment 1552 [rax:0, rsi:0, r11:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 1582 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f678da335a8, value=140082329203066]:0x7f677578b17a}  <||@
  Comment 1587 [rax:0, rsi:0, r10:0, r11:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53, duringCall: false, rethrow: false]
              |0             |1  |2            
     locals:  |rsi|QWORD[.]  |-  |r11|QWORD[.] 
     stack:   |r10|QWORD[.]  |   |               <||@
  Comment 1595 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f67758c4e80:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1595 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1601 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f678da335b8, value=140082329202464]:0x7f677578af20}  <||@
  Comment 1601 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-1783[java.util.HashMap$HashIterator.nextNode()]"
  method "HotSpotCompilation-1783[java.util.HashMap$HashIterator.nextNode()]"
  date 1724248916509
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f6776220720 448b560849bc00000007677f00004d03d44d33e4493bc20f85434956ff66669089842400c0feff4883ec189041817f20030000000f85fc04000090909090909090909090909048896c24108b461c448b14c5180000008b04c524000000448b5e14468b04dd18000000443b560c0f856f0400009090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f842e000000448b4e1849c1e1034d85c90f841d0000004d8b57284983fa000f845d0400004983ea084d8957284d0357384d890a44895e1849c1e3034c8bd64d33d349c1ea160f844e0000004d85db0f84450000004c8bd649c1ea0949b900d02669677f00004d03d141803a02742bf08304240041803a00742041c602004d8b4f484d85c90f84060400004983e9084d894f484d034f584d891141807f40000f842e000000448b4e1449c1e1034d85c90f841d0000004d8b57284983fa000f84dc0300004983ea084d8957284d0357384d890a44894614458bd049c1e2034c8bce4d33ca49c1e9160f844e0000004d85d20f84450000004c8bce49c1e90948b900d02669677f00004c03c941803902742bf08304240041803900742041c60100498b4f484885c90f84820300004883e90849894f4849034f584c89094585c00f8593020000909090909090448b04c50c000000448b4e10453bc10f8e8702000090909090453bc10f86db0200009090909090909090909090909090909090909090909090909090909090909090909090909090909090909090458bd141ffc24489561041807f40000f842d0000008b5e1448c1e3034885db0f841d000000498b4f284883f9000f84f20200004883e90849894f2849034f3848891948c1e003468b4c881044894e14418bc948c1e103488bde4833d948c1eb160f844b0000004885c90f8442000000488bde48c1eb0948bf00d02669677f00004803df803b027429f083042400803b00741fc60300498b7f484885ff0f84920200004883ef0849897f4849037f5848891f4585c90f858a01000090909090453bc20f8f3b010000909090909090e9f80000006666660f1f84000000000066666690669090909090909090909090909090909090909090909090909090909090909090909090909090909090909090458bca41ffc144894e1041807f40000f842d0000008b5e1448c1e3034885db0f841d000000498b4f284883f9000f84020200004883e90849894f2849034f38488919468b54901044895614418bca48c1e103488bde4833d948c1eb160f844b0000004885c90f8442000000488bde48c1eb0948bf00d02669677f00004803df803b027429f083042400803b00741fc60300498b7f484885ff0f84a60100004883ef0849897f4849037f5848891f4585d20f8518000000909090458bd190909090453bc20f8f0cffffffe96d000000909090909090909090909090498bc3488b6c24104883c418493ba7500400000f8760010000c390909090909090909090458bc8452bca4d63c9418bda4c03cb49ffc9418bd8493bd90f862900000090909090453bc20f8649000000909090e98bfeffff909090eb9b909090eb96909090eb91909090eb8c9090909090909090909041c78784040000e561ffff49c7879004000098070000e885a556ff0f1f840000000000909090ebd19090909090909041c78784040000ed18ffff49c7879004000014000000e856a556ff0f1f8400000000009090909090909041c78784040000e56fffff49c7879004000000000000e82ca556ff0f1f84000000000048896c2410e8c0a554ffe9f5fafffff44c890c24e8919c6affe9a4fbfffff44c891424e802a06affe9fbfbfffff44c890c24e8739c6affe925fcfffff44c890c24e8e49f6affe97ffcfffff448891c24e8559c6affe90ffdfffff448891c24e8c69f6affe96ffdfffff448891c24e8379c6affe9fffdfffff448891c24e8a89f6affe95bfefffff4488d0d8cfeffff49898f68040000e90fb356fff441c78784040000f591ffff49c7879004000000000000e86da456ff0f1f84000000000041c78784040000f585ffff49c7879004000000000000e84aa456ff0f1f84000000000041c78784040000f579ffff49c7879004000000000000e827a456ff0f1f840000000000e820416afff4e8baa156fff4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f678da335c8, value=140082329178240]:0x7f6775785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 75 28 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@7304a70d slotKind: QWORD  <||@
  Comment 75 32 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 78 34 r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 24] size: DWORD state [bci:0]  <||@
  Comment 78 [rax:0, rsi:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 78 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 86 36 rax|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 36] size: DWORD  <||@
  Comment 93 38 r11|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 97 40 r8|DWORD[_] = MOV input: [r11|DWORD[_] * 8 + 24] size: DWORD state [bci:0]  <||@
  Comment 97 [rax:0, rsi:0, r11:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 97 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 105 42 CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B24 size: DWORD  <||@
  Comment 115 block B1 null  <||@
  Comment 115 44 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 115 46 NOP  <||@
  Comment 116 48 NOP  <||@
  Comment 117 50 NOP  <||@
  Comment 118 52 NOP  <||@
  Comment 119 54 NOP  <||@
  Comment 120 56 NOP  <||@
  Comment 121 58 NOP  <||@
  Comment 122 60 NOP  <||@
  Comment 123 62 NOP  <||@
  Comment 124 64 NOP  <||@
  Comment 125 66 NOP  <||@
  Comment 126 68 NOP  <||@
  Comment 127 70 NOP  <||@
  Comment 128 72 NOP  <||@
  Comment 129 74 NOP  <||@
  Comment 130 76 NOP  <||@
  Comment 131 78 NOP  <||@
  Comment 132 80 NOP  <||@
  Comment 133 82 NOP  <||@
  Comment 134 84 NOP  <||@
  Comment 135 86 NOP  <||@
  Comment 136 88 NOP  <||@
  Comment 137 90 NOP  <||@
  Comment 138 92 NOP  <||@
  Comment 139 94 NOP  <||@
  Comment 140 96 NOP  <||@
  Comment 141 98 NOP  <||@
  Comment 142 100 NOP  <||@
  Comment 143 102 NOP  <||@
  Comment 144 104 NOP  <||@
  Comment 145 106 NOP  <||@
  Comment 146 108 NOP  <||@
  Comment 147 110 NOP  <||@
  Comment 148 112 NOP  <||@
  Comment 149 114 NOP  <||@
  Comment 150 116 NOP  <||@
  Comment 151 118 NOP  <||@
  Comment 152 120 NOP  <||@
  Comment 153 122 NOP  <||@
  Comment 154 124 NOP  <||@
  Comment 155 126 NOP  <||@
  Comment 156 128 NOP  <||@
  Comment 157 130 NOP  <||@
  Comment 158 132 NOP  <||@
  Comment 159 134 NOP  <||@
  Comment 160 136 NOP  <||@
  Comment 161 138 NOP  <||@
  Comment 162 140 NOP  <||@
  Comment 163 142 NOP  <||@
  Comment 164 144 NOP  <||@
  Comment 165 146 NOP  <||@
  Comment 166 148 NOP  <||@
  Comment 167 150 NOP  <||@
  Comment 168 152 NOP  <||@
  Comment 169 154 NOP  <||@
  Comment 170 156 NOP  <||@
  Comment 171 158 NOP  <||@
  Comment 172 160 NOP  <||@
  Comment 173 162 NOP  <||@
  Comment 174 164 NOP  <||@
  Comment 175 166 NOP  <||@
  Comment 176 168 NOP  <||@
  Comment 177 170 NOP  <||@
  Comment 178 172 NOP  <||@
  Comment 179 174 NOP  <||@
  Comment 180 176 NOP  <||@
  Comment 181 178 NOP  <||@
  Comment 182 180 NOP  <||@
  Comment 183 182 NOP  <||@
  Comment 184 184 NOP  <||@
  Comment 185 186 NOP  <||@
  Comment 186 188 NOP  <||@
  Comment 187 190 NOP  <||@
  Comment 188 192 NOP  <||@
  Comment 189 194 NOP  <||@
  Comment 190 196 NOP  <||@
  Comment 191 198 AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 24], ~expectedObject: -) {temp: r10|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d  <||@
  Comment 248 200 MOV (x: [rsi|QWORD[.] + 24], y: r11|DWORD[_]) size: DWORD  <||@
  Comment 252 202 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3  <||@
  Comment 256 204 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: r10|QWORD, temp2: r9|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d  <||@
  Comment 350 206 AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: r10|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d  <||@
  Comment 407 208 MOV (x: [rsi|QWORD[.] + 20], y: r8|DWORD[_]) size: DWORD  <||@
  Comment 411 210 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3  <||@
  Comment 418 212 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r10|QWORD[.]) {temp: r9|QWORD, temp2: rcx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d  <||@
  Comment 512 214 TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.873445133019547 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B22 size: DWORD  <||@
  Comment 521 block B2 null  <||@
  Comment 521 216 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 521 218 NOP  <||@
  Comment 522 220 NOP  <||@
  Comment 523 222 NOP  <||@
  Comment 524 224 NOP  <||@
  Comment 525 226 NOP  <||@
  Comment 526 228 NOP  <||@
  Comment 527 230 r8|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:53]  <||@
  Comment 527 [rax:0, rsi:0, r10:0, r11:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53, duringCall: false, rethrow: false]
              |0             |1  |2            
     locals:  |rsi|QWORD[.]  |-  |r11|QWORD[.] 
     stack:   |r10|QWORD[.]  |   |               <||@
  Comment 527 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 535 232 r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 539 234 CMPBRANCH (x: r8|DWORD, y: r9|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B21 size: DWORD  <||@
  Comment 548 block B3 null  <||@
  Comment 548 236 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 548 238 NOP  <||@
  Comment 549 240 NOP  <||@
  Comment 550 242 NOP  <||@
  Comment 551 244 NOP  <||@
  Comment 552 246 CMPBRANCH (x: r8|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B3 -> B4 falseDestination: B3 -> B20 size: DWORD  <||@
  Comment 561 block B4 null  <||@
  Comment 561 248 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 561 250 NOP  <||@
  Comment 562 252 NOP  <||@
  Comment 563 254 NOP  <||@
  Comment 564 256 NOP  <||@
  Comment 565 258 NOP  <||@
  Comment 566 260 NOP  <||@
  Comment 567 262 NOP  <||@
  Comment 568 264 NOP  <||@
  Comment 569 266 NOP  <||@
  Comment 570 268 NOP  <||@
  Comment 571 270 NOP  <||@
  Comment 572 272 NOP  <||@
  Comment 573 274 NOP  <||@
  Comment 574 276 NOP  <||@
  Comment 575 278 NOP  <||@
  Comment 576 280 NOP  <||@
  Comment 577 282 NOP  <||@
  Comment 578 284 NOP  <||@
  Comment 579 286 NOP  <||@
  Comment 580 288 NOP  <||@
  Comment 581 290 NOP  <||@
  Comment 582 292 NOP  <||@
  Comment 583 294 NOP  <||@
  Comment 584 296 NOP  <||@
  Comment 585 298 NOP  <||@
  Comment 586 300 NOP  <||@
  Comment 587 302 NOP  <||@
  Comment 588 304 NOP  <||@
  Comment 589 306 NOP  <||@
  Comment 590 308 NOP  <||@
  Comment 591 310 NOP  <||@
  Comment 592 312 NOP  <||@
  Comment 593 314 NOP  <||@
  Comment 594 316 NOP  <||@
  Comment 595 318 NOP  <||@
  Comment 596 320 NOP  <||@
  Comment 597 322 NOP  <||@
  Comment 598 324 NOP  <||@
  Comment 599 326 NOP  <||@
  Comment 600 328 NOP  <||@
  Comment 601 330 NOP  <||@
  Comment 602 332 NOP  <||@
  Comment 603 334 NOP  <||@
  Comment 604 336 NOP  <||@
  Comment 605 338 r10|DWORD = INC value: r9|DWORD size: DWORD  <||@
  Comment 611 340 MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 615 342 AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d  <||@
  Comment 671 344 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3  <||@
  Comment 675 346 r9|DWORD[_] = MOV input: [rax|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 680 348 MOV (x: [rsi|QWORD[.] + 20], y: r9|DWORD[_]) size: DWORD  <||@
  Comment 684 350 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3  <||@
  Comment 691 352 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rbx|QWORD, temp2: rdi|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d  <||@
  Comment 782 354 TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B19 size: DWORD  <||@
  Comment 791 block B5 null  <||@
  Comment 791 356 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 791 358 NOP  <||@
  Comment 792 360 NOP  <||@
  Comment 793 362 NOP  <||@
  Comment 794 364 NOP  <||@
  Comment 795 366 CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B5 -> B6 falseDestination: B5 -> B12 size: DWORD  <||@
  Comment 804 block B12 null  <||@
  Comment 804 368 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 804 370 NOP  <||@
  Comment 805 372 NOP  <||@
  Comment 806 374 NOP  <||@
  Comment 807 376 JUMP ~outgoingValues: [] destination: B12 -> B13  <||@
  Comment 807 block B13 null  <||@
  Comment 807 436 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 807 438 NOP  <||@
  Comment 808 440 NOP  <||@
  Comment 809 442 NOP  <||@
  Comment 810 444 JUMP ~outgoingValues: [] destination: B13 -> B14  <||@
  Comment 815 block B15 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 815 458 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 832 460 NOP  <||@
  Comment 833 462 NOP  <||@
  Comment 834 464 NOP  <||@
  Comment 835 466 NOP  <||@
  Comment 836 468 NOP  <||@
  Comment 837 470 NOP  <||@
  Comment 838 472 NOP  <||@
  Comment 839 474 NOP  <||@
  Comment 840 476 NOP  <||@
  Comment 841 478 NOP  <||@
  Comment 842 480 NOP  <||@
  Comment 843 482 NOP  <||@
  Comment 844 484 NOP  <||@
  Comment 845 486 NOP  <||@
  Comment 846 488 NOP  <||@
  Comment 847 490 NOP  <||@
  Comment 848 492 NOP  <||@
  Comment 849 494 NOP  <||@
  Comment 850 496 NOP  <||@
  Comment 851 498 NOP  <||@
  Comment 852 500 NOP  <||@
  Comment 853 502 NOP  <||@
  Comment 854 504 NOP  <||@
  Comment 855 506 NOP  <||@
  Comment 856 508 NOP  <||@
  Comment 857 510 NOP  <||@
  Comment 858 512 NOP  <||@
  Comment 859 514 NOP  <||@
  Comment 860 516 NOP  <||@
  Comment 861 518 NOP  <||@
  Comment 862 520 NOP  <||@
  Comment 863 522 NOP  <||@
  Comment 864 524 NOP  <||@
  Comment 865 526 NOP  <||@
  Comment 866 528 NOP  <||@
  Comment 867 530 NOP  <||@
  Comment 868 532 NOP  <||@
  Comment 869 534 NOP  <||@
  Comment 870 536 NOP  <||@
  Comment 871 538 NOP  <||@
  Comment 872 540 NOP  <||@
  Comment 873 542 NOP  <||@
  Comment 874 544 NOP  <||@
  Comment 875 546 r9|DWORD = INC value: r10|DWORD size: DWORD  <||@
  Comment 881 548 MOV (x: [rsi|QWORD[.] + 16], y: r9|DWORD) size: DWORD  <||@
  Comment 885 550 AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rcx|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d  <||@
  Comment 941 552 r10|DWORD[_] = MOV input: [rax|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD  <||@
  Comment 946 554 MOV (x: [rsi|QWORD[.] + 20], y: r10|DWORD[_]) size: DWORD  <||@
  Comment 950 556 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@430058dd encoding: base: 0 shift: 3  <||@
  Comment 957 558 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rcx|QWORD[.]) {temp: rbx|QWORD, temp2: rdi|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1a43802d  <||@
  Comment 1048 560 TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8751451405213353 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD  <||@
  Comment 1057 block B16 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 1057 562 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1057 564 NOP  <||@
  Comment 1058 566 NOP  <||@
  Comment 1059 568 NOP  <||@
  Comment 1060 -1 r10|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1063 570 JUMP ~outgoingValues: [] destination: B16 -> B14  <||@
  Comment 1063 block B14 loop 0 depth 1 header:27|LoopBegin  <||@
  Comment 1063 446 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1063 448 NOP  <||@
  Comment 1064 450 NOP  <||@
  Comment 1065 452 NOP  <||@
  Comment 1066 454 NOP  <||@
  Comment 1067 456 CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.9805333640964465 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B18 size: DWORD  <||@
  Comment 1081 block B17 null  <||@
  Comment 1081 572 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1081 574 NOP  <||@
  Comment 1082 576 NOP  <||@
  Comment 1083 578 NOP  <||@
  Comment 1084 580 JUMP ~outgoingValues: [] destination: B17 -> B23  <||@
  Comment 1084 block B23 null  <||@
  Comment 1084 622 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1084 624 NOP  <||@
  Comment 1085 626 NOP  <||@
  Comment 1086 628 NOP  <||@
  Comment 1087 630 NOP  <||@
  Comment 1088 632 NOP  <||@
  Comment 1089 634 NOP  <||@
  Comment 1090 636 NOP  <||@
  Comment 1091 638 NOP  <||@
  Comment 1092 640 NOP  <||@
  Comment 1093 642 rax|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1096 644 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93  <||@
  Comment 1105 POLL_RETURN_FAR  <||@
  Comment 1119 block B6 null  <||@
  Comment 1119 378 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1119 380 NOP  <||@
  Comment 1120 382 NOP  <||@
  Comment 1121 384 NOP  <||@
  Comment 1122 386 NOP  <||@
  Comment 1123 388 NOP  <||@
  Comment 1124 390 NOP  <||@
  Comment 1125 392 NOP  <||@
  Comment 1126 394 NOP  <||@
  Comment 1127 396 NOP  <||@
  Comment 1128 398 NOP  <||@
  Comment 1129 400 r9|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 1135 402 r9|QWORD = MOVSXD value: r9|DWORD size: QWORD  <||@
  Comment 1138 404 rbx|QWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 1141 406 r9|QWORD = ADD (x: r9|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 1144 408 r9|QWORD = DEC value: r9|QWORD size: QWORD  <||@
  Comment 1147 410 rbx|QWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1150 412 CMPBRANCH (x: rbx|QWORD, y: r9|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B10 size: QWORD  <||@
  Comment 1159 block B7 null  <||@
  Comment 1159 414 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1159 416 NOP  <||@
  Comment 1160 418 NOP  <||@
  Comment 1161 420 NOP  <||@
  Comment 1162 422 NOP  <||@
  Comment 1163 424 CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD  <||@
  Comment 1172 block B8 null  <||@
  Comment 1172 426 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1172 428 NOP  <||@
  Comment 1173 430 NOP  <||@
  Comment 1174 432 NOP  <||@
  Comment 1175 434 JUMP ~outgoingValues: [] destination: B8 -> B13  <||@
  Comment 1180 block B22 null  <||@
  Comment 1180 582 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1180 584 NOP  <||@
  Comment 1181 586 NOP  <||@
  Comment 1182 588 NOP  <||@
  Comment 1183 590 JUMP ~outgoingValues: [] destination: B22 -> B23  <||@
  Comment 1185 block B19 null  <||@
  Comment 1185 592 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1185 594 NOP  <||@
  Comment 1186 596 NOP  <||@
  Comment 1187 598 NOP  <||@
  Comment 1188 600 JUMP ~outgoingValues: [] destination: B19 -> B23  <||@
  Comment 1190 block B18 null  <||@
  Comment 1190 602 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1190 604 NOP  <||@
  Comment 1191 606 NOP  <||@
  Comment 1192 608 NOP  <||@
  Comment 1193 610 JUMP ~outgoingValues: [] destination: B18 -> B23  <||@
  Comment 1195 block B21 null  <||@
  Comment 1195 612 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1195 614 NOP  <||@
  Comment 1196 616 NOP  <||@
  Comment 1197 618 NOP  <||@
  Comment 1198 620 JUMP ~outgoingValues: [] destination: B21 -> B23  <||@
  Comment 1200 block B10 null  <||@
  Comment 1200 646 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1200 648 NOP  <||@
  Comment 1201 650 NOP  <||@
  Comment 1202 652 NOP  <||@
  Comment 1203 654 JUMP ~outgoingValues: [] destination: B10 -> B11  <||@
  Comment 1203 block B11 null  <||@
  Comment 1203 666 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1203 668 NOP  <||@
  Comment 1204 670 NOP  <||@
  Comment 1205 672 NOP  <||@
  Comment 1206 674 NOP  <||@
  Comment 1207 676 NOP  <||@
  Comment 1208 678 NOP  <||@
  Comment 1209 680 NOP  <||@
  Comment 1210 682 MOV x: [r15|QWORD + 1156] y: -40475 size: DWORD  <||@
  Comment 1221 684 MOV x: [r15|QWORD + 1168] y: 1944 size: QWORD  <||@
  Comment 1232 686 DEOPT info [bci:95]  <||@
  Comment 1232 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f678da335a8, value=140082329203066]:0x7f677578b17a}  <||@
  Comment 1237 [rax:0, rcx:0, rsi:0, r11:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1609) [bci: 95, duringCall: false, rethrow: false]
              |0             |1             |2            
     locals:  |rsi|QWORD[.]  |rax|QWORD[.]  |r11|QWORD[.] 
     stack:   |rcx|QWORD[.]  |              |               <||@
  Comment 1245 block B9 null  <||@
  Comment 1245 656 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1245 658 NOP  <||@
  Comment 1246 660 NOP  <||@
  Comment 1247 662 NOP  <||@
  Comment 1248 664 JUMP ~outgoingValues: [] destination: B9 -> B11  <||@
  Comment 1250 block B24 null  <||@
  Comment 1250 688 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1250 690 NOP  <||@
  Comment 1251 692 NOP  <||@
  Comment 1252 694 NOP  <||@
  Comment 1253 696 NOP  <||@
  Comment 1254 698 NOP  <||@
  Comment 1255 700 NOP  <||@
  Comment 1256 702 NOP  <||@
  Comment 1257 704 MOV x: [r15|QWORD + 1156] y: -59155 size: DWORD  <||@
  Comment 1268 706 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 1279 708 DEOPT info [bci:0]  <||@
  Comment 1279 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f678da335a8, value=140082329203066]:0x7f677578b17a}  <||@
  Comment 1284 [rsi:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 1292 block B20 null  <||@
  Comment 1292 710 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1292 712 NOP  <||@
  Comment 1293 714 NOP  <||@
  Comment 1294 716 NOP  <||@
  Comment 1295 718 NOP  <||@
  Comment 1296 720 NOP  <||@
  Comment 1297 722 NOP  <||@
  Comment 1298 724 NOP  <||@
  Comment 1299 726 MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD  <||@
  Comment 1310 728 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1321 730 DEOPT info [bci:53]  <||@
  Comment 1321 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f678da335a8, value=140082329203066]:0x7f677578b17a}  <||@
  Comment 1326 [rsi:0, r10:0, r11:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53, duringCall: false, rethrow: false]
              |0             |1  |2            
     locals:  |rsi|QWORD[.]  |-  |r11|QWORD[.] 
     stack:   |r10|QWORD[.]  |   |               <||@
  Comment 1339 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f678da33598, value=140082329072160]:0x7f677576b220}  <||@
  Comment 1354 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 1369 {Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 1384 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 1399 {Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 1414 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 1429 {Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 1444 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f67758ca900:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 1459 {Stub<write_barrier_post-stack-only(Word)void>@0x7f67758cac80:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 1484 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f678da335a0, value=140082329206784]:0x7f677578c000}  <||@
  Comment 1512 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f678da335a8, value=140082329203066]:0x7f677578b17a}  <||@
  Comment 1517 [rax:0, rsi:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 1547 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f678da335a8, value=140082329203066]:0x7f677578b17a}  <||@
  Comment 1552 [rax:0, rsi:0, r11:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1603) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |rsi|QWORD[.]  |-  |-   <||@
  Comment 1582 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f678da335a8, value=140082329203066]:0x7f677578b17a}  <||@
  Comment 1587 [rax:0, rsi:0, r10:0, r11:0]at java.util.HashMap$HashIterator.nextNode(HashMap.java:1608) [bci: 53, duringCall: false, rethrow: false]
              |0             |1  |2            
     locals:  |rsi|QWORD[.]  |-  |r11|QWORD[.] 
     stack:   |r10|QWORD[.]  |   |               <||@
  Comment 1595 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f67758c4e80:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1595 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1601 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f678da335b8, value=140082329202464]:0x7f677578af20}  <||@
  Comment 1601 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
