begin_compilation
  name " HotSpotCompilation-3720[java.util.regex.Matcher.search(int)]"
  method "HotSpotCompilation-3720[java.util.regex.Matcher.search(int)]"
  date 1724248922197
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a540 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a540  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.regex.Matcher
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v557 v570 v558 ?9 v559 v188 v560 v574 v565 ?270 v567 ?27 v573 v561 ?103 v568 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a540 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a540 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# int[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.groups
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 48]
stamp: n# int[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v561 
lastLocationAccess: - 
=== Succesors ===
next: i541 
=== Usages ===
a124 v562 v563 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v561 lastLocationAccess: - #next: i541  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?27 ?9 v10 v116 v188 i551 ?103 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Matcher.search(int)>
localsSize: 3
locksSize: 0
sourceFile: Matcher.java
sourceLine: 1755
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
i541 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a540 
=== Succesors ===
=== Usages ===
i541 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a540  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i541 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-32267|0xffffffffffff81f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 51]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v562 
lastLocationAccess: - 
=== Succesors ===
next: v110 
=== Usages ===
i315 v230 v132 j221 i238 i490 v293 v314 
=== Predecessor ===
a540 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v562 lastLocationAccess: - #next: v110  <|@  <|@
f <@~|@floating>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
displacement: 48
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i198 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1755) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v110 v113 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.hitEnd
location: Matcher.hitEnd
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1755) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v557 
lastLocationAccess: - 
value: i198 
stateAfter: - 
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
i541 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v557 lastLocationAccess: - value: i198 stateAfter: - #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
displacement: 49
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.requireEnd
location: Matcher.requireEnd
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1756) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v558 
lastLocationAccess: - 
value: i198 
stateAfter: - 
=== Succesors ===
next: v264 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v558 lastLocationAccess: - value: i198 stateAfter: - #next: v264  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1755) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v132 v68 v10 v15 v163 v87 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1757) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@e606376
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i4 
=== Succesors ===
=== Usages ===
v264 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1757) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v10 
=== Succesors ===
trueSuccessor: v262 
falseSuccessor: v263 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v10 #trueSuccessor: v262 #falseSuccessor: v263  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1757) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v261 
=== Usages ===
=== Predecessor ===
v264 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v261  <|@  <|@
tid ?9 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: iload_1
code: ResolvedJavaMethodBytecode<Matcher.search(int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1756) [bci: 7]
sourceFile: Matcher.java
sourceLine: 1757
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v261 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1757) [bci: 11]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0xce6b4448]: UnreachedCode@6[HotSpotMethod<Matcher.search(int)>, 14]}
stamp: void
=== Inputs ===
stateBefore: ?9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v262 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?9  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1757) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v116 
=== Usages ===
=== Predecessor ===
v264 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v116  <|@  <|@
f <@~|@floating>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v116 v197 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.first
location: Matcher.first
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1758) [bci: 22]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v559 
lastLocationAccess: - 
value: i2 
stateAfter: - 
=== Succesors ===
next: i542 
=== Usages ===
=== Predecessor ===
v263 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v559 lastLocationAccess: - value: i2 stateAfter: - #next: i542  <|@  <|@
f <@~|@floating>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i542 v120 v192 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i542 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.oldLast
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1759) [bci: 27]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v560 
lastLocationAccess: - 
=== Succesors ===
next: v120 
=== Usages ===
v15 i551 
=== Predecessor ===
v116 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v560 lastLocationAccess: - #next: v120  <|@  <|@
f <@~|@floating>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1759) [bci: 30]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@e606376
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i542 
y: i4 
=== Succesors ===
=== Usages ===
i551 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i542 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i551 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1759) [bci: 30]
stamp: i32
=== Inputs ===
condition: v15 
trueValue: i2 
falseValue: i542 
=== Succesors ===
=== Usages ===
v120 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v15 trueValue: i2 falseValue: i542  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.oldLast
location: Matcher.oldLast
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1759) [bci: 41]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v560 
lastLocationAccess: - 
value: i551 
stateAfter: - 
=== Succesors ===
next: v93 
=== Usages ===
=== Predecessor ===
i542 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v560 lastLocationAccess: - value: i551 stateAfter: - #next: v93  <|@  <|@
f <@~|@floating>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i541 
y: i4 
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i541 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i46 i82 i104 i277 i297 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 60]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v150 v197 v141 i238 v284 v304 v328 v350 v356 v375 v381 v388 v394 v419 v425 v432 v438 v446 v452 v458 v464 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 52]
profileData: PROFILED designatedSuccessorProbability: 0.04762978170136911
stamp: void
=== Inputs ===
condition: v132 
=== Succesors ===
trueSuccessor: v91 
falseSuccessor: v92 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v132 #trueSuccessor: v91 #falseSuccessor: v92  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024995983699200
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: v101 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v101  <|@  <|@
f <@*|@fixed>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
v91 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 55]
stamp: void
=== Inputs ===
=== Succesors ===
next: v538 
=== Usages ===
v141 
=== Predecessor ===
v93 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v538  <|@  <|@
f <@~|@floating>@ <|@
tid i238 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i541 
y: i42 
=== Succesors ===
=== Usages ===
j228 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i541 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid j228 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-1 - 2147483646]
=== Inputs ===
value: i238 
=== Succesors ===
=== Usages ===
v229 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i238  <|@  <|@
f <@~|@floating>@ <|@
tid j221 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i541 
=== Succesors ===
=== Usages ===
v229 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i541  <|@  <|@
f <@~|@floating>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@6021759f
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j228 
y: j221 
=== Succesors ===
=== Usages ===
v538 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j228 y: j221  <|@  <|@
f <@~|@floating>@ <|@
tid i136 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i315 v230 i337 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v229 
=== Succesors ===
trueSuccessor: v534 
falseSuccessor: v537 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v229 #trueSuccessor: v534 #falseSuccessor: v537  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
next: v532 
=== Usages ===
=== Predecessor ===
v538 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v532  <|@  <|@
f <@*|@fixed>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v531 
=== Predecessor ===
v534 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
next: v536 
=== Usages ===
=== Predecessor ===
v538 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v536  <|@  <|@
f <@~|@floating>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@6021759f
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i541 
y: i136 
=== Succesors ===
=== Usages ===
v536 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i541 y: i136  <|@  <|@
f <@*|@fixed>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v230 
=== Succesors ===
trueSuccessor: v535 
falseSuccessor: v246 
=== Usages ===
=== Predecessor ===
v537 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v230 #trueSuccessor: v535 #falseSuccessor: v246  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
next: v533 
=== Usages ===
=== Predecessor ===
v536 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v533  <|@  <|@
f <@*|@fixed>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v531 
=== Predecessor ===
v535 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v532 v533 
=== Succesors ===
next: v141 
=== Usages ===
v235 v307 v466 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v532 v533 #next: v141  <|@  <|@
f <@~|@floating>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a540 
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a540  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v92 
address: v563 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v29 
=== Usages ===
=== Predecessor ===
v531 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v92 address: v563 lastLocationAccess: - value: i42 stateAfter: - #next: v29  <|@  <|@
f <@~|@floating>@ <|@
tid i313 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v314 i361 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@6021759f
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i541 
y: i313 
=== Succesors ===
=== Usages ===
i315 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i541 y: i313  <|@  <|@
f <@~|@floating>@ <|@
tid i315 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2] bits:0...0xx
=== Inputs ===
condition: v314 
trueValue: i541 
falseValue: i136 
=== Succesors ===
=== Usages ===
v35 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v314 trueValue: i541 falseValue: i136  <|@  <|@
f <@~|@floating>@ <|@
tid a124 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 48]
op: Uncompress
stamp: a# int[]
=== Inputs ===
value: a540 
=== Succesors ===
=== Usages ===
v591 v590 v589 v564 v575 v576 v577 v578 v579 v580 v581 v582 v583 v584 v585 v586 v587 v588 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a540  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
v141 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v30 
values: i45 i46 
=== Succesors ===
=== Usages ===
i46 v35 j201 i279 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v30 values: i45 i46  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 19.995267336512995
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
osrLoop: false
peelings: 1
rotated: false
splits: 2
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v29 
=== Succesors ===
next: v40 
=== Usages ===
i104 v37 v47 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v29 #next: v40  <|@  <|@
f <@~|@floating>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 52]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@e606376
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i104 
y: i315 
=== Succesors ===
=== Usages ===
v40 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i104 y: i315  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 52]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v35 
=== Succesors ===
trueSuccessor: v39 
falseSuccessor: v37 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v35 #trueSuccessor: v39 #falseSuccessor: v37  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 55]
stamp: void
=== Inputs ===
=== Succesors ===
next: v150 
=== Usages ===
v235 
=== Predecessor ===
v40 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v150  <|@  <|@
f <@~|@floating>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
guards: v531 v39 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v531 v39  <|@  <|@
f <@~|@floating>@ <|@
tid j201 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i104 
=== Succesors ===
=== Usages ===
v564 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i104  <|@  <|@
f <@~|@floating>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j201 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j201  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v235 
address: v564 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v47 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v235 address: v564 lastLocationAccess: - value: i42 stateAfter: - #next: v47  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
stamp: i32
=== Inputs ===
x: i104 
y: i45 
=== Succesors ===
=== Usages ===
i104 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i104 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
stamp: void
=== Inputs ===
loopBegin: v30 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v30  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v288 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v288  <|@  <|@
f <@~|@floating>@ <|@
tid i489 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i32 [-16]
stampKind: i32
value: int[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i490 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i490 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-16 - 2147483631]
=== Inputs ===
x: i541 
y: i489 
=== Succesors ===
=== Usages ===
v273 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i541 y: i489  <|@  <|@
f <@*|@fixed>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v272 
=== Predecessor ===
v37 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608038918195499719
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v272 
values: i104 i486 
=== Succesors ===
=== Usages ===
v273 i277 j285 i299 i337 i361 i362 i401 i403 i405 i406 i473 i475 i477 i479 i481 i483 i485 i486 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v272 values: i104 i486  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 30
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 19.995267336512995
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 16
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v288 
=== Succesors ===
next: v276 
=== Usages ===
v274 v278 i279 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v288 #next: v276  <|@  <|@
f <@~|@floating>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 52]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@e606376
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i279 
y: i490 
=== Succesors ===
=== Usages ===
v276 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i279 y: i490  <|@  <|@
f <@*|@fixed>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 52]
profileData: INJECTED designatedSuccessorProbability: 0.19981064865370968
stamp: void
=== Inputs ===
condition: v273 
=== Succesors ===
trueSuccessor: v275 
falseSuccessor: v274 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v273 #trueSuccessor: v275 #falseSuccessor: v274  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597736059191370102
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 55]
stamp: void
=== Inputs ===
=== Succesors ===
next: v284 
=== Usages ===
v466 
=== Predecessor ===
v276 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v284  <|@  <|@
f <@~|@floating>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
guards: v531 v275 
=== Succesors ===
=== Usages ===
v394 v419 v328 v425 v388 v432 v350 v438 v381 v446 v284 v452 v375 v458 v356 v464 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v531 v275  <|@  <|@
f <@~|@floating>@ <|@
tid j285 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i279 
=== Succesors ===
=== Usages ===
v575 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i279  <|@  <|@
f <@~|@floating>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j285 
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j285  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v466 
address: v575 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v328 
=== Usages ===
=== Predecessor ===
v275 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v466 address: v575 lastLocationAccess: - value: i42 stateAfter: - #next: v328  <|@  <|@
f <@~|@floating>@ <|@
tid i277 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
stamp: i32
=== Inputs ===
x: i279 
y: i45 
=== Succesors ===
=== Usages ===
j329 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i279 y: i45  <|@  <|@
f <@~|@floating>@ <|@
tid j329 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i277 
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i277  <|@  <|@
f <@~|@floating>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j329 
=== Succesors ===
=== Usages ===
v328 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j329  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v466 
address: v577 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v350 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v466 address: v577 lastLocationAccess: - value: i42 stateAfter: - #next: v350  <|@  <|@
f <@~|@floating>@ <|@
tid i337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
stamp: i32
=== Inputs ===
x: i279 
y: i136 
=== Succesors ===
=== Usages ===
j351 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i279 y: i136  <|@  <|@
f <@~|@floating>@ <|@
tid j351 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i337 
=== Succesors ===
=== Usages ===
v578 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i337  <|@  <|@
f <@~|@floating>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j351 
=== Succesors ===
=== Usages ===
v350 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v466 
address: v578 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v356 
=== Usages ===
=== Predecessor ===
v328 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v466 address: v578 lastLocationAccess: - value: i42 stateAfter: - #next: v356  <|@  <|@
f <@~|@floating>@ <|@
tid i361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
stamp: i32
=== Inputs ===
x: i279 
y: i313 
=== Succesors ===
=== Usages ===
j357 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i279 y: i313  <|@  <|@
f <@~|@floating>@ <|@
tid j357 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i361 
=== Succesors ===
=== Usages ===
v579 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i361  <|@  <|@
f <@~|@floating>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j357 
=== Succesors ===
=== Usages ===
v356 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j357  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v466 
address: v579 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v375 
=== Usages ===
=== Predecessor ===
v350 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v466 address: v579 lastLocationAccess: - value: i42 stateAfter: - #next: v375  <|@  <|@
f <@~|@floating>@ <|@
tid i360 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i32 [4]
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i362 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
stamp: i32
=== Inputs ===
x: i279 
y: i360 
=== Succesors ===
=== Usages ===
j376 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i279 y: i360  <|@  <|@
f <@~|@floating>@ <|@
tid j376 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i362 
=== Succesors ===
=== Usages ===
v580 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i362  <|@  <|@
f <@~|@floating>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j376 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j376  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v466 
address: v580 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v381 
=== Usages ===
=== Predecessor ===
v356 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v466 address: v580 lastLocationAccess: - value: i42 stateAfter: - #next: v381  <|@  <|@
f <@~|@floating>@ <|@
tid i400 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
rawvalue: 5
stableDimension: 0
stamp: i32 [5]
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i401 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
stamp: i32
=== Inputs ===
x: i279 
y: i400 
=== Succesors ===
=== Usages ===
j382 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i279 y: i400  <|@  <|@
f <@~|@floating>@ <|@
tid j382 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i401 
=== Succesors ===
=== Usages ===
v581 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i401  <|@  <|@
f <@~|@floating>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j382 
=== Succesors ===
=== Usages ===
v381 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j382  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v466 
address: v581 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v388 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v466 address: v581 lastLocationAccess: - value: i42 stateAfter: - #next: v388  <|@  <|@
f <@~|@floating>@ <|@
tid i402 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
rawvalue: 6
stableDimension: 0
stamp: i32 [6]
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i403 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
stamp: i32
=== Inputs ===
x: i279 
y: i402 
=== Succesors ===
=== Usages ===
j389 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i279 y: i402  <|@  <|@
f <@~|@floating>@ <|@
tid j389 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i403 
=== Succesors ===
=== Usages ===
v582 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i403  <|@  <|@
f <@~|@floating>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j389 
=== Succesors ===
=== Usages ===
v388 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j389  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v466 
address: v582 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v394 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v466 address: v582 lastLocationAccess: - value: i42 stateAfter: - #next: v394  <|@  <|@
f <@~|@floating>@ <|@
tid i404 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
rawvalue: 7
stableDimension: 0
stamp: i32 [7]
stampKind: i32
value: int[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i405 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
stamp: i32
=== Inputs ===
x: i279 
y: i404 
=== Succesors ===
=== Usages ===
j395 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i279 y: i404  <|@  <|@
f <@~|@floating>@ <|@
tid j395 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i405 
=== Succesors ===
=== Usages ===
v583 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i405  <|@  <|@
f <@~|@floating>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j395 
=== Succesors ===
=== Usages ===
v394 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v466 
address: v583 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
v388 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v466 address: v583 lastLocationAccess: - value: i42 stateAfter: - #next: v419  <|@  <|@
f <@~|@floating>@ <|@
tid i399 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i32 [8]
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i406 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i406 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
stamp: i32
=== Inputs ===
x: i279 
y: i399 
=== Succesors ===
=== Usages ===
j420 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i279 y: i399  <|@  <|@
f <@~|@floating>@ <|@
tid j420 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i406 
=== Succesors ===
=== Usages ===
v584 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i406  <|@  <|@
f <@~|@floating>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j420 
=== Succesors ===
=== Usages ===
v419 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j420  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v466 
address: v584 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v425 
=== Usages ===
=== Predecessor ===
v394 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v466 address: v584 lastLocationAccess: - value: i42 stateAfter: - #next: v425  <|@  <|@
f <@~|@floating>@ <|@
tid i472 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
rawvalue: 9
stableDimension: 0
stamp: i32 [9]
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
i473 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i473 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
stamp: i32
=== Inputs ===
x: i279 
y: i472 
=== Succesors ===
=== Usages ===
j426 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i279 y: i472  <|@  <|@
f <@~|@floating>@ <|@
tid j426 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i473 
=== Succesors ===
=== Usages ===
v585 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i473  <|@  <|@
f <@~|@floating>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j426 
=== Succesors ===
=== Usages ===
v425 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j426  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v466 
address: v585 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v432 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v466 address: v585 lastLocationAccess: - value: i42 stateAfter: - #next: v432  <|@  <|@
f <@~|@floating>@ <|@
tid i474 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
rawvalue: 10
stableDimension: 0
stamp: i32 [10]
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
i475 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
stamp: i32
=== Inputs ===
x: i279 
y: i474 
=== Succesors ===
=== Usages ===
j433 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i279 y: i474  <|@  <|@
f <@~|@floating>@ <|@
tid j433 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i475 
=== Succesors ===
=== Usages ===
v586 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i475  <|@  <|@
f <@~|@floating>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j433 
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j433  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v466 
address: v586 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v438 
=== Usages ===
=== Predecessor ===
v425 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v466 address: v586 lastLocationAccess: - value: i42 stateAfter: - #next: v438  <|@  <|@
f <@~|@floating>@ <|@
tid i476 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
rawvalue: 11
stableDimension: 0
stamp: i32 [11]
stampKind: i32
value: int[11|0xb]
=== Inputs ===
=== Succesors ===
=== Usages ===
i477 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
stamp: i32
=== Inputs ===
x: i279 
y: i476 
=== Succesors ===
=== Usages ===
j439 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i279 y: i476  <|@  <|@
f <@~|@floating>@ <|@
tid j439 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i477 
=== Succesors ===
=== Usages ===
v587 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i477  <|@  <|@
f <@~|@floating>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j439 
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j439  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v466 
address: v587 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v446 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v466 address: v587 lastLocationAccess: - value: i42 stateAfter: - #next: v446  <|@  <|@
f <@~|@floating>@ <|@
tid i478 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
rawvalue: 12
stableDimension: 0
stamp: i32 [12]
stampKind: i32
value: int[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i479 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i479 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
stamp: i32
=== Inputs ===
x: i279 
y: i478 
=== Succesors ===
=== Usages ===
j447 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i279 y: i478  <|@  <|@
f <@~|@floating>@ <|@
tid j447 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i479 
=== Succesors ===
=== Usages ===
v588 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i479  <|@  <|@
f <@~|@floating>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j447 
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j447  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v466 
address: v588 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v452 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v466 address: v588 lastLocationAccess: - value: i42 stateAfter: - #next: v452  <|@  <|@
f <@~|@floating>@ <|@
tid i480 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
rawvalue: 13
stableDimension: 0
stamp: i32 [13]
stampKind: i32
value: int[13|0xd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i481 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i481 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
stamp: i32
=== Inputs ===
x: i279 
y: i480 
=== Succesors ===
=== Usages ===
j453 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i279 y: i480  <|@  <|@
f <@~|@floating>@ <|@
tid j453 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i481 
=== Succesors ===
=== Usages ===
v589 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i481  <|@  <|@
f <@~|@floating>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j453 
=== Succesors ===
=== Usages ===
v452 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v466 
address: v589 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v458 
=== Usages ===
=== Predecessor ===
v446 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v466 address: v589 lastLocationAccess: - value: i42 stateAfter: - #next: v458  <|@  <|@
f <@~|@floating>@ <|@
tid i482 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
rawvalue: 14
stableDimension: 0
stamp: i32 [14]
stampKind: i32
value: int[14|0xe]
=== Inputs ===
=== Succesors ===
=== Usages ===
i483 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i483 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
stamp: i32
=== Inputs ===
x: i279 
y: i482 
=== Succesors ===
=== Usages ===
j459 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i279 y: i482  <|@  <|@
f <@~|@floating>@ <|@
tid j459 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i483 
=== Succesors ===
=== Usages ===
v590 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i483  <|@  <|@
f <@~|@floating>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j459 
=== Succesors ===
=== Usages ===
v458 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j459  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v466 
address: v590 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v464 
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v466 address: v590 lastLocationAccess: - value: i42 stateAfter: - #next: v464  <|@  <|@
f <@~|@floating>@ <|@
tid i484 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
rawvalue: 15
stableDimension: 0
stamp: i32 [15]
stampKind: i32
value: int[15|0xf]
=== Inputs ===
=== Succesors ===
=== Usages ===
i485 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
stamp: i32
=== Inputs ===
x: i279 
y: i484 
=== Succesors ===
=== Usages ===
j465 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i279 y: i484  <|@  <|@
f <@~|@floating>@ <|@
tid j465 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i485 
=== Succesors ===
=== Usages ===
v591 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i485  <|@  <|@
f <@~|@floating>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j465 
=== Succesors ===
=== Usages ===
v464 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j465  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v466 
address: v591 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v278 
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v466 address: v591 lastLocationAccess: - value: i42 stateAfter: - #next: v278  <|@  <|@
f <@~|@floating>@ <|@
tid i471 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 16
stableDimension: 0
stamp: i32 [16]
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i486 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
stamp: i32
=== Inputs ===
x: i279 
y: i471 
=== Succesors ===
=== Usages ===
i279 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i279 y: i471  <|@  <|@
f <@*|@fixed>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
stamp: void
=== Inputs ===
loopBegin: v272 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v464 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v272  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v272 
=== Succesors ===
next: v308 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v272 #next: v308  <|@  <|@
f <@*|@fixed>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
v274 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v292 
values: i279 i297 
=== Succesors ===
=== Usages ===
v293 i297 j305 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v292 values: i279 i297  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 30
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 19.995267336512995
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v308 
=== Succesors ===
next: v296 
=== Usages ===
v294 v298 i299 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v308 #next: v296  <|@  <|@
f <@~|@floating>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 52]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@e606376
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i299 
y: i541 
=== Succesors ===
=== Usages ===
v296 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i299 y: i541  <|@  <|@
f <@*|@fixed>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 52]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v293 
=== Succesors ===
trueSuccessor: v295 
falseSuccessor: v294 
=== Usages ===
=== Predecessor ===
v292 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v293 #trueSuccessor: v295 #falseSuccessor: v294  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 55]
stamp: void
=== Inputs ===
=== Succesors ===
next: v304 
=== Usages ===
v307 
=== Predecessor ===
v296 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v304  <|@  <|@
f <@~|@floating>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
guards: v531 v295 
=== Succesors ===
=== Usages ===
v304 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v531 v295  <|@  <|@
f <@~|@floating>@ <|@
tid j305 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i299 
=== Succesors ===
=== Usages ===
v576 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i299  <|@  <|@
f <@~|@floating>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j305 
=== Succesors ===
=== Usages ===
v304 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j305  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v307 
address: v576 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v298 
=== Usages ===
=== Predecessor ===
v295 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v307 address: v576 lastLocationAccess: - value: i42 stateAfter: - #next: v298  <|@  <|@
f <@~|@floating>@ <|@
tid i297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
stamp: i32
=== Inputs ===
x: i299 
y: i45 
=== Succesors ===
=== Usages ===
i299 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i299 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
stamp: void
=== Inputs ===
loopBegin: v292 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v304 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v292  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v292 
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
v296 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v292 #next: v100  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
v294 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v100 v101 
=== Succesors ===
next: a543 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v100 v101 #next: a543  <|@  <|@
f <@~|@floating>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
displacement: 68
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a543 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a543 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.regex.IntHashSet[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.localsPos
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 72]
stamp: n# java.util.regex.IntHashSet[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v565 
lastLocationAccess: - 
=== Succesors ===
next: i544 
=== Usages ===
v566 
=== Predecessor ===
v99 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v565 lastLocationAccess: - #next: i544  <|@  <|@
tid ?103 <|@
d <@d|@=== Debug Properties ===
bci: 68
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Matcher.search(int)>
localsSize: 3
locksSize: 0
sourceFile: Matcher.java
sourceLine: 1762
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v593 i544 a546 v547 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a543 
=== Succesors ===
=== Usages ===
i544 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a543  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i544 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-40203|0xffffffffffff62f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 75]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?103 
guard: - 
address: v566 
lastLocationAccess: - 
=== Succesors ===
next: a545 
=== Usages ===
v87 
=== Predecessor ===
a543 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?103 guard: - address: v566 lastLocationAccess: - #next: a545  <|@  <|@
f <@~|@floating>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
displacement: 52
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a545 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a545 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.regex.Pattern
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.parentPattern
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 109]
stamp: n# java.util.regex.Pattern
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v568 
lastLocationAccess: - 
=== Succesors ===
next: a546 
=== Usages ===
v569 
=== Predecessor ===
i544 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v568 lastLocationAccess: - #next: a546  <|@  <|@
f <@~|@floating>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
displacement: 52
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a545 
=== Succesors ===
=== Usages ===
a546 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a545  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a546 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.regex.Pattern$Node
barrierType: NONE
deoptReasonAndAction: int[-43275|0xffffffffffff56f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.root
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 112]
stamp: n java.util.regex.Pattern$Node
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?103 
guard: - 
address: v569 
lastLocationAccess: - 
=== Succesors ===
next: v547 
=== Usages ===
a173 v592 
=== Predecessor ===
a545 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?103 guard: - address: v569 lastLocationAccess: - #next: v547  <|@  <|@
f <@~|@floating>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a546 
=== Succesors ===
=== Usages ===
v547 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a546  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140080475799552 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-45835|0xffffffffffff4cf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: Klass*!(compressed base: 140080475799552 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?103 
guard: - 
address: v592 
lastLocationAccess: - 
=== Succesors ===
next: v269 
=== Usages ===
v530 
=== Predecessor ===
a546 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?103 guard: - address: v592 lastLocationAccess: - #next: v269  <|@  <|@
f <@~|@floating>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 76]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i544 
y: i4 
=== Succesors ===
=== Usages ===
v269 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i544 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 76]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v87 
=== Succesors ===
trueSuccessor: v267 
falseSuccessor: v268 
=== Usages ===
=== Predecessor ===
v547 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v87 #trueSuccessor: v267 #falseSuccessor: v268  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1766) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
next: v163 
=== Usages ===
=== Predecessor ===
v269 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v163  <|@  <|@
f <@~|@floating>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.acceptMode
location: Matcher.acceptMode
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1766) [bci: 105]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v567 
lastLocationAccess: - 
value: i4 
stateAfter: - 
=== Succesors ===
next: v184 
=== Usages ===
=== Predecessor ===
v267 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v567 lastLocationAccess: - value: i4 stateAfter: - #next: v184  <|@  <|@
f <@~|@floating>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140080475799552 shift: 0
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v547 
=== Succesors ===
=== Usages ===
v571 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v547  <|@  <|@
f <@~|@floating>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
displacement: 496
stamp: void*
stride: S1
=== Inputs ===
base: v530 
index: - 
=== Succesors ===
=== Usages ===
v184 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v530 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v571 
lastLocationAccess: - 
=== Succesors ===
next: j187 
=== Usages ===
v572 v188 
=== Predecessor ===
v163 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v571 lastLocationAccess: - #next: j187  <|@  <|@
f <@~|@floating>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v184 
index: - 
=== Succesors ===
=== Usages ===
j187 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v184 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j187 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v572 
lastLocationAccess: - 
=== Succesors ===
next: a548 
=== Usages ===
v188 
=== Predecessor ===
v184 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v572 lastLocationAccess: - #next: a548  <|@  <|@
f <@~|@floating>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
displacement: 60
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a548 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a548 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.text
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 118]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v570 
lastLocationAccess: - 
=== Succesors ===
next: i66 
=== Usages ===
a177 
=== Predecessor ===
j187 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v570 lastLocationAccess: - #next: i66  <|@  <|@
f <@~|@floating>@ <|@
tid a173 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 112]
op: Uncompress
stamp: a java.util.regex.Pattern$Node
=== Inputs ===
value: a546 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a546  <|@  <|@
f <@~|@floating>@ <|@
tid a177 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 118]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a548 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a548  <|@  <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/util/regex/Pattern$Node;, resolved>, UnresolvedJavaType<Ljava/util/regex/Matcher;>, HotSpotResolvedPrimitiveType<int>, UnresolvedJavaType<Ljava/lang/CharSequence;>]
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
computedAddress: j187 
metaspaceMethod: v184 
arguments: a173 a1 i2 a177 
=== Succesors ===
=== Usages ===
i66 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j187 metaspaceMethod: v184 arguments: a173 a1 i2 a177  <|@  <|@
tid ?270 <|@
d <@d|@=== Debug Properties ===
bci: 121
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Matcher.search(int)>
localsSize: 3
locksSize: 0
sourceFile: Matcher.java
sourceLine: 1767
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
i66 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i66 <|@
d <@d|@=== Debug Properties ===
bci: 121
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Indirect#Pattern$Node.match
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v188 
stateDuring: ?270 
=== Succesors ===
next: v71 
=== Usages ===
v85 v68 
=== Predecessor ===
a548 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v188 stateDuring: ?270 #next: v71  <|@  <|@
f <@~|@floating>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1768) [bci: 126]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i66 
y: i4 
=== Succesors ===
=== Usages ===
v71 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i66 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1768) [bci: 126]
profileData: PROFILED designatedSuccessorProbability: 2.9484609034069464E-5
stamp: void
=== Inputs ===
condition: v68 
=== Succesors ===
trueSuccessor: v70 
falseSuccessor: v69 
=== Usages ===
=== Predecessor ===
i66 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v68 #trueSuccessor: v70 #falseSuccessor: v69  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4539323545726156800
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1769) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: v197 
=== Usages ===
=== Predecessor ===
v71 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v197  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.first
location: Matcher.first
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1769) [bci: 131]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v559 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v559 lastLocationAccess: - value: i42 stateAfter: - #next: v76  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1770) [bci: 134]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
v197 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607182153226268890
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1770) [bci: 134]
stamp: void
=== Inputs ===
=== Succesors ===
next: v74 
=== Usages ===
=== Predecessor ===
v71 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v74  <|@  <|@
f <@*|@fixed>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1770) [bci: 134]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
v69 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1770) [bci: 134]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v74 v76 
=== Succesors ===
next: i549 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v74 v76 #next: i549  <|@  <|@
f <@~|@floating>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i549 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i549 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.last
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1770) [bci: 136]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v573 
lastLocationAccess: - 
=== Succesors ===
next: v192 
=== Usages ===
v192 
=== Predecessor ===
v75 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v573 lastLocationAccess: - #next: v192  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.oldLast
location: Matcher.oldLast
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1770) [bci: 139]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v560 
lastLocationAccess: - 
value: i549 
stateAfter: - 
=== Succesors ===
next: i550 
=== Usages ===
=== Predecessor ===
i549 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v560 lastLocationAccess: - value: i549 stateAfter: - #next: i550  <|@  <|@
f <@~|@floating>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
displacement: 44
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i550 v196 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i550 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1771) [bci: 144]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v574 
lastLocationAccess: - 
=== Succesors ===
next: v196 
=== Usages ===
i82 
=== Predecessor ===
v192 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v574 lastLocationAccess: - #next: v196  <|@  <|@
f <@~|@floating>@ <|@
tid i82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1771) [bci: 148]
stamp: i32
=== Inputs ===
x: i550 
y: i45 
=== Succesors ===
=== Usages ===
v196 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i550 y: i45  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.modCount
location: Matcher.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1771) [bci: 149]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v574 
lastLocationAccess: - 
value: i82 
stateAfter: - 
=== Succesors ===
next: v85 
=== Usages ===
=== Predecessor ===
i550 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v574 lastLocationAccess: - value: i82 stateAfter: - #next: v85  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1772) [bci: 153]
stamp: void
=== Inputs ===
memoryMap: - 
result: i66 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i66  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v593 
=== Usages ===
=== Predecessor ===
v269 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v593  <|@  <|@
f <@*|@fixed>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 266
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 75]
reason: UnreachedCode
speculation: {0x0000000000000294[index: 20, len: 20, hash: 0xce6b4489]: UnreachedCode@6[HotSpotMethod<Matcher.search(int)>, 79]}
stamp: void
=== Inputs ===
stateBefore: ?103 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v268 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?103  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
next: v245 
=== Usages ===
=== Predecessor ===
v536 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v245  <|@  <|@
tid ?27 <|@
d <@d|@=== Debug Properties ===
bci: 44
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Matcher.search(int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1759) [bci: 41]
sourceFile: Matcher.java
sourceLine: 1760
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 144
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
reason: BoundsCheckException
speculation: {0x0000000000003e98[index: 500, len: 24, hash: 0xd2d5443e]: GuardMovement@3[HotSpotMethod<Matcher.search(int)>, 46, BoundsCheckException]}
stamp: void
=== Inputs ===
stateBefore: ?27 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?27  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f94981 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v0|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v0|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = CMOVE (falseValue: v4|DWORD, ~trueValue: v1|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.04762978170136911 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = DEC value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVSXD value: v6|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v2|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v3|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v3|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA address: [v3|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608038918195499719
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 0.19981064865370968 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597736059191370102
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v15|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = LEA address: [v14|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v16|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = LEA address: [v14|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v17|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA address: [v14|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v18|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = LEA address: [v14|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v19|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = LEA address: [v14|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v20|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = LEA address: [v14|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v21|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = LEA address: [v14|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v22|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = LEA address: [v14|DWORD + 9] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = LEA address: [v14|DWORD + 10] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v24|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = LEA address: [v14|DWORD + 11] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v25|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = LEA address: [v14|DWORD + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = LEA address: [v14|DWORD + 13] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v27|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = LEA address: [v14|DWORD + 14] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v28|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = LEA address: [v14|DWORD + 15] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v29|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = LEA address: [v14|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v31|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v31|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = INC value: v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v32|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[_] = MOV input: [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v34|DWORD = MOV input: [v33|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[_] = MOV input: [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v36|DWORD[_] = MOV input: [v35|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v37|DWORD = MOV input: [v36|DWORD[_] * 8 + 8] size: DWORD state [bci:68] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE input: long[140080475799552|0x7f6707000000] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = UNCOMPRESSPOINTER (input: v37|DWORD, ~baseRegister: v39|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 140080475799552 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV input: [v38|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV input: [v40|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:121] <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v45|DWORD, y: v45|DWORD) trueDestinationProbability: 2.9484609034069464E-5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607182153226268890
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction INC value: [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v45|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024995983699200
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4539323545726156800
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 16024 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -66835 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a540 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a540  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.regex.Matcher
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v557 v570 v558 ?9 v559 v188 v560 v574 v565 ?270 v567 ?27 v573 v561 ?103 v568 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v561 <|@
result [v0|QWORD[.] + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a540 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a540 <|@
result v2|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# int[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.groups
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 48]
stamp: n# int[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v561 
lastLocationAccess: - 
=== Succesors ===
next: i541 
=== Usages ===
a124 v562 v563 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v561 lastLocationAccess: - #next: i541  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?27 ?9 v10 v116 v188 i551 ?103 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Matcher.search(int)>
localsSize: 3
locksSize: 0
sourceFile: Matcher.java
sourceLine: 1755
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
i541 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid v562 <|@
result [v2|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a540 
=== Succesors ===
=== Usages ===
i541 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a540  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i541 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-32267|0xffffffffffff81f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 51]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v562 
lastLocationAccess: - 
=== Succesors ===
next: v110 
=== Usages ===
i315 v230 v132 j221 i238 i490 v293 v314 
=== Predecessor ===
a540 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v562 lastLocationAccess: - #next: v110  <|@  <|@
f <@~|@floating>@ <|@
tid v557 <|@
result [v0|QWORD[.] + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i198 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1755) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v110 v113 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.hitEnd
location: Matcher.hitEnd
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1755) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v557 
lastLocationAccess: - 
value: i198 
stateAfter: - 
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
i541 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v557 lastLocationAccess: - value: i198 stateAfter: - #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid v558 <|@
result [v0|QWORD[.] + 49] <|@
d <@d|@=== Debug Properties ===
displacement: 49
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.requireEnd
location: Matcher.requireEnd
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1756) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v558 
lastLocationAccess: - 
value: i198 
stateAfter: - 
=== Succesors ===
next: v264 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v558 lastLocationAccess: - value: i198 stateAfter: - #next: v264  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1755) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v132 v68 v10 v15 v163 v87 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1757) [bci: 11]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@e606376
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i4 
=== Succesors ===
=== Usages ===
v264 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1757) [bci: 11]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v10 
=== Succesors ===
trueSuccessor: v262 
falseSuccessor: v263 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v10 #trueSuccessor: v262 #falseSuccessor: v263  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f94981 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v0|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v0|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1757) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: v261 
=== Usages ===
=== Predecessor ===
v264 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v261  <|@  <|@
tid ?9 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: iload_1
code: ResolvedJavaMethodBytecode<Matcher.search(int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1756) [bci: 7]
sourceFile: Matcher.java
sourceLine: 1757
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v261 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1757) [bci: 11]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0xce6b4448]: UnreachedCode@6[HotSpotMethod<Matcher.search(int)>, 14]}
stamp: void
=== Inputs ===
stateBefore: ?9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v262 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?9  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -66835 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1757) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: v116 
=== Usages ===
=== Predecessor ===
v264 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v116  <|@  <|@
f <@~|@floating>@ <|@
tid v559 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v116 v197 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.first
location: Matcher.first
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1758) [bci: 22]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v559 
lastLocationAccess: - 
value: i2 
stateAfter: - 
=== Succesors ===
next: i542 
=== Usages ===
=== Predecessor ===
v263 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v559 lastLocationAccess: - value: i2 stateAfter: - #next: i542  <|@  <|@
f <@~|@floating>@ <|@
tid v560 <|@
result [v0|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i542 v120 v192 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i542 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.oldLast
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1759) [bci: 27]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v560 
lastLocationAccess: - 
=== Succesors ===
next: v120 
=== Usages ===
v15 i551 
=== Predecessor ===
v116 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v560 lastLocationAccess: - #next: v120  <|@  <|@
f <@~|@floating>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1759) [bci: 30]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@e606376
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i542 
y: i4 
=== Succesors ===
=== Usages ===
i551 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i542 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i551 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1759) [bci: 30]
stamp: i32
=== Inputs ===
condition: v15 
trueValue: i2 
falseValue: i542 
=== Succesors ===
=== Usages ===
v120 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v15 trueValue: i2 falseValue: i542  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.oldLast
location: Matcher.oldLast
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1759) [bci: 41]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v560 
lastLocationAccess: - 
value: i551 
stateAfter: - 
=== Succesors ===
next: v93 
=== Usages ===
=== Predecessor ===
i542 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v560 lastLocationAccess: - value: i551 stateAfter: - #next: v93  <|@  <|@
f <@~|@floating>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i541 
y: i4 
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i541 y: i4  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i46 i82 i104 i277 i297 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 60]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v150 v197 v141 i238 v284 v304 v328 v350 v356 v375 v381 v388 v394 v419 v425 v432 v438 v446 v452 v458 v464 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 52]
profileData: PROFILED designatedSuccessorProbability: 0.04762978170136911
stamp: void
=== Inputs ===
condition: v132 
=== Succesors ===
trueSuccessor: v91 
falseSuccessor: v92 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v132 #trueSuccessor: v91 #falseSuccessor: v92  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = CMOVE (falseValue: v4|DWORD, ~trueValue: v1|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.04762978170136911 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024995983699200
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
next: v101 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v101  <|@  <|@
f <@*|@fixed>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
v91 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 55]
stamp: void
=== Inputs ===
=== Succesors ===
next: v538 
=== Usages ===
v141 
=== Predecessor ===
v93 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v538  <|@  <|@
f <@~|@floating>@ <|@
tid i238 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i541 
y: i42 
=== Succesors ===
=== Usages ===
j228 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i541 y: i42  <|@  <|@
f <@~|@floating>@ <|@
tid j228 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-1 - 2147483646]
=== Inputs ===
value: i238 
=== Succesors ===
=== Usages ===
v229 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i238  <|@  <|@
f <@~|@floating>@ <|@
tid j221 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i541 
=== Succesors ===
=== Usages ===
v229 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i541  <|@  <|@
f <@~|@floating>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@6021759f
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j228 
y: j221 
=== Succesors ===
=== Usages ===
v538 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j228 y: j221  <|@  <|@
f <@~|@floating>@ <|@
tid i136 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i315 v230 i337 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v229 
=== Succesors ===
trueSuccessor: v534 
falseSuccessor: v537 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v229 #trueSuccessor: v534 #falseSuccessor: v537  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = DEC value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVSXD value: v6|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
next: v532 
=== Usages ===
=== Predecessor ===
v538 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v532  <|@  <|@
f <@*|@fixed>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v531 
=== Predecessor ===
v534 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
next: v536 
=== Usages ===
=== Predecessor ===
v538 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v536  <|@  <|@
f <@~|@floating>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@6021759f
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i541 
y: i136 
=== Succesors ===
=== Usages ===
v536 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i541 y: i136  <|@  <|@
f <@*|@fixed>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v230 
=== Succesors ===
trueSuccessor: v535 
falseSuccessor: v246 
=== Usages ===
=== Predecessor ===
v537 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v230 #trueSuccessor: v535 #falseSuccessor: v246  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
next: v533 
=== Usages ===
=== Predecessor ===
v536 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v533  <|@  <|@
f <@*|@fixed>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v531 
=== Predecessor ===
v535 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v532 v533 
=== Succesors ===
next: v141 
=== Usages ===
v235 v307 v466 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v532 v533 #next: v141  <|@  <|@
f <@~|@floating>@ <|@
tid v563 <|@
result [v2|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a540 
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a540  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v92 
address: v563 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v29 
=== Usages ===
=== Predecessor ===
v531 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v92 address: v563 lastLocationAccess: - value: i42 stateAfter: - #next: v29  <|@  <|@
f <@~|@floating>@ <|@
tid i313 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v314 i361 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@6021759f
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i541 
y: i313 
=== Succesors ===
=== Usages ===
i315 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i541 y: i313  <|@  <|@
f <@~|@floating>@ <|@
tid i315 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2] bits:0...0xx
=== Inputs ===
condition: v314 
trueValue: i541 
falseValue: i136 
=== Succesors ===
=== Usages ===
v35 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v314 trueValue: i541 falseValue: i136  <|@  <|@
f <@~|@floating>@ <|@
tid a124 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 48]
op: Uncompress
stamp: a# int[]
=== Inputs ===
value: a540 
=== Succesors ===
=== Usages ===
v591 v590 v589 v564 v575 v576 v577 v578 v579 v580 v581 v582 v583 v584 v585 v586 v587 v588 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a540  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
v141 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v2|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v3|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v3|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i104 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v30 
values: i45 i46 
=== Succesors ===
=== Usages ===
i46 v35 j201 i279 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v30 values: i45 i46  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 19.995267336512995
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
osrLoop: false
peelings: 1
rotated: false
splits: 2
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v29 
=== Succesors ===
next: v40 
=== Usages ===
i104 v37 v47 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v29 #next: v40  <|@  <|@
f <@~|@floating>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 52]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@e606376
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i104 
y: i315 
=== Succesors ===
=== Usages ===
v40 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i104 y: i315  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 52]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v35 
=== Succesors ===
trueSuccessor: v39 
falseSuccessor: v37 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v35 #trueSuccessor: v39 #falseSuccessor: v37  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 55]
stamp: void
=== Inputs ===
=== Succesors ===
next: v150 
=== Usages ===
v235 
=== Predecessor ===
v40 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v150  <|@  <|@
f <@~|@floating>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
guards: v531 v39 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v531 v39  <|@  <|@
f <@~|@floating>@ <|@
tid j201 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i104 
=== Succesors ===
=== Usages ===
v564 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i104  <|@  <|@
f <@~|@floating>@ <|@
tid v564 <|@
result [v10|QWORD[.] + v11|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j201 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j201  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v235 
address: v564 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v47 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v235 address: v564 lastLocationAccess: - value: i42 stateAfter: - #next: v47  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
stamp: i32
=== Inputs ===
x: i104 
y: i45 
=== Succesors ===
=== Usages ===
i104 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i104 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
stamp: void
=== Inputs ===
loopBegin: v30 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v30  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v288 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v288  <|@  <|@
f <@~|@floating>@ <|@
tid i489 <|@
result int[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i32 [-16]
stampKind: i32
value: int[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i490 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i490 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-16 - 2147483631]
=== Inputs ===
x: i541 
y: i489 
=== Succesors ===
=== Usages ===
v273 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i541 y: i489  <|@  <|@
f <@*|@fixed>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v272 
=== Predecessor ===
v37 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA address: [v3|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608038918195499719
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i279 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v272 
values: i104 i486 
=== Succesors ===
=== Usages ===
v273 i277 j285 i299 i337 i361 i362 i401 i403 i405 i406 i473 i475 i477 i479 i481 i483 i485 i486 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v272 values: i104 i486  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 30
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 19.995267336512995
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 16
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v288 
=== Succesors ===
next: v276 
=== Usages ===
v274 v278 i279 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v288 #next: v276  <|@  <|@
f <@~|@floating>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 52]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@e606376
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i279 
y: i490 
=== Succesors ===
=== Usages ===
v276 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i279 y: i490  <|@  <|@
f <@*|@fixed>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 52]
profileData: INJECTED designatedSuccessorProbability: 0.19981064865370968
stamp: void
=== Inputs ===
condition: v273 
=== Succesors ===
trueSuccessor: v275 
falseSuccessor: v274 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v273 #trueSuccessor: v275 #falseSuccessor: v274  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 0.19981064865370968 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597736059191370102
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 55]
stamp: void
=== Inputs ===
=== Succesors ===
next: v284 
=== Usages ===
v466 
=== Predecessor ===
v276 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v284  <|@  <|@
f <@~|@floating>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
guards: v531 v275 
=== Succesors ===
=== Usages ===
v394 v419 v328 v425 v388 v432 v350 v438 v381 v446 v284 v452 v375 v458 v356 v464 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v531 v275  <|@  <|@
f <@~|@floating>@ <|@
tid j285 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i279 
=== Succesors ===
=== Usages ===
v575 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i279  <|@  <|@
f <@~|@floating>@ <|@
tid v575 <|@
result [v10|QWORD[.] + v14|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j285 
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j285  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v466 
address: v575 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v328 
=== Usages ===
=== Predecessor ===
v275 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v466 address: v575 lastLocationAccess: - value: i42 stateAfter: - #next: v328  <|@  <|@
f <@~|@floating>@ <|@
tid i277 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
stamp: i32
=== Inputs ===
x: i279 
y: i45 
=== Succesors ===
=== Usages ===
j329 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i279 y: i45  <|@  <|@
f <@~|@floating>@ <|@
tid j329 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i277 
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i277  <|@  <|@
f <@~|@floating>@ <|@
tid v577 <|@
result [v10|QWORD[.] + v15|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j329 
=== Succesors ===
=== Usages ===
v328 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j329  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v466 
address: v577 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v350 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v466 address: v577 lastLocationAccess: - value: i42 stateAfter: - #next: v350  <|@  <|@
f <@~|@floating>@ <|@
tid i337 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
stamp: i32
=== Inputs ===
x: i279 
y: i136 
=== Succesors ===
=== Usages ===
j351 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i279 y: i136  <|@  <|@
f <@~|@floating>@ <|@
tid j351 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i337 
=== Succesors ===
=== Usages ===
v578 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i337  <|@  <|@
f <@~|@floating>@ <|@
tid v578 <|@
result [v10|QWORD[.] + v16|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j351 
=== Succesors ===
=== Usages ===
v350 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v466 
address: v578 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v356 
=== Usages ===
=== Predecessor ===
v328 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v466 address: v578 lastLocationAccess: - value: i42 stateAfter: - #next: v356  <|@  <|@
f <@~|@floating>@ <|@
tid i361 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
stamp: i32
=== Inputs ===
x: i279 
y: i313 
=== Succesors ===
=== Usages ===
j357 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i279 y: i313  <|@  <|@
f <@~|@floating>@ <|@
tid j357 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i361 
=== Succesors ===
=== Usages ===
v579 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i361  <|@  <|@
f <@~|@floating>@ <|@
tid v579 <|@
result [v10|QWORD[.] + v17|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j357 
=== Succesors ===
=== Usages ===
v356 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j357  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v466 
address: v579 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v375 
=== Usages ===
=== Predecessor ===
v350 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v466 address: v579 lastLocationAccess: - value: i42 stateAfter: - #next: v375  <|@  <|@
f <@~|@floating>@ <|@
tid i360 <|@
result int[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i32 [4]
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i362 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i362 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
stamp: i32
=== Inputs ===
x: i279 
y: i360 
=== Succesors ===
=== Usages ===
j376 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i279 y: i360  <|@  <|@
f <@~|@floating>@ <|@
tid j376 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i362 
=== Succesors ===
=== Usages ===
v580 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i362  <|@  <|@
f <@~|@floating>@ <|@
tid v580 <|@
result [v10|QWORD[.] + v18|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j376 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j376  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v466 
address: v580 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v381 
=== Usages ===
=== Predecessor ===
v356 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v466 address: v580 lastLocationAccess: - value: i42 stateAfter: - #next: v381  <|@  <|@
f <@~|@floating>@ <|@
tid i400 <|@
result int[5|0x5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
rawvalue: 5
stableDimension: 0
stamp: i32 [5]
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i401 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i401 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
stamp: i32
=== Inputs ===
x: i279 
y: i400 
=== Succesors ===
=== Usages ===
j382 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i279 y: i400  <|@  <|@
f <@~|@floating>@ <|@
tid j382 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i401 
=== Succesors ===
=== Usages ===
v581 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i401  <|@  <|@
f <@~|@floating>@ <|@
tid v581 <|@
result [v10|QWORD[.] + v19|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j382 
=== Succesors ===
=== Usages ===
v381 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j382  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v466 
address: v581 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v388 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v466 address: v581 lastLocationAccess: - value: i42 stateAfter: - #next: v388  <|@  <|@
f <@~|@floating>@ <|@
tid i402 <|@
result int[6|0x6] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
rawvalue: 6
stableDimension: 0
stamp: i32 [6]
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i403 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i403 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
stamp: i32
=== Inputs ===
x: i279 
y: i402 
=== Succesors ===
=== Usages ===
j389 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i279 y: i402  <|@  <|@
f <@~|@floating>@ <|@
tid j389 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i403 
=== Succesors ===
=== Usages ===
v582 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i403  <|@  <|@
f <@~|@floating>@ <|@
tid v582 <|@
result [v10|QWORD[.] + v20|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j389 
=== Succesors ===
=== Usages ===
v388 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j389  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v466 
address: v582 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v394 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v466 address: v582 lastLocationAccess: - value: i42 stateAfter: - #next: v394  <|@  <|@
f <@~|@floating>@ <|@
tid i404 <|@
result int[7|0x7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
rawvalue: 7
stableDimension: 0
stamp: i32 [7]
stampKind: i32
value: int[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i405 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i405 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
stamp: i32
=== Inputs ===
x: i279 
y: i404 
=== Succesors ===
=== Usages ===
j395 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i279 y: i404  <|@  <|@
f <@~|@floating>@ <|@
tid j395 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i405 
=== Succesors ===
=== Usages ===
v583 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i405  <|@  <|@
f <@~|@floating>@ <|@
tid v583 <|@
result [v10|QWORD[.] + v21|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j395 
=== Succesors ===
=== Usages ===
v394 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v466 
address: v583 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
v388 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v466 address: v583 lastLocationAccess: - value: i42 stateAfter: - #next: v419  <|@  <|@
f <@~|@floating>@ <|@
tid i399 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i32 [8]
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i406 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i406 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
stamp: i32
=== Inputs ===
x: i279 
y: i399 
=== Succesors ===
=== Usages ===
j420 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i279 y: i399  <|@  <|@
f <@~|@floating>@ <|@
tid j420 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i406 
=== Succesors ===
=== Usages ===
v584 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i406  <|@  <|@
f <@~|@floating>@ <|@
tid v584 <|@
result [v10|QWORD[.] + v22|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j420 
=== Succesors ===
=== Usages ===
v419 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j420  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v466 
address: v584 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v425 
=== Usages ===
=== Predecessor ===
v394 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v466 address: v584 lastLocationAccess: - value: i42 stateAfter: - #next: v425  <|@  <|@
f <@~|@floating>@ <|@
tid i472 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
rawvalue: 9
stableDimension: 0
stamp: i32 [9]
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
i473 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i473 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
stamp: i32
=== Inputs ===
x: i279 
y: i472 
=== Succesors ===
=== Usages ===
j426 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i279 y: i472  <|@  <|@
f <@~|@floating>@ <|@
tid j426 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i473 
=== Succesors ===
=== Usages ===
v585 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i473  <|@  <|@
f <@~|@floating>@ <|@
tid v585 <|@
result [v10|QWORD[.] + v23|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j426 
=== Succesors ===
=== Usages ===
v425 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j426  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v466 
address: v585 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v432 
=== Usages ===
=== Predecessor ===
v419 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v466 address: v585 lastLocationAccess: - value: i42 stateAfter: - #next: v432  <|@  <|@
f <@~|@floating>@ <|@
tid i474 <|@
result int[10|0xa] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
rawvalue: 10
stableDimension: 0
stamp: i32 [10]
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
i475 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i475 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
stamp: i32
=== Inputs ===
x: i279 
y: i474 
=== Succesors ===
=== Usages ===
j433 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i279 y: i474  <|@  <|@
f <@~|@floating>@ <|@
tid j433 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i475 
=== Succesors ===
=== Usages ===
v586 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i475  <|@  <|@
f <@~|@floating>@ <|@
tid v586 <|@
result [v10|QWORD[.] + v24|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j433 
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j433  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v466 
address: v586 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v438 
=== Usages ===
=== Predecessor ===
v425 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v466 address: v586 lastLocationAccess: - value: i42 stateAfter: - #next: v438  <|@  <|@
f <@~|@floating>@ <|@
tid i476 <|@
result int[11|0xb] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
rawvalue: 11
stableDimension: 0
stamp: i32 [11]
stampKind: i32
value: int[11|0xb]
=== Inputs ===
=== Succesors ===
=== Usages ===
i477 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i477 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
stamp: i32
=== Inputs ===
x: i279 
y: i476 
=== Succesors ===
=== Usages ===
j439 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i279 y: i476  <|@  <|@
f <@~|@floating>@ <|@
tid j439 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i477 
=== Succesors ===
=== Usages ===
v587 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i477  <|@  <|@
f <@~|@floating>@ <|@
tid v587 <|@
result [v10|QWORD[.] + v25|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j439 
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j439  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v466 
address: v587 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v446 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v466 address: v587 lastLocationAccess: - value: i42 stateAfter: - #next: v446  <|@  <|@
f <@~|@floating>@ <|@
tid i478 <|@
result int[12|0xc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
rawvalue: 12
stableDimension: 0
stamp: i32 [12]
stampKind: i32
value: int[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i479 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i479 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
stamp: i32
=== Inputs ===
x: i279 
y: i478 
=== Succesors ===
=== Usages ===
j447 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i279 y: i478  <|@  <|@
f <@~|@floating>@ <|@
tid j447 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i479 
=== Succesors ===
=== Usages ===
v588 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i479  <|@  <|@
f <@~|@floating>@ <|@
tid v588 <|@
result [v10|QWORD[.] + v26|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j447 
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j447  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v466 
address: v588 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v452 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v466 address: v588 lastLocationAccess: - value: i42 stateAfter: - #next: v452  <|@  <|@
f <@~|@floating>@ <|@
tid i480 <|@
result int[13|0xd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
rawvalue: 13
stableDimension: 0
stamp: i32 [13]
stampKind: i32
value: int[13|0xd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i481 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i481 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
stamp: i32
=== Inputs ===
x: i279 
y: i480 
=== Succesors ===
=== Usages ===
j453 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i279 y: i480  <|@  <|@
f <@~|@floating>@ <|@
tid j453 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i481 
=== Succesors ===
=== Usages ===
v589 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i481  <|@  <|@
f <@~|@floating>@ <|@
tid v589 <|@
result [v10|QWORD[.] + v27|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j453 
=== Succesors ===
=== Usages ===
v452 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v466 
address: v589 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v458 
=== Usages ===
=== Predecessor ===
v446 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v466 address: v589 lastLocationAccess: - value: i42 stateAfter: - #next: v458  <|@  <|@
f <@~|@floating>@ <|@
tid i482 <|@
result int[14|0xe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
rawvalue: 14
stableDimension: 0
stamp: i32 [14]
stampKind: i32
value: int[14|0xe]
=== Inputs ===
=== Succesors ===
=== Usages ===
i483 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i483 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
stamp: i32
=== Inputs ===
x: i279 
y: i482 
=== Succesors ===
=== Usages ===
j459 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i279 y: i482  <|@  <|@
f <@~|@floating>@ <|@
tid j459 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i483 
=== Succesors ===
=== Usages ===
v590 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i483  <|@  <|@
f <@~|@floating>@ <|@
tid v590 <|@
result [v10|QWORD[.] + v28|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j459 
=== Succesors ===
=== Usages ===
v458 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j459  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v466 
address: v590 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v464 
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v466 address: v590 lastLocationAccess: - value: i42 stateAfter: - #next: v464  <|@  <|@
f <@~|@floating>@ <|@
tid i484 <|@
result int[15|0xf] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
rawvalue: 15
stableDimension: 0
stamp: i32 [15]
stampKind: i32
value: int[15|0xf]
=== Inputs ===
=== Succesors ===
=== Usages ===
i485 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i485 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
stamp: i32
=== Inputs ===
x: i279 
y: i484 
=== Succesors ===
=== Usages ===
j465 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i279 y: i484  <|@  <|@
f <@~|@floating>@ <|@
tid j465 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i485 
=== Succesors ===
=== Usages ===
v591 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i485  <|@  <|@
f <@~|@floating>@ <|@
tid v591 <|@
result [v10|QWORD[.] + v29|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j465 
=== Succesors ===
=== Usages ===
v464 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j465  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v466 
address: v591 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v278 
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v466 address: v591 lastLocationAccess: - value: i42 stateAfter: - #next: v278  <|@  <|@
f <@~|@floating>@ <|@
tid i471 <|@
result int[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 16
stableDimension: 0
stamp: i32 [16]
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i486 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i486 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
stamp: i32
=== Inputs ===
x: i279 
y: i471 
=== Succesors ===
=== Usages ===
i279 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i279 y: i471  <|@  <|@
f <@*|@fixed>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
stamp: void
=== Inputs ===
loopBegin: v272 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v464 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v272  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v15|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = LEA address: [v14|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v16|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = LEA address: [v14|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v17|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA address: [v14|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v18|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = LEA address: [v14|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v19|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = LEA address: [v14|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v20|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = LEA address: [v14|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v21|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = LEA address: [v14|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v22|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = LEA address: [v14|DWORD + 9] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = LEA address: [v14|DWORD + 10] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v24|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = LEA address: [v14|DWORD + 11] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v25|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = LEA address: [v14|DWORD + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = LEA address: [v14|DWORD + 13] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v27|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = LEA address: [v14|DWORD + 14] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v28|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = LEA address: [v14|DWORD + 15] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v29|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = LEA address: [v14|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v272 
=== Succesors ===
next: v308 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v272 #next: v308  <|@  <|@
f <@*|@fixed>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v292 
=== Predecessor ===
v274 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i299 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v292 
values: i279 i297 
=== Succesors ===
=== Usages ===
v293 i297 j305 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v292 values: i279 i297  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 30
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 19.995267336512995
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v308 
=== Succesors ===
next: v296 
=== Usages ===
v294 v298 i299 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v308 #next: v296  <|@  <|@
f <@~|@floating>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 52]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@e606376
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i299 
y: i541 
=== Succesors ===
=== Usages ===
v296 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i299 y: i541  <|@  <|@
f <@*|@fixed>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 52]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v293 
=== Succesors ===
trueSuccessor: v295 
falseSuccessor: v294 
=== Usages ===
=== Predecessor ===
v292 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v293 #trueSuccessor: v295 #falseSuccessor: v294  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v31|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 55]
stamp: void
=== Inputs ===
=== Succesors ===
next: v304 
=== Usages ===
v307 
=== Predecessor ===
v296 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v304  <|@  <|@
f <@~|@floating>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
guards: v531 v295 
=== Succesors ===
=== Usages ===
v304 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v531 v295  <|@  <|@
f <@~|@floating>@ <|@
tid j305 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i299 
=== Succesors ===
=== Usages ===
v576 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i299  <|@  <|@
f <@~|@floating>@ <|@
tid v576 <|@
result [v10|QWORD[.] + v31|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a124 
index: j305 
=== Succesors ===
=== Usages ===
v304 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a124 index: j305  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v307 
address: v576 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v298 
=== Usages ===
=== Predecessor ===
v295 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v307 address: v576 lastLocationAccess: - value: i42 stateAfter: - #next: v298  <|@  <|@
f <@~|@floating>@ <|@
tid i297 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 62]
stamp: i32
=== Inputs ===
x: i299 
y: i45 
=== Succesors ===
=== Usages ===
i299 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i299 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 46]
stamp: void
=== Inputs ===
loopBegin: v292 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v304 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v292  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v31|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = INC value: v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v32|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v292 
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
v296 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v292 #next: v100  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
v294 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v100 v101 
=== Succesors ===
next: a543 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v100 v101 #next: a543  <|@  <|@
f <@~|@floating>@ <|@
tid v565 <|@
result [v0|QWORD[.] + 68] <|@
d <@d|@=== Debug Properties ===
displacement: 68
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a543 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a543 <|@
result v33|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.regex.IntHashSet[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.localsPos
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 72]
stamp: n# java.util.regex.IntHashSet[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v565 
lastLocationAccess: - 
=== Succesors ===
next: i544 
=== Usages ===
v566 
=== Predecessor ===
v99 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v565 lastLocationAccess: - #next: i544  <|@  <|@
tid ?103 <|@
d <@d|@=== Debug Properties ===
bci: 68
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Matcher.search(int)>
localsSize: 3
locksSize: 0
sourceFile: Matcher.java
sourceLine: 1762
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v593 i544 a546 v547 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid v566 <|@
result [v33|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a543 
=== Succesors ===
=== Usages ===
i544 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a543  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i544 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-40203|0xffffffffffff62f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 75]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?103 
guard: - 
address: v566 
lastLocationAccess: - 
=== Succesors ===
next: a545 
=== Usages ===
v87 
=== Predecessor ===
a543 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?103 guard: - address: v566 lastLocationAccess: - #next: a545  <|@  <|@
f <@~|@floating>@ <|@
tid v568 <|@
result [v0|QWORD[.] + 52] <|@
d <@d|@=== Debug Properties ===
displacement: 52
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a545 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a545 <|@
result v35|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.regex.Pattern
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.parentPattern
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 109]
stamp: n# java.util.regex.Pattern
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v568 
lastLocationAccess: - 
=== Succesors ===
next: a546 
=== Usages ===
v569 
=== Predecessor ===
i544 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v568 lastLocationAccess: - #next: a546  <|@  <|@
f <@~|@floating>@ <|@
tid v569 <|@
result [v35|DWORD[_] * 8 + 52] <|@
d <@d|@=== Debug Properties ===
displacement: 52
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a545 
=== Succesors ===
=== Usages ===
a546 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a545  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a546 <|@
result v36|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.regex.Pattern$Node
barrierType: NONE
deoptReasonAndAction: int[-43275|0xffffffffffff56f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.root
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 112]
stamp: n java.util.regex.Pattern$Node
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?103 
guard: - 
address: v569 
lastLocationAccess: - 
=== Succesors ===
next: v547 
=== Usages ===
a173 v592 
=== Predecessor ===
a545 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?103 guard: - address: v569 lastLocationAccess: - #next: v547  <|@  <|@
f <@~|@floating>@ <|@
tid v592 <|@
result [v36|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a546 
=== Succesors ===
=== Usages ===
v547 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a546  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v547 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140080475799552 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-45835|0xffffffffffff4cf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: Klass*!(compressed base: 140080475799552 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?103 
guard: - 
address: v592 
lastLocationAccess: - 
=== Succesors ===
next: v269 
=== Usages ===
v530 
=== Predecessor ===
a546 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?103 guard: - address: v592 lastLocationAccess: - #next: v269  <|@  <|@
f <@~|@floating>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 76]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i544 
y: i4 
=== Succesors ===
=== Usages ===
v269 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i544 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 76]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v87 
=== Succesors ===
trueSuccessor: v267 
falseSuccessor: v268 
=== Usages ===
=== Predecessor ===
v547 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v87 #trueSuccessor: v267 #falseSuccessor: v268  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[_] = MOV input: [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v34|DWORD = MOV input: [v33|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[_] = MOV input: [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v36|DWORD[_] = MOV input: [v35|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v37|DWORD = MOV input: [v36|DWORD[_] * 8 + 8] size: DWORD state [bci:68] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1766) [bci: 103]
stamp: void
=== Inputs ===
=== Succesors ===
next: v163 
=== Usages ===
=== Predecessor ===
v269 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v163  <|@  <|@
f <@~|@floating>@ <|@
tid v567 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.acceptMode
location: Matcher.acceptMode
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1766) [bci: 105]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v567 
lastLocationAccess: - 
value: i4 
stateAfter: - 
=== Succesors ===
next: v184 
=== Usages ===
=== Predecessor ===
v267 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v567 lastLocationAccess: - value: i4 stateAfter: - #next: v184  <|@  <|@
f <@~|@floating>@ <|@
tid v530 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140080475799552 shift: 0
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v547 
=== Succesors ===
=== Usages ===
v571 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v547  <|@  <|@
f <@~|@floating>@ <|@
tid v571 <|@
result [v38|QWORD + 496] <|@
d <@d|@=== Debug Properties ===
displacement: 496
stamp: void*
stride: S1
=== Inputs ===
base: v530 
index: - 
=== Succesors ===
=== Usages ===
v184 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v530 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v184 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v571 
lastLocationAccess: - 
=== Succesors ===
next: j187 
=== Usages ===
v572 v188 
=== Predecessor ===
v163 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v571 lastLocationAccess: - #next: j187  <|@  <|@
f <@~|@floating>@ <|@
tid v572 <|@
result [v40|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v184 
index: - 
=== Succesors ===
=== Usages ===
j187 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v184 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j187 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v572 
lastLocationAccess: - 
=== Succesors ===
next: a548 
=== Usages ===
v188 
=== Predecessor ===
v184 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v572 lastLocationAccess: - #next: a548  <|@  <|@
f <@~|@floating>@ <|@
tid v570 <|@
result [v0|QWORD[.] + 60] <|@
d <@d|@=== Debug Properties ===
displacement: 60
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a548 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a548 <|@
result v42|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.text
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 118]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v570 
lastLocationAccess: - 
=== Succesors ===
next: i66 
=== Usages ===
a177 
=== Predecessor ===
j187 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v570 lastLocationAccess: - #next: i66  <|@  <|@
f <@~|@floating>@ <|@
tid a173 <|@
result v43|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 112]
op: Uncompress
stamp: a java.util.regex.Pattern$Node
=== Inputs ===
value: a546 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a546  <|@  <|@
f <@~|@floating>@ <|@
tid a177 <|@
result v44|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 118]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a548 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a548  <|@  <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
referencedType: [null]
returnStamp: i32 [0 - 1] bits:0...0x
signature: [HotSpotType<Ljava/util/regex/Pattern$Node;, resolved>, UnresolvedJavaType<Ljava/util/regex/Matcher;>, HotSpotResolvedPrimitiveType<int>, UnresolvedJavaType<Ljava/lang/CharSequence;>]
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
computedAddress: j187 
metaspaceMethod: v184 
arguments: a173 a1 i2 a177 
=== Succesors ===
=== Usages ===
i66 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j187 metaspaceMethod: v184 arguments: a173 a1 i2 a177  <|@  <|@
tid ?270 <|@
d <@d|@=== Debug Properties ===
bci: 121
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Matcher.search(int)>
localsSize: 3
locksSize: 0
sourceFile: Matcher.java
sourceLine: 1767
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
i66 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i66 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 121
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
polymorphic: true
stamp: i32 [0 - 1] bits:0...0x
targetMethod: Indirect#Pattern$Node.match
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v188 
stateDuring: ?270 
=== Succesors ===
next: v71 
=== Usages ===
v85 v68 
=== Predecessor ===
a548 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v188 stateDuring: ?270 #next: v71  <|@  <|@
f <@~|@floating>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1768) [bci: 126]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i66 
y: i4 
=== Succesors ===
=== Usages ===
v71 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i66 y: i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1768) [bci: 126]
profileData: PROFILED designatedSuccessorProbability: 2.9484609034069464E-5
stamp: void
=== Inputs ===
condition: v68 
=== Succesors ===
trueSuccessor: v70 
falseSuccessor: v69 
=== Usages ===
=== Predecessor ===
i66 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v68 #trueSuccessor: v70 #falseSuccessor: v69  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE input: long[140080475799552|0x7f6707000000] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = UNCOMPRESSPOINTER (input: v37|DWORD, ~baseRegister: v39|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 140080475799552 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV input: [v38|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV input: [v40|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:121] <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v45|DWORD, y: v45|DWORD) trueDestinationProbability: 2.9484609034069464E-5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4539323545726156800
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1769) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: v197 
=== Usages ===
=== Predecessor ===
v71 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v197  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.first
location: Matcher.first
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1769) [bci: 131]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v559 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v559 lastLocationAccess: - value: i42 stateAfter: - #next: v76  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1770) [bci: 134]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
v197 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607182153226268890
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1770) [bci: 134]
stamp: void
=== Inputs ===
=== Succesors ===
next: v74 
=== Usages ===
=== Predecessor ===
v71 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v74  <|@  <|@
f <@*|@fixed>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1770) [bci: 134]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
v69 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1770) [bci: 134]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v74 v76 
=== Succesors ===
next: i549 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v74 v76 #next: i549  <|@  <|@
f <@~|@floating>@ <|@
tid v573 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i549 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i549 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.last
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1770) [bci: 136]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v573 
lastLocationAccess: - 
=== Succesors ===
next: v192 
=== Usages ===
v192 
=== Predecessor ===
v75 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v573 lastLocationAccess: - #next: v192  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.oldLast
location: Matcher.oldLast
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1770) [bci: 139]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v560 
lastLocationAccess: - 
value: i549 
stateAfter: - 
=== Succesors ===
next: i550 
=== Usages ===
=== Predecessor ===
i549 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v560 lastLocationAccess: - value: i549 stateAfter: - #next: i550  <|@  <|@
f <@~|@floating>@ <|@
tid v574 <|@
result [v0|QWORD[.] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i550 v196 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i550 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1771) [bci: 144]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v574 
lastLocationAccess: - 
=== Succesors ===
next: v196 
=== Usages ===
i82 
=== Predecessor ===
v192 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v574 lastLocationAccess: - #next: v196  <|@  <|@
f <@~|@floating>@ <|@
tid i82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1771) [bci: 148]
stamp: i32
=== Inputs ===
x: i550 
y: i45 
=== Succesors ===
=== Usages ===
v196 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i550 y: i45  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.modCount
location: Matcher.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1771) [bci: 149]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v574 
lastLocationAccess: - 
value: i82 
stateAfter: - 
=== Succesors ===
next: v85 
=== Usages ===
=== Predecessor ===
i550 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v574 lastLocationAccess: - value: i82 stateAfter: - #next: v85  <|@  <|@
f <@*|@fixed>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1772) [bci: 153]
stamp: void
=== Inputs ===
memoryMap: - 
result: i66 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i66  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction INC value: [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v45|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v593 
=== Usages ===
=== Predecessor ===
v269 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v593  <|@  <|@
f <@*|@fixed>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 266
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 75]
reason: UnreachedCode
speculation: {0x0000000000000294[index: 20, len: 20, hash: 0xce6b4489]: UnreachedCode@6[HotSpotMethod<Matcher.search(int)>, 79]}
stamp: void
=== Inputs ===
stateBefore: ?103 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v268 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?103  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
next: v245 
=== Usages ===
=== Predecessor ===
v536 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v245  <|@  <|@
tid ?27 <|@
d <@d|@=== Debug Properties ===
bci: 44
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Matcher.search(int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1759) [bci: 41]
sourceFile: Matcher.java
sourceLine: 1760
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 144
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Matcher.search(Matcher.java:1761) [bci: 61]
reason: BoundsCheckException
speculation: {0x0000000000003e98[index: 500, len: 24, hash: 0xd2d5443e]: GuardMovement@3[HotSpotMethod<Matcher.search(int)>, 46, BoundsCheckException]}
stamp: void
=== Inputs ===
stateBefore: ?27 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?27  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 16024 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f94981 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v0|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v0|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = CMOVE (falseValue: v4|DWORD, ~trueValue: v1|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.04762978170136911 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = DEC value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVSXD value: v6|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v2|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v3|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v3|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA address: [v3|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608038918195499719
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 0.19981064865370968 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597736059191370102
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v15|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = LEA address: [v14|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v16|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = LEA address: [v14|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v17|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA address: [v14|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v18|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = LEA address: [v14|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v19|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = LEA address: [v14|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v20|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = LEA address: [v14|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v21|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = LEA address: [v14|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v22|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = LEA address: [v14|DWORD + 9] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = LEA address: [v14|DWORD + 10] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v24|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = LEA address: [v14|DWORD + 11] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v25|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = LEA address: [v14|DWORD + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = LEA address: [v14|DWORD + 13] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v27|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = LEA address: [v14|DWORD + 14] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v28|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = LEA address: [v14|DWORD + 15] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v29|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = LEA address: [v14|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v31|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v31|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = INC value: v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v32|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[_] = MOV input: [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v34|DWORD = MOV input: [v33|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[_] = MOV input: [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v36|DWORD[_] = MOV input: [v35|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v37|DWORD = MOV input: [v36|DWORD[_] * 8 + 8] size: DWORD state [bci:68] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE input: long[140080475799552|0x7f6707000000] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = UNCOMPRESSPOINTER (input: v37|DWORD, ~baseRegister: v39|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 140080475799552 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV input: [v38|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV input: [v40|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:121] <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v45|DWORD, y: v45|DWORD) trueDestinationProbability: 2.9484609034069464E-5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607182153226268890
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction INC value: [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v45|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024995983699200
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4539323545726156800
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 16024 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -66835 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f94981 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v0|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v0|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = CMOVE (falseValue: v4|DWORD, ~trueValue: v1|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.04762978170136911 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = DEC value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVSXD value: v6|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v2|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v3|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v3|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA address: [v3|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608038918195499719
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 0.19981064865370968 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597736059191370102
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v15|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = LEA address: [v14|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v16|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = LEA address: [v14|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v17|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA address: [v14|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v18|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = LEA address: [v14|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v19|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = LEA address: [v14|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v20|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = LEA address: [v14|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v21|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = LEA address: [v14|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v22|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = LEA address: [v14|DWORD + 9] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = LEA address: [v14|DWORD + 10] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v24|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = LEA address: [v14|DWORD + 11] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v25|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = LEA address: [v14|DWORD + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = LEA address: [v14|DWORD + 13] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v27|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = LEA address: [v14|DWORD + 14] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v28|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = LEA address: [v14|DWORD + 15] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v29|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = LEA address: [v14|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v31|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v31|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = INC value: v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v32|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[_] = MOV input: [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v34|DWORD = MOV input: [v33|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[_] = MOV input: [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v36|DWORD[_] = MOV input: [v35|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v37|DWORD = MOV input: [v36|DWORD[_] * 8 + 8] size: DWORD state [bci:68] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE input: long[140080475799552|0x7f6707000000] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = UNCOMPRESSPOINTER (input: v37|DWORD, ~baseRegister: v39|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 140080475799552 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV input: [v38|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV input: [v40|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:121] <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v45|DWORD, y: v45|DWORD) trueDestinationProbability: 2.9484609034069464E-5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607182153226268890
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction INC value: [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v45|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024995983699200
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4539323545726156800
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 16024 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -66835 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f94981 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v0|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v0|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = CMOVE (falseValue: v4|DWORD, ~trueValue: v1|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.04762978170136911 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = DEC value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVSXD value: v6|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v2|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v3|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v3|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA address: [v3|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608038918195499719
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 0.19981064865370968 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597736059191370102
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v15|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = LEA address: [v14|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v16|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = LEA address: [v14|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v17|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA address: [v14|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v18|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = LEA address: [v14|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v19|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = LEA address: [v14|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v20|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = LEA address: [v14|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v21|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = LEA address: [v14|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v22|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = LEA address: [v14|DWORD + 9] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = LEA address: [v14|DWORD + 10] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v24|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = LEA address: [v14|DWORD + 11] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v25|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = LEA address: [v14|DWORD + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = LEA address: [v14|DWORD + 13] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v27|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = LEA address: [v14|DWORD + 14] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v28|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = LEA address: [v14|DWORD + 15] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v29|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = LEA address: [v14|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v31|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v31|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = INC value: v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v32|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[_] = MOV input: [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v34|DWORD = MOV input: [v33|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[_] = MOV input: [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v36|DWORD[_] = MOV input: [v35|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v37|DWORD = MOV input: [v36|DWORD[_] * 8 + 8] size: DWORD state [bci:68] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE input: long[140080475799552|0x7f6707000000] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = UNCOMPRESSPOINTER (input: v37|DWORD, ~baseRegister: v39|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 140080475799552 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV input: [v38|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV input: [v40|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:121] <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v45|DWORD, y: v45|DWORD) trueDestinationProbability: 2.9484609034069464E-5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607182153226268890
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction INC value: [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v45|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024995983699200
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4539323545726156800
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 16024 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -66835 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f94981 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v0|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v0|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = CMOVE (falseValue: v4|DWORD, ~trueValue: v1|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.04762978170136911 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = DEC value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVSXD value: v6|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v2|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v3|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v3|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA address: [v3|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608038918195499719
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 0.19981064865370968 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597736059191370102
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v15|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = LEA address: [v14|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v16|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = LEA address: [v14|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v17|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA address: [v14|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v18|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = LEA address: [v14|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v19|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = LEA address: [v14|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v20|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = LEA address: [v14|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v21|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = LEA address: [v14|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v22|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = LEA address: [v14|DWORD + 9] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = LEA address: [v14|DWORD + 10] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v24|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = LEA address: [v14|DWORD + 11] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v25|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = LEA address: [v14|DWORD + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = LEA address: [v14|DWORD + 13] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v27|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = LEA address: [v14|DWORD + 14] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v28|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = LEA address: [v14|DWORD + 15] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v29|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = LEA address: [v14|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v31|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v31|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = INC value: v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v32|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[_] = MOV input: [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v34|DWORD = MOV input: [v33|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[_] = MOV input: [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v36|DWORD[_] = MOV input: [v35|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v37|DWORD = MOV input: [v36|DWORD[_] * 8 + 8] size: DWORD state [bci:68] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE input: long[140080475799552|0x7f6707000000] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = UNCOMPRESSPOINTER (input: v37|DWORD, ~baseRegister: v39|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 140080475799552 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV input: [v38|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV input: [v40|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:121] <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v45|DWORD, y: v45|DWORD) trueDestinationProbability: 2.9484609034069464E-5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607182153226268890
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction INC value: [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v45|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024995983699200
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4539323545726156800
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 16024 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -66835 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f94981 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v0|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v0|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = CMOVE (falseValue: v4|DWORD, ~trueValue: v1|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.04762978170136911 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = DEC value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVSXD value: v6|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v2|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v3|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v3|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = LEA address: [v3|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608038918195499719
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 0.19981064865370968 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597736059191370102
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v15|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = LEA address: [v14|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v16|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = LEA address: [v14|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v17|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA address: [v14|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v18|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = LEA address: [v14|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v19|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = LEA address: [v14|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v20|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = LEA address: [v14|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v21|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = LEA address: [v14|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v22|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = LEA address: [v14|DWORD + 9] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = LEA address: [v14|DWORD + 10] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v24|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = LEA address: [v14|DWORD + 11] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v25|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = LEA address: [v14|DWORD + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = LEA address: [v14|DWORD + 13] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v27|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = LEA address: [v14|DWORD + 14] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v28|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = LEA address: [v14|DWORD + 15] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v29|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = LEA address: [v14|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v31|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v10|QWORD[.] + v31|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = INC value: v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v32|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[_] = MOV input: [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v34|DWORD = MOV input: [v33|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[_] = MOV input: [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v36|DWORD[_] = MOV input: [v35|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v37|DWORD = MOV input: [v36|DWORD[_] * 8 + 8] size: DWORD state [bci:68] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE input: long[140080475799552|0x7f6707000000] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = UNCOMPRESSPOINTER (input: v37|DWORD, ~baseRegister: v39|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 140080475799552 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOV input: [v38|QWORD + 496] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV input: [v40|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:121] <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v45|DWORD, y: v45|DWORD) trueDestinationProbability: 2.9484609034069464E-5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607182153226268890
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v46|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction INC value: [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v45|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024995983699200
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4539323545726156800
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 16024 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -66835 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f94981 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction MOVB x: [v0|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   40  <|@ instruction MOVB x: [v0|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v1|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   76  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   78  <|@ instruction v5|DWORD = CMOVE (falseValue: v4|DWORD, ~trueValue: v1|DWORD) condition: < <|@ <|@
      nr   80  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v5|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.04762978170136911 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction v6|DWORD = DEC value: v3|DWORD size: DWORD <|@ <|@
      nr  102  <|@ instruction v7|QWORD = MOVSXD value: v6|DWORD size: QWORD <|@ <|@
      nr  104  <|@ instruction v8|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction MOV x: [v2|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  166  <|@ instruction CMP x: v3|DWORD y: 3 size: DWORD <|@ <|@
      nr  168  <|@ instruction v9|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v3|DWORD) condition: |<| <|@ <|@
      nr  170  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr  174  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction MOV x: [v10|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  200  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction v13|DWORD = LEA address: [v3|DWORD - 16] size: DWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608038918195499719
    begin_IR
      LIR
      nr  220  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 0.19981064865370968 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597736059191370102
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction MOV x: [v10|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  336  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr  338  <|@ instruction MOV x: [v10|QWORD[.] + v15|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  340  <|@ instruction v16|DWORD = LEA address: [v14|DWORD + 2] size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV x: [v10|QWORD[.] + v16|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  344  <|@ instruction v17|DWORD = LEA address: [v14|DWORD + 3] size: DWORD <|@ <|@
      nr  346  <|@ instruction MOV x: [v10|QWORD[.] + v17|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  348  <|@ instruction v18|DWORD = LEA address: [v14|DWORD + 4] size: DWORD <|@ <|@
      nr  350  <|@ instruction MOV x: [v10|QWORD[.] + v18|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  352  <|@ instruction v19|DWORD = LEA address: [v14|DWORD + 5] size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV x: [v10|QWORD[.] + v19|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  356  <|@ instruction v20|DWORD = LEA address: [v14|DWORD + 6] size: DWORD <|@ <|@
      nr  358  <|@ instruction MOV x: [v10|QWORD[.] + v20|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  360  <|@ instruction v21|DWORD = LEA address: [v14|DWORD + 7] size: DWORD <|@ <|@
      nr  362  <|@ instruction MOV x: [v10|QWORD[.] + v21|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  364  <|@ instruction v22|DWORD = LEA address: [v14|DWORD + 8] size: DWORD <|@ <|@
      nr  366  <|@ instruction MOV x: [v10|QWORD[.] + v22|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  368  <|@ instruction v23|DWORD = LEA address: [v14|DWORD + 9] size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV x: [v10|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  372  <|@ instruction v24|DWORD = LEA address: [v14|DWORD + 10] size: DWORD <|@ <|@
      nr  374  <|@ instruction MOV x: [v10|QWORD[.] + v24|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  376  <|@ instruction v25|DWORD = LEA address: [v14|DWORD + 11] size: DWORD <|@ <|@
      nr  378  <|@ instruction MOV x: [v10|QWORD[.] + v25|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  380  <|@ instruction v26|DWORD = LEA address: [v14|DWORD + 12] size: DWORD <|@ <|@
      nr  382  <|@ instruction MOV x: [v10|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  384  <|@ instruction v27|DWORD = LEA address: [v14|DWORD + 13] size: DWORD <|@ <|@
      nr  386  <|@ instruction MOV x: [v10|QWORD[.] + v27|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  388  <|@ instruction v28|DWORD = LEA address: [v14|DWORD + 14] size: DWORD <|@ <|@
      nr  390  <|@ instruction MOV x: [v10|QWORD[.] + v28|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  392  <|@ instruction v29|DWORD = LEA address: [v14|DWORD + 15] size: DWORD <|@ <|@
      nr  394  <|@ instruction MOV x: [v10|QWORD[.] + v29|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  396  <|@ instruction v30|DWORD = LEA address: [v14|DWORD + 16] size: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr  410  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v31|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction MOV x: [v10|QWORD[.] + v31|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  436  <|@ instruction v32|DWORD = INC value: v31|DWORD size: DWORD <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [v32|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction v33|DWORD[_] = MOV input: [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v34|DWORD = MOV input: [v33|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr  474  <|@ instruction v35|DWORD[_] = MOV input: [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  476  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v36|DWORD[_] = MOV input: [v35|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  478  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v37|DWORD = MOV input: [v36|DWORD[_] * 8 + 8] size: DWORD state [bci:68] <|@ <|@
      nr  480  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  530  <|@ instruction v39|QWORD = MOVE input: long[140080475799552|0x7f6707000000] <|@ <|@
      nr  532  <|@ instruction v38|QWORD = UNCOMPRESSPOINTER (input: v37|DWORD, ~baseRegister: v39|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 140080475799552 shift: 0 <|@ <|@
      nr  534  <|@ instruction v40|QWORD = MOV input: [v38|QWORD + 496] size: QWORD <|@ <|@
      nr  536  <|@ instruction v41|QWORD = MOV input: [v40|QWORD + 64] size: QWORD <|@ <|@
      nr  538  <|@ instruction v42|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  540  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  542  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  544  <|@ instruction rsi|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction rdx|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  548  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  550  <|@ instruction r8|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction rbx|QWORD = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction rax|QWORD = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr  556  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:121] <|@ <|@
      nr  558  <|@ instruction v45|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction TESTBRANCH (x: v45|DWORD, y: v45|DWORD) trueDestinationProbability: 2.9484609034069464E-5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607182153226268890
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction v46|DWORD = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  600  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v46|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction INC value: [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  604  <|@ instruction rax|DWORD = MOVE input: v45|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024995983699200
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4539323545726156800
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction MOV x: [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  630  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  650  <|@ instruction MOV x: [r15|QWORD + 1168] y: 16024 size: QWORD <|@ <|@
      nr  652  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction MOV x: [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr  672  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  674  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction MOV x: [r15|QWORD + 1156] y: -66835 size: DWORD <|@ <|@
      nr  694  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  696  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f94981 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction MOVB x: [v0|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   40  <|@ instruction MOVB x: [v0|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v1|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   76  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   78  <|@ instruction v5|DWORD = CMOVE (falseValue: v4|DWORD, ~trueValue: v1|DWORD) condition: < <|@ <|@
      nr   80  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v5|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.04762978170136911 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction v6|DWORD = DEC value: v3|DWORD size: DWORD <|@ <|@
      nr  102  <|@ instruction v7|QWORD = MOVSXD value: v6|DWORD size: QWORD <|@ <|@
      nr  104  <|@ instruction v8|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction MOV x: [v2|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  166  <|@ instruction CMP x: v3|DWORD y: 3 size: DWORD <|@ <|@
      nr  168  <|@ instruction v9|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v3|DWORD) condition: |<| <|@ <|@
      nr  170  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr  174  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction MOV x: [v10|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  200  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction v13|DWORD = LEA address: [v3|DWORD - 16] size: DWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608038918195499719
    begin_IR
      LIR
      nr  220  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 0.19981064865370968 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597736059191370102
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction MOV x: [v10|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  336  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr  338  <|@ instruction MOV x: [v10|QWORD[.] + v15|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  340  <|@ instruction v16|DWORD = LEA address: [v14|DWORD + 2] size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV x: [v10|QWORD[.] + v16|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  344  <|@ instruction v17|DWORD = LEA address: [v14|DWORD + 3] size: DWORD <|@ <|@
      nr  346  <|@ instruction MOV x: [v10|QWORD[.] + v17|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  348  <|@ instruction v18|DWORD = LEA address: [v14|DWORD + 4] size: DWORD <|@ <|@
      nr  350  <|@ instruction MOV x: [v10|QWORD[.] + v18|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  352  <|@ instruction v19|DWORD = LEA address: [v14|DWORD + 5] size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV x: [v10|QWORD[.] + v19|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  356  <|@ instruction v20|DWORD = LEA address: [v14|DWORD + 6] size: DWORD <|@ <|@
      nr  358  <|@ instruction MOV x: [v10|QWORD[.] + v20|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  360  <|@ instruction v21|DWORD = LEA address: [v14|DWORD + 7] size: DWORD <|@ <|@
      nr  362  <|@ instruction MOV x: [v10|QWORD[.] + v21|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  364  <|@ instruction v22|DWORD = LEA address: [v14|DWORD + 8] size: DWORD <|@ <|@
      nr  366  <|@ instruction MOV x: [v10|QWORD[.] + v22|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  368  <|@ instruction v23|DWORD = LEA address: [v14|DWORD + 9] size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV x: [v10|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  372  <|@ instruction v24|DWORD = LEA address: [v14|DWORD + 10] size: DWORD <|@ <|@
      nr  374  <|@ instruction MOV x: [v10|QWORD[.] + v24|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  376  <|@ instruction v25|DWORD = LEA address: [v14|DWORD + 11] size: DWORD <|@ <|@
      nr  378  <|@ instruction MOV x: [v10|QWORD[.] + v25|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  380  <|@ instruction v26|DWORD = LEA address: [v14|DWORD + 12] size: DWORD <|@ <|@
      nr  382  <|@ instruction MOV x: [v10|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  384  <|@ instruction v27|DWORD = LEA address: [v14|DWORD + 13] size: DWORD <|@ <|@
      nr  386  <|@ instruction MOV x: [v10|QWORD[.] + v27|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  388  <|@ instruction v28|DWORD = LEA address: [v14|DWORD + 14] size: DWORD <|@ <|@
      nr  390  <|@ instruction MOV x: [v10|QWORD[.] + v28|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  392  <|@ instruction v29|DWORD = LEA address: [v14|DWORD + 15] size: DWORD <|@ <|@
      nr  394  <|@ instruction MOV x: [v10|QWORD[.] + v29|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  396  <|@ instruction v30|DWORD = LEA address: [v14|DWORD + 16] size: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr  410  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v31|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction MOV x: [v10|QWORD[.] + v31|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  436  <|@ instruction v32|DWORD = INC value: v31|DWORD size: DWORD <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [v32|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction v33|DWORD[_] = MOV input: [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v34|DWORD = MOV input: [v33|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr  474  <|@ instruction v35|DWORD[_] = MOV input: [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  476  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v36|DWORD[_] = MOV input: [v35|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  478  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v37|DWORD = MOV input: [v36|DWORD[_] * 8 + 8] size: DWORD state [bci:68] <|@ <|@
      nr  480  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  530  <|@ instruction v39|QWORD = MOVE input: long[140080475799552|0x7f6707000000] <|@ <|@
      nr  532  <|@ instruction v38|QWORD = UNCOMPRESSPOINTER (input: v37|DWORD, ~baseRegister: v39|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 140080475799552 shift: 0 <|@ <|@
      nr  534  <|@ instruction v40|QWORD = MOV input: [v38|QWORD + 496] size: QWORD <|@ <|@
      nr  536  <|@ instruction v41|QWORD = MOV input: [v40|QWORD + 64] size: QWORD <|@ <|@
      nr  538  <|@ instruction v42|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  540  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  542  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  544  <|@ instruction rsi|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction rdx|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  548  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  550  <|@ instruction r8|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction rbx|QWORD = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction rax|QWORD = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr  556  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:121] <|@ <|@
      nr  558  <|@ instruction v45|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction TESTBRANCH (x: v45|DWORD, y: v45|DWORD) trueDestinationProbability: 2.9484609034069464E-5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607182153226268890
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction v46|DWORD = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  600  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v46|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction INC value: [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  604  <|@ instruction rax|DWORD = MOVE input: v45|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024995983699200
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4539323545726156800
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction MOV x: [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  630  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  650  <|@ instruction MOV x: [r15|QWORD + 1168] y: 16024 size: QWORD <|@ <|@
      nr  652  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction MOV x: [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr  672  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  674  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction MOV x: [r15|QWORD + 1156] y: -66835 size: DWORD <|@ <|@
      nr  694  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  696  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d v41|q [0, 1[[554, 558[[604, 606[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v1|d [0, 1[[548, 557[ "NoSpillStore"
  rdx|- fixed "[rdx|-]" rdx|- v0|q [0, 32[[546, 557[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v40|q [0, 1[[552, 557[ "NoSpillStore"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 26[[556, 557[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v43|q [0, 30[[544, 557[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- v44|q [0, 1[[550, 557[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [30, 602[[608, 653[[654, 675[[676, 697[30 MustHaveRegister 34 MustHaveRegister 38 MustHaveRegister 40 MustHaveRegister 72 MustHaveRegister 74 MustHaveRegister 80 MustHaveRegister 470 MustHaveRegister 474 MustHaveRegister 528 MustHaveRegister 538 MustHaveRegister 546 ShouldHaveRegister 598 MustHaveRegister 600 MustHaveRegister 602 MustHaveRegister 628 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|- [32, 548[[608, 618[[632, 653[[654, 675[[676, 697[32 MustHaveRegister 42 MustHaveRegister 72 MustHaveRegister 78 MustHaveRegister 548 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [34, 170[34 MustHaveRegister 36 MustHaveRegister 164 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [36, 440[36 MustHaveRegister 82 MustHaveRegister 100 ShouldHaveRegister 104 ShouldHaveRegister 118 ShouldHaveRegister 166 ShouldHaveRegister 168 MustHaveRegister 216 MustHaveRegister 420 MustHaveRegister 439 LiveAtLoopEnd  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [74, 78[74 MustHaveRegister 76 MustHaveRegister 78 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d v4|d [78, 80[78 MustHaveRegister 80 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d v3|d [100, 102[100 MustHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q -1 [102, 106[102 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q v3|d [104, 106[104 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d -1 [168, 204[168 MustHaveRegister 184 MustHaveRegister 203 LiveAtLoopEnd  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q v2|d [170, 440[170 MustHaveRegister 198 MustHaveRegister 203 LiveAtLoopEnd 334 MustHaveRegister 338 MustHaveRegister 342 MustHaveRegister 346 MustHaveRegister 350 MustHaveRegister 354 MustHaveRegister 358 MustHaveRegister 362 MustHaveRegister 366 MustHaveRegister 370 MustHaveRegister 374 MustHaveRegister 378 MustHaveRegister 382 MustHaveRegister 386 MustHaveRegister 390 MustHaveRegister 394 MustHaveRegister 399 LiveAtLoopEnd 434 MustHaveRegister 439 LiveAtLoopEnd  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d v12|d [174, 200[[204, 219[184 ShouldHaveRegister 198 MustHaveRegister 200 ShouldHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d v11|d [200, 203[200 MustHaveRegister 202 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d -1 [216, 400[216 MustHaveRegister 230 MustHaveRegister 399 LiveAtLoopEnd  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d v11|d [220, 396[[400, 409[230 ShouldHaveRegister 334 MustHaveRegister 336 ShouldHaveRegister 340 MustHaveRegister 344 MustHaveRegister 348 MustHaveRegister 352 MustHaveRegister 356 MustHaveRegister 360 MustHaveRegister 364 MustHaveRegister 368 MustHaveRegister 372 MustHaveRegister 376 MustHaveRegister 380 MustHaveRegister 384 MustHaveRegister 388 MustHaveRegister 392 MustHaveRegister 396 MustHaveRegister 408 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d v14|d [336, 338[336 MustHaveRegister 338 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[v16|d]" v16|d -1 [340, 342[340 MustHaveRegister 342 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[v17|d]" v17|d -1 [344, 346[344 MustHaveRegister 346 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[v18|d]" v18|d -1 [348, 350[348 MustHaveRegister 350 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[v19|d]" v19|d -1 [352, 354[352 MustHaveRegister 354 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[v20|d]" v20|d -1 [356, 358[356 MustHaveRegister 358 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[v21|d]" v21|d -1 [360, 362[360 MustHaveRegister 362 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[v22|d]" v22|d -1 [364, 366[364 MustHaveRegister 366 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[v23|d]" v23|d -1 [368, 370[368 MustHaveRegister 370 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[v24|d]" v24|d -1 [372, 374[372 MustHaveRegister 374 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[v25|d]" v25|d -1 [376, 378[376 MustHaveRegister 378 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[v26|d]" v26|d -1 [380, 382[380 MustHaveRegister 382 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[v27|d]" v27|d -1 [384, 386[384 MustHaveRegister 386 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[v28|d]" v28|d -1 [388, 390[388 MustHaveRegister 390 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[v29|d]" v29|d -1 [392, 394[392 MustHaveRegister 394 MustHaveRegister  "NoSpillStore"
  v30|d DWORD "[v30|d]" v30|d -1 [396, 399[396 MustHaveRegister 398 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[v31|d]" v31|d v14|d [410, 436[420 ShouldHaveRegister 434 MustHaveRegister 436 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[v32|d]" v32|d v31|d [436, 439[436 MustHaveRegister 438 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[v33|d]" v33|d -1 [470, 472[470 MustHaveRegister 472 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[v34|d]" v34|d -1 [472, 480[472 MustHaveRegister 480 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[v35|d]" v35|d -1 [474, 476[474 MustHaveRegister 476 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[v36|d]" v36|d -1 [476, 540[476 MustHaveRegister 478 MustHaveRegister 540 MustHaveRegister  "NoSpillStore"
  v37|d DWORD "[v37|d]" v37|d -1 [478, 532[478 MustHaveRegister 532 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[v38|q]" v38|q v37|d [532, 534[532 MustHaveRegister 534 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[v39|q]" v39|q -1 [530, 533[530 MustHaveRegister 532 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[v40|q]" v40|q -1 [534, 552[534 MustHaveRegister 536 MustHaveRegister 552 ShouldHaveRegister  "NoSpillStore"
  v41|q QWORD "[v41|q]" v41|q -1 [536, 554[536 MustHaveRegister 554 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[v42|d]" v42|d -1 [538, 542[538 MustHaveRegister 542 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[v43|q]" v43|q v36|d [540, 544[540 MustHaveRegister 544 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[v44|q]" v44|q v42|d [542, 550[542 MustHaveRegister 550 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[v45|d]" v45|d rax|d [558, 604[[618, 632[558 MustHaveRegister 560 MustHaveRegister 604 ShouldHaveRegister  "NoSpillStore"
  v46|d DWORD "[v46|d]" v46|d -1 [598, 600[598 MustHaveRegister 600 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d v41|q [0, 1[[554, 558[[604, 606[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v1|d [0, 1[[548, 557[ "NoSpillStore"
  rdx|- fixed "[rdx|-]" rdx|- v0|q [0, 32[[546, 557[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v40|q [0, 1[[552, 557[ "NoSpillStore"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 26[[556, 557[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v43|q [0, 30[[544, 557[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- v44|q [0, 1[[550, 557[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [30, 543[30 MustHaveRegister 34 MustHaveRegister 38 MustHaveRegister 40 MustHaveRegister 72 MustHaveRegister 74 MustHaveRegister 80 MustHaveRegister 470 MustHaveRegister 474 MustHaveRegister 528 MustHaveRegister 538 MustHaveRegister  "OneSpillStore"
  v1|d DWORD "[r10|d]" v1|d rdx|- [32, 548[[608, 618[[632, 653[[654, 675[[676, 697[32 MustHaveRegister 42 MustHaveRegister 72 MustHaveRegister 78 MustHaveRegister 548 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rdx|d]" v2|d -1 [34, 170[34 MustHaveRegister 36 MustHaveRegister 164 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rcx|d]" v3|d -1 [36, 440[36 MustHaveRegister 82 MustHaveRegister 100 ShouldHaveRegister 104 ShouldHaveRegister 118 ShouldHaveRegister 166 ShouldHaveRegister 168 MustHaveRegister 216 MustHaveRegister 420 MustHaveRegister 439 LiveAtLoopEnd  "NoSpillStore"
  v4|d DWORD "[r8|d]" v4|d -1 [74, 78[74 MustHaveRegister 76 MustHaveRegister 78 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[r8|d]" v5|d v4|d [78, 80[78 MustHaveRegister 80 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r8|d]" v6|d v3|d [100, 102[100 MustHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[r8|q]" v7|q -1 [102, 106[102 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rbx|q]" v8|q v3|d [104, 106[104 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[r8|d]" v9|d -1 [168, 204[168 MustHaveRegister 184 MustHaveRegister 203 LiveAtLoopEnd  "NoSpillStore"
  v10|q QWORD "[rdx|q]" v10|q v2|d [170, 440[170 MustHaveRegister 198 MustHaveRegister 203 LiveAtLoopEnd 334 MustHaveRegister 338 MustHaveRegister 342 MustHaveRegister 346 MustHaveRegister 350 MustHaveRegister 354 MustHaveRegister 358 MustHaveRegister 362 MustHaveRegister 366 MustHaveRegister 370 MustHaveRegister 374 MustHaveRegister 378 MustHaveRegister 382 MustHaveRegister 386 MustHaveRegister 390 MustHaveRegister 394 MustHaveRegister 399 LiveAtLoopEnd 434 MustHaveRegister 439 LiveAtLoopEnd  "NoSpillStore"
  v11|d DWORD "[rbx|d]" v11|d v12|d [174, 200[[204, 219[184 ShouldHaveRegister 198 MustHaveRegister 200 ShouldHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rbx|d]" v12|d v11|d [200, 203[200 MustHaveRegister 202 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[r8|d]" v13|d -1 [216, 400[216 MustHaveRegister 230 MustHaveRegister 399 LiveAtLoopEnd  "NoSpillStore"
  v14|d DWORD "[rbx|d]" v14|d v11|d [220, 396[[400, 409[230 ShouldHaveRegister 334 MustHaveRegister 336 ShouldHaveRegister 340 MustHaveRegister 344 MustHaveRegister 348 MustHaveRegister 352 MustHaveRegister 356 MustHaveRegister 360 MustHaveRegister 364 MustHaveRegister 368 MustHaveRegister 372 MustHaveRegister 376 MustHaveRegister 380 MustHaveRegister 384 MustHaveRegister 388 MustHaveRegister 392 MustHaveRegister 396 MustHaveRegister 408 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[rax|d]" v15|d v14|d [336, 338[336 MustHaveRegister 338 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[rax|d]" v16|d -1 [340, 342[340 MustHaveRegister 342 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d -1 [344, 346[344 MustHaveRegister 346 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[rax|d]" v18|d -1 [348, 350[348 MustHaveRegister 350 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[rax|d]" v19|d -1 [352, 354[352 MustHaveRegister 354 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[rax|d]" v20|d -1 [356, 358[356 MustHaveRegister 358 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[rax|d]" v21|d -1 [360, 362[360 MustHaveRegister 362 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[rax|d]" v22|d -1 [364, 366[364 MustHaveRegister 366 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[rax|d]" v23|d -1 [368, 370[368 MustHaveRegister 370 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[rax|d]" v24|d -1 [372, 374[372 MustHaveRegister 374 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[rax|d]" v25|d -1 [376, 378[376 MustHaveRegister 378 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[rax|d]" v26|d -1 [380, 382[380 MustHaveRegister 382 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[rax|d]" v27|d -1 [384, 386[384 MustHaveRegister 386 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[rax|d]" v28|d -1 [388, 390[388 MustHaveRegister 390 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[rax|d]" v29|d -1 [392, 394[392 MustHaveRegister 394 MustHaveRegister  "NoSpillStore"
  v30|d DWORD "[rbx|d]" v30|d -1 [396, 399[396 MustHaveRegister 398 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[rbx|d]" v31|d v14|d [410, 436[420 ShouldHaveRegister 434 MustHaveRegister 436 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[rbx|d]" v32|d v31|d [436, 439[436 MustHaveRegister 438 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[rdx|d]" v33|d -1 [470, 472[470 MustHaveRegister 472 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[rdx|d]" v34|d -1 [472, 480[472 MustHaveRegister 480 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[rcx|d]" v35|d -1 [474, 476[474 MustHaveRegister 476 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[rcx|d]" v36|d -1 [476, 540[476 MustHaveRegister 478 MustHaveRegister 540 MustHaveRegister  "NoSpillStore"
  v37|d DWORD "[r8|d]" v37|d -1 [478, 532[478 MustHaveRegister 532 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[r8|q]" v38|q v37|d [532, 534[532 MustHaveRegister 534 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[rdx|q]" v39|q -1 [530, 533[530 MustHaveRegister 532 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rbx|q]" v40|q -1 [534, 552[534 MustHaveRegister 536 MustHaveRegister 552 ShouldHaveRegister  "NoSpillStore"
  v41|q QWORD "[rax|q]" v41|q -1 [536, 554[536 MustHaveRegister 554 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[rdx|d]" v42|d -1 [538, 542[538 MustHaveRegister 542 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[rcx|q]" v43|q v36|d [540, 544[540 MustHaveRegister 544 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[r8|q]" v44|q v42|d [542, 550[542 MustHaveRegister 550 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[rax|d]" v45|d rax|d [558, 604[[618, 632[558 MustHaveRegister 560 MustHaveRegister 604 ShouldHaveRegister  "NoSpillStore"
  v46|d DWORD "[r10|d]" v46|d -1 [598, 600[598 MustHaveRegister 600 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[r11|q]" v0|q v0|q [543, 555[546 ShouldHaveRegister  "OneSpillStore"
  v48|q QWORD "[vstack:0|q]" v0|q v0|q [555, 572[ "OneSpillStore"
  v49|q QWORD "[rsi|q]" v0|q v0|q [572, 602[[608, 653[[654, 675[[676, 697[598 MustHaveRegister 600 MustHaveRegister 602 MustHaveRegister 628 MustHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f94981 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction MOVB x: [v0|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   40  <|@ instruction MOVB x: [v0|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v1|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   76  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   78  <|@ instruction v5|DWORD = CMOVE (falseValue: v4|DWORD, ~trueValue: v1|DWORD) condition: < <|@ <|@
      nr   80  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v5|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.04762978170136911 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction v6|DWORD = DEC value: v3|DWORD size: DWORD <|@ <|@
      nr  102  <|@ instruction v7|QWORD = MOVSXD value: v6|DWORD size: QWORD <|@ <|@
      nr  104  <|@ instruction v8|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction MOV x: [v2|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  166  <|@ instruction CMP x: v3|DWORD y: 3 size: DWORD <|@ <|@
      nr  168  <|@ instruction v9|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v3|DWORD) condition: |<| <|@ <|@
      nr  170  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr  174  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction MOV x: [v10|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  200  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction v13|DWORD = LEA address: [v3|DWORD - 16] size: DWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608038918195499719
    begin_IR
      LIR
      nr  220  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 0.19981064865370968 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597736059191370102
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction MOV x: [v10|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  336  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr  338  <|@ instruction MOV x: [v10|QWORD[.] + v15|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  340  <|@ instruction v16|DWORD = LEA address: [v14|DWORD + 2] size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV x: [v10|QWORD[.] + v16|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  344  <|@ instruction v17|DWORD = LEA address: [v14|DWORD + 3] size: DWORD <|@ <|@
      nr  346  <|@ instruction MOV x: [v10|QWORD[.] + v17|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  348  <|@ instruction v18|DWORD = LEA address: [v14|DWORD + 4] size: DWORD <|@ <|@
      nr  350  <|@ instruction MOV x: [v10|QWORD[.] + v18|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  352  <|@ instruction v19|DWORD = LEA address: [v14|DWORD + 5] size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV x: [v10|QWORD[.] + v19|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  356  <|@ instruction v20|DWORD = LEA address: [v14|DWORD + 6] size: DWORD <|@ <|@
      nr  358  <|@ instruction MOV x: [v10|QWORD[.] + v20|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  360  <|@ instruction v21|DWORD = LEA address: [v14|DWORD + 7] size: DWORD <|@ <|@
      nr  362  <|@ instruction MOV x: [v10|QWORD[.] + v21|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  364  <|@ instruction v22|DWORD = LEA address: [v14|DWORD + 8] size: DWORD <|@ <|@
      nr  366  <|@ instruction MOV x: [v10|QWORD[.] + v22|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  368  <|@ instruction v23|DWORD = LEA address: [v14|DWORD + 9] size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV x: [v10|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  372  <|@ instruction v24|DWORD = LEA address: [v14|DWORD + 10] size: DWORD <|@ <|@
      nr  374  <|@ instruction MOV x: [v10|QWORD[.] + v24|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  376  <|@ instruction v25|DWORD = LEA address: [v14|DWORD + 11] size: DWORD <|@ <|@
      nr  378  <|@ instruction MOV x: [v10|QWORD[.] + v25|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  380  <|@ instruction v26|DWORD = LEA address: [v14|DWORD + 12] size: DWORD <|@ <|@
      nr  382  <|@ instruction MOV x: [v10|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  384  <|@ instruction v27|DWORD = LEA address: [v14|DWORD + 13] size: DWORD <|@ <|@
      nr  386  <|@ instruction MOV x: [v10|QWORD[.] + v27|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  388  <|@ instruction v28|DWORD = LEA address: [v14|DWORD + 14] size: DWORD <|@ <|@
      nr  390  <|@ instruction MOV x: [v10|QWORD[.] + v28|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  392  <|@ instruction v29|DWORD = LEA address: [v14|DWORD + 15] size: DWORD <|@ <|@
      nr  394  <|@ instruction MOV x: [v10|QWORD[.] + v29|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  396  <|@ instruction v30|DWORD = LEA address: [v14|DWORD + 16] size: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr  410  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v31|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction MOV x: [v10|QWORD[.] + v31|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  436  <|@ instruction v32|DWORD = INC value: v31|DWORD size: DWORD <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [v32|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction v33|DWORD[_] = MOV input: [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v34|DWORD = MOV input: [v33|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr  474  <|@ instruction v35|DWORD[_] = MOV input: [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  476  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v36|DWORD[_] = MOV input: [v35|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  478  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v37|DWORD = MOV input: [v36|DWORD[_] * 8 + 8] size: DWORD state [bci:68] <|@ <|@
      nr  480  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  530  <|@ instruction v39|QWORD = MOVE input: long[140080475799552|0x7f6707000000] <|@ <|@
      nr  532  <|@ instruction v38|QWORD = UNCOMPRESSPOINTER (input: v37|DWORD, ~baseRegister: v39|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 140080475799552 shift: 0 <|@ <|@
      nr  534  <|@ instruction v40|QWORD = MOV input: [v38|QWORD + 496] size: QWORD <|@ <|@
      nr  536  <|@ instruction v41|QWORD = MOV input: [v40|QWORD + 64] size: QWORD <|@ <|@
      nr  538  <|@ instruction v42|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  540  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  542  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  544  <|@ instruction rsi|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction rdx|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  548  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  550  <|@ instruction r8|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction rbx|QWORD = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction rax|QWORD = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  556  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:121] <|@ <|@
      nr  558  <|@ instruction v45|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction TESTBRANCH (x: v45|DWORD, y: v45|DWORD) trueDestinationProbability: 2.9484609034069464E-5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607182153226268890
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction v46|DWORD = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  600  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v46|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction INC value: [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  604  <|@ instruction rax|DWORD = MOVE input: v45|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024995983699200
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4539323545726156800
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction MOV x: [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  630  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  650  <|@ instruction MOV x: [r15|QWORD + 1168] y: 16024 size: QWORD <|@ <|@
      nr  652  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction MOV x: [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr  672  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  674  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction MOV x: [r15|QWORD + 1156] y: -66835 size: DWORD <|@ <|@
      nr  694  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  696  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d v41|q [0, 1[[554, 558[[604, 606[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v1|d [0, 1[[548, 557[ "NoSpillStore"
  rdx|- fixed "[rdx|-]" rdx|- v0|q [0, 32[[546, 557[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v40|q [0, 1[[552, 557[ "NoSpillStore"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 26[[556, 557[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v43|q [0, 30[[544, 557[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- v44|q [0, 1[[550, 557[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [30, 543[30 MustHaveRegister 34 MustHaveRegister 38 MustHaveRegister 40 MustHaveRegister 72 MustHaveRegister 74 MustHaveRegister 80 MustHaveRegister 470 MustHaveRegister 474 MustHaveRegister 528 MustHaveRegister 538 MustHaveRegister  "OneSpillStore"
  v1|d DWORD "[r10|d]" v1|d rdx|- [32, 548[[608, 618[[632, 653[[654, 675[[676, 697[32 MustHaveRegister 42 MustHaveRegister 72 MustHaveRegister 78 MustHaveRegister 548 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rdx|d]" v2|d -1 [34, 170[34 MustHaveRegister 36 MustHaveRegister 164 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rcx|d]" v3|d -1 [36, 440[36 MustHaveRegister 82 MustHaveRegister 100 ShouldHaveRegister 104 ShouldHaveRegister 118 ShouldHaveRegister 166 ShouldHaveRegister 168 MustHaveRegister 216 MustHaveRegister 420 MustHaveRegister 439 LiveAtLoopEnd  "NoSpillStore"
  v4|d DWORD "[r8|d]" v4|d -1 [74, 78[74 MustHaveRegister 76 MustHaveRegister 78 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[r8|d]" v5|d v4|d [78, 80[78 MustHaveRegister 80 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r8|d]" v6|d v3|d [100, 102[100 MustHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[r8|q]" v7|q -1 [102, 106[102 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rbx|q]" v8|q v3|d [104, 106[104 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[r8|d]" v9|d -1 [168, 204[168 MustHaveRegister 184 MustHaveRegister 203 LiveAtLoopEnd  "NoSpillStore"
  v10|q QWORD "[rdx|q]" v10|q v2|d [170, 440[170 MustHaveRegister 198 MustHaveRegister 203 LiveAtLoopEnd 334 MustHaveRegister 338 MustHaveRegister 342 MustHaveRegister 346 MustHaveRegister 350 MustHaveRegister 354 MustHaveRegister 358 MustHaveRegister 362 MustHaveRegister 366 MustHaveRegister 370 MustHaveRegister 374 MustHaveRegister 378 MustHaveRegister 382 MustHaveRegister 386 MustHaveRegister 390 MustHaveRegister 394 MustHaveRegister 399 LiveAtLoopEnd 434 MustHaveRegister 439 LiveAtLoopEnd  "NoSpillStore"
  v11|d DWORD "[rbx|d]" v11|d v12|d [174, 200[[204, 219[184 ShouldHaveRegister 198 MustHaveRegister 200 ShouldHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rbx|d]" v12|d v11|d [200, 203[200 MustHaveRegister 202 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[r8|d]" v13|d -1 [216, 400[216 MustHaveRegister 230 MustHaveRegister 399 LiveAtLoopEnd  "NoSpillStore"
  v14|d DWORD "[rbx|d]" v14|d v11|d [220, 396[[400, 409[230 ShouldHaveRegister 334 MustHaveRegister 336 ShouldHaveRegister 340 MustHaveRegister 344 MustHaveRegister 348 MustHaveRegister 352 MustHaveRegister 356 MustHaveRegister 360 MustHaveRegister 364 MustHaveRegister 368 MustHaveRegister 372 MustHaveRegister 376 MustHaveRegister 380 MustHaveRegister 384 MustHaveRegister 388 MustHaveRegister 392 MustHaveRegister 396 MustHaveRegister 408 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[rax|d]" v15|d v14|d [336, 338[336 MustHaveRegister 338 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[rax|d]" v16|d -1 [340, 342[340 MustHaveRegister 342 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d -1 [344, 346[344 MustHaveRegister 346 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[rax|d]" v18|d -1 [348, 350[348 MustHaveRegister 350 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[rax|d]" v19|d -1 [352, 354[352 MustHaveRegister 354 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[rax|d]" v20|d -1 [356, 358[356 MustHaveRegister 358 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[rax|d]" v21|d -1 [360, 362[360 MustHaveRegister 362 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[rax|d]" v22|d -1 [364, 366[364 MustHaveRegister 366 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[rax|d]" v23|d -1 [368, 370[368 MustHaveRegister 370 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[rax|d]" v24|d -1 [372, 374[372 MustHaveRegister 374 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[rax|d]" v25|d -1 [376, 378[376 MustHaveRegister 378 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[rax|d]" v26|d -1 [380, 382[380 MustHaveRegister 382 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[rax|d]" v27|d -1 [384, 386[384 MustHaveRegister 386 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[rax|d]" v28|d -1 [388, 390[388 MustHaveRegister 390 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[rax|d]" v29|d -1 [392, 394[392 MustHaveRegister 394 MustHaveRegister  "NoSpillStore"
  v30|d DWORD "[rbx|d]" v30|d -1 [396, 399[396 MustHaveRegister 398 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[rbx|d]" v31|d v14|d [410, 436[420 ShouldHaveRegister 434 MustHaveRegister 436 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[rbx|d]" v32|d v31|d [436, 439[436 MustHaveRegister 438 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[rdx|d]" v33|d -1 [470, 472[470 MustHaveRegister 472 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[rdx|d]" v34|d -1 [472, 480[472 MustHaveRegister 480 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[rcx|d]" v35|d -1 [474, 476[474 MustHaveRegister 476 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[rcx|d]" v36|d -1 [476, 540[476 MustHaveRegister 478 MustHaveRegister 540 MustHaveRegister  "NoSpillStore"
  v37|d DWORD "[r8|d]" v37|d -1 [478, 532[478 MustHaveRegister 532 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[r8|q]" v38|q v37|d [532, 534[532 MustHaveRegister 534 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[rdx|q]" v39|q -1 [530, 533[530 MustHaveRegister 532 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rbx|q]" v40|q -1 [534, 552[534 MustHaveRegister 536 MustHaveRegister 552 ShouldHaveRegister  "NoSpillStore"
  v41|q QWORD "[rax|q]" v41|q -1 [536, 554[536 MustHaveRegister 554 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[rdx|d]" v42|d -1 [538, 542[538 MustHaveRegister 542 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[rcx|q]" v43|q v36|d [540, 544[540 MustHaveRegister 544 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[r8|q]" v44|q v42|d [542, 550[542 MustHaveRegister 550 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[rax|d]" v45|d rax|d [558, 604[[618, 632[558 MustHaveRegister 560 MustHaveRegister 604 ShouldHaveRegister  "NoSpillStore"
  v46|d DWORD "[r10|d]" v46|d -1 [598, 600[598 MustHaveRegister 600 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[r11|q]" v0|q v0|q [543, 555[546 ShouldHaveRegister  "OneSpillStore"
  v48|q QWORD "[vstack:0|q]" v0|q v0|q [555, 572[ "OneSpillStore"
  v49|q QWORD "[rsi|q]" v0|q v0|q [572, 602[[608, 653[[654, 675[[676, 697[598 MustHaveRegister 600 MustHaveRegister 602 MustHaveRegister 628 MustHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f94981 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction MOVB x: [v0|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   40  <|@ instruction MOVB x: [v0|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v1|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   76  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   78  <|@ instruction v5|DWORD = CMOVE (falseValue: v4|DWORD, ~trueValue: v1|DWORD) condition: < <|@ <|@
      nr   80  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v5|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.04762978170136911 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction v6|DWORD = DEC value: v3|DWORD size: DWORD <|@ <|@
      nr  102  <|@ instruction v7|QWORD = MOVSXD value: v6|DWORD size: QWORD <|@ <|@
      nr  104  <|@ instruction v8|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction MOV x: [v2|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  166  <|@ instruction CMP x: v3|DWORD y: 3 size: DWORD <|@ <|@
      nr  168  <|@ instruction v9|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v3|DWORD) condition: |<| <|@ <|@
      nr  170  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr  174  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction MOV x: [v10|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  200  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction v13|DWORD = LEA address: [v3|DWORD - 16] size: DWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608038918195499719
    begin_IR
      LIR
      nr  220  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 0.19981064865370968 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597736059191370102
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction MOV x: [v10|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  336  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr  338  <|@ instruction MOV x: [v10|QWORD[.] + v15|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  340  <|@ instruction v16|DWORD = LEA address: [v14|DWORD + 2] size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV x: [v10|QWORD[.] + v16|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  344  <|@ instruction v17|DWORD = LEA address: [v14|DWORD + 3] size: DWORD <|@ <|@
      nr  346  <|@ instruction MOV x: [v10|QWORD[.] + v17|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  348  <|@ instruction v18|DWORD = LEA address: [v14|DWORD + 4] size: DWORD <|@ <|@
      nr  350  <|@ instruction MOV x: [v10|QWORD[.] + v18|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  352  <|@ instruction v19|DWORD = LEA address: [v14|DWORD + 5] size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV x: [v10|QWORD[.] + v19|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  356  <|@ instruction v20|DWORD = LEA address: [v14|DWORD + 6] size: DWORD <|@ <|@
      nr  358  <|@ instruction MOV x: [v10|QWORD[.] + v20|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  360  <|@ instruction v21|DWORD = LEA address: [v14|DWORD + 7] size: DWORD <|@ <|@
      nr  362  <|@ instruction MOV x: [v10|QWORD[.] + v21|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  364  <|@ instruction v22|DWORD = LEA address: [v14|DWORD + 8] size: DWORD <|@ <|@
      nr  366  <|@ instruction MOV x: [v10|QWORD[.] + v22|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  368  <|@ instruction v23|DWORD = LEA address: [v14|DWORD + 9] size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV x: [v10|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  372  <|@ instruction v24|DWORD = LEA address: [v14|DWORD + 10] size: DWORD <|@ <|@
      nr  374  <|@ instruction MOV x: [v10|QWORD[.] + v24|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  376  <|@ instruction v25|DWORD = LEA address: [v14|DWORD + 11] size: DWORD <|@ <|@
      nr  378  <|@ instruction MOV x: [v10|QWORD[.] + v25|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  380  <|@ instruction v26|DWORD = LEA address: [v14|DWORD + 12] size: DWORD <|@ <|@
      nr  382  <|@ instruction MOV x: [v10|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  384  <|@ instruction v27|DWORD = LEA address: [v14|DWORD + 13] size: DWORD <|@ <|@
      nr  386  <|@ instruction MOV x: [v10|QWORD[.] + v27|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  388  <|@ instruction v28|DWORD = LEA address: [v14|DWORD + 14] size: DWORD <|@ <|@
      nr  390  <|@ instruction MOV x: [v10|QWORD[.] + v28|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  392  <|@ instruction v29|DWORD = LEA address: [v14|DWORD + 15] size: DWORD <|@ <|@
      nr  394  <|@ instruction MOV x: [v10|QWORD[.] + v29|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  396  <|@ instruction v30|DWORD = LEA address: [v14|DWORD + 16] size: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [v30|DWORD] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [v14|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr  410  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v31|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction MOV x: [v10|QWORD[.] + v31|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  436  <|@ instruction v32|DWORD = INC value: v31|DWORD size: DWORD <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [v32|DWORD] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction v33|DWORD[_] = MOV input: [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v34|DWORD = MOV input: [v33|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr  474  <|@ instruction v35|DWORD[_] = MOV input: [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  476  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v36|DWORD[_] = MOV input: [v35|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  478  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v37|DWORD = MOV input: [v36|DWORD[_] * 8 + 8] size: DWORD state [bci:68] <|@ <|@
      nr  480  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  530  <|@ instruction v39|QWORD = MOVE input: long[140080475799552|0x7f6707000000] <|@ <|@
      nr  532  <|@ instruction v38|QWORD = UNCOMPRESSPOINTER (input: v37|DWORD, ~baseRegister: v39|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 140080475799552 shift: 0 <|@ <|@
      nr  534  <|@ instruction v40|QWORD = MOV input: [v38|QWORD + 496] size: QWORD <|@ <|@
      nr  536  <|@ instruction v41|QWORD = MOV input: [v40|QWORD + 64] size: QWORD <|@ <|@
      nr  538  <|@ instruction v42|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  540  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  542  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  544  <|@ instruction rsi|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction rdx|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  548  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  550  <|@ instruction r8|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction rbx|QWORD = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction rax|QWORD = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  556  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:121] <|@ <|@
      nr  558  <|@ instruction v45|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction TESTBRANCH (x: v45|DWORD, y: v45|DWORD) trueDestinationProbability: 2.9484609034069464E-5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607182153226268890
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction v46|DWORD = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  600  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v46|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction INC value: [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  604  <|@ instruction rax|DWORD = MOVE input: v45|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024995983699200
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4539323545726156800
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction MOV x: [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  630  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  650  <|@ instruction MOV x: [r15|QWORD + 1168] y: 16024 size: QWORD <|@ <|@
      nr  652  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction MOV x: [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr  672  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  674  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction MOV x: [r15|QWORD + 1156] y: -66835 size: DWORD <|@ <|@
      nr  694  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  696  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d v41|q [0, 1[[554, 558[[604, 606[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v1|d [0, 1[[548, 557[ "NoSpillStore"
  rdx|- fixed "[rdx|-]" rdx|- v0|q [0, 32[[546, 557[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v40|q [0, 1[[552, 557[ "NoSpillStore"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 26[[556, 557[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v43|q [0, 30[[544, 557[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- v44|q [0, 1[[550, 557[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[556, 557[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [30, 543[30 MustHaveRegister 34 MustHaveRegister 38 MustHaveRegister 40 MustHaveRegister 72 MustHaveRegister 74 MustHaveRegister 80 MustHaveRegister 470 MustHaveRegister 474 MustHaveRegister 528 MustHaveRegister 538 MustHaveRegister  "OneSpillStore"
  v1|d DWORD "[r10|d]" v1|d rdx|- [32, 548[[608, 618[[632, 653[[654, 675[[676, 697[32 MustHaveRegister 42 MustHaveRegister 72 MustHaveRegister 78 MustHaveRegister 548 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rdx|d]" v2|d -1 [34, 170[34 MustHaveRegister 36 MustHaveRegister 164 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rcx|d]" v3|d -1 [36, 440[36 MustHaveRegister 82 MustHaveRegister 100 ShouldHaveRegister 104 ShouldHaveRegister 118 ShouldHaveRegister 166 ShouldHaveRegister 168 MustHaveRegister 216 MustHaveRegister 420 MustHaveRegister 439 LiveAtLoopEnd  "NoSpillStore"
  v4|d DWORD "[r8|d]" v4|d -1 [74, 78[74 MustHaveRegister 76 MustHaveRegister 78 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[r8|d]" v5|d v4|d [78, 80[78 MustHaveRegister 80 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r8|d]" v6|d v3|d [100, 102[100 MustHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[r8|q]" v7|q -1 [102, 106[102 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rbx|q]" v8|q v3|d [104, 106[104 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[r8|d]" v9|d -1 [168, 204[168 MustHaveRegister 184 MustHaveRegister 203 LiveAtLoopEnd  "NoSpillStore"
  v10|q QWORD "[rdx|q]" v10|q v2|d [170, 440[170 MustHaveRegister 198 MustHaveRegister 203 LiveAtLoopEnd 334 MustHaveRegister 338 MustHaveRegister 342 MustHaveRegister 346 MustHaveRegister 350 MustHaveRegister 354 MustHaveRegister 358 MustHaveRegister 362 MustHaveRegister 366 MustHaveRegister 370 MustHaveRegister 374 MustHaveRegister 378 MustHaveRegister 382 MustHaveRegister 386 MustHaveRegister 390 MustHaveRegister 394 MustHaveRegister 399 LiveAtLoopEnd 434 MustHaveRegister 439 LiveAtLoopEnd  "NoSpillStore"
  v11|d DWORD "[rbx|d]" v11|d v12|d [174, 200[[204, 219[184 ShouldHaveRegister 198 MustHaveRegister 200 ShouldHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rbx|d]" v12|d v11|d [200, 203[200 MustHaveRegister 202 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[r8|d]" v13|d -1 [216, 400[216 MustHaveRegister 230 MustHaveRegister 399 LiveAtLoopEnd  "NoSpillStore"
  v14|d DWORD "[rbx|d]" v14|d v11|d [220, 396[[400, 409[230 ShouldHaveRegister 334 MustHaveRegister 336 ShouldHaveRegister 340 MustHaveRegister 344 MustHaveRegister 348 MustHaveRegister 352 MustHaveRegister 356 MustHaveRegister 360 MustHaveRegister 364 MustHaveRegister 368 MustHaveRegister 372 MustHaveRegister 376 MustHaveRegister 380 MustHaveRegister 384 MustHaveRegister 388 MustHaveRegister 392 MustHaveRegister 396 MustHaveRegister 408 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[rax|d]" v15|d v14|d [336, 338[336 MustHaveRegister 338 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[rax|d]" v16|d -1 [340, 342[340 MustHaveRegister 342 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d -1 [344, 346[344 MustHaveRegister 346 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[rax|d]" v18|d -1 [348, 350[348 MustHaveRegister 350 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[rax|d]" v19|d -1 [352, 354[352 MustHaveRegister 354 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[rax|d]" v20|d -1 [356, 358[356 MustHaveRegister 358 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[rax|d]" v21|d -1 [360, 362[360 MustHaveRegister 362 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[rax|d]" v22|d -1 [364, 366[364 MustHaveRegister 366 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[rax|d]" v23|d -1 [368, 370[368 MustHaveRegister 370 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[rax|d]" v24|d -1 [372, 374[372 MustHaveRegister 374 MustHaveRegister  "NoSpillStore"
  v25|d DWORD "[rax|d]" v25|d -1 [376, 378[376 MustHaveRegister 378 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[rax|d]" v26|d -1 [380, 382[380 MustHaveRegister 382 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[rax|d]" v27|d -1 [384, 386[384 MustHaveRegister 386 MustHaveRegister  "NoSpillStore"
  v28|d DWORD "[rax|d]" v28|d -1 [388, 390[388 MustHaveRegister 390 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[rax|d]" v29|d -1 [392, 394[392 MustHaveRegister 394 MustHaveRegister  "NoSpillStore"
  v30|d DWORD "[rbx|d]" v30|d -1 [396, 399[396 MustHaveRegister 398 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[rbx|d]" v31|d v14|d [410, 436[420 ShouldHaveRegister 434 MustHaveRegister 436 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[rbx|d]" v32|d v31|d [436, 439[436 MustHaveRegister 438 ShouldHaveRegister  "NoSpillStore"
  v33|d DWORD "[rdx|d]" v33|d -1 [470, 472[470 MustHaveRegister 472 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[rdx|d]" v34|d -1 [472, 480[472 MustHaveRegister 480 MustHaveRegister  "NoSpillStore"
  v35|d DWORD "[rcx|d]" v35|d -1 [474, 476[474 MustHaveRegister 476 MustHaveRegister  "NoSpillStore"
  v36|d DWORD "[rcx|d]" v36|d -1 [476, 540[476 MustHaveRegister 478 MustHaveRegister 540 MustHaveRegister  "NoSpillStore"
  v37|d DWORD "[r8|d]" v37|d -1 [478, 532[478 MustHaveRegister 532 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[r8|q]" v38|q v37|d [532, 534[532 MustHaveRegister 534 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[rdx|q]" v39|q -1 [530, 533[530 MustHaveRegister 532 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rbx|q]" v40|q -1 [534, 552[534 MustHaveRegister 536 MustHaveRegister 552 ShouldHaveRegister  "NoSpillStore"
  v41|q QWORD "[rax|q]" v41|q -1 [536, 554[536 MustHaveRegister 554 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[rdx|d]" v42|d -1 [538, 542[538 MustHaveRegister 542 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[rcx|q]" v43|q v36|d [540, 544[540 MustHaveRegister 544 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[r8|q]" v44|q v42|d [542, 550[542 MustHaveRegister 550 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[rax|d]" v45|d rax|d [558, 604[[618, 632[558 MustHaveRegister 560 MustHaveRegister 604 ShouldHaveRegister  "NoSpillStore"
  v46|d DWORD "[r10|d]" v46|d -1 [598, 600[598 MustHaveRegister 600 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[r11|q]" v0|q v0|q [543, 555[546 ShouldHaveRegister  "OneSpillStore"
  v48|q QWORD "[vstack:0|q]" v0|q v0|q [555, 572[ "OneSpillStore"
  v49|q QWORD "[rsi|q]" v0|q v0|q [572, 602[[608, 653[[654, 675[[676, 697[598 MustHaveRegister 600 MustHaveRegister 602 MustHaveRegister 628 MustHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f94981 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction MOVB x: [v0|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   40  <|@ instruction MOVB x: [v0|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v1|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   76  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   78  <|@ instruction v5|DWORD = CMOVE (falseValue: v4|DWORD, ~trueValue: v1|DWORD) condition: < <|@ <|@
      nr   80  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v5|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.04762978170136911 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction v6|DWORD = DEC value: v3|DWORD size: DWORD <|@ <|@
      nr  102  <|@ instruction v7|QWORD = MOVSXD value: v6|DWORD size: QWORD <|@ <|@
      nr  104  <|@ instruction v8|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction MOV x: [v2|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  166  <|@ instruction CMP x: v3|DWORD y: 3 size: DWORD <|@ <|@
      nr  168  <|@ instruction v9|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v3|DWORD) condition: |<| <|@ <|@
      nr  170  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr  174  <|@ instruction [v11|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction MOV x: [v10|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  200  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction v13|DWORD = LEA address: [v3|DWORD - 16] size: DWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608038918195499719
    begin_IR
      LIR
      nr  220  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 0.19981064865370968 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597736059191370102
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction MOV x: [v10|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  336  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr  338  <|@ instruction MOV x: [v10|QWORD[.] + v15|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  340  <|@ instruction v16|DWORD = LEA address: [v14|DWORD + 2] size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV x: [v10|QWORD[.] + v16|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  344  <|@ instruction v17|DWORD = LEA address: [v14|DWORD + 3] size: DWORD <|@ <|@
      nr  346  <|@ instruction MOV x: [v10|QWORD[.] + v17|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  348  <|@ instruction v18|DWORD = LEA address: [v14|DWORD + 4] size: DWORD <|@ <|@
      nr  350  <|@ instruction MOV x: [v10|QWORD[.] + v18|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  352  <|@ instruction v19|DWORD = LEA address: [v14|DWORD + 5] size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV x: [v10|QWORD[.] + v19|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  356  <|@ instruction v20|DWORD = LEA address: [v14|DWORD + 6] size: DWORD <|@ <|@
      nr  358  <|@ instruction MOV x: [v10|QWORD[.] + v20|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  360  <|@ instruction v21|DWORD = LEA address: [v14|DWORD + 7] size: DWORD <|@ <|@
      nr  362  <|@ instruction MOV x: [v10|QWORD[.] + v21|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  364  <|@ instruction v22|DWORD = LEA address: [v14|DWORD + 8] size: DWORD <|@ <|@
      nr  366  <|@ instruction MOV x: [v10|QWORD[.] + v22|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  368  <|@ instruction v23|DWORD = LEA address: [v14|DWORD + 9] size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV x: [v10|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  372  <|@ instruction v24|DWORD = LEA address: [v14|DWORD + 10] size: DWORD <|@ <|@
      nr  374  <|@ instruction MOV x: [v10|QWORD[.] + v24|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  376  <|@ instruction v25|DWORD = LEA address: [v14|DWORD + 11] size: DWORD <|@ <|@
      nr  378  <|@ instruction MOV x: [v10|QWORD[.] + v25|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  380  <|@ instruction v26|DWORD = LEA address: [v14|DWORD + 12] size: DWORD <|@ <|@
      nr  382  <|@ instruction MOV x: [v10|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  384  <|@ instruction v27|DWORD = LEA address: [v14|DWORD + 13] size: DWORD <|@ <|@
      nr  386  <|@ instruction MOV x: [v10|QWORD[.] + v27|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  388  <|@ instruction v28|DWORD = LEA address: [v14|DWORD + 14] size: DWORD <|@ <|@
      nr  390  <|@ instruction MOV x: [v10|QWORD[.] + v28|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  392  <|@ instruction v29|DWORD = LEA address: [v14|DWORD + 15] size: DWORD <|@ <|@
      nr  394  <|@ instruction MOV x: [v10|QWORD[.] + v29|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  396  <|@ instruction v30|DWORD = LEA address: [v14|DWORD + 16] size: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr  410  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v31|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction MOV x: [v10|QWORD[.] + v31|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  436  <|@ instruction v32|DWORD = INC value: v31|DWORD size: DWORD <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction v33|DWORD[_] = MOV input: [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v34|DWORD = MOV input: [v33|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr  474  <|@ instruction v35|DWORD[_] = MOV input: [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  476  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v36|DWORD[_] = MOV input: [v35|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  478  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v37|DWORD = MOV input: [v36|DWORD[_] * 8 + 8] size: DWORD state [bci:68] <|@ <|@
      nr  480  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  530  <|@ instruction v39|QWORD = MOVE input: long[140080475799552|0x7f6707000000] <|@ <|@
      nr  532  <|@ instruction v38|QWORD = UNCOMPRESSPOINTER (input: v37|DWORD, ~baseRegister: v39|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 140080475799552 shift: 0 <|@ <|@
      nr  534  <|@ instruction v40|QWORD = MOV input: [v38|QWORD + 496] size: QWORD <|@ <|@
      nr  536  <|@ instruction v41|QWORD = MOV input: [v40|QWORD + 64] size: QWORD <|@ <|@
      nr  538  <|@ instruction v42|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  540  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  542  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  544  <|@ instruction rsi|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction rdx|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  548  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  550  <|@ instruction r8|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction rbx|QWORD = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction rax|QWORD = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  556  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:121] <|@ <|@
      nr  558  <|@ instruction v45|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction TESTBRANCH (x: v45|DWORD, y: v45|DWORD) trueDestinationProbability: 2.9484609034069464E-5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607182153226268890
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction v46|DWORD = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  600  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v46|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction INC value: [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  604  <|@ instruction rax|DWORD = MOVE input: v45|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024995983699200
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4539323545726156800
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction MOV x: [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  630  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  650  <|@ instruction MOV x: [r15|QWORD + 1168] y: 16024 size: QWORD <|@ <|@
      nr  652  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction MOV x: [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr  672  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  674  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction MOV x: [r15|QWORD + 1156] y: -66835 size: DWORD <|@ <|@
      nr  694  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  696  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f94981 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction MOVB x: [v0|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   40  <|@ instruction MOVB x: [v0|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v1|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   76  <|@ instruction TEST (x: v4|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   78  <|@ instruction v5|DWORD = CMOVE (falseValue: v4|DWORD, ~trueValue: v1|DWORD) condition: < <|@ <|@
      nr   80  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v5|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.04762978170136911 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction v6|DWORD = DEC value: v3|DWORD size: DWORD <|@ <|@
      nr  102  <|@ instruction v7|QWORD = MOVSXD value: v6|DWORD size: QWORD <|@ <|@
      nr  104  <|@ instruction v8|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: v8|QWORD, y: v7|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction CMPCONSTBRANCH x: v3|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction MOV x: [v2|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  166  <|@ instruction CMP x: v3|DWORD y: 3 size: DWORD <|@ <|@
      nr  168  <|@ instruction v9|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v3|DWORD) condition: |<| <|@ <|@
      nr  170  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: v9|DWORD, y: v11|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction MOV x: [v10|QWORD[.] + v11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  200  <|@ instruction v12|DWORD = INC value: v11|DWORD size: DWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction v13|DWORD = LEA address: [v3|DWORD - 16] size: DWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608038918195499719
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v14|DWORD) trueDestinationProbability: 0.19981064865370968 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597736059191370102
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction MOV x: [v10|QWORD[.] + v14|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  336  <|@ instruction v15|DWORD = INC value: v14|DWORD size: DWORD <|@ <|@
      nr  338  <|@ instruction MOV x: [v10|QWORD[.] + v15|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  340  <|@ instruction v16|DWORD = LEA address: [v14|DWORD + 2] size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV x: [v10|QWORD[.] + v16|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  344  <|@ instruction v17|DWORD = LEA address: [v14|DWORD + 3] size: DWORD <|@ <|@
      nr  346  <|@ instruction MOV x: [v10|QWORD[.] + v17|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  348  <|@ instruction v18|DWORD = LEA address: [v14|DWORD + 4] size: DWORD <|@ <|@
      nr  350  <|@ instruction MOV x: [v10|QWORD[.] + v18|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  352  <|@ instruction v19|DWORD = LEA address: [v14|DWORD + 5] size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV x: [v10|QWORD[.] + v19|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  356  <|@ instruction v20|DWORD = LEA address: [v14|DWORD + 6] size: DWORD <|@ <|@
      nr  358  <|@ instruction MOV x: [v10|QWORD[.] + v20|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  360  <|@ instruction v21|DWORD = LEA address: [v14|DWORD + 7] size: DWORD <|@ <|@
      nr  362  <|@ instruction MOV x: [v10|QWORD[.] + v21|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  364  <|@ instruction v22|DWORD = LEA address: [v14|DWORD + 8] size: DWORD <|@ <|@
      nr  366  <|@ instruction MOV x: [v10|QWORD[.] + v22|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  368  <|@ instruction v23|DWORD = LEA address: [v14|DWORD + 9] size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV x: [v10|QWORD[.] + v23|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  372  <|@ instruction v24|DWORD = LEA address: [v14|DWORD + 10] size: DWORD <|@ <|@
      nr  374  <|@ instruction MOV x: [v10|QWORD[.] + v24|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  376  <|@ instruction v25|DWORD = LEA address: [v14|DWORD + 11] size: DWORD <|@ <|@
      nr  378  <|@ instruction MOV x: [v10|QWORD[.] + v25|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  380  <|@ instruction v26|DWORD = LEA address: [v14|DWORD + 12] size: DWORD <|@ <|@
      nr  382  <|@ instruction MOV x: [v10|QWORD[.] + v26|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  384  <|@ instruction v27|DWORD = LEA address: [v14|DWORD + 13] size: DWORD <|@ <|@
      nr  386  <|@ instruction MOV x: [v10|QWORD[.] + v27|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  388  <|@ instruction v28|DWORD = LEA address: [v14|DWORD + 14] size: DWORD <|@ <|@
      nr  390  <|@ instruction MOV x: [v10|QWORD[.] + v28|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  392  <|@ instruction v29|DWORD = LEA address: [v14|DWORD + 15] size: DWORD <|@ <|@
      nr  394  <|@ instruction MOV x: [v10|QWORD[.] + v29|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  396  <|@ instruction v30|DWORD = LEA address: [v14|DWORD + 16] size: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v31|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction MOV x: [v10|QWORD[.] + v31|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  436  <|@ instruction v32|DWORD = INC value: v31|DWORD size: DWORD <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction v33|DWORD[_] = MOV input: [v0|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v34|DWORD = MOV input: [v33|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr  474  <|@ instruction v35|DWORD[_] = MOV input: [v0|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  476  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v36|DWORD[_] = MOV input: [v35|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  478  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction v37|DWORD = MOV input: [v36|DWORD[_] * 8 + 8] size: DWORD state [bci:68] <|@ <|@
      nr  480  <|@ instruction TESTBRANCH (x: v34|DWORD, y: v34|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  530  <|@ instruction v39|QWORD = MOVE input: long[140080475799552|0x7f6707000000] <|@ <|@
      nr  532  <|@ instruction v38|QWORD = UNCOMPRESSPOINTER (input: v37|DWORD, ~baseRegister: v39|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 140080475799552 shift: 0 <|@ <|@
      nr  534  <|@ instruction v40|QWORD = MOV input: [v38|QWORD + 496] size: QWORD <|@ <|@
      nr  536  <|@ instruction v41|QWORD = MOV input: [v40|QWORD + 64] size: QWORD <|@ <|@
      nr  538  <|@ instruction v42|DWORD[_] = MOV input: [v0|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  540  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  542  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  544  <|@ instruction rsi|QWORD[.] = MOVE input: v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction rdx|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  548  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  550  <|@ instruction r8|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction rbx|QWORD = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction rax|QWORD = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE input: v47|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  556  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: v0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:121] <|@ <|@
      nr  558  <|@ instruction v45|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction TESTBRANCH (x: v45|DWORD, y: v45|DWORD) trueDestinationProbability: 2.9484609034069464E-5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607182153226268890
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction v46|DWORD = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  600  <|@ instruction MOV (x: [v0|QWORD[.] + 36], y: v46|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction INC value: [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  604  <|@ instruction rax|DWORD = MOVE input: v45|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024995983699200
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4539323545726156800
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = MOVE input: v48|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction MOV x: [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  630  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  650  <|@ instruction MOV x: [r15|QWORD + 1168] y: 16024 size: QWORD <|@ <|@
      nr  652  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction MOV x: [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr  672  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  674  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction MOV x: [r15|QWORD + 1156] y: -66835 size: DWORD <|@ <|@
      nr  694  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  696  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f94981 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction MOVB x: [rsi|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   40  <|@ instruction MOVB x: [rsi|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r10|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   76  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   78  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: < <|@ <|@
      nr   80  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r8|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.04762978170136911 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction r8|DWORD = DEC value: rcx|DWORD size: DWORD <|@ <|@
      nr  102  <|@ instruction r8|QWORD = MOVSXD value: r8|DWORD size: QWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction MOV x: [rdx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  166  <|@ instruction CMP x: rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  168  <|@ instruction r8|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rcx|DWORD) condition: |<| <|@ <|@
      nr  170  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction MOV x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  200  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction r8|DWORD = LEA address: [rcx|DWORD - 16] size: DWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608038918195499719
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.19981064865370968 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597736059191370102
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction MOV x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  336  <|@ instruction rax|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  338  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  340  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 2] size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  344  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 3] size: DWORD <|@ <|@
      nr  346  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  348  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 4] size: DWORD <|@ <|@
      nr  350  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  352  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 5] size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  356  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 6] size: DWORD <|@ <|@
      nr  358  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  360  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 7] size: DWORD <|@ <|@
      nr  362  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  364  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  366  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  368  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 9] size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  372  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 10] size: DWORD <|@ <|@
      nr  374  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  376  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 11] size: DWORD <|@ <|@
      nr  378  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  380  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 12] size: DWORD <|@ <|@
      nr  382  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  384  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 13] size: DWORD <|@ <|@
      nr  386  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  388  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 14] size: DWORD <|@ <|@
      nr  390  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  392  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 15] size: DWORD <|@ <|@
      nr  394  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  396  <|@ instruction rbx|DWORD = LEA address: [rbx|DWORD + 16] size: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction MOV x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  436  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rdx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr  474  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  476  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  478  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction r8|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:68] <|@ <|@
      nr  480  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction MOV x: [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  530  <|@ instruction rdx|QWORD = MOVE input: long[140080475799552|0x7f6707000000] <|@ <|@
      nr  532  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 140080475799552 shift: 0 <|@ <|@
      nr  534  <|@ instruction rbx|QWORD = MOV input: [r8|QWORD + 496] size: QWORD <|@ <|@
      nr  536  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  538  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  540  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  542  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  544  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  548  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  556  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: vstack:0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:121] <|@ <|@
      nr  560  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 2.9484609034069464E-5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607182153226268890
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  600  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction INC value: [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  606  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024995983699200
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4539323545726156800
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction MOV x: [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  630  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  650  <|@ instruction MOV x: [r15|QWORD + 1168] y: 16024 size: QWORD <|@ <|@
      nr  652  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction MOV x: [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr  672  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  674  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction MOV x: [r15|QWORD + 1156] y: -66835 size: DWORD <|@ <|@
      nr  694  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  696  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f94981 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction MOVB x: [rsi|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   40  <|@ instruction MOVB x: [rsi|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r10|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   76  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   78  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: < <|@ <|@
      nr   80  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r8|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.04762978170136911 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction r8|DWORD = DEC value: rcx|DWORD size: DWORD <|@ <|@
      nr  102  <|@ instruction r8|QWORD = MOVSXD value: r8|DWORD size: QWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction MOV x: [rdx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  166  <|@ instruction CMP x: rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  168  <|@ instruction r8|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rcx|DWORD) condition: |<| <|@ <|@
      nr  170  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction MOV x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  200  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  202  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction r8|DWORD = LEA address: [rcx|DWORD - 16] size: DWORD <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608038918195499719
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.19981064865370968 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597736059191370102
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction MOV x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  336  <|@ instruction rax|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  338  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  340  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 2] size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  344  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 3] size: DWORD <|@ <|@
      nr  346  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  348  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 4] size: DWORD <|@ <|@
      nr  350  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  352  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 5] size: DWORD <|@ <|@
      nr  354  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  356  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 6] size: DWORD <|@ <|@
      nr  358  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  360  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 7] size: DWORD <|@ <|@
      nr  362  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  364  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  366  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  368  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 9] size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  372  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 10] size: DWORD <|@ <|@
      nr  374  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  376  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 11] size: DWORD <|@ <|@
      nr  378  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  380  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 12] size: DWORD <|@ <|@
      nr  382  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  384  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 13] size: DWORD <|@ <|@
      nr  386  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  388  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 14] size: DWORD <|@ <|@
      nr  390  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  392  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 15] size: DWORD <|@ <|@
      nr  394  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  396  <|@ instruction rbx|DWORD = LEA address: [rbx|DWORD + 16] size: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction MOV x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  436  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  438  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rdx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr  474  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  476  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  478  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction r8|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:68] <|@ <|@
      nr  480  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction MOV x: [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  530  <|@ instruction rdx|QWORD = MOVE input: long[140080475799552|0x7f6707000000] <|@ <|@
      nr  532  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 140080475799552 shift: 0 <|@ <|@
      nr  534  <|@ instruction rbx|QWORD = MOV input: [r8|QWORD + 496] size: QWORD <|@ <|@
      nr  536  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  538  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  540  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  542  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  544  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  548  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  556  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: vstack:0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:121] <|@ <|@
      nr  560  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 2.9484609034069464E-5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607182153226268890
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  600  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD) size: DWORD <|@ <|@
      nr  602  <|@ instruction INC value: [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  606  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024995983699200
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4539323545726156800
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction MOV x: [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  630  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  650  <|@ instruction MOV x: [r15|QWORD + 1168] y: 16024 size: QWORD <|@ <|@
      nr  652  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction MOV x: [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr  672  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  674  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction MOV x: [r15|QWORD + 1156] y: -66835 size: DWORD <|@ <|@
      nr  694  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  696  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f94981 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction MOVB x: [rsi|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   38  <|@ instruction MOVB x: [rsi|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r10|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   96  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: < <|@ <|@
      nr  100  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r8|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.04762978170136911 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction r8|DWORD = DEC value: rcx|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction r8|QWORD = MOVSXD value: r8|DWORD size: QWORD <|@ <|@
      nr  134  <|@ instruction rbx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction MOV x: [rdx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  196  <|@ instruction CMP x: rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  198  <|@ instruction r8|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rcx|DWORD) condition: |<| <|@ <|@
      nr  200  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  202  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction MOV x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  232  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r8|DWORD = LEA address: [rcx|DWORD - 16] size: DWORD <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608038918195499719
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.19981064865370968 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597736059191370102
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction MOV x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  368  <|@ instruction rax|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  372  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 2] size: DWORD <|@ <|@
      nr  374  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  376  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 3] size: DWORD <|@ <|@
      nr  378  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  380  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 4] size: DWORD <|@ <|@
      nr  382  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  384  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 5] size: DWORD <|@ <|@
      nr  386  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  388  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 6] size: DWORD <|@ <|@
      nr  390  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  392  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 7] size: DWORD <|@ <|@
      nr  394  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  396  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  398  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  400  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 9] size: DWORD <|@ <|@
      nr  402  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  404  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 10] size: DWORD <|@ <|@
      nr  406  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  408  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 11] size: DWORD <|@ <|@
      nr  410  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  412  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 12] size: DWORD <|@ <|@
      nr  414  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  416  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 13] size: DWORD <|@ <|@
      nr  418  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  420  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 14] size: DWORD <|@ <|@
      nr  422  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  424  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 15] size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  428  <|@ instruction rbx|DWORD = LEA address: [rbx|DWORD + 16] size: DWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction MOV x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  468  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  470  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  504  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rdx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr  506  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  508  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  510  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction r8|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:68] <|@ <|@
      nr  512  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction MOV x: [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  562  <|@ instruction rdx|QWORD = MOVE input: long[140080475799552|0x7f6707000000] <|@ <|@
      nr  564  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 140080475799552 shift: 0 <|@ <|@
      nr  566  <|@ instruction rbx|QWORD = MOV input: [r8|QWORD + 496] size: QWORD <|@ <|@
      nr  568  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  570  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  572  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  574  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  576  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  578  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  584  <|@ instruction vstack:0|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  586  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: vstack:0|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:121] <|@ <|@
      nr  588  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 2.9484609034069464E-5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607182153226268890
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  646  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD) size: DWORD <|@ <|@
      nr  648  <|@ instruction INC value: [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  650  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024995983699200
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4539323545726156800
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction MOV x: [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  692  <|@ instruction MOV x: [r15|QWORD + 1168] y: 16024 size: QWORD <|@ <|@
      nr  694  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction MOV x: [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr  670  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  672  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction MOV x: [r15|QWORD + 1156] y: -66835 size: DWORD <|@ <|@
      nr   60  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [584, 614[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:32|q]" vstack:0|q -1 [584, 614[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f94981 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction MOVB x: [rsi|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   38  <|@ instruction MOVB x: [rsi|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r10|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   96  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: < <|@ <|@
      nr  100  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r8|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.04762978170136911 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction r8|DWORD = DEC value: rcx|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction r8|QWORD = MOVSXD value: r8|DWORD size: QWORD <|@ <|@
      nr  134  <|@ instruction rbx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction MOV x: [rdx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  196  <|@ instruction CMP x: rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  198  <|@ instruction r8|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rcx|DWORD) condition: |<| <|@ <|@
      nr  200  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  202  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction MOV x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  232  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r8|DWORD = LEA address: [rcx|DWORD - 16] size: DWORD <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608038918195499719
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.19981064865370968 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597736059191370102
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction MOV x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  368  <|@ instruction rax|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  372  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 2] size: DWORD <|@ <|@
      nr  374  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  376  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 3] size: DWORD <|@ <|@
      nr  378  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  380  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 4] size: DWORD <|@ <|@
      nr  382  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  384  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 5] size: DWORD <|@ <|@
      nr  386  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  388  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 6] size: DWORD <|@ <|@
      nr  390  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  392  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 7] size: DWORD <|@ <|@
      nr  394  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  396  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  398  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  400  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 9] size: DWORD <|@ <|@
      nr  402  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  404  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 10] size: DWORD <|@ <|@
      nr  406  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  408  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 11] size: DWORD <|@ <|@
      nr  410  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  412  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 12] size: DWORD <|@ <|@
      nr  414  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  416  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 13] size: DWORD <|@ <|@
      nr  418  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  420  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 14] size: DWORD <|@ <|@
      nr  422  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  424  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 15] size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  428  <|@ instruction rbx|DWORD = LEA address: [rbx|DWORD + 16] size: DWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction MOV x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  468  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  470  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  504  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rdx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr  506  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  508  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  510  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction r8|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:68] <|@ <|@
      nr  512  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction MOV x: [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  562  <|@ instruction rdx|QWORD = MOVE input: long[140080475799552|0x7f6707000000] <|@ <|@
      nr  564  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 140080475799552 shift: 0 <|@ <|@
      nr  566  <|@ instruction rbx|QWORD = MOV input: [r8|QWORD + 496] size: QWORD <|@ <|@
      nr  568  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  570  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  572  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  574  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  576  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  578  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  584  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  586  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:121] <|@ <|@
      nr  588  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 2.9484609034069464E-5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607182153226268890
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  646  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD) size: DWORD <|@ <|@
      nr  648  <|@ instruction INC value: [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  650  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024995983699200
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4539323545726156800
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction MOV x: [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  692  <|@ instruction MOV x: [r15|QWORD + 1168] y: 16024 size: QWORD <|@ <|@
      nr  694  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction MOV x: [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr  670  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  672  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction MOV x: [r15|QWORD + 1156] y: -66835 size: DWORD <|@ <|@
      nr   60  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f94981 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction MOVB x: [rsi|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   38  <|@ instruction MOVB x: [rsi|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r10|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   96  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: < <|@ <|@
      nr  100  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r8|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.04762978170136911 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction r8|DWORD = DEC value: rcx|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction r8|QWORD = MOVSXD value: r8|DWORD size: QWORD <|@ <|@
      nr  134  <|@ instruction rbx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction MOV x: [rdx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  196  <|@ instruction CMP x: rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  198  <|@ instruction r8|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rcx|DWORD) condition: |<| <|@ <|@
      nr  200  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  202  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction MOV x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  232  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r8|DWORD = LEA address: [rcx|DWORD - 16] size: DWORD <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608038918195499719
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.19981064865370968 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597736059191370102
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction MOV x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  368  <|@ instruction rax|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  372  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 2] size: DWORD <|@ <|@
      nr  374  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  376  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 3] size: DWORD <|@ <|@
      nr  378  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  380  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 4] size: DWORD <|@ <|@
      nr  382  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  384  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 5] size: DWORD <|@ <|@
      nr  386  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  388  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 6] size: DWORD <|@ <|@
      nr  390  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  392  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 7] size: DWORD <|@ <|@
      nr  394  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  396  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  398  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  400  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 9] size: DWORD <|@ <|@
      nr  402  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  404  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 10] size: DWORD <|@ <|@
      nr  406  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  408  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 11] size: DWORD <|@ <|@
      nr  410  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  412  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 12] size: DWORD <|@ <|@
      nr  414  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  416  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 13] size: DWORD <|@ <|@
      nr  418  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  420  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 14] size: DWORD <|@ <|@
      nr  422  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  424  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 15] size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  428  <|@ instruction rbx|DWORD = LEA address: [rbx|DWORD + 16] size: DWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction MOV x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  468  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  470  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  504  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rdx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr  506  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  508  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  510  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction r8|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:68] <|@ <|@
      nr  512  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction MOV x: [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  562  <|@ instruction rdx|QWORD = MOVE input: long[140080475799552|0x7f6707000000] <|@ <|@
      nr  564  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 140080475799552 shift: 0 <|@ <|@
      nr  566  <|@ instruction rbx|QWORD = MOV input: [r8|QWORD + 496] size: QWORD <|@ <|@
      nr  568  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  570  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  572  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  574  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  576  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  578  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  584  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  586  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:121] <|@ <|@
      nr  588  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 2.9484609034069464E-5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607182153226268890
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  646  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD) size: DWORD <|@ <|@
      nr  648  <|@ instruction INC value: [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  650  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024995983699200
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4539323545726156800
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction MOV x: [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  692  <|@ instruction MOV x: [r15|QWORD + 1168] y: 16024 size: QWORD <|@ <|@
      nr  694  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction MOV x: [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr  670  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  672  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction MOV x: [r15|QWORD + 1156] y: -66835 size: DWORD <|@ <|@
      nr   60  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f94981 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction MOVB x: [rsi|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   38  <|@ instruction MOVB x: [rsi|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r10|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   96  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: < <|@ <|@
      nr  100  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r8|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.04762978170136911 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction r8|DWORD = DEC value: rcx|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction r8|QWORD = MOVSXD value: r8|DWORD size: QWORD <|@ <|@
      nr  134  <|@ instruction rbx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction MOV x: [rdx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  196  <|@ instruction CMP x: rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  198  <|@ instruction r8|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rcx|DWORD) condition: |<| <|@ <|@
      nr  200  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  202  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction MOV x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  232  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r8|DWORD = LEA address: [rcx|DWORD - 16] size: DWORD <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608038918195499719
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.19981064865370968 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597736059191370102
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction MOV x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  368  <|@ instruction rax|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  372  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 2] size: DWORD <|@ <|@
      nr  374  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  376  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 3] size: DWORD <|@ <|@
      nr  378  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  380  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 4] size: DWORD <|@ <|@
      nr  382  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  384  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 5] size: DWORD <|@ <|@
      nr  386  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  388  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 6] size: DWORD <|@ <|@
      nr  390  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  392  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 7] size: DWORD <|@ <|@
      nr  394  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  396  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  398  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  400  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 9] size: DWORD <|@ <|@
      nr  402  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  404  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 10] size: DWORD <|@ <|@
      nr  406  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  408  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 11] size: DWORD <|@ <|@
      nr  410  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  412  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 12] size: DWORD <|@ <|@
      nr  414  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  416  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 13] size: DWORD <|@ <|@
      nr  418  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  420  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 14] size: DWORD <|@ <|@
      nr  422  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  424  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 15] size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  428  <|@ instruction rbx|DWORD = LEA address: [rbx|DWORD + 16] size: DWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction MOV x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  468  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  470  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  504  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rdx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr  506  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  508  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  510  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction r8|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:68] <|@ <|@
      nr  512  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction MOV x: [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  562  <|@ instruction rdx|QWORD = MOVE input: long[140080475799552|0x7f6707000000] <|@ <|@
      nr  564  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 140080475799552 shift: 0 <|@ <|@
      nr  566  <|@ instruction rbx|QWORD = MOV input: [r8|QWORD + 496] size: QWORD <|@ <|@
      nr  568  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  570  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  572  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  574  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  576  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  578  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  584  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  586  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:121] <|@ <|@
      nr  588  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 2.9484609034069464E-5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607182153226268890
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  646  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD) size: DWORD <|@ <|@
      nr  648  <|@ instruction INC value: [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  650  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024995983699200
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4539323545726156800
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction MOV x: [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  692  <|@ instruction MOV x: [r15|QWORD + 1168] y: 16024 size: QWORD <|@ <|@
      nr  694  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction MOV x: [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr  670  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  672  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction MOV x: [r15|QWORD + 1156] y: -66835 size: DWORD <|@ <|@
      nr   60  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f94981 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction MOVB x: [rsi|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   38  <|@ instruction MOVB x: [rsi|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r10|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   96  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: < <|@ <|@
      nr  100  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r8|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.04762978170136911 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction r8|DWORD = DEC value: rcx|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction r8|QWORD = MOVSXD value: r8|DWORD size: QWORD <|@ <|@
      nr  134  <|@ instruction rbx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction MOV x: [rdx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  196  <|@ instruction CMP x: rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  198  <|@ instruction r8|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rcx|DWORD) condition: |<| <|@ <|@
      nr  200  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  202  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction MOV x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  232  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r8|DWORD = LEA address: [rcx|DWORD - 16] size: DWORD <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608038918195499719
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.19981064865370968 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597736059191370102
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction MOV x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  368  <|@ instruction rax|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  372  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 2] size: DWORD <|@ <|@
      nr  374  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  376  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 3] size: DWORD <|@ <|@
      nr  378  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  380  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 4] size: DWORD <|@ <|@
      nr  382  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  384  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 5] size: DWORD <|@ <|@
      nr  386  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  388  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 6] size: DWORD <|@ <|@
      nr  390  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  392  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 7] size: DWORD <|@ <|@
      nr  394  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  396  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  398  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  400  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 9] size: DWORD <|@ <|@
      nr  402  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  404  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 10] size: DWORD <|@ <|@
      nr  406  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  408  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 11] size: DWORD <|@ <|@
      nr  410  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  412  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 12] size: DWORD <|@ <|@
      nr  414  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  416  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 13] size: DWORD <|@ <|@
      nr  418  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  420  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 14] size: DWORD <|@ <|@
      nr  422  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  424  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 15] size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  428  <|@ instruction rbx|DWORD = LEA address: [rbx|DWORD + 16] size: DWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction MOV x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  468  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  470  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  504  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rdx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr  506  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  508  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  510  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction r8|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:68] <|@ <|@
      nr  512  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction MOV x: [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  562  <|@ instruction rdx|QWORD = MOVE input: long[140080475799552|0x7f6707000000] <|@ <|@
      nr  564  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 140080475799552 shift: 0 <|@ <|@
      nr  566  <|@ instruction rbx|QWORD = MOV input: [r8|QWORD + 496] size: QWORD <|@ <|@
      nr  568  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  570  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  572  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  574  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  576  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  578  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  584  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  586  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:121] <|@ <|@
      nr  588  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 2.9484609034069464E-5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607182153226268890
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  646  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD) size: DWORD <|@ <|@
      nr  648  <|@ instruction INC value: [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  650  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024995983699200
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4539323545726156800
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction MOV x: [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  692  <|@ instruction MOV x: [r15|QWORD + 1168] y: 16024 size: QWORD <|@ <|@
      nr  694  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction MOV x: [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr  670  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  672  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction MOV x: [r15|QWORD + 1156] y: -66835 size: DWORD <|@ <|@
      nr   60  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f94981 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction MOVB x: [rsi|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   38  <|@ instruction MOVB x: [rsi|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r10|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   96  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: < <|@ <|@
      nr  100  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r8|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.04762978170136911 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction r8|DWORD = DEC value: rcx|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction r8|QWORD = MOVSXD value: r8|DWORD size: QWORD <|@ <|@
      nr  134  <|@ instruction rbx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction MOV x: [rdx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  196  <|@ instruction CMP x: rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  198  <|@ instruction r8|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rcx|DWORD) condition: |<| <|@ <|@
      nr  200  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  202  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction MOV x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  232  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r8|DWORD = LEA address: [rcx|DWORD - 16] size: DWORD <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608038918195499719
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.19981064865370968 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597736059191370102
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction MOV x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  368  <|@ instruction rax|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  372  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 2] size: DWORD <|@ <|@
      nr  374  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  376  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 3] size: DWORD <|@ <|@
      nr  378  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  380  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 4] size: DWORD <|@ <|@
      nr  382  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  384  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 5] size: DWORD <|@ <|@
      nr  386  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  388  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 6] size: DWORD <|@ <|@
      nr  390  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  392  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 7] size: DWORD <|@ <|@
      nr  394  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  396  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  398  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  400  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 9] size: DWORD <|@ <|@
      nr  402  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  404  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 10] size: DWORD <|@ <|@
      nr  406  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  408  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 11] size: DWORD <|@ <|@
      nr  410  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  412  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 12] size: DWORD <|@ <|@
      nr  414  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  416  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 13] size: DWORD <|@ <|@
      nr  418  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  420  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 14] size: DWORD <|@ <|@
      nr  422  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  424  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 15] size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  428  <|@ instruction rbx|DWORD = LEA address: [rbx|DWORD + 16] size: DWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction MOV x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  468  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  470  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  504  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rdx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr  506  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  508  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  510  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction r8|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:68] <|@ <|@
      nr  512  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction MOV x: [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  562  <|@ instruction rdx|QWORD = MOVE input: long[140080475799552|0x7f6707000000] <|@ <|@
      nr  564  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 140080475799552 shift: 0 <|@ <|@
      nr  566  <|@ instruction rbx|QWORD = MOV input: [r8|QWORD + 496] size: QWORD <|@ <|@
      nr  568  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  570  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  572  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  574  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  576  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  578  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  584  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  586  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:121] <|@ <|@
      nr  588  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 2.9484609034069464E-5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607182153226268890
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  646  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD) size: DWORD <|@ <|@
      nr  648  <|@ instruction INC value: [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  650  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024995983699200
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4539323545726156800
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction MOV x: [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  692  <|@ instruction MOV x: [r15|QWORD + 1168] y: 16024 size: QWORD <|@ <|@
      nr  694  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction MOV x: [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr  670  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  672  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction MOV x: [r15|QWORD + 1156] y: -66835 size: DWORD <|@ <|@
      nr   60  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f94981 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction MOVB x: [rsi|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   38  <|@ instruction MOVB x: [rsi|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r10|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   96  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: < <|@ <|@
      nr  100  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r8|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.04762978170136911 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction r8|DWORD = DEC value: rcx|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction r8|QWORD = MOVSXD value: r8|DWORD size: QWORD <|@ <|@
      nr  134  <|@ instruction rbx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction MOV x: [rdx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  196  <|@ instruction CMP x: rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  198  <|@ instruction r8|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rcx|DWORD) condition: |<| <|@ <|@
      nr  200  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  202  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction MOV x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  232  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r8|DWORD = LEA address: [rcx|DWORD - 16] size: DWORD <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608038918195499719
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.19981064865370968 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597736059191370102
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction MOV x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  368  <|@ instruction rax|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  372  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 2] size: DWORD <|@ <|@
      nr  374  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  376  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 3] size: DWORD <|@ <|@
      nr  378  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  380  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 4] size: DWORD <|@ <|@
      nr  382  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  384  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 5] size: DWORD <|@ <|@
      nr  386  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  388  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 6] size: DWORD <|@ <|@
      nr  390  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  392  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 7] size: DWORD <|@ <|@
      nr  394  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  396  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  398  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  400  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 9] size: DWORD <|@ <|@
      nr  402  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  404  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 10] size: DWORD <|@ <|@
      nr  406  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  408  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 11] size: DWORD <|@ <|@
      nr  410  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  412  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 12] size: DWORD <|@ <|@
      nr  414  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  416  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 13] size: DWORD <|@ <|@
      nr  418  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  420  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 14] size: DWORD <|@ <|@
      nr  422  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  424  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 15] size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  428  <|@ instruction rbx|DWORD = LEA address: [rbx|DWORD + 16] size: DWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction MOV x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  468  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  470  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  504  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rdx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr  506  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  508  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  510  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction r8|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:68] <|@ <|@
      nr  512  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction MOV x: [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  562  <|@ instruction rdx|QWORD = MOVE input: long[140080475799552|0x7f6707000000] <|@ <|@
      nr  564  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 140080475799552 shift: 0 <|@ <|@
      nr  566  <|@ instruction rbx|QWORD = MOV input: [r8|QWORD + 496] size: QWORD <|@ <|@
      nr  568  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  570  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  572  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  574  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  576  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  578  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  584  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  586  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:121] <|@ <|@
      nr  588  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 2.9484609034069464E-5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607182153226268890
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  646  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD) size: DWORD <|@ <|@
      nr  648  <|@ instruction INC value: [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  650  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024995983699200
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4539323545726156800
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction MOV x: [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  692  <|@ instruction MOV x: [r15|QWORD + 1168] y: 16024 size: QWORD <|@ <|@
      nr  694  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction MOV x: [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr  670  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  672  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction MOV x: [r15|QWORD + 1156] y: -66835 size: DWORD <|@ <|@
      nr   60  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f94981 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction MOVB x: [rsi|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   38  <|@ instruction MOVB x: [rsi|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r10|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   96  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: < <|@ <|@
      nr  100  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r8|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.04762978170136911 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction r8|DWORD = DEC value: rcx|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction r8|QWORD = MOVSXD value: r8|DWORD size: QWORD <|@ <|@
      nr  134  <|@ instruction rbx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction MOV x: [rdx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  196  <|@ instruction CMP x: rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  198  <|@ instruction r8|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rcx|DWORD) condition: |<| <|@ <|@
      nr  200  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  202  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction MOV x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  232  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r8|DWORD = LEA address: [rcx|DWORD - 16] size: DWORD <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597736059191370102
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction MOV x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  368  <|@ instruction rax|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  372  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 2] size: DWORD <|@ <|@
      nr  374  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  376  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 3] size: DWORD <|@ <|@
      nr  378  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  380  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 4] size: DWORD <|@ <|@
      nr  382  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  384  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 5] size: DWORD <|@ <|@
      nr  386  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  388  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 6] size: DWORD <|@ <|@
      nr  390  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  392  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 7] size: DWORD <|@ <|@
      nr  394  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  396  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  398  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  400  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 9] size: DWORD <|@ <|@
      nr  402  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  404  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 10] size: DWORD <|@ <|@
      nr  406  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  408  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 11] size: DWORD <|@ <|@
      nr  410  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  412  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 12] size: DWORD <|@ <|@
      nr  414  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  416  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 13] size: DWORD <|@ <|@
      nr  418  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  420  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 14] size: DWORD <|@ <|@
      nr  422  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  424  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 15] size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  428  <|@ instruction rbx|DWORD = LEA address: [rbx|DWORD + 16] size: DWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608038918195499719
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.19981064865370968 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction MOV x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  468  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  470  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  504  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rdx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr  506  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  508  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  510  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction r8|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:68] <|@ <|@
      nr  512  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction MOV x: [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  562  <|@ instruction rdx|QWORD = MOVE input: long[140080475799552|0x7f6707000000] <|@ <|@
      nr  564  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 140080475799552 shift: 0 <|@ <|@
      nr  566  <|@ instruction rbx|QWORD = MOV input: [r8|QWORD + 496] size: QWORD <|@ <|@
      nr  568  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  570  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  572  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  574  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  576  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  578  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  584  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  586  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:121] <|@ <|@
      nr  588  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 2.9484609034069464E-5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607182153226268890
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  646  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD) size: DWORD <|@ <|@
      nr  648  <|@ instruction INC value: [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  650  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024995983699200
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4539323545726156800
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction MOV x: [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction MOV x: [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr  670  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  672  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  692  <|@ instruction MOV x: [r15|QWORD + 1168] y: 16024 size: QWORD <|@ <|@
      nr  694  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction MOV x: [r15|QWORD + 1156] y: -66835 size: DWORD <|@ <|@
      nr   60  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f94981 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction MOVB x: [rsi|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   38  <|@ instruction MOVB x: [rsi|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r10|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   96  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: < <|@ <|@
      nr  100  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r8|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.04762978170136911 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction r8|DWORD = DEC value: rcx|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction r8|QWORD = MOVSXD value: r8|DWORD size: QWORD <|@ <|@
      nr  134  <|@ instruction rbx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction MOV x: [rdx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  196  <|@ instruction CMP x: rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  198  <|@ instruction r8|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rcx|DWORD) condition: |<| <|@ <|@
      nr  200  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  202  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction MOV x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  232  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r8|DWORD = LEA address: [rcx|DWORD - 16] size: DWORD <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597736059191370102
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction MOV x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  368  <|@ instruction rax|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  372  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 2] size: DWORD <|@ <|@
      nr  374  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  376  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 3] size: DWORD <|@ <|@
      nr  378  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  380  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 4] size: DWORD <|@ <|@
      nr  382  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  384  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 5] size: DWORD <|@ <|@
      nr  386  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  388  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 6] size: DWORD <|@ <|@
      nr  390  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  392  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 7] size: DWORD <|@ <|@
      nr  394  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  396  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  398  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  400  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 9] size: DWORD <|@ <|@
      nr  402  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  404  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 10] size: DWORD <|@ <|@
      nr  406  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  408  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 11] size: DWORD <|@ <|@
      nr  410  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  412  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 12] size: DWORD <|@ <|@
      nr  414  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  416  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 13] size: DWORD <|@ <|@
      nr  418  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  420  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 14] size: DWORD <|@ <|@
      nr  422  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  424  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 15] size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  428  <|@ instruction rbx|DWORD = LEA address: [rbx|DWORD + 16] size: DWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608038918195499719
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.19981064865370968 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction MOV x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  468  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  470  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  504  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rdx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr  506  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  508  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  510  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction r8|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:68] <|@ <|@
      nr  512  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction MOV x: [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  562  <|@ instruction rdx|QWORD = MOVE input: long[140080475799552|0x7f6707000000] <|@ <|@
      nr  564  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 140080475799552 shift: 0 <|@ <|@
      nr  566  <|@ instruction rbx|QWORD = MOV input: [r8|QWORD + 496] size: QWORD <|@ <|@
      nr  568  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  570  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  572  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  574  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  576  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  578  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  584  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  586  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:121] <|@ <|@
      nr  588  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 2.9484609034069464E-5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607182153226268890
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  646  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD) size: DWORD <|@ <|@
      nr  648  <|@ instruction INC value: [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  650  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024995983699200
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4539323545726156800
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction MOV x: [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction MOV x: [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr  670  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  672  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  692  <|@ instruction MOV x: [r15|QWORD + 1168] y: 16024 size: QWORD <|@ <|@
      nr  694  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction MOV x: [r15|QWORD + 1156] y: -66835 size: DWORD <|@ <|@
      nr   60  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f94981 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction MOVB x: [rsi|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   38  <|@ instruction MOVB x: [rsi|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r10|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   96  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: < <|@ <|@
      nr  100  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r8|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.04762978170136911 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction r8|DWORD = DEC value: rcx|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction r8|QWORD = MOVSXD value: r8|DWORD size: QWORD <|@ <|@
      nr  134  <|@ instruction rbx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction MOV x: [rdx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  196  <|@ instruction CMP x: rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  198  <|@ instruction r8|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rcx|DWORD) condition: |<| <|@ <|@
      nr  200  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  202  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction MOV x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  232  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r8|DWORD = LEA address: [rcx|DWORD - 16] size: DWORD <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597736059191370102
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction MOV x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  368  <|@ instruction rax|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  372  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 2] size: DWORD <|@ <|@
      nr  374  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  376  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 3] size: DWORD <|@ <|@
      nr  378  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  380  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 4] size: DWORD <|@ <|@
      nr  382  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  384  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 5] size: DWORD <|@ <|@
      nr  386  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  388  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 6] size: DWORD <|@ <|@
      nr  390  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  392  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 7] size: DWORD <|@ <|@
      nr  394  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  396  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  398  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  400  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 9] size: DWORD <|@ <|@
      nr  402  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  404  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 10] size: DWORD <|@ <|@
      nr  406  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  408  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 11] size: DWORD <|@ <|@
      nr  410  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  412  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 12] size: DWORD <|@ <|@
      nr  414  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  416  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 13] size: DWORD <|@ <|@
      nr  418  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  420  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 14] size: DWORD <|@ <|@
      nr  422  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  424  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 15] size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  428  <|@ instruction rbx|DWORD = LEA address: [rbx|DWORD + 16] size: DWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608038918195499719
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.19981064865370968 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction MOV x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  468  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  470  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  504  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rdx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr  506  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  508  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  510  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction r8|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:68] <|@ <|@
      nr  512  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction MOV x: [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  562  <|@ instruction rdx|QWORD = MOVE input: long[140080475799552|0x7f6707000000] <|@ <|@
      nr  564  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 140080475799552 shift: 0 <|@ <|@
      nr  566  <|@ instruction rbx|QWORD = MOV input: [r8|QWORD + 496] size: QWORD <|@ <|@
      nr  568  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  570  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  572  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  574  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  576  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  578  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  584  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  586  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:121] <|@ <|@
      nr  588  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 2.9484609034069464E-5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607182153226268890
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  646  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD) size: DWORD <|@ <|@
      nr  648  <|@ instruction INC value: [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  650  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024995983699200
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4539323545726156800
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction MOV x: [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction MOV x: [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr  670  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  672  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  692  <|@ instruction MOV x: [r15|QWORD + 1168] y: 16024 size: QWORD <|@ <|@
      nr  694  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction MOV x: [r15|QWORD + 1156] y: -66835 size: DWORD <|@ <|@
      nr   60  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f94981 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction MOVB x: [rsi|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   38  <|@ instruction MOVB x: [rsi|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r10|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   96  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: < <|@ <|@
      nr  100  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r8|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.04762978170136911 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction r8|DWORD = DEC value: rcx|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction r8|QWORD = MOVSXD value: r8|DWORD size: QWORD <|@ <|@
      nr  134  <|@ instruction rbx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction MOV x: [rdx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  196  <|@ instruction CMP x: rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  198  <|@ instruction r8|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rcx|DWORD) condition: |<| <|@ <|@
      nr  200  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  202  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction MOV x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  232  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r8|DWORD = LEA address: [rcx|DWORD - 16] size: DWORD <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597736059191370102
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction MOV x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  368  <|@ instruction rax|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  372  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 2] size: DWORD <|@ <|@
      nr  374  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  376  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 3] size: DWORD <|@ <|@
      nr  378  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  380  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 4] size: DWORD <|@ <|@
      nr  382  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  384  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 5] size: DWORD <|@ <|@
      nr  386  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  388  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 6] size: DWORD <|@ <|@
      nr  390  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  392  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 7] size: DWORD <|@ <|@
      nr  394  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  396  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  398  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  400  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 9] size: DWORD <|@ <|@
      nr  402  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  404  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 10] size: DWORD <|@ <|@
      nr  406  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  408  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 11] size: DWORD <|@ <|@
      nr  410  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  412  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 12] size: DWORD <|@ <|@
      nr  414  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  416  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 13] size: DWORD <|@ <|@
      nr  418  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  420  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 14] size: DWORD <|@ <|@
      nr  422  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  424  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 15] size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  428  <|@ instruction rbx|DWORD = LEA address: [rbx|DWORD + 16] size: DWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608038918195499719
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.19981064865370968 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction MOV x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  468  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  470  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  504  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rdx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr  506  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  508  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  510  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction r8|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:68] <|@ <|@
      nr  512  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction MOV x: [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  562  <|@ instruction rdx|QWORD = MOVE input: long[140080475799552|0x7f6707000000] <|@ <|@
      nr  564  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 140080475799552 shift: 0 <|@ <|@
      nr  566  <|@ instruction rbx|QWORD = MOV input: [r8|QWORD + 496] size: QWORD <|@ <|@
      nr  568  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  570  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  572  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  574  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  576  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  578  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  584  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  586  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:121] <|@ <|@
      nr  588  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 2.9484609034069464E-5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607182153226268890
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  646  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD) size: DWORD <|@ <|@
      nr  648  <|@ instruction INC value: [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  650  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024995983699200
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4539323545726156800
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction MOV x: [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction MOV x: [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr  670  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  672  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  692  <|@ instruction MOV x: [r15|QWORD + 1168] y: 16024 size: QWORD <|@ <|@
      nr  694  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction MOV x: [r15|QWORD + 1156] y: -66835 size: DWORD <|@ <|@
      nr   60  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   62  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f94981 slotKind: QWORD <|@ <|@
      nr   30  <|@ instruction r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 56] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction MOVB x: [rsi|QWORD[.] + 48] y: 0 size: BYTE <|@ <|@
      nr   38  <|@ instruction MOVB x: [rsi|QWORD[.] + 49] y: 0 size: BYTE <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r10|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction r8|DWORD = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   96  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: < <|@ <|@
      nr  100  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r8|DWORD) size: DWORD <|@ <|@
      nr  102  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.04762978170136911 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction r8|DWORD = DEC value: rcx|DWORD size: DWORD <|@ <|@
      nr  132  <|@ instruction r8|QWORD = MOVSXD value: r8|DWORD size: QWORD <|@ <|@
      nr  134  <|@ instruction rbx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B24" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction MOV x: [rdx|DWORD[_] * 8 + 16] y: -1 size: DWORD <|@ <|@
      nr  196  <|@ instruction CMP x: rcx|DWORD y: 3 size: DWORD <|@ <|@
      nr  198  <|@ instruction r8|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rcx|DWORD) condition: |<| <|@ <|@
      nr  200  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  202  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction MOV x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  232  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B10" "B11" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction r8|DWORD = LEA address: [rcx|DWORD - 16] size: DWORD <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4597736059191370102
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction MOV x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  368  <|@ instruction rax|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  370  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  372  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 2] size: DWORD <|@ <|@
      nr  374  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  376  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 3] size: DWORD <|@ <|@
      nr  378  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  380  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 4] size: DWORD <|@ <|@
      nr  382  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  384  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 5] size: DWORD <|@ <|@
      nr  386  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  388  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 6] size: DWORD <|@ <|@
      nr  390  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  392  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 7] size: DWORD <|@ <|@
      nr  394  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  396  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 8] size: DWORD <|@ <|@
      nr  398  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  400  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 9] size: DWORD <|@ <|@
      nr  402  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  404  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 10] size: DWORD <|@ <|@
      nr  406  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  408  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 11] size: DWORD <|@ <|@
      nr  410  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  412  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 12] size: DWORD <|@ <|@
      nr  414  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  416  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 13] size: DWORD <|@ <|@
      nr  418  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  420  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 14] size: DWORD <|@ <|@
      nr  422  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  424  <|@ instruction rax|DWORD = LEA address: [rbx|DWORD + 15] size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  428  <|@ instruction rbx|DWORD = LEA address: [rbx|DWORD + 16] size: DWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4608038918195499719
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.19981064865370968 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B15" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4576699117260970657
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction MOV x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr  468  <|@ instruction rbx|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  470  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B16" "B17" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4606840056232647067
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606753407865773360
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B3" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 68] size: DWORD <|@ <|@
      nr  504  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rdx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:68] <|@ <|@
      nr  506  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  508  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction rcx|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 52] size: DWORD state [bci:68] <|@ <|@
      nr  510  <|@ st <@st|@reference-map: [rcx:0, rsi:0]
live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction r8|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:68] <|@ <|@
      nr  512  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction MOV x: [rsi|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  562  <|@ instruction rdx|QWORD = MOVE input: long[140080475799552|0x7f6707000000] <|@ <|@
      nr  564  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 140080475799552 shift: 0 <|@ <|@
      nr  566  <|@ instruction rbx|QWORD = MOV input: [r8|QWORD + 496] size: QWORD <|@ <|@
      nr  568  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  570  <|@ instruction rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  572  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  574  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3 <|@ <|@
      nr  576  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  578  <|@ instruction rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  584  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  586  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121]
locals: stack:32|QWORD[.] - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:121] <|@ <|@
      nr  588  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 2.9484609034069464E-5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607182153226268890
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  616  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  646  <|@ instruction MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD) size: DWORD <|@ <|@
      nr  648  <|@ instruction INC value: [rsi|QWORD[.] + 44] size: DWORD <|@ <|@
      nr  650  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602249808238402864
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B18" 
    xhandlers
    flags 
    probability 4587024995983699200
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4539323545726156800
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  592  <|@ instruction rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction MOV x: [rsi|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  604  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction MOV x: [r15|QWORD + 1156] y: -68115 size: DWORD <|@ <|@
      nr  670  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  672  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:68] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD <|@ <|@
      nr  692  <|@ instruction MOV x: [r15|QWORD + 1168] y: 16024 size: QWORD <|@ <|@
      nr  694  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:44] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction MOV x: [r15|QWORD + 1156] y: -66835 size: DWORD <|@ <|@
      nr   60  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   62  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10]
locals: rsi|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iconst_0      
     2: putfield      #86         // hitEnd:boolean
     5: aload_0       
     6: iconst_0      
     7: putfield      #87         // requireEnd:boolean
    10: iload_1       
    11: ifge          18
    14: iconst_0      
    15: goto          19
    18: iload_1       
    19: istore_1      
    20: aload_0       
    21: iload_1       
    22: putfield      #2          // first:int
    25: aload_0       
    26: aload_0       
    27: getfield      #4          // oldLast:int
    30: ifge          37
    33: iload_1       
    34: goto          41
    37: aload_0       
    38: getfield      #4          // oldLast:int
    41: putfield      #4          // oldLast:int
    44: iconst_0      
    45: istore_2      
    46: iload_2       
    47: aload_0       
    48: getfield      #12         // groups:int[]
    51: arraylength   
    52: if_icmpge     68
    55: aload_0       
    56: getfield      #12         // groups:int[]
    59: iload_2       
    60: iconst_m1     
    61: iastore       
    62: iinc          
    65: goto          46
    68: iconst_0      
    69: istore_2      
    70: iload_2       
    71: aload_0       
    72: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    75: arraylength   
    76: if_icmpge     103
    79: aload_0       
    80: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    83: iload_2       
    84: aaload        
    85: ifnull        97
    88: aload_0       
    89: getfield      #16         // localsPos:java.util.regex.IntHashSet[]
    92: iload_2       
    93: aaload        
    94: invokevirtual #32         // java.util.regex.IntHashSet.clear:()void
    97: iinc          
   100: goto          70
   103: aload_0       
   104: iconst_0      
   105: putfield      #1          // acceptMode:int
   108: aload_0       
   109: getfield      #8          // parentPattern:java.util.regex.Pattern
   112: getfield      #88         // java.util.regex.Pattern.root:java.util.regex.Pattern$Node
   115: aload_0       
   116: iload_1       
   117: aload_0       
   118: getfield      #9          // text:java.lang.CharSequence
   121: invokevirtual #89         // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
   124: istore_2      
   125: iload_2       
   126: ifne          134
   129: aload_0       
   130: iconst_m1     
   131: putfield      #2          // first:int
   134: aload_0       
   135: aload_0       
   136: getfield      #3          // last:int
   139: putfield      #4          // oldLast:int
   142: aload_0       
   143: dup           
   144: getfield      #31         // modCount:int
   147: iconst_1      
   148: iadd          
   149: putfield      #31         // modCount:int
   152: iload_2       
   153: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc00000007677f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec189041817f20000000000f858703000090909090909090909090909048896c2410448bd28b56388b0cd50c000000c6463000c64631004585d20f8c2e030000909090909090909090909090904489561c448b46244585c0450f4cc24489462485c90f849902000090909090909090448bc141ffc84d63c08bd9493bd80f87760200009090909083f9020f83b40200009090909090909090909090909090c704d510000000ffffffff83f90341b802000000440f42c148c1e203bb01000000e9220000006666660f1f840000000000666666900f1f40009090909090c7449a10ffffffffffc390909090443bc37fe89090909090448d41f0e9fd0000006666660f1f840000000000666666906666660f1f8400000000009090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090c7449a10ffffffff8bc3ffc0c7448210ffffffff8d4302c7448210ffffffff8d4303c7448210ffffffff8d4304c7448210ffffffff8d4305c7448210ffffffff8d4306c7448210ffffffff8d4307c7448210ffffffff8d4308c7448210ffffffff8d4309c7448210ffffffff8d430ac7448210ffffffff8d430bc7448210ffffffff8d430cc7448210ffffffff8d430dc7448210ffffffff8d430ec7448210ffffffff8d430fc7448210ffffffff8d5b1090909090443bc30f8f10ffffff909090e9170000000f1f8400000000009090909090c7449a10ffffffffffc3909090903bcb7fe99090909090909090909090908b56448b14d50c0000008b4e348b0ccd34000000448b04cd0800000085d20f85bc00000090909090909090909090909090909090909090909090c746180000000048ba00000007677f00004e8d0402498b98f0010000488b43408b563c48c1e103448bc249c1e0034c8bde488bf1498bd3418bca4c891c24ffd00f1f84000000000085c00f8445000000909090488b3424909090909090909090909090448b562044895624ff462c488b6c24104883c418493ba7500400000f87b0000000c3909090e992fdffff909090e928ffffff488b342490909090c7461cffffffffebb19090909090909041c78784040000edf5feff49c7879004000094020000e8000000000f1f8400000000009090909090909041c78784040000e56fffff49c78790040000983e0000e8000000000f1f8400000000009090909090909041c78784040000edfafeff49c7879004000014000000e8000000000f1f84000000000048896c2410e800000000e96afcfffff4488d0d3cffffff49898f68040000e91cfcfffff441c78784040000f581ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f562ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f556ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f54cffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f678da335c8, value=140082329178240]:0x7f6775785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 75 28 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f94981 slotKind: QWORD  <||@
  Comment 75 30 r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 78 32 rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 56] size: DWORD  <||@
  Comment 81 34 rcx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 81 [rdx:0, rsi:0]at java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 81 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 88 36 MOVB x: [rsi|QWORD[.] + 48] y: 0 size: BYTE  <||@
  Comment 92 38 MOVB x: [rsi|QWORD[.] + 49] y: 0 size: BYTE  <||@
  Comment 96 40 TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 105 block B2 null  <||@
  Comment 105 64 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 105 66 NOP  <||@
  Comment 106 68 NOP  <||@
  Comment 107 70 NOP  <||@
  Comment 108 72 NOP  <||@
  Comment 109 74 NOP  <||@
  Comment 110 76 NOP  <||@
  Comment 111 78 NOP  <||@
  Comment 112 80 NOP  <||@
  Comment 113 82 NOP  <||@
  Comment 114 84 NOP  <||@
  Comment 115 86 NOP  <||@
  Comment 116 88 NOP  <||@
  Comment 117 90 NOP  <||@
  Comment 118 92 MOV (x: [rsi|QWORD[.] + 28], y: r10|DWORD) size: DWORD  <||@
  Comment 122 94 r8|DWORD = MOV input: [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 126 96 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 129 98 r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: <  <||@
  Comment 133 100 MOV (x: [rsi|QWORD[.] + 36], y: r8|DWORD) size: DWORD  <||@
  Comment 137 102 TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.04762978170136911 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 145 block B4 null  <||@
  Comment 145 114 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 145 116 NOP  <||@
  Comment 146 118 NOP  <||@
  Comment 147 120 NOP  <||@
  Comment 148 122 NOP  <||@
  Comment 149 124 NOP  <||@
  Comment 150 126 NOP  <||@
  Comment 151 128 NOP  <||@
  Comment 152 130 r8|DWORD = DEC value: rcx|DWORD size: DWORD  <||@
  Comment 158 132 r8|QWORD = MOVSXD value: r8|DWORD size: QWORD  <||@
  Comment 161 134 rbx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 163 136 CMPBRANCH (x: rbx|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD  <||@
  Comment 172 block B6 null  <||@
  Comment 172 148 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 172 150 NOP  <||@
  Comment 173 152 NOP  <||@
  Comment 174 154 NOP  <||@
  Comment 175 156 NOP  <||@
  Comment 176 158 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null  <||@
  Comment 185 block B7 null  <||@
  Comment 185 160 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 185 162 NOP  <||@
  Comment 186 164 NOP  <||@
  Comment 187 166 NOP  <||@
  Comment 188 168 JUMP ~outgoingValues: [] destination: B7 -> B8  <||@
  Comment 188 block B8 null  <||@
  Comment 188 170 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 188 172 NOP  <||@
  Comment 189 174 NOP  <||@
  Comment 190 176 NOP  <||@
  Comment 191 178 NOP  <||@
  Comment 192 180 NOP  <||@
  Comment 193 182 NOP  <||@
  Comment 194 184 NOP  <||@
  Comment 195 186 NOP  <||@
  Comment 196 188 NOP  <||@
  Comment 197 190 NOP  <||@
  Comment 198 192 NOP  <||@
  Comment 199 194 MOV x: [rdx|DWORD[_] * 8 + 16] y: -1 size: DWORD  <||@
  Comment 210 196 CMP x: rcx|DWORD y: 3 size: DWORD  <||@
  Comment 213 198 r8|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rcx|DWORD) condition: |<|  <||@
  Comment 223 200 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3  <||@
  Comment 227 202 rbx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 232 204 JUMP ~outgoingValues: [] destination: B8 -> B9  <||@
  Comment 237 block B10 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 237 218 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 256 220 NOP  <||@
  Comment 257 222 NOP  <||@
  Comment 258 224 NOP  <||@
  Comment 259 226 NOP  <||@
  Comment 260 228 NOP  <||@
  Comment 261 230 MOV x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 269 232 rbx|DWORD = INC value: rbx|DWORD size: DWORD  <||@
  Comment 271 234 JUMP ~outgoingValues: [] destination: B10 -> B9  <||@
  Comment 271 block B9 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 271 206 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 271 208 NOP  <||@
  Comment 272 210 NOP  <||@
  Comment 273 212 NOP  <||@
  Comment 274 214 NOP  <||@
  Comment 275 216 CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD  <||@
  Comment 280 block B11 null  <||@
  Comment 280 236 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 280 238 NOP  <||@
  Comment 281 240 NOP  <||@
  Comment 282 242 NOP  <||@
  Comment 283 244 NOP  <||@
  Comment 284 246 NOP  <||@
  Comment 285 248 r8|DWORD = LEA address: [rcx|DWORD - 16] size: DWORD  <||@
  Comment 289 250 JUMP ~outgoingValues: [] destination: B11 -> B12  <||@
  Comment 294 block B13 loop 1 depth 1 header:272|LoopBegin  <||@
  Comment 294 264 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 320 266 NOP  <||@
  Comment 321 268 NOP  <||@
  Comment 322 270 NOP  <||@
  Comment 323 272 NOP  <||@
  Comment 324 274 NOP  <||@
  Comment 325 276 NOP  <||@
  Comment 326 278 NOP  <||@
  Comment 327 280 NOP  <||@
  Comment 328 282 NOP  <||@
  Comment 329 284 NOP  <||@
  Comment 330 286 NOP  <||@
  Comment 331 288 NOP  <||@
  Comment 332 290 NOP  <||@
  Comment 333 292 NOP  <||@
  Comment 334 294 NOP  <||@
  Comment 335 296 NOP  <||@
  Comment 336 298 NOP  <||@
  Comment 337 300 NOP  <||@
  Comment 338 302 NOP  <||@
  Comment 339 304 NOP  <||@
  Comment 340 306 NOP  <||@
  Comment 341 308 NOP  <||@
  Comment 342 310 NOP  <||@
  Comment 343 312 NOP  <||@
  Comment 344 314 NOP  <||@
  Comment 345 316 NOP  <||@
  Comment 346 318 NOP  <||@
  Comment 347 320 NOP  <||@
  Comment 348 322 NOP  <||@
  Comment 349 324 NOP  <||@
  Comment 350 326 NOP  <||@
  Comment 351 328 NOP  <||@
  Comment 352 330 NOP  <||@
  Comment 353 332 NOP  <||@
  Comment 354 334 NOP  <||@
  Comment 355 336 NOP  <||@
  Comment 356 338 NOP  <||@
  Comment 357 340 NOP  <||@
  Comment 358 342 NOP  <||@
  Comment 359 344 NOP  <||@
  Comment 360 346 NOP  <||@
  Comment 361 348 NOP  <||@
  Comment 362 350 NOP  <||@
  Comment 363 352 NOP  <||@
  Comment 364 354 NOP  <||@
  Comment 365 356 NOP  <||@
  Comment 366 358 NOP  <||@
  Comment 367 360 NOP  <||@
  Comment 368 362 NOP  <||@
  Comment 369 364 NOP  <||@
  Comment 370 366 MOV x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 378 368 rax|DWORD = INC value: rbx|DWORD size: DWORD  <||@
  Comment 382 370 MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 390 372 rax|DWORD = LEA address: [rbx|DWORD + 2] size: DWORD  <||@
  Comment 393 374 MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 401 376 rax|DWORD = LEA address: [rbx|DWORD + 3] size: DWORD  <||@
  Comment 404 378 MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 412 380 rax|DWORD = LEA address: [rbx|DWORD + 4] size: DWORD  <||@
  Comment 415 382 MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 423 384 rax|DWORD = LEA address: [rbx|DWORD + 5] size: DWORD  <||@
  Comment 426 386 MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 434 388 rax|DWORD = LEA address: [rbx|DWORD + 6] size: DWORD  <||@
  Comment 437 390 MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 445 392 rax|DWORD = LEA address: [rbx|DWORD + 7] size: DWORD  <||@
  Comment 448 394 MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 456 396 rax|DWORD = LEA address: [rbx|DWORD + 8] size: DWORD  <||@
  Comment 459 398 MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 467 400 rax|DWORD = LEA address: [rbx|DWORD + 9] size: DWORD  <||@
  Comment 470 402 MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 478 404 rax|DWORD = LEA address: [rbx|DWORD + 10] size: DWORD  <||@
  Comment 481 406 MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 489 408 rax|DWORD = LEA address: [rbx|DWORD + 11] size: DWORD  <||@
  Comment 492 410 MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 500 412 rax|DWORD = LEA address: [rbx|DWORD + 12] size: DWORD  <||@
  Comment 503 414 MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 511 416 rax|DWORD = LEA address: [rbx|DWORD + 13] size: DWORD  <||@
  Comment 514 418 MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 522 420 rax|DWORD = LEA address: [rbx|DWORD + 14] size: DWORD  <||@
  Comment 525 422 MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 533 424 rax|DWORD = LEA address: [rbx|DWORD + 15] size: DWORD  <||@
  Comment 536 426 MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 544 428 rbx|DWORD = LEA address: [rbx|DWORD + 16] size: DWORD  <||@
  Comment 547 430 JUMP ~outgoingValues: [] destination: B13 -> B12  <||@
  Comment 547 block B12 loop 1 depth 1 header:272|LoopBegin  <||@
  Comment 547 252 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 547 254 NOP  <||@
  Comment 548 256 NOP  <||@
  Comment 549 258 NOP  <||@
  Comment 550 260 NOP  <||@
  Comment 551 262 CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.19981064865370968 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD  <||@
  Comment 560 block B14 null  <||@
  Comment 560 432 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 560 434 NOP  <||@
  Comment 561 436 NOP  <||@
  Comment 562 438 NOP  <||@
  Comment 563 440 JUMP ~outgoingValues: [] destination: B14 -> B15  <||@
  Comment 568 block B16 loop 2 depth 1 header:292|LoopBegin  <||@
  Comment 568 454 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 576 456 NOP  <||@
  Comment 577 458 NOP  <||@
  Comment 578 460 NOP  <||@
  Comment 579 462 NOP  <||@
  Comment 580 464 NOP  <||@
  Comment 581 466 MOV x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 589 468 rbx|DWORD = INC value: rbx|DWORD size: DWORD  <||@
  Comment 591 470 JUMP ~outgoingValues: [] destination: B16 -> B15  <||@
  Comment 591 block B15 loop 2 depth 1 header:292|LoopBegin  <||@
  Comment 591 442 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 591 444 NOP  <||@
  Comment 592 446 NOP  <||@
  Comment 593 448 NOP  <||@
  Comment 594 450 NOP  <||@
  Comment 595 452 CMPBRANCH (x: rcx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD  <||@
  Comment 599 block B17 null  <||@
  Comment 599 472 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 599 474 NOP  <||@
  Comment 600 476 NOP  <||@
  Comment 601 478 NOP  <||@
  Comment 602 480 JUMP ~outgoingValues: [] destination: B17 -> B18  <||@
  Comment 602 block B18 null  <||@
  Comment 602 482 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 602 484 NOP  <||@
  Comment 603 486 NOP  <||@
  Comment 604 488 NOP  <||@
  Comment 605 490 NOP  <||@
  Comment 606 492 NOP  <||@
  Comment 607 494 NOP  <||@
  Comment 608 496 NOP  <||@
  Comment 609 498 NOP  <||@
  Comment 610 500 NOP  <||@
  Comment 611 502 rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 68] size: DWORD  <||@
  Comment 614 504 rdx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:68]  <||@
  Comment 614 [rsi:0]at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 614 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 621 506 rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 52] size: DWORD  <||@
  Comment 624 508 rcx|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 52] size: DWORD state [bci:68]  <||@
  Comment 624 [rsi:0]at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 624 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 631 510 r8|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:68]  <||@
  Comment 631 [rcx:0, rsi:0]at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 631 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 639 512 TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD  <||@
  Comment 647 block B19 null  <||@
  Comment 647 514 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 647 516 NOP  <||@
  Comment 648 518 NOP  <||@
  Comment 649 520 NOP  <||@
  Comment 650 522 NOP  <||@
  Comment 651 524 NOP  <||@
  Comment 652 526 NOP  <||@
  Comment 653 528 NOP  <||@
  Comment 654 530 NOP  <||@
  Comment 655 532 NOP  <||@
  Comment 656 534 NOP  <||@
  Comment 657 536 NOP  <||@
  Comment 658 538 NOP  <||@
  Comment 659 540 NOP  <||@
  Comment 660 542 NOP  <||@
  Comment 661 544 NOP  <||@
  Comment 662 546 NOP  <||@
  Comment 663 548 NOP  <||@
  Comment 664 550 NOP  <||@
  Comment 665 552 NOP  <||@
  Comment 666 554 NOP  <||@
  Comment 667 556 NOP  <||@
  Comment 668 558 NOP  <||@
  Comment 669 560 MOV x: [rsi|QWORD[.] + 24] y: 0 size: DWORD  <||@
  Comment 676 562 rdx|QWORD = MOVE input: long[140080475799552|0x7f6707000000]  <||@
  Comment 686 564 r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 140080475799552 shift: 0  <||@
  Comment 690 566 rbx|QWORD = MOV input: [r8|QWORD + 496] size: QWORD  <||@
  Comment 697 568 rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD  <||@
  Comment 701 570 rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD  <||@
  Comment 704 572 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3  <||@
  Comment 708 574 r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3  <||@
  Comment 715 576 r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 718 578 rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 721 580 rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 724 582 rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 727 584 stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 731 586 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:121]  <||@
  Comment 731 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 731 INLINE_INVOKE  <||@
  Comment 733 [stack:0]at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 741 588 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 2.9484609034069464E-5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD  <||@
  Comment 749 block B21 null  <||@
  Comment 749 606 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 749 608 NOP  <||@
  Comment 750 610 NOP  <||@
  Comment 751 612 NOP  <||@
  Comment 752 614 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 756 616 JUMP ~outgoingValues: [] destination: B21 -> B22  <||@
  Comment 756 block B22 null  <||@
  Comment 756 618 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 756 620 NOP  <||@
  Comment 757 622 NOP  <||@
  Comment 758 624 NOP  <||@
  Comment 759 626 NOP  <||@
  Comment 760 628 NOP  <||@
  Comment 761 630 NOP  <||@
  Comment 762 632 NOP  <||@
  Comment 763 634 NOP  <||@
  Comment 764 636 NOP  <||@
  Comment 765 638 NOP  <||@
  Comment 766 640 NOP  <||@
  Comment 767 642 NOP  <||@
  Comment 768 644 r10|DWORD = MOV input: [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 772 646 MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD) size: DWORD  <||@
  Comment 776 648 INC value: [rsi|QWORD[.] + 44] size: DWORD  <||@
  Comment 779 650 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93  <||@
  Comment 788 POLL_RETURN_FAR  <||@
  Comment 802 block B5 null  <||@
  Comment 802 138 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 802 140 NOP  <||@
  Comment 803 142 NOP  <||@
  Comment 804 144 NOP  <||@
  Comment 805 146 JUMP ~outgoingValues: [] destination: B5 -> B8  <||@
  Comment 810 block B3 null  <||@
  Comment 810 104 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 810 106 NOP  <||@
  Comment 811 108 NOP  <||@
  Comment 812 110 NOP  <||@
  Comment 813 112 JUMP ~outgoingValues: [] destination: B3 -> B18  <||@
  Comment 818 block B20 null  <||@
  Comment 818 590 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 818 592 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 822 594 NOP  <||@
  Comment 823 596 NOP  <||@
  Comment 824 598 NOP  <||@
  Comment 825 600 NOP  <||@
  Comment 826 602 MOV x: [rsi|QWORD[.] + 28] y: -1 size: DWORD  <||@
  Comment 833 604 JUMP ~outgoingValues: [] destination: B20 -> B22  <||@
  Comment 835 block B23 null  <||@
  Comment 835 652 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 835 654 NOP  <||@
  Comment 836 656 NOP  <||@
  Comment 837 658 NOP  <||@
  Comment 838 660 NOP  <||@
  Comment 839 662 NOP  <||@
  Comment 840 664 NOP  <||@
  Comment 841 666 NOP  <||@
  Comment 842 668 MOV x: [r15|QWORD + 1156] y: -68115 size: DWORD  <||@
  Comment 853 670 MOV x: [r15|QWORD + 1168] y: 660 size: QWORD  <||@
  Comment 864 672 DEOPT info [bci:68]  <||@
  Comment 864 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f678da335a8, value=140082329203066]:0x7f677578b17a}  <||@
  Comment 869 [rsi:0]at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 877 block B24 null  <||@
  Comment 877 674 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 877 676 NOP  <||@
  Comment 878 678 NOP  <||@
  Comment 879 680 NOP  <||@
  Comment 880 682 NOP  <||@
  Comment 881 684 NOP  <||@
  Comment 882 686 NOP  <||@
  Comment 883 688 NOP  <||@
  Comment 884 690 MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD  <||@
  Comment 895 692 MOV x: [r15|QWORD + 1168] y: 16024 size: QWORD  <||@
  Comment 906 694 DEOPT info [bci:44]  <||@
  Comment 906 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f678da335a8, value=140082329203066]:0x7f677578b17a}  <||@
  Comment 911 [rsi:0]at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 919 block B1 null  <||@
  Comment 919 42 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 919 44 NOP  <||@
  Comment 920 46 NOP  <||@
  Comment 921 48 NOP  <||@
  Comment 922 50 NOP  <||@
  Comment 923 52 NOP  <||@
  Comment 924 54 NOP  <||@
  Comment 925 56 NOP  <||@
  Comment 926 58 MOV x: [r15|QWORD + 1156] y: -66835 size: DWORD  <||@
  Comment 937 60 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 948 62 DEOPT info [bci:10]  <||@
  Comment 948 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f678da335a8, value=140082329203066]:0x7f677578b17a}  <||@
  Comment 953 [rsi:0]at java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 966 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f678da33598, value=140082329072160]:0x7f677576b220}  <||@
  Comment 991 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f678da335a0, value=140082329206784]:0x7f677578c000}  <||@
  Comment 1019 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f678da335a8, value=140082329203066]:0x7f677578b17a}  <||@
  Comment 1024 [rdx:0, rsi:0]at java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 1054 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f678da335a8, value=140082329203066]:0x7f677578b17a}  <||@
  Comment 1059 [rsi:0]at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 1089 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f678da335a8, value=140082329203066]:0x7f677578b17a}  <||@
  Comment 1094 [rsi:0]at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 1124 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f678da335a8, value=140082329203066]:0x7f677578b17a}  <||@
  Comment 1129 [rcx:0, rsi:0]at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 1137 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f67758c4e80:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1137 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1143 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f678da335b8, value=140082329202464]:0x7f677578af20}  <||@
  Comment 1143 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-3720[java.util.regex.Matcher.search(int)]"
  method "HotSpotCompilation-3720[java.util.regex.Matcher.search(int)]"
  date 1724248923733
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f6776635120 448b560849bc00000007677f00004d03d44d33e4493bc20f8543ff14ff66669089842400c0feff4883ec189041817f20030000000f858703000090909090909090909090909048896c2410448bd28b56388b0cd50c000000c6463000c64631004585d20f8c2e030000909090909090909090909090904489561c448b46244585c0450f4cc24489462485c90f849902000090909090909090448bc141ffc84d63c08bd9493bd80f87760200009090909083f9020f83b40200009090909090909090909090909090c704d510000000ffffffff83f90341b802000000440f42c148c1e203bb01000000e9220000006666660f1f840000000000666666900f1f40009090909090c7449a10ffffffffffc390909090443bc37fe89090909090448d41f0e9fd0000006666660f1f840000000000666666906666660f1f8400000000009090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090c7449a10ffffffff8bc3ffc0c7448210ffffffff8d4302c7448210ffffffff8d4303c7448210ffffffff8d4304c7448210ffffffff8d4305c7448210ffffffff8d4306c7448210ffffffff8d4307c7448210ffffffff8d4308c7448210ffffffff8d4309c7448210ffffffff8d430ac7448210ffffffff8d430bc7448210ffffffff8d430cc7448210ffffffff8d430dc7448210ffffffff8d430ec7448210ffffffff8d430fc7448210ffffffff8d5b1090909090443bc30f8f10ffffff909090e9170000000f1f8400000000009090909090c7449a10ffffffffffc3909090903bcb7fe99090909090909090909090908b56448b14d50c0000008b4e348b0ccd34000000448b04cd0800000085d20f85bc00000090909090909090909090909090909090909090909090c746180000000048ba00000007677f00004e8d0402498b98f0010000488b43408b563c48c1e103448bc249c1e0034c8bde488bf1498bd3418bca4c891c24ffd00f1f84000000000085c00f8445000000909090488b3424909090909090909090909090448b562044895624ff462c488b6c24104883c418493ba7500400000f87b0000000c3909090e992fdffff909090e928ffffff488b342490909090c7461cffffffffebb19090909090909041c78784040000edf5feff49c7879004000094020000e8f55c15ff0f1f8400000000009090909090909041c78784040000e56fffff49c78790040000983e0000e8cb5c15ff0f1f8400000000009090909090909041c78784040000edfafeff49c7879004000014000000e8a15c15ff0f1f84000000000048896c2410e8355d13ffe96afcfffff4488d0d3cffffff49898f68040000e9fc6a15fff441c78784040000f581ffff49c7879004000000000000e85a5c15ff0f1f84000000000041c78784040000f562ffff49c7879004000000000000e8375c15ff0f1f84000000000041c78784040000f556ffff49c7879004000000000000e8145c15ff0f1f84000000000041c78784040000f54cffff49c7879004000000000000e8f15b15ff0f1f840000000000e8eaf828fff4e8845915fff4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f678da335c8, value=140082329178240]:0x7f6775785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 75 28 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f94981 slotKind: QWORD  <||@
  Comment 75 30 r10|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 78 32 rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 56] size: DWORD  <||@
  Comment 81 34 rcx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 81 [rdx:0, rsi:0]at java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 81 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 88 36 MOVB x: [rsi|QWORD[.] + 48] y: 0 size: BYTE  <||@
  Comment 92 38 MOVB x: [rsi|QWORD[.] + 49] y: 0 size: BYTE  <||@
  Comment 96 40 TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 105 block B2 null  <||@
  Comment 105 64 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 105 66 NOP  <||@
  Comment 106 68 NOP  <||@
  Comment 107 70 NOP  <||@
  Comment 108 72 NOP  <||@
  Comment 109 74 NOP  <||@
  Comment 110 76 NOP  <||@
  Comment 111 78 NOP  <||@
  Comment 112 80 NOP  <||@
  Comment 113 82 NOP  <||@
  Comment 114 84 NOP  <||@
  Comment 115 86 NOP  <||@
  Comment 116 88 NOP  <||@
  Comment 117 90 NOP  <||@
  Comment 118 92 MOV (x: [rsi|QWORD[.] + 28], y: r10|DWORD) size: DWORD  <||@
  Comment 122 94 r8|DWORD = MOV input: [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 126 96 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 129 98 r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: <  <||@
  Comment 133 100 MOV (x: [rsi|QWORD[.] + 36], y: r8|DWORD) size: DWORD  <||@
  Comment 137 102 TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.04762978170136911 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 145 block B4 null  <||@
  Comment 145 114 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 145 116 NOP  <||@
  Comment 146 118 NOP  <||@
  Comment 147 120 NOP  <||@
  Comment 148 122 NOP  <||@
  Comment 149 124 NOP  <||@
  Comment 150 126 NOP  <||@
  Comment 151 128 NOP  <||@
  Comment 152 130 r8|DWORD = DEC value: rcx|DWORD size: DWORD  <||@
  Comment 158 132 r8|QWORD = MOVSXD value: r8|DWORD size: QWORD  <||@
  Comment 161 134 rbx|QWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 163 136 CMPBRANCH (x: rbx|QWORD, y: r8|QWORD) trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD  <||@
  Comment 172 block B6 null  <||@
  Comment 172 148 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 172 150 NOP  <||@
  Comment 173 152 NOP  <||@
  Comment 174 154 NOP  <||@
  Comment 175 156 NOP  <||@
  Comment 176 158 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B6 -> B7 falseDestination: B6 -> B24 y: 2 size: DWORD inlinedY: null  <||@
  Comment 185 block B7 null  <||@
  Comment 185 160 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 185 162 NOP  <||@
  Comment 186 164 NOP  <||@
  Comment 187 166 NOP  <||@
  Comment 188 168 JUMP ~outgoingValues: [] destination: B7 -> B8  <||@
  Comment 188 block B8 null  <||@
  Comment 188 170 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 188 172 NOP  <||@
  Comment 189 174 NOP  <||@
  Comment 190 176 NOP  <||@
  Comment 191 178 NOP  <||@
  Comment 192 180 NOP  <||@
  Comment 193 182 NOP  <||@
  Comment 194 184 NOP  <||@
  Comment 195 186 NOP  <||@
  Comment 196 188 NOP  <||@
  Comment 197 190 NOP  <||@
  Comment 198 192 NOP  <||@
  Comment 199 194 MOV x: [rdx|DWORD[_] * 8 + 16] y: -1 size: DWORD  <||@
  Comment 210 196 CMP x: rcx|DWORD y: 3 size: DWORD  <||@
  Comment 213 198 r8|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: rcx|DWORD) condition: |<|  <||@
  Comment 223 200 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3  <||@
  Comment 227 202 rbx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 232 204 JUMP ~outgoingValues: [] destination: B8 -> B9  <||@
  Comment 237 block B10 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 237 218 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 256 220 NOP  <||@
  Comment 257 222 NOP  <||@
  Comment 258 224 NOP  <||@
  Comment 259 226 NOP  <||@
  Comment 260 228 NOP  <||@
  Comment 261 230 MOV x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 269 232 rbx|DWORD = INC value: rbx|DWORD size: DWORD  <||@
  Comment 271 234 JUMP ~outgoingValues: [] destination: B10 -> B9  <||@
  Comment 271 block B9 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 271 206 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 271 208 NOP  <||@
  Comment 272 210 NOP  <||@
  Comment 273 212 NOP  <||@
  Comment 274 214 NOP  <||@
  Comment 275 216 CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: DWORD  <||@
  Comment 280 block B11 null  <||@
  Comment 280 236 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 280 238 NOP  <||@
  Comment 281 240 NOP  <||@
  Comment 282 242 NOP  <||@
  Comment 283 244 NOP  <||@
  Comment 284 246 NOP  <||@
  Comment 285 248 r8|DWORD = LEA address: [rcx|DWORD - 16] size: DWORD  <||@
  Comment 289 250 JUMP ~outgoingValues: [] destination: B11 -> B12  <||@
  Comment 294 block B13 loop 1 depth 1 header:272|LoopBegin  <||@
  Comment 294 264 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 320 266 NOP  <||@
  Comment 321 268 NOP  <||@
  Comment 322 270 NOP  <||@
  Comment 323 272 NOP  <||@
  Comment 324 274 NOP  <||@
  Comment 325 276 NOP  <||@
  Comment 326 278 NOP  <||@
  Comment 327 280 NOP  <||@
  Comment 328 282 NOP  <||@
  Comment 329 284 NOP  <||@
  Comment 330 286 NOP  <||@
  Comment 331 288 NOP  <||@
  Comment 332 290 NOP  <||@
  Comment 333 292 NOP  <||@
  Comment 334 294 NOP  <||@
  Comment 335 296 NOP  <||@
  Comment 336 298 NOP  <||@
  Comment 337 300 NOP  <||@
  Comment 338 302 NOP  <||@
  Comment 339 304 NOP  <||@
  Comment 340 306 NOP  <||@
  Comment 341 308 NOP  <||@
  Comment 342 310 NOP  <||@
  Comment 343 312 NOP  <||@
  Comment 344 314 NOP  <||@
  Comment 345 316 NOP  <||@
  Comment 346 318 NOP  <||@
  Comment 347 320 NOP  <||@
  Comment 348 322 NOP  <||@
  Comment 349 324 NOP  <||@
  Comment 350 326 NOP  <||@
  Comment 351 328 NOP  <||@
  Comment 352 330 NOP  <||@
  Comment 353 332 NOP  <||@
  Comment 354 334 NOP  <||@
  Comment 355 336 NOP  <||@
  Comment 356 338 NOP  <||@
  Comment 357 340 NOP  <||@
  Comment 358 342 NOP  <||@
  Comment 359 344 NOP  <||@
  Comment 360 346 NOP  <||@
  Comment 361 348 NOP  <||@
  Comment 362 350 NOP  <||@
  Comment 363 352 NOP  <||@
  Comment 364 354 NOP  <||@
  Comment 365 356 NOP  <||@
  Comment 366 358 NOP  <||@
  Comment 367 360 NOP  <||@
  Comment 368 362 NOP  <||@
  Comment 369 364 NOP  <||@
  Comment 370 366 MOV x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 378 368 rax|DWORD = INC value: rbx|DWORD size: DWORD  <||@
  Comment 382 370 MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 390 372 rax|DWORD = LEA address: [rbx|DWORD + 2] size: DWORD  <||@
  Comment 393 374 MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 401 376 rax|DWORD = LEA address: [rbx|DWORD + 3] size: DWORD  <||@
  Comment 404 378 MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 412 380 rax|DWORD = LEA address: [rbx|DWORD + 4] size: DWORD  <||@
  Comment 415 382 MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 423 384 rax|DWORD = LEA address: [rbx|DWORD + 5] size: DWORD  <||@
  Comment 426 386 MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 434 388 rax|DWORD = LEA address: [rbx|DWORD + 6] size: DWORD  <||@
  Comment 437 390 MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 445 392 rax|DWORD = LEA address: [rbx|DWORD + 7] size: DWORD  <||@
  Comment 448 394 MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 456 396 rax|DWORD = LEA address: [rbx|DWORD + 8] size: DWORD  <||@
  Comment 459 398 MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 467 400 rax|DWORD = LEA address: [rbx|DWORD + 9] size: DWORD  <||@
  Comment 470 402 MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 478 404 rax|DWORD = LEA address: [rbx|DWORD + 10] size: DWORD  <||@
  Comment 481 406 MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 489 408 rax|DWORD = LEA address: [rbx|DWORD + 11] size: DWORD  <||@
  Comment 492 410 MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 500 412 rax|DWORD = LEA address: [rbx|DWORD + 12] size: DWORD  <||@
  Comment 503 414 MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 511 416 rax|DWORD = LEA address: [rbx|DWORD + 13] size: DWORD  <||@
  Comment 514 418 MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 522 420 rax|DWORD = LEA address: [rbx|DWORD + 14] size: DWORD  <||@
  Comment 525 422 MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 533 424 rax|DWORD = LEA address: [rbx|DWORD + 15] size: DWORD  <||@
  Comment 536 426 MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 544 428 rbx|DWORD = LEA address: [rbx|DWORD + 16] size: DWORD  <||@
  Comment 547 430 JUMP ~outgoingValues: [] destination: B13 -> B12  <||@
  Comment 547 block B12 loop 1 depth 1 header:272|LoopBegin  <||@
  Comment 547 252 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 547 254 NOP  <||@
  Comment 548 256 NOP  <||@
  Comment 549 258 NOP  <||@
  Comment 550 260 NOP  <||@
  Comment 551 262 CMPBRANCH (x: r8|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.19981064865370968 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD  <||@
  Comment 560 block B14 null  <||@
  Comment 560 432 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 560 434 NOP  <||@
  Comment 561 436 NOP  <||@
  Comment 562 438 NOP  <||@
  Comment 563 440 JUMP ~outgoingValues: [] destination: B14 -> B15  <||@
  Comment 568 block B16 loop 2 depth 1 header:292|LoopBegin  <||@
  Comment 568 454 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 576 456 NOP  <||@
  Comment 577 458 NOP  <||@
  Comment 578 460 NOP  <||@
  Comment 579 462 NOP  <||@
  Comment 580 464 NOP  <||@
  Comment 581 466 MOV x: [rdx|QWORD[.] + rbx|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 589 468 rbx|DWORD = INC value: rbx|DWORD size: DWORD  <||@
  Comment 591 470 JUMP ~outgoingValues: [] destination: B16 -> B15  <||@
  Comment 591 block B15 loop 2 depth 1 header:292|LoopBegin  <||@
  Comment 591 442 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 591 444 NOP  <||@
  Comment 592 446 NOP  <||@
  Comment 593 448 NOP  <||@
  Comment 594 450 NOP  <||@
  Comment 595 452 CMPBRANCH (x: rcx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: DWORD  <||@
  Comment 599 block B17 null  <||@
  Comment 599 472 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 599 474 NOP  <||@
  Comment 600 476 NOP  <||@
  Comment 601 478 NOP  <||@
  Comment 602 480 JUMP ~outgoingValues: [] destination: B17 -> B18  <||@
  Comment 602 block B18 null  <||@
  Comment 602 482 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 602 484 NOP  <||@
  Comment 603 486 NOP  <||@
  Comment 604 488 NOP  <||@
  Comment 605 490 NOP  <||@
  Comment 606 492 NOP  <||@
  Comment 607 494 NOP  <||@
  Comment 608 496 NOP  <||@
  Comment 609 498 NOP  <||@
  Comment 610 500 NOP  <||@
  Comment 611 502 rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 68] size: DWORD  <||@
  Comment 614 504 rdx|DWORD = MOV input: [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:68]  <||@
  Comment 614 [rsi:0]at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 614 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 621 506 rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 52] size: DWORD  <||@
  Comment 624 508 rcx|DWORD[_] = MOV input: [rcx|DWORD[_] * 8 + 52] size: DWORD state [bci:68]  <||@
  Comment 624 [rsi:0]at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 624 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 631 510 r8|DWORD = MOV input: [rcx|DWORD[_] * 8 + 8] size: DWORD state [bci:68]  <||@
  Comment 631 [rcx:0, rsi:0]at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 631 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 639 512 TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B23 size: DWORD  <||@
  Comment 647 block B19 null  <||@
  Comment 647 514 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 647 516 NOP  <||@
  Comment 648 518 NOP  <||@
  Comment 649 520 NOP  <||@
  Comment 650 522 NOP  <||@
  Comment 651 524 NOP  <||@
  Comment 652 526 NOP  <||@
  Comment 653 528 NOP  <||@
  Comment 654 530 NOP  <||@
  Comment 655 532 NOP  <||@
  Comment 656 534 NOP  <||@
  Comment 657 536 NOP  <||@
  Comment 658 538 NOP  <||@
  Comment 659 540 NOP  <||@
  Comment 660 542 NOP  <||@
  Comment 661 544 NOP  <||@
  Comment 662 546 NOP  <||@
  Comment 663 548 NOP  <||@
  Comment 664 550 NOP  <||@
  Comment 665 552 NOP  <||@
  Comment 666 554 NOP  <||@
  Comment 667 556 NOP  <||@
  Comment 668 558 NOP  <||@
  Comment 669 560 MOV x: [rsi|QWORD[.] + 24] y: 0 size: DWORD  <||@
  Comment 676 562 rdx|QWORD = MOVE input: long[140080475799552|0x7f6707000000]  <||@
  Comment 686 564 r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 140080475799552 shift: 0  <||@
  Comment 690 566 rbx|QWORD = MOV input: [r8|QWORD + 496] size: QWORD  <||@
  Comment 697 568 rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD  <||@
  Comment 701 570 rdx|DWORD[_] = MOV input: [rsi|QWORD[.] + 60] size: DWORD  <||@
  Comment 704 572 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3  <||@
  Comment 708 574 r8|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@7edcf292 encoding: base: 0 shift: 3  <||@
  Comment 715 576 r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 718 578 rsi|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 721 580 rdx|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 724 582 rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 727 584 stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 731 586 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> state [bci:121]  <||@
  Comment 731 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 731 INLINE_INVOKE  <||@
  Comment 733 [stack:0]at java.util.regex.Matcher.search(Matcher.java:1767) [bci: 121, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |-   <||@
  Comment 741 588 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 2.9484609034069464E-5 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD  <||@
  Comment 749 block B21 null  <||@
  Comment 749 606 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 749 608 NOP  <||@
  Comment 750 610 NOP  <||@
  Comment 751 612 NOP  <||@
  Comment 752 614 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 756 616 JUMP ~outgoingValues: [] destination: B21 -> B22  <||@
  Comment 756 block B22 null  <||@
  Comment 756 618 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 756 620 NOP  <||@
  Comment 757 622 NOP  <||@
  Comment 758 624 NOP  <||@
  Comment 759 626 NOP  <||@
  Comment 760 628 NOP  <||@
  Comment 761 630 NOP  <||@
  Comment 762 632 NOP  <||@
  Comment 763 634 NOP  <||@
  Comment 764 636 NOP  <||@
  Comment 765 638 NOP  <||@
  Comment 766 640 NOP  <||@
  Comment 767 642 NOP  <||@
  Comment 768 644 r10|DWORD = MOV input: [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 772 646 MOV (x: [rsi|QWORD[.] + 36], y: r10|DWORD) size: DWORD  <||@
  Comment 776 648 INC value: [rsi|QWORD[.] + 44] size: DWORD  <||@
  Comment 779 650 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@42c4cf93  <||@
  Comment 788 POLL_RETURN_FAR  <||@
  Comment 802 block B5 null  <||@
  Comment 802 138 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 802 140 NOP  <||@
  Comment 803 142 NOP  <||@
  Comment 804 144 NOP  <||@
  Comment 805 146 JUMP ~outgoingValues: [] destination: B5 -> B8  <||@
  Comment 810 block B3 null  <||@
  Comment 810 104 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 810 106 NOP  <||@
  Comment 811 108 NOP  <||@
  Comment 812 110 NOP  <||@
  Comment 813 112 JUMP ~outgoingValues: [] destination: B3 -> B18  <||@
  Comment 818 block B20 null  <||@
  Comment 818 590 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 818 592 rsi|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 822 594 NOP  <||@
  Comment 823 596 NOP  <||@
  Comment 824 598 NOP  <||@
  Comment 825 600 NOP  <||@
  Comment 826 602 MOV x: [rsi|QWORD[.] + 28] y: -1 size: DWORD  <||@
  Comment 833 604 JUMP ~outgoingValues: [] destination: B20 -> B22  <||@
  Comment 835 block B23 null  <||@
  Comment 835 652 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 835 654 NOP  <||@
  Comment 836 656 NOP  <||@
  Comment 837 658 NOP  <||@
  Comment 838 660 NOP  <||@
  Comment 839 662 NOP  <||@
  Comment 840 664 NOP  <||@
  Comment 841 666 NOP  <||@
  Comment 842 668 MOV x: [r15|QWORD + 1156] y: -68115 size: DWORD  <||@
  Comment 853 670 MOV x: [r15|QWORD + 1168] y: 660 size: QWORD  <||@
  Comment 864 672 DEOPT info [bci:68]  <||@
  Comment 864 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f678da335a8, value=140082329203066]:0x7f677578b17a}  <||@
  Comment 869 [rsi:0]at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 877 block B24 null  <||@
  Comment 877 674 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 877 676 NOP  <||@
  Comment 878 678 NOP  <||@
  Comment 879 680 NOP  <||@
  Comment 880 682 NOP  <||@
  Comment 881 684 NOP  <||@
  Comment 882 686 NOP  <||@
  Comment 883 688 NOP  <||@
  Comment 884 690 MOV x: [r15|QWORD + 1156] y: -36891 size: DWORD  <||@
  Comment 895 692 MOV x: [r15|QWORD + 1168] y: 16024 size: QWORD  <||@
  Comment 906 694 DEOPT info [bci:44]  <||@
  Comment 906 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f678da335a8, value=140082329203066]:0x7f677578b17a}  <||@
  Comment 911 [rsi:0]at java.util.regex.Matcher.search(Matcher.java:1760) [bci: 44, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 919 block B1 null  <||@
  Comment 919 42 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 919 44 NOP  <||@
  Comment 920 46 NOP  <||@
  Comment 921 48 NOP  <||@
  Comment 922 50 NOP  <||@
  Comment 923 52 NOP  <||@
  Comment 924 54 NOP  <||@
  Comment 925 56 NOP  <||@
  Comment 926 58 MOV x: [r15|QWORD + 1156] y: -66835 size: DWORD  <||@
  Comment 937 60 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 948 62 DEOPT info [bci:10]  <||@
  Comment 948 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f678da335a8, value=140082329203066]:0x7f677578b17a}  <||@
  Comment 953 [rsi:0]at java.util.regex.Matcher.search(Matcher.java:1757) [bci: 10, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 966 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f678da33598, value=140082329072160]:0x7f677576b220}  <||@
  Comment 991 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f678da335a0, value=140082329206784]:0x7f677578c000}  <||@
  Comment 1019 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f678da335a8, value=140082329203066]:0x7f677578b17a}  <||@
  Comment 1024 [rdx:0, rsi:0]at java.util.regex.Matcher.search(Matcher.java:1755) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 1054 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f678da335a8, value=140082329203066]:0x7f677578b17a}  <||@
  Comment 1059 [rsi:0]at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 1089 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f678da335a8, value=140082329203066]:0x7f677578b17a}  <||@
  Comment 1094 [rsi:0]at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 1124 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f678da335a8, value=140082329203066]:0x7f677578b17a}  <||@
  Comment 1129 [rcx:0, rsi:0]at java.util.regex.Matcher.search(Matcher.java:1762) [bci: 68, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 1137 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f67758c4e80:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1137 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1143 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f678da335b8, value=140082329202464]:0x7f677578af20}  <||@
  Comment 1143 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
