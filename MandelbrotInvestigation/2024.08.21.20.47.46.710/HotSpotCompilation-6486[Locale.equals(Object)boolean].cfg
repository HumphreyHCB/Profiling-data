begin_compilation
  name " HotSpotCompilation-6486[java.util.Locale.equals(Object)]"
  method "HotSpotCompilation-6486[java.util.Locale.equals(Object)]"
  date 1724269754377
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v11 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v11  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.Locale
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v4 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a java.lang.Object
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v4 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v4 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Locale.equals(Locale.java:2312) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1 
y: a2 
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a1 y: a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Locale.equals(Locale.java:2312) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v4 
=== Succesors ===
trueSuccessor: v9 
falseSuccessor: v10 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v4 #trueSuccessor: v9 #falseSuccessor: v10  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Locale.equals(Locale.java:2313) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v7 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v7  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Locale.equals(Locale.java:2313) [bci: 5]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Locale.equals(Locale.java:2313) [bci: 6]
stamp: void
=== Inputs ===
memoryMap: - 
result: i6 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i6  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Locale.equals(Locale.java:2312) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v8 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v8  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Locale.equals(Object)>
localsSize: 3
locksSize: 0
sourceFile: Locale.java
sourceLine: 2312
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.Locale.equals(Locale.java:2312) [bci: 2]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0x5fdbb341]: UnreachedCode@6[HotSpotMethod<Locale.equals(Object)>, 7]}
stamp: void
=== Inputs ===
stateBefore: ?3 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?3  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@487b1d7f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -2067 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Locale.equals(Locale.java:2312) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_1       
     8: instanceof    #7          // java.util.Locale
    11: ifne          16
    14: iconst_0      
    15: ireturn       
    16: aload_1       
    17: checkcast     #7          // java.util.Locale
    20: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    23: astore_2      
    24: aload_0       
    25: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    28: aload_2       
    29: invokevirtual #147        // sun.util.locale.BaseLocale.equals:(java.lang.Object)boolean
    32: ifne          37
    35: iconst_0      
    36: ireturn       
    37: aload_0       
    38: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    41: ifnonnull     60
    44: aload_1       
    45: checkcast     #7          // java.util.Locale
    48: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    51: ifnonnull     58
    54: iconst_1      
    55: goto          59
    58: iconst_0      
    59: ireturn       
    60: aload_0       
    61: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    64: aload_1       
    65: checkcast     #7          // java.util.Locale
    68: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    71: invokevirtual #148        // sun.util.locale.LocaleExtensions.equals:(java.lang.Object)boolean
    74: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v11 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v11  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.Locale
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v4 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a java.lang.Object
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v4 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v4 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Locale.equals(Locale.java:2312) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1 
y: a2 
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a1 y: a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Locale.equals(Locale.java:2312) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v4 
=== Succesors ===
trueSuccessor: v9 
falseSuccessor: v10 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v4 #trueSuccessor: v9 #falseSuccessor: v10  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@487b1d7f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Locale.equals(Locale.java:2313) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v7 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v7  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Locale.equals(Locale.java:2313) [bci: 5]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Locale.equals(Locale.java:2313) [bci: 6]
stamp: void
=== Inputs ===
memoryMap: - 
result: i6 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i6  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Locale.equals(Locale.java:2312) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v8 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v8  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Locale.equals(Object)>
localsSize: 3
locksSize: 0
sourceFile: Locale.java
sourceLine: 2312
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v8 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at java.util.Locale.equals(Locale.java:2312) [bci: 2]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0x5fdbb341]: UnreachedCode@6[HotSpotMethod<Locale.equals(Object)>, 7]}
stamp: void
=== Inputs ===
stateBefore: ?3 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?3  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -2067 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Locale.equals(Locale.java:2312) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@487b1d7f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -2067 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Locale.equals(Locale.java:2312) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_1       
     8: instanceof    #7          // java.util.Locale
    11: ifne          16
    14: iconst_0      
    15: ireturn       
    16: aload_1       
    17: checkcast     #7          // java.util.Locale
    20: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    23: astore_2      
    24: aload_0       
    25: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    28: aload_2       
    29: invokevirtual #147        // sun.util.locale.BaseLocale.equals:(java.lang.Object)boolean
    32: ifne          37
    35: iconst_0      
    36: ireturn       
    37: aload_0       
    38: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    41: ifnonnull     60
    44: aload_1       
    45: checkcast     #7          // java.util.Locale
    48: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    51: ifnonnull     58
    54: iconst_1      
    55: goto          59
    58: iconst_0      
    59: ireturn       
    60: aload_0       
    61: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    64: aload_1       
    65: checkcast     #7          // java.util.Locale
    68: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    71: invokevirtual #148        // sun.util.locale.LocaleExtensions.equals:(java.lang.Object)boolean
    74: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@487b1d7f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -2067 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Locale.equals(Locale.java:2312) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_1       
     8: instanceof    #7          // java.util.Locale
    11: ifne          16
    14: iconst_0      
    15: ireturn       
    16: aload_1       
    17: checkcast     #7          // java.util.Locale
    20: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    23: astore_2      
    24: aload_0       
    25: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    28: aload_2       
    29: invokevirtual #147        // sun.util.locale.BaseLocale.equals:(java.lang.Object)boolean
    32: ifne          37
    35: iconst_0      
    36: ireturn       
    37: aload_0       
    38: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    41: ifnonnull     60
    44: aload_1       
    45: checkcast     #7          // java.util.Locale
    48: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    51: ifnonnull     58
    54: iconst_1      
    55: goto          59
    58: iconst_0      
    59: ireturn       
    60: aload_0       
    61: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    64: aload_1       
    65: checkcast     #7          // java.util.Locale
    68: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    71: invokevirtual #148        // sun.util.locale.LocaleExtensions.equals:(java.lang.Object)boolean
    74: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@487b1d7f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -2067 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Locale.equals(Locale.java:2312) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_1       
     8: instanceof    #7          // java.util.Locale
    11: ifne          16
    14: iconst_0      
    15: ireturn       
    16: aload_1       
    17: checkcast     #7          // java.util.Locale
    20: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    23: astore_2      
    24: aload_0       
    25: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    28: aload_2       
    29: invokevirtual #147        // sun.util.locale.BaseLocale.equals:(java.lang.Object)boolean
    32: ifne          37
    35: iconst_0      
    36: ireturn       
    37: aload_0       
    38: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    41: ifnonnull     60
    44: aload_1       
    45: checkcast     #7          // java.util.Locale
    48: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    51: ifnonnull     58
    54: iconst_1      
    55: goto          59
    58: iconst_0      
    59: ireturn       
    60: aload_0       
    61: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    64: aload_1       
    65: checkcast     #7          // java.util.Locale
    68: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    71: invokevirtual #148        // sun.util.locale.LocaleExtensions.equals:(java.lang.Object)boolean
    74: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@487b1d7f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -2067 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Locale.equals(Locale.java:2312) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_1       
     8: instanceof    #7          // java.util.Locale
    11: ifne          16
    14: iconst_0      
    15: ireturn       
    16: aload_1       
    17: checkcast     #7          // java.util.Locale
    20: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    23: astore_2      
    24: aload_0       
    25: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    28: aload_2       
    29: invokevirtual #147        // sun.util.locale.BaseLocale.equals:(java.lang.Object)boolean
    32: ifne          37
    35: iconst_0      
    36: ireturn       
    37: aload_0       
    38: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    41: ifnonnull     60
    44: aload_1       
    45: checkcast     #7          // java.util.Locale
    48: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    51: ifnonnull     58
    54: iconst_1      
    55: goto          59
    58: iconst_0      
    59: ireturn       
    60: aload_0       
    61: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    64: aload_1       
    65: checkcast     #7          // java.util.Locale
    68: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    71: invokevirtual #148        // sun.util.locale.LocaleExtensions.equals:(java.lang.Object)boolean
    74: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@487b1d7f slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -2067 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Locale.equals(Locale.java:2312) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_1       
     8: instanceof    #7          // java.util.Locale
    11: ifne          16
    14: iconst_0      
    15: ireturn       
    16: aload_1       
    17: checkcast     #7          // java.util.Locale
    20: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    23: astore_2      
    24: aload_0       
    25: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    28: aload_2       
    29: invokevirtual #147        // sun.util.locale.BaseLocale.equals:(java.lang.Object)boolean
    32: ifne          37
    35: iconst_0      
    36: ireturn       
    37: aload_0       
    38: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    41: ifnonnull     60
    44: aload_1       
    45: checkcast     #7          // java.util.Locale
    48: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    51: ifnonnull     58
    54: iconst_1      
    55: goto          59
    58: iconst_0      
    59: ireturn       
    60: aload_0       
    61: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    64: aload_1       
    65: checkcast     #7          // java.util.Locale
    68: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    71: invokevirtual #148        // sun.util.locale.LocaleExtensions.equals:(java.lang.Object)boolean
    74: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@487b1d7f slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction CMPBRANCH (x: v1|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction MOV x: [r15|QWORD + 1156] y: -2067 size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.util.Locale.equals(Locale.java:2312) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_1       
     8: instanceof    #7          // java.util.Locale
    11: ifne          16
    14: iconst_0      
    15: ireturn       
    16: aload_1       
    17: checkcast     #7          // java.util.Locale
    20: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    23: astore_2      
    24: aload_0       
    25: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    28: aload_2       
    29: invokevirtual #147        // sun.util.locale.BaseLocale.equals:(java.lang.Object)boolean
    32: ifne          37
    35: iconst_0      
    36: ireturn       
    37: aload_0       
    38: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    41: ifnonnull     60
    44: aload_1       
    45: checkcast     #7          // java.util.Locale
    48: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    51: ifnonnull     58
    54: iconst_1      
    55: goto          59
    58: iconst_0      
    59: ireturn       
    60: aload_0       
    61: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    64: aload_1       
    65: checkcast     #7          // java.util.Locale
    68: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    71: invokevirtual #148        // sun.util.locale.LocaleExtensions.equals:(java.lang.Object)boolean
    74: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@487b1d7f slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction CMPBRANCH (x: v1|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction MOV x: [r15|QWORD + 1156] y: -2067 size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.util.Locale.equals(Locale.java:2312) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_1       
     8: instanceof    #7          // java.util.Locale
    11: ifne          16
    14: iconst_0      
    15: ireturn       
    16: aload_1       
    17: checkcast     #7          // java.util.Locale
    20: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    23: astore_2      
    24: aload_0       
    25: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    28: aload_2       
    29: invokevirtual #147        // sun.util.locale.BaseLocale.equals:(java.lang.Object)boolean
    32: ifne          37
    35: iconst_0      
    36: ireturn       
    37: aload_0       
    38: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    41: ifnonnull     60
    44: aload_1       
    45: checkcast     #7          // java.util.Locale
    48: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    51: ifnonnull     58
    54: iconst_1      
    55: goto          59
    58: iconst_0      
    59: ireturn       
    60: aload_0       
    61: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    64: aload_1       
    65: checkcast     #7          // java.util.Locale
    68: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    71: invokevirtual #148        // sun.util.locale.LocaleExtensions.equals:(java.lang.Object)boolean
    74: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d -1 [0, 1[[46, 48[ "NoSpillStore"
  rdx|q fixed "[rdx|q]" rdx|q -1 [0, 24[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 18[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 22[ "NoSpillStore"
  v0|q QWORD "[v0|q]" v0|q rsi|q [22, 28[[50, 71[22 MustHaveRegister 26 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|q [24, 28[[50, 71[24 MustHaveRegister 26 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d -1 [0, 1[[46, 48[ "NoSpillStore"
  rdx|q fixed "[rdx|q]" rdx|q -1 [0, 24[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 18[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 22[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [22, 28[[50, 71[22 MustHaveRegister 26 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|q [24, 28[[50, 71[24 MustHaveRegister 26 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@487b1d7f slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction CMPBRANCH (x: v1|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction MOV x: [r15|QWORD + 1156] y: -2067 size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.util.Locale.equals(Locale.java:2312) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_1       
     8: instanceof    #7          // java.util.Locale
    11: ifne          16
    14: iconst_0      
    15: ireturn       
    16: aload_1       
    17: checkcast     #7          // java.util.Locale
    20: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    23: astore_2      
    24: aload_0       
    25: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    28: aload_2       
    29: invokevirtual #147        // sun.util.locale.BaseLocale.equals:(java.lang.Object)boolean
    32: ifne          37
    35: iconst_0      
    36: ireturn       
    37: aload_0       
    38: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    41: ifnonnull     60
    44: aload_1       
    45: checkcast     #7          // java.util.Locale
    48: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    51: ifnonnull     58
    54: iconst_1      
    55: goto          59
    58: iconst_0      
    59: ireturn       
    60: aload_0       
    61: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    64: aload_1       
    65: checkcast     #7          // java.util.Locale
    68: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    71: invokevirtual #148        // sun.util.locale.LocaleExtensions.equals:(java.lang.Object)boolean
    74: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d -1 [0, 1[[46, 48[ "NoSpillStore"
  rdx|q fixed "[rdx|q]" rdx|q -1 [0, 24[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 18[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 22[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [22, 28[[50, 71[22 MustHaveRegister 26 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|q [24, 28[[50, 71[24 MustHaveRegister 26 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@487b1d7f slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction CMPBRANCH (x: v1|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction MOV x: [r15|QWORD + 1156] y: -2067 size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.util.Locale.equals(Locale.java:2312) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_1       
     8: instanceof    #7          // java.util.Locale
    11: ifne          16
    14: iconst_0      
    15: ireturn       
    16: aload_1       
    17: checkcast     #7          // java.util.Locale
    20: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    23: astore_2      
    24: aload_0       
    25: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    28: aload_2       
    29: invokevirtual #147        // sun.util.locale.BaseLocale.equals:(java.lang.Object)boolean
    32: ifne          37
    35: iconst_0      
    36: ireturn       
    37: aload_0       
    38: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    41: ifnonnull     60
    44: aload_1       
    45: checkcast     #7          // java.util.Locale
    48: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    51: ifnonnull     58
    54: iconst_1      
    55: goto          59
    58: iconst_0      
    59: ireturn       
    60: aload_0       
    61: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    64: aload_1       
    65: checkcast     #7          // java.util.Locale
    68: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    71: invokevirtual #148        // sun.util.locale.LocaleExtensions.equals:(java.lang.Object)boolean
    74: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d -1 [0, 1[[46, 48[ "NoSpillStore"
  rdx|q fixed "[rdx|q]" rdx|q -1 [0, 24[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 18[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 22[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [22, 28[[50, 71[22 MustHaveRegister 26 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|q [24, 28[[50, 71[24 MustHaveRegister 26 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@487b1d7f slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction CMPBRANCH (x: v1|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction MOV x: [r15|QWORD + 1156] y: -2067 size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.util.Locale.equals(Locale.java:2312) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_1       
     8: instanceof    #7          // java.util.Locale
    11: ifne          16
    14: iconst_0      
    15: ireturn       
    16: aload_1       
    17: checkcast     #7          // java.util.Locale
    20: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    23: astore_2      
    24: aload_0       
    25: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    28: aload_2       
    29: invokevirtual #147        // sun.util.locale.BaseLocale.equals:(java.lang.Object)boolean
    32: ifne          37
    35: iconst_0      
    36: ireturn       
    37: aload_0       
    38: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    41: ifnonnull     60
    44: aload_1       
    45: checkcast     #7          // java.util.Locale
    48: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    51: ifnonnull     58
    54: iconst_1      
    55: goto          59
    58: iconst_0      
    59: ireturn       
    60: aload_0       
    61: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    64: aload_1       
    65: checkcast     #7          // java.util.Locale
    68: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    71: invokevirtual #148        // sun.util.locale.LocaleExtensions.equals:(java.lang.Object)boolean
    74: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@487b1d7f slotKind: QWORD <|@ <|@
      nr   22  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction CMPBRANCH (x: v1|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction MOV x: [r15|QWORD + 1156] y: -2067 size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.util.Locale.equals(Locale.java:2312) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_1       
     8: instanceof    #7          // java.util.Locale
    11: ifne          16
    14: iconst_0      
    15: ireturn       
    16: aload_1       
    17: checkcast     #7          // java.util.Locale
    20: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    23: astore_2      
    24: aload_0       
    25: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    28: aload_2       
    29: invokevirtual #147        // sun.util.locale.BaseLocale.equals:(java.lang.Object)boolean
    32: ifne          37
    35: iconst_0      
    36: ireturn       
    37: aload_0       
    38: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    41: ifnonnull     60
    44: aload_1       
    45: checkcast     #7          // java.util.Locale
    48: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    51: ifnonnull     58
    54: iconst_1      
    55: goto          59
    58: iconst_0      
    59: ireturn       
    60: aload_0       
    61: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    64: aload_1       
    65: checkcast     #7          // java.util.Locale
    68: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    71: invokevirtual #148        // sun.util.locale.LocaleExtensions.equals:(java.lang.Object)boolean
    74: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@487b1d7f slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction MOV x: [r15|QWORD + 1156] y: -2067 size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.util.Locale.equals(Locale.java:2312) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_1       
     8: instanceof    #7          // java.util.Locale
    11: ifne          16
    14: iconst_0      
    15: ireturn       
    16: aload_1       
    17: checkcast     #7          // java.util.Locale
    20: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    23: astore_2      
    24: aload_0       
    25: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    28: aload_2       
    29: invokevirtual #147        // sun.util.locale.BaseLocale.equals:(java.lang.Object)boolean
    32: ifne          37
    35: iconst_0      
    36: ireturn       
    37: aload_0       
    38: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    41: ifnonnull     60
    44: aload_1       
    45: checkcast     #7          // java.util.Locale
    48: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    51: ifnonnull     58
    54: iconst_1      
    55: goto          59
    58: iconst_0      
    59: ireturn       
    60: aload_0       
    61: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    64: aload_1       
    65: checkcast     #7          // java.util.Locale
    68: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    71: invokevirtual #148        // sun.util.locale.LocaleExtensions.equals:(java.lang.Object)boolean
    74: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@487b1d7f slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction MOV x: [r15|QWORD + 1156] y: -2067 size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.util.Locale.equals(Locale.java:2312) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_1       
     8: instanceof    #7          // java.util.Locale
    11: ifne          16
    14: iconst_0      
    15: ireturn       
    16: aload_1       
    17: checkcast     #7          // java.util.Locale
    20: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    23: astore_2      
    24: aload_0       
    25: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    28: aload_2       
    29: invokevirtual #147        // sun.util.locale.BaseLocale.equals:(java.lang.Object)boolean
    32: ifne          37
    35: iconst_0      
    36: ireturn       
    37: aload_0       
    38: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    41: ifnonnull     60
    44: aload_1       
    45: checkcast     #7          // java.util.Locale
    48: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    51: ifnonnull     58
    54: iconst_1      
    55: goto          59
    58: iconst_0      
    59: ireturn       
    60: aload_0       
    61: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    64: aload_1       
    65: checkcast     #7          // java.util.Locale
    68: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    71: invokevirtual #148        // sun.util.locale.LocaleExtensions.equals:(java.lang.Object)boolean
    74: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@487b1d7f slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction MOV x: [r15|QWORD + 1156] y: -2067 size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.util.Locale.equals(Locale.java:2312) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_1       
     8: instanceof    #7          // java.util.Locale
    11: ifne          16
    14: iconst_0      
    15: ireturn       
    16: aload_1       
    17: checkcast     #7          // java.util.Locale
    20: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    23: astore_2      
    24: aload_0       
    25: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    28: aload_2       
    29: invokevirtual #147        // sun.util.locale.BaseLocale.equals:(java.lang.Object)boolean
    32: ifne          37
    35: iconst_0      
    36: ireturn       
    37: aload_0       
    38: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    41: ifnonnull     60
    44: aload_1       
    45: checkcast     #7          // java.util.Locale
    48: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    51: ifnonnull     58
    54: iconst_1      
    55: goto          59
    58: iconst_0      
    59: ireturn       
    60: aload_0       
    61: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    64: aload_1       
    65: checkcast     #7          // java.util.Locale
    68: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    71: invokevirtual #148        // sun.util.locale.LocaleExtensions.equals:(java.lang.Object)boolean
    74: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@487b1d7f slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction MOV x: [r15|QWORD + 1156] y: -2067 size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.util.Locale.equals(Locale.java:2312) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_1       
     8: instanceof    #7          // java.util.Locale
    11: ifne          16
    14: iconst_0      
    15: ireturn       
    16: aload_1       
    17: checkcast     #7          // java.util.Locale
    20: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    23: astore_2      
    24: aload_0       
    25: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    28: aload_2       
    29: invokevirtual #147        // sun.util.locale.BaseLocale.equals:(java.lang.Object)boolean
    32: ifne          37
    35: iconst_0      
    36: ireturn       
    37: aload_0       
    38: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    41: ifnonnull     60
    44: aload_1       
    45: checkcast     #7          // java.util.Locale
    48: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    51: ifnonnull     58
    54: iconst_1      
    55: goto          59
    58: iconst_0      
    59: ireturn       
    60: aload_0       
    61: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    64: aload_1       
    65: checkcast     #7          // java.util.Locale
    68: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    71: invokevirtual #148        // sun.util.locale.LocaleExtensions.equals:(java.lang.Object)boolean
    74: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@487b1d7f slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction MOV x: [r15|QWORD + 1156] y: -2067 size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.util.Locale.equals(Locale.java:2312) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_1       
     8: instanceof    #7          // java.util.Locale
    11: ifne          16
    14: iconst_0      
    15: ireturn       
    16: aload_1       
    17: checkcast     #7          // java.util.Locale
    20: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    23: astore_2      
    24: aload_0       
    25: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    28: aload_2       
    29: invokevirtual #147        // sun.util.locale.BaseLocale.equals:(java.lang.Object)boolean
    32: ifne          37
    35: iconst_0      
    36: ireturn       
    37: aload_0       
    38: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    41: ifnonnull     60
    44: aload_1       
    45: checkcast     #7          // java.util.Locale
    48: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    51: ifnonnull     58
    54: iconst_1      
    55: goto          59
    58: iconst_0      
    59: ireturn       
    60: aload_0       
    61: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    64: aload_1       
    65: checkcast     #7          // java.util.Locale
    68: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    71: invokevirtual #148        // sun.util.locale.LocaleExtensions.equals:(java.lang.Object)boolean
    74: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@487b1d7f slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction MOV x: [r15|QWORD + 1156] y: -2067 size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.util.Locale.equals(Locale.java:2312) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_1       
     8: instanceof    #7          // java.util.Locale
    11: ifne          16
    14: iconst_0      
    15: ireturn       
    16: aload_1       
    17: checkcast     #7          // java.util.Locale
    20: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    23: astore_2      
    24: aload_0       
    25: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    28: aload_2       
    29: invokevirtual #147        // sun.util.locale.BaseLocale.equals:(java.lang.Object)boolean
    32: ifne          37
    35: iconst_0      
    36: ireturn       
    37: aload_0       
    38: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    41: ifnonnull     60
    44: aload_1       
    45: checkcast     #7          // java.util.Locale
    48: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    51: ifnonnull     58
    54: iconst_1      
    55: goto          59
    58: iconst_0      
    59: ireturn       
    60: aload_0       
    61: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    64: aload_1       
    65: checkcast     #7          // java.util.Locale
    68: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    71: invokevirtual #148        // sun.util.locale.LocaleExtensions.equals:(java.lang.Object)boolean
    74: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@487b1d7f slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction MOV x: [r15|QWORD + 1156] y: -2067 size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.util.Locale.equals(Locale.java:2312) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_1       
     8: instanceof    #7          // java.util.Locale
    11: ifne          16
    14: iconst_0      
    15: ireturn       
    16: aload_1       
    17: checkcast     #7          // java.util.Locale
    20: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    23: astore_2      
    24: aload_0       
    25: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    28: aload_2       
    29: invokevirtual #147        // sun.util.locale.BaseLocale.equals:(java.lang.Object)boolean
    32: ifne          37
    35: iconst_0      
    36: ireturn       
    37: aload_0       
    38: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    41: ifnonnull     60
    44: aload_1       
    45: checkcast     #7          // java.util.Locale
    48: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    51: ifnonnull     58
    54: iconst_1      
    55: goto          59
    58: iconst_0      
    59: ireturn       
    60: aload_0       
    61: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    64: aload_1       
    65: checkcast     #7          // java.util.Locale
    68: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    71: invokevirtual #148        // sun.util.locale.LocaleExtensions.equals:(java.lang.Object)boolean
    74: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@487b1d7f slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction MOV x: [r15|QWORD + 1156] y: -2067 size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.util.Locale.equals(Locale.java:2312) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_1       
     8: instanceof    #7          // java.util.Locale
    11: ifne          16
    14: iconst_0      
    15: ireturn       
    16: aload_1       
    17: checkcast     #7          // java.util.Locale
    20: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    23: astore_2      
    24: aload_0       
    25: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    28: aload_2       
    29: invokevirtual #147        // sun.util.locale.BaseLocale.equals:(java.lang.Object)boolean
    32: ifne          37
    35: iconst_0      
    36: ireturn       
    37: aload_0       
    38: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    41: ifnonnull     60
    44: aload_1       
    45: checkcast     #7          // java.util.Locale
    48: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    51: ifnonnull     58
    54: iconst_1      
    55: goto          59
    58: iconst_0      
    59: ireturn       
    60: aload_0       
    61: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    64: aload_1       
    65: checkcast     #7          // java.util.Locale
    68: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    71: invokevirtual #148        // sun.util.locale.LocaleExtensions.equals:(java.lang.Object)boolean
    74: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@487b1d7f slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction MOV x: [r15|QWORD + 1156] y: -2067 size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.util.Locale.equals(Locale.java:2312) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_1       
     8: instanceof    #7          // java.util.Locale
    11: ifne          16
    14: iconst_0      
    15: ireturn       
    16: aload_1       
    17: checkcast     #7          // java.util.Locale
    20: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    23: astore_2      
    24: aload_0       
    25: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    28: aload_2       
    29: invokevirtual #147        // sun.util.locale.BaseLocale.equals:(java.lang.Object)boolean
    32: ifne          37
    35: iconst_0      
    36: ireturn       
    37: aload_0       
    38: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    41: ifnonnull     60
    44: aload_1       
    45: checkcast     #7          // java.util.Locale
    48: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    51: ifnonnull     58
    54: iconst_1      
    55: goto          59
    58: iconst_0      
    59: ireturn       
    60: aload_0       
    61: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    64: aload_1       
    65: checkcast     #7          // java.util.Locale
    68: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    71: invokevirtual #148        // sun.util.locale.LocaleExtensions.equals:(java.lang.Object)boolean
    74: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@487b1d7f slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction MOV x: [r15|QWORD + 1156] y: -2067 size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.util.Locale.equals(Locale.java:2312) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_1       
     8: instanceof    #7          // java.util.Locale
    11: ifne          16
    14: iconst_0      
    15: ireturn       
    16: aload_1       
    17: checkcast     #7          // java.util.Locale
    20: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    23: astore_2      
    24: aload_0       
    25: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    28: aload_2       
    29: invokevirtual #147        // sun.util.locale.BaseLocale.equals:(java.lang.Object)boolean
    32: ifne          37
    35: iconst_0      
    36: ireturn       
    37: aload_0       
    38: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    41: ifnonnull     60
    44: aload_1       
    45: checkcast     #7          // java.util.Locale
    48: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    51: ifnonnull     58
    54: iconst_1      
    55: goto          59
    58: iconst_0      
    59: ireturn       
    60: aload_0       
    61: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    64: aload_1       
    65: checkcast     #7          // java.util.Locale
    68: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    71: invokevirtual #148        // sun.util.locale.LocaleExtensions.equals:(java.lang.Object)boolean
    74: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@487b1d7f slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction MOV x: [r15|QWORD + 1156] y: -2067 size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.util.Locale.equals(Locale.java:2312) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_1       
     8: instanceof    #7          // java.util.Locale
    11: ifne          16
    14: iconst_0      
    15: ireturn       
    16: aload_1       
    17: checkcast     #7          // java.util.Locale
    20: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    23: astore_2      
    24: aload_0       
    25: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    28: aload_2       
    29: invokevirtual #147        // sun.util.locale.BaseLocale.equals:(java.lang.Object)boolean
    32: ifne          37
    35: iconst_0      
    36: ireturn       
    37: aload_0       
    38: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    41: ifnonnull     60
    44: aload_1       
    45: checkcast     #7          // java.util.Locale
    48: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    51: ifnonnull     58
    54: iconst_1      
    55: goto          59
    58: iconst_0      
    59: ireturn       
    60: aload_0       
    61: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    64: aload_1       
    65: checkcast     #7          // java.util.Locale
    68: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    71: invokevirtual #148        // sun.util.locale.LocaleExtensions.equals:(java.lang.Object)boolean
    74: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@487b1d7f slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction MOV x: [r15|QWORD + 1156] y: -2067 size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.Locale.equals(Locale.java:2312) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_1       
     8: instanceof    #7          // java.util.Locale
    11: ifne          16
    14: iconst_0      
    15: ireturn       
    16: aload_1       
    17: checkcast     #7          // java.util.Locale
    20: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    23: astore_2      
    24: aload_0       
    25: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    28: aload_2       
    29: invokevirtual #147        // sun.util.locale.BaseLocale.equals:(java.lang.Object)boolean
    32: ifne          37
    35: iconst_0      
    36: ireturn       
    37: aload_0       
    38: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    41: ifnonnull     60
    44: aload_1       
    45: checkcast     #7          // java.util.Locale
    48: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    51: ifnonnull     58
    54: iconst_1      
    55: goto          59
    58: iconst_0      
    59: ireturn       
    60: aload_0       
    61: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    64: aload_1       
    65: checkcast     #7          // java.util.Locale
    68: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    71: invokevirtual #148        // sun.util.locale.LocaleExtensions.equals:(java.lang.Object)boolean
    74: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@487b1d7f slotKind: QWORD <|@ <|@
      nr   26  <|@ instruction CMPBRANCH (x: rdx|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   48  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction MOV x: [r15|QWORD + 1156] y: -2067 size: DWORD <|@ <|@
      nr   68  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   70  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.Locale.equals(Locale.java:2312) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: if_acmpne     7
     5: iconst_1      
     6: ireturn       
     7: aload_1       
     8: instanceof    #7          // java.util.Locale
    11: ifne          16
    14: iconst_0      
    15: ireturn       
    16: aload_1       
    17: checkcast     #7          // java.util.Locale
    20: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    23: astore_2      
    24: aload_0       
    25: getfield      #5          // baseLocale:sun.util.locale.BaseLocale
    28: aload_2       
    29: invokevirtual #147        // sun.util.locale.BaseLocale.equals:(java.lang.Object)boolean
    32: ifne          37
    35: iconst_0      
    36: ireturn       
    37: aload_0       
    38: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    41: ifnonnull     60
    44: aload_1       
    45: checkcast     #7          // java.util.Locale
    48: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    51: ifnonnull     58
    54: iconst_1      
    55: goto          59
    58: iconst_0      
    59: ireturn       
    60: aload_0       
    61: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    64: aload_1       
    65: checkcast     #7          // java.util.Locale
    68: getfield      #6          // localeExtensions:sun.util.locale.LocaleExtensions
    71: invokevirtual #148        // sun.util.locale.LocaleExtensions.equals:(java.lang.Object)boolean
    74: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec189041817f20000000000f8564000000909090909090909048896c2410483bd60f85240000009090909090909090b801000000488b6c24104883c418493ba7500400000f8738000000c39090909090909041c78784040000edf7ffff49c7879004000014000000e8000000000f1f84000000000048896c2410e800000000eb90f4488d0db4ffffff49898f68040000e942fffffff4e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 71 20 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@487b1d7f slotKind: QWORD  <||@
  Comment 71 26 CMPBRANCH (x: rdx|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD  <||@
  Comment 80 block B1 null  <||@
  Comment 80 28 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 80 30 NOP  <||@
  Comment 81 32 NOP  <||@
  Comment 82 34 NOP  <||@
  Comment 83 36 NOP  <||@
  Comment 84 38 NOP  <||@
  Comment 85 40 NOP  <||@
  Comment 86 42 NOP  <||@
  Comment 87 44 NOP  <||@
  Comment 88 46 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 93 48 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 102 POLL_RETURN_FAR  <||@
  Comment 116 block B2 null  <||@
  Comment 116 50 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 116 52 NOP  <||@
  Comment 117 54 NOP  <||@
  Comment 118 56 NOP  <||@
  Comment 119 58 NOP  <||@
  Comment 120 60 NOP  <||@
  Comment 121 62 NOP  <||@
  Comment 122 64 NOP  <||@
  Comment 123 66 MOV x: [r15|QWORD + 1156] y: -2067 size: DWORD  <||@
  Comment 134 68 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 145 70 DEOPT info [bci:0]  <||@
  Comment 145 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 150 [rdx:0, rsi:0]at java.util.Locale.equals(Locale.java:2312) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 163 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 185 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 191 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 191 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 197 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 197 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-6486[java.util.Locale.equals(Object)]"
  method "HotSpotCompilation-6486[java.util.Locale.equals(Object)]"
  date 1724269754411
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789aefcc00 448b560849bc0000002b787f00004d03d44d33e4493bc20f85638488fe66669089842400c0feff4883ec189041817f20000000000f8564000000909090909090909048896c2410483bd60f85240000009090909090909090b801000000488b6c24104883c418493ba7500400000f8738000000c39090909090909041c78784040000edf7ffff49c7879004000014000000e8e4e488fe0f1f84000000000048896c2410e878e586feeb90f4488d0db4ffffff49898f68040000e942f388fef4e83c869cfef4e856e288fef4f4f4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 71 20 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@487b1d7f slotKind: QWORD  <||@
  Comment 71 26 CMPBRANCH (x: rdx|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD  <||@
  Comment 80 block B1 null  <||@
  Comment 80 28 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 80 30 NOP  <||@
  Comment 81 32 NOP  <||@
  Comment 82 34 NOP  <||@
  Comment 83 36 NOP  <||@
  Comment 84 38 NOP  <||@
  Comment 85 40 NOP  <||@
  Comment 86 42 NOP  <||@
  Comment 87 44 NOP  <||@
  Comment 88 46 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 93 48 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 102 POLL_RETURN_FAR  <||@
  Comment 116 block B2 null  <||@
  Comment 116 50 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 116 52 NOP  <||@
  Comment 117 54 NOP  <||@
  Comment 118 56 NOP  <||@
  Comment 119 58 NOP  <||@
  Comment 120 60 NOP  <||@
  Comment 121 62 NOP  <||@
  Comment 122 64 NOP  <||@
  Comment 123 66 MOV x: [r15|QWORD + 1156] y: -2067 size: DWORD  <||@
  Comment 134 68 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 145 70 DEOPT info [bci:0]  <||@
  Comment 145 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 150 [rdx:0, rsi:0]at java.util.Locale.equals(Locale.java:2312) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 163 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 185 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 191 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 191 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 197 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 197 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
