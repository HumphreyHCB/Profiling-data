begin_compilation
  name " HotSpotCompilation-3730[java.lang.String.<init>(AbstractStringBuilder, Void)]"
  method "HotSpotCompilation-3730[java.lang.String.<init>(AbstractStringBuilder, Void)]"
  date 1724269722728
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B64" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v601 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v601  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.lang.String
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?11 ?78 v624 ?22 v292 v626 ?253 v289 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a java.lang.AbstractStringBuilder
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v336 v627 j404 ?11 v622 ?78 v621 v623 v628 v642 v418 ?73 ?73 j317 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<String.<init>(AbstractStringBuilder, Void)>
localsSize: 6
locksSize: 0
sourceFile: String.java
sourceLine: 4783
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v665 v601 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v601 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-31243|0xffffffffffff85f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v628 
lastLocationAccess: - 
=== Succesors ===
next: a602 
=== Usages ===
v296 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v628 lastLocationAccess: - #next: a602  <|@  <|@
f <@~|@floating>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a602 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a602 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.getValue(AbstractStringBuilder.java:1657) [bci: 1]
at java.lang.String.<init>(String.java:4784) [bci: 5]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v621 
lastLocationAccess: - 
=== Succesors ===
next: v66 
=== Usages ===
a126 v625 
=== Predecessor ===
v601 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v621 lastLocationAccess: - #next: v66  <|@  <|@
f <@~|@floating>@ <|@
tid a126 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.getValue(AbstractStringBuilder.java:1657) [bci: 1]
at java.lang.String.<init>(String.java:4784) [bci: 5]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a602 
=== Succesors ===
=== Usages ===
?11 ?78 ?22 v195 j514 j594 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a602  <|@  <|@
f <@~|@floating>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v601 
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v601  <|@  <|@
f <@~|@floating>@ <|@
tid i29 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.<init>(String.java:4791) [bci: 41]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i37 i439 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.<init>(String.java:4786) [bci: 19]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v99 v195 v412 v308 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j259 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.<init>(String.java:4784) [bci: 5]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v395 v399 j279 j279 i307 v451 v303 v449 v582 v360 i403 v378 v385 v390 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j346 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:260) [bci: 154]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j316 j318 j335 v498 v577 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i603 i604 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}]
keySuccessors: [I@3f00dd76
keys: [HotSpotType<Ljava/lang/StringBuilder;, resolved>, HotSpotType<Ljava/lang/StringBuffer;, resolved>]
profileData: PROFILED keyProbabilities: [0.9999893703980467, 1.0629601953295656E-5, 0.0]
stamp: void
=== Inputs ===
value: v296 
=== Succesors ===
successors: v54 v59 v62 
=== Usages ===
=== Predecessor ===
a602 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v296 #successors: v54 v59 v62  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607182323057074616
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: i603 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i603  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i603 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.length(AbstractStringBuilder.java:195) [bci: 1]
at java.lang.StringBuilder.length(StringBuilder.java:91) [bci: 1]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v622 
lastLocationAccess: - 
=== Succesors ===
next: v55 
=== Usages ===
i50 
=== Predecessor ===
v54 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v622 lastLocationAccess: - #next: v55  <|@  <|@
f <@*|@fixed>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
i603 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: j358 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j358  <|@  <|@
f <@~|@floating>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
j444 j445 j358 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j358 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:757) [bci: 30]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:197) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v642 
lastLocationAccess: - 
=== Succesors ===
next: j297 
=== Usages ===
j318 v342 v632 v633 
=== Predecessor ===
v59 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v642 lastLocationAccess: - #next: j297  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j297 <|@
d <@d|@=== Debug Properties ===
lockDepth: 0
nodeSourcePosition: at jdk.graal.compiler.hotspot.nodes.BeginLockScopeNode.beginLockScope(int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:198) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j298 
=== Usages ===
v629 v336 j320 
=== Predecessor ===
j358 >@ <|@
instruction <@BeginLockScope|@jdk.graal.compiler.hotspot.nodes.BeginLockScopeNode>@ stateAfter: - #next: j298  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j298 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:199) [bci: 24] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: v301 
=== Usages ===
i307 v312 v631 
=== Predecessor ===
j297 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: v301  <|@  <|@
f <@~|@floating>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j297 
index: - 
=== Succesors ===
=== Usages ===
v359 v360 v361 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j297 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j341 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:272) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
rawvalue: 2
stableDimension: 0
stamp: i64 [2]
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v342 v424 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:272) [bci: 14]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
x: j358 
y: j341 
=== Succesors ===
=== Usages ===
v301 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j358 y: j341  <|@  <|@
f <@*|@fixed>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:272) [bci: 20]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v342 
=== Succesors ===
trueSuccessor: v300 
falseSuccessor: v299 
=== Usages ===
=== Predecessor ===
j298 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v342 #trueSuccessor: v300 #falseSuccessor: v299  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4532329488911171509
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:279) [bci: 51]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j317 
=== Usages ===
=== Predecessor ===
v301 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j317  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:279) [bci: 52]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2 
=== Succesors ===
next: v359 
=== Usages ===
v630 
=== Predecessor ===
v300 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a2 #next: v359  <|@  <|@
f <@~|@floating>@ <|@
tid j318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:282) [bci: 64]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64 [-9223372036854775807 - 9223372036854775807] bits:x...x1
=== Inputs ===
x: j358 
y: j346 
=== Succesors ===
=== Usages ===
j320 v321 v359 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: j358 y: j346  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: DisplacedMarkWord
location: DisplacedMarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:286) [bci: 90]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v629 
lastLocationAccess: - 
value: j318 
stateAfter: - 
=== Succesors ===
next: j320 
=== Usages ===
=== Predecessor ===
j317 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v629 lastLocationAccess: - value: j318 stateAfter: - #next: j320  <|@  <|@
f <@~|@floating>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j317 
index: - 
=== Succesors ===
=== Usages ===
j320 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j317 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j320 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: MarkWord
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:293) [bci: 107]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v630 
lastLocationAccess: - 
expectedValue: j318 
newValue: j297 
stateAfter: - 
=== Succesors ===
next: v324 
=== Usages ===
v321 j326 
=== Predecessor ===
v359 >@ <|@
instruction <@ValueCompareAndSwap|@jdk.graal.compiler.nodes.java.ValueCompareAndSwapNode>@ stateBefore: - guard: - address: v630 lastLocationAccess: - expectedValue: j318 newValue: j297 stateAfter: - #next: v324  <|@  <|@
f <@~|@floating>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:294) [bci: 124]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j318 
y: j320 
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j318 y: j320  <|@  <|@
f <@*|@fixed>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:294) [bci: 130]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v321 
=== Succesors ===
trueSuccessor: v322 
falseSuccessor: v323 
=== Usages ===
=== Predecessor ===
j320 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v321 #trueSuccessor: v322 #falseSuccessor: v323  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4532267370277133279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:295) [bci: 133]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v331 
=== Usages ===
=== Predecessor ===
v324 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v331  <|@  <|@
f <@*|@fixed>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
v322 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4502543613272648492
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:299) [bci: 152]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j325 
=== Usages ===
=== Predecessor ===
v324 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j325  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j325 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:316) [bci: 176]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
register: rsp
stamp: i64
=== Inputs ===
=== Succesors ===
next: v329 
=== Usages ===
j326 
=== Predecessor ===
v323 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: v329  <|@  <|@
f <@~|@floating>@ <|@
tid j326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:317) [bci: 188]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64
=== Inputs ===
x: j320 
y: j325 
=== Succesors ===
=== Usages ===
v351 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: j320 y: j325  <|@  <|@
f <@~|@floating>@ <|@
tid j350 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:317) [bci: 199]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
rawvalue: -4089
stableDimension: 0
stamp: i64 [-4089]
stampKind: i64
value: long[-4089|0xfffffffffffff007]
=== Inputs ===
=== Succesors ===
=== Usages ===
v351 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:317) [bci: 206]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
x: j326 
y: j350 
=== Succesors ===
=== Usages ===
v329 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j326 y: j350  <|@  <|@
f <@*|@fixed>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:317) [bci: 212]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v351 
=== Succesors ===
trueSuccessor: v327 
falseSuccessor: v328 
=== Usages ===
=== Predecessor ===
j325 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v351 #trueSuccessor: v327 #falseSuccessor: v328  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B14" 
    xhandlers
    flags 
    probability 4502464101421079557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:319) [bci: 215]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v360 
=== Usages ===
=== Predecessor ===
v329 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v360  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: DisplacedMarkWord
location: DisplacedMarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:319) [bci: 228]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v629 
lastLocationAccess: - 
value: j259 
stateAfter: - 
=== Succesors ===
next: v332 
=== Usages ===
=== Predecessor ===
v327 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v629 lastLocationAccess: - value: j259 stateAfter: - #next: v332  <|@  <|@
f <@*|@fixed>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
v360 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4472659588851943866
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:324) [bci: 250]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v333 
=== Usages ===
=== Predecessor ===
v329 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v333  <|@  <|@
f <@*|@fixed>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v353 
=== Predecessor ===
v328 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4502623928274233274
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:275) [bci: 23]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v361 
=== Usages ===
=== Predecessor ===
v301 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v361  <|@  <|@
f <@~|@floating>@ <|@
tid j343 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:275) [bci: 31]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
rawvalue: 3
stableDimension: 0
stamp: i64 [3]
stampKind: i64
value: long[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v361 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: DisplacedMarkWord
location: DisplacedMarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:275) [bci: 37]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v629 
lastLocationAccess: - 
value: j343 
stateAfter: - 
=== Succesors ===
next: j362 
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v629 lastLocationAccess: - value: j343 stateAfter: - #next: j362  <|@  <|@
f <@~|@floating>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
displacement: 62
stamp: void*
stride: S1
=== Inputs ===
base: j358 
index: - 
=== Succesors ===
=== Usages ===
i307 j362 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j358 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j362 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ObjectMonitor::_owner
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:241) [bci: 27]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v632 
lastLocationAccess: - 
=== Succesors ===
next: v306 
=== Usages ===
v303 v312 
=== Predecessor ===
v361 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v632 lastLocationAccess: - #next: v306  <|@  <|@
f <@~|@floating>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:246) [bci: 41]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j362 
y: j259 
=== Succesors ===
=== Usages ===
v306 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j362 y: j259  <|@  <|@
f <@*|@fixed>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:246) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v303 
=== Succesors ===
trueSuccessor: v304 
falseSuccessor: v305 
=== Usages ===
=== Predecessor ===
j362 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v303 #trueSuccessor: v304 #falseSuccessor: v305  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4501820778258385448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:248) [bci: 50]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i307 
=== Usages ===
=== Predecessor ===
v306 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i307  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i307 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: ObjectMonitor::_owner
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:248) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i32 [0 - 1] bits:0...0x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v632 
lastLocationAccess: - 
expectedValue: j259 
newValue: j298 
stateAfter: - 
=== Succesors ===
next: v311 
=== Usages ===
v308 
=== Predecessor ===
v304 >@ <|@
instruction <@LogicCompareAndSwap|@jdk.graal.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v632 lastLocationAccess: - expectedValue: j259 newValue: j298 stateAfter: - #next: v311  <|@  <|@
f <@~|@floating>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:248) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i307 
y: i15 
=== Succesors ===
=== Usages ===
v311 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i307 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:248) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v308 
=== Succesors ===
trueSuccessor: v310 
falseSuccessor: v309 
=== Usages ===
=== Predecessor ===
i307 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v308 #trueSuccessor: v310 #falseSuccessor: v309  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4486864309347747871
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:254) [bci: 90]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v348 
=== Usages ===
=== Predecessor ===
v311 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v348  <|@  <|@
f <@*|@fixed>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v353 
=== Predecessor ===
v310 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4501097943244122404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:250) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v330 
=== Usages ===
=== Predecessor ===
v311 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v330  <|@  <|@
f <@*|@fixed>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
v309 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" "B15" 
    xhandlers
    flags 
    probability 4487506829360426131
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:257) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v315 
=== Usages ===
=== Predecessor ===
v306 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v315  <|@  <|@
f <@~|@floating>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:257) [bci: 115]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j298 
y: j362 
=== Succesors ===
=== Usages ===
v315 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j298 y: j362  <|@  <|@
f <@*|@fixed>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:257) [bci: 121]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.4
stamp: void
=== Inputs ===
condition: v312 
=== Succesors ===
trueSuccessor: v313 
falseSuccessor: v314 
=== Usages ===
=== Predecessor ===
v305 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v312 #trueSuccessor: v313 #falseSuccessor: v314  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4481718189707699113
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:258) [bci: 124]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j363 
=== Usages ===
=== Predecessor ===
v315 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j363  <|@  <|@
f <@~|@floating>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
displacement: 134
stamp: void*
stride: S1
=== Inputs ===
base: j358 
index: - 
=== Succesors ===
=== Usages ===
j363 v364 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j358 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j363 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ObjectMonitor::_recursions
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:259) [bci: 139]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v633 
lastLocationAccess: - 
=== Succesors ===
next: v364 
=== Usages ===
j316 
=== Predecessor ===
v313 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v633 lastLocationAccess: - #next: v364  <|@  <|@
f <@~|@floating>@ <|@
tid j316 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:260) [bci: 154]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64
=== Inputs ===
x: j363 
y: j346 
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j363 y: j346  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: ObjectMonitor::_recursions
location: ObjectMonitor::_recursions
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:260) [bci: 160]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v633 
lastLocationAccess: - 
value: j316 
stateAfter: - 
=== Succesors ===
next: v349 
=== Usages ===
=== Predecessor ===
j363 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v633 lastLocationAccess: - value: j316 stateAfter: - #next: v349  <|@  <|@
f <@*|@fixed>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
v364 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B4" "B6" "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532382201905571021
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 125] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v330 v331 v332 v349 
=== Succesors ===
next: j365 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v330 v331 v332 v349 #next: j365  <|@  <|@
f <@~|@floating>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
displacement: 1360
stamp: void*
stride: S1
=== Inputs ===
base: j298 
index: - 
=== Succesors ===
=== Usages ===
j365 v366 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j298 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j365 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: JavaThread::_held_monitor_count
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.updateHeldMonitorCount(MonitorSnippets.java:584) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.incrementHeldMonitorCount(MonitorSnippets.java:576) [bci: 2]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:216) [bci: 130] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v631 
lastLocationAccess: - 
=== Succesors ===
next: v366 
=== Usages ===
j335 
=== Predecessor ===
v352 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v631 lastLocationAccess: - #next: v366  <|@  <|@
f <@~|@floating>@ <|@
tid j335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.updateHeldMonitorCount(MonitorSnippets.java:585) [bci: 26]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.incrementHeldMonitorCount(MonitorSnippets.java:576) [bci: 2]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:216) [bci: 130] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64
=== Inputs ===
x: j365 
y: j346 
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j365 y: j346  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: JavaThread::_held_monitor_count
location: JavaThread::_held_monitor_count
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.updateHeldMonitorCount(MonitorSnippets.java:585) [bci: 32]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.incrementHeldMonitorCount(MonitorSnippets.java:576) [bci: 2]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:216) [bci: 130] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v631 
lastLocationAccess: - 
value: j335 
stateAfter: - 
=== Succesors ===
next: v337 
=== Usages ===
=== Predecessor ===
j365 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v631 lastLocationAccess: - value: j335 stateAfter: - #next: v337  <|@  <|@
f <@*|@fixed>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:221) [bci: 145] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
v366 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4484288269758412157
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:265) [bci: 181]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v347 
=== Usages ===
=== Predecessor ===
v315 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v347  <|@  <|@
f <@*|@fixed>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:268) [bci: 197]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v353 
=== Predecessor ===
v314 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B7" "B15" "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4490722176362376714
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 125] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v333 v347 v348 
=== Succesors ===
next: v336 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v333 v347 v348 #next: v336  <|@  <|@
tid ?78 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<String.<init>(AbstractStringBuilder, Void)>
localsSize: 6
locksSize: 0
sourceFile: String.java
sourceLine: 4785
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 - a126 
=== Succesors ===
=== Usages ===
?73 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - a126  <|@  <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
bci: 0
eliminated: false
lockDepth: 0
multipleEntry: false
nodeSourcePosition: at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
?73 
=== Predecessor ===
- >@ <|@
instruction <@MonitorId|@jdk.graal.compiler.nodes.java.MonitorIdNode>@  <|@  <|@
tid ?73 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<StringBuffer.length()>
localsSize: 1
locksSize: 1
nodeSourcePosition: at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
sourceFile: StringBuffer.java
sourceLine: 205
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?78 
values: a2 a2 
monitorIds: v71 
=== Succesors ===
=== Usages ===
v336 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?78 values: a2 a2 monitorIds: v71  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{monitorenter(Object,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[ANY_LOCATION], transition=SAFEPOINT}
descriptorName: monitorenter
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenterStubC(ForeignCallDescriptor, Object, Word) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:219) [bci: 142] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?73 
arguments: a2 j297 
=== Succesors ===
next: v339 
=== Usages ===
=== Predecessor ===
v353 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?73 arguments: a2 j297 #next: v339  <|@  <|@
f <@*|@fixed>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:221) [bci: 145] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
v336 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:221) [bci: 145] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v337 v339 
=== Succesors ===
next: v456 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v337 v339 #next: v456  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
locations: [DisplacedMarkWord, ObjectMonitor::_owner, ObjectMonitor::_cxq, ObjectMonitor::_EntryList, ObjectMonitor::_recursions, ObjectMonitor::_succ, MarkWord, JavaThread::_held_monitor_count]
nodeSourcePosition: at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j375 
=== Usages ===
=== Predecessor ===
v338 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j375  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j375 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:395) [bci: 6] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j376 
=== Usages ===
i403 v636 
=== Predecessor ===
v456 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j376  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j376 <|@
d <@d|@=== Debug Properties ===
lockDepth: 0
nodeSourcePosition: at jdk.graal.compiler.hotspot.nodes.CurrentLockNode.currentLock(int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:396) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64
=== Inputs ===
=== Succesors ===
next: j440 
=== Usages ===
v634 i406 v418 
=== Predecessor ===
j375 >@ <|@
instruction <@CurrentLock|@jdk.graal.compiler.hotspot.nodes.CurrentLockNode>@ #next: j440  <|@  <|@
f <@~|@floating>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j376 
index: - 
=== Succesors ===
=== Usages ===
j440 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j376 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j440 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: DisplacedMarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:397) [bci: 28] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v634 
lastLocationAccess: - 
=== Succesors ===
next: i604 
=== Usages ===
v378 i406 
=== Predecessor ===
j376 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v634 lastLocationAccess: - #next: i604  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i604 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 1]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v622 
lastLocationAccess: - 
=== Succesors ===
next: v381 
=== Usages ===
i50 
=== Predecessor ===
j440 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v622 lastLocationAccess: - #next: v381  <|@  <|@
f <@~|@floating>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:427) [bci: 5]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j440 
y: j259 
=== Succesors ===
=== Usages ===
v381 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j440 y: j259  <|@  <|@
f <@~|@floating>@ <|@
tid j430 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:565) [bci: 324]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
rawvalue: -1
stableDimension: 0
stamp: i64 [-1]
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j417 j431 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:427) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.4
stamp: void
=== Inputs ===
condition: v378 
=== Succesors ===
trueSuccessor: v379 
falseSuccessor: v380 
=== Usages ===
=== Predecessor ===
i604 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v378 #trueSuccessor: v379 #falseSuccessor: v380  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B34" 
    xhandlers
    flags 
    probability 4526633713479026896
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:429) [bci: 14]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v408 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v408  <|@  <|@
f <@*|@fixed>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v379 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4529143557278551352
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:434) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j444 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j444  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j444 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:757) [bci: 30]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:434) [bci: 41]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v642 
lastLocationAccess: - 
=== Succesors ===
next: v384 
=== Usages ===
v424 
=== Predecessor ===
v380 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v642 lastLocationAccess: - #next: v384  <|@  <|@
f <@~|@floating>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:436) [bci: 61]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
x: j444 
y: j341 
=== Succesors ===
=== Usages ===
v384 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j444 y: j341  <|@  <|@
f <@*|@fixed>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:436) [bci: 67]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v424 
=== Succesors ===
trueSuccessor: v383 
falseSuccessor: v382 
=== Usages ===
=== Predecessor ===
j444 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v424 #trueSuccessor: v383 #falseSuccessor: v382  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529068261964565618
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:440) [bci: 80]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j404 
=== Usages ===
=== Predecessor ===
v384 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j404  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:440) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2 
=== Succesors ===
next: i406 
=== Usages ===
v635 
=== Predecessor ===
v383 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a2 #next: i406  <|@  <|@
f <@~|@floating>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j404 
index: - 
=== Succesors ===
=== Usages ===
i406 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j404 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i406 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: MarkWord
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:440) [bci: 98]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i32 [0 - 1] bits:0...0x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v635 
lastLocationAccess: - 
expectedValue: j376 
newValue: j440 
stateAfter: - 
=== Succesors ===
next: v411 
=== Usages ===
i409 
=== Predecessor ===
j404 >@ <|@
instruction <@LogicCompareAndSwap|@jdk.graal.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v635 lastLocationAccess: - expectedValue: j376 newValue: j440 stateAfter: - #next: v411  <|@  <|@
f <@*|@fixed>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v407 
=== Predecessor ===
i406 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B33" 
    xhandlers
    flags 
    probability 4499411328210841968
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 70]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j445 
=== Usages ===
=== Predecessor ===
v384 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j445  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j445 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:757) [bci: 30]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:517) [bci: 7]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v642 
lastLocationAccess: - 
=== Succesors ===
next: j446 
=== Usages ===
v637 v638 v639 v640 v641 
=== Predecessor ===
v382 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v642 lastLocationAccess: - #next: j446  <|@  <|@
f <@~|@floating>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
displacement: 134
stamp: void*
stride: S1
=== Inputs ===
base: j445 
index: - 
=== Succesors ===
=== Usages ===
j446 v453 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j445 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j446 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ObjectMonitor::_recursions
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:521) [bci: 48]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v637 
lastLocationAccess: - 
=== Succesors ===
next: v388 
=== Usages ===
v385 j431 
=== Predecessor ===
j445 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v637 lastLocationAccess: - #next: v388  <|@  <|@
f <@~|@floating>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:522) [bci: 62]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j446 
y: j259 
=== Succesors ===
=== Usages ===
v388 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j446 y: j259  <|@  <|@
f <@*|@fixed>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:522) [bci: 68]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v385 
=== Succesors ===
trueSuccessor: v386 
falseSuccessor: v387 
=== Usages ===
=== Predecessor ===
j446 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v385 #trueSuccessor: v386 #falseSuccessor: v387  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4499363139209891098
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:524) [bci: 71]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j447 
=== Usages ===
=== Predecessor ===
v388 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j447  <|@  <|@
f <@~|@floating>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
displacement: 150
stamp: void*
stride: S1
=== Inputs ===
base: j445 
index: - 
=== Succesors ===
=== Usages ===
j447 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j445 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j447 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ObjectMonitor::_cxq
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:525) [bci: 86]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v638 
lastLocationAccess: - 
=== Succesors ===
next: j448 
=== Usages ===
j389 
=== Predecessor ===
v386 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v638 lastLocationAccess: - #next: j448  <|@  <|@
f <@~|@floating>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
displacement: 142
stamp: void*
stride: S1
=== Inputs ===
base: j445 
index: - 
=== Succesors ===
=== Usages ===
j448 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j445 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j448 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ObjectMonitor::_EntryList
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:527) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v639 
lastLocationAccess: - 
=== Succesors ===
next: v393 
=== Usages ===
j389 
=== Predecessor ===
j447 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v639 lastLocationAccess: - #next: v393  <|@  <|@
f <@~|@floating>@ <|@
tid j389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:528) [bci: 124]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64
=== Inputs ===
x: j447 
y: j448 
=== Succesors ===
=== Usages ===
v390 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: j447 y: j448  <|@  <|@
f <@~|@floating>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:528) [bci: 128]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j389 
y: j259 
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j389 y: j259  <|@  <|@
f <@~|@floating>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
displacement: 62
stamp: void*
stride: S1
=== Inputs ===
base: j445 
index: - 
=== Succesors ===
=== Usages ===
i403 v449 v451 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j445 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:528) [bci: 134]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v390 
=== Succesors ===
trueSuccessor: v391 
falseSuccessor: v392 
=== Usages ===
=== Predecessor ===
j448 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v390 #trueSuccessor: v391 #falseSuccessor: v392  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4498676108457829474
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:532) [bci: 137]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v394 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v394  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
barriersString: LOAD_STORE STORE_STORE
fence: STORE_RELEASE
location: ANY_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:532) [bci: 140]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v449 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: v449  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: ANY_LOCATION
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:533) [bci: 150]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v640 
lastLocationAccess: - 
value: j259 
stateAfter: - 
=== Succesors ===
next: v410 
=== Usages ===
=== Predecessor ===
v394 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v640 lastLocationAccess: - value: j259 stateAfter: - #next: v410  <|@  <|@
f <@*|@fixed>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v449 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4484211167356890766
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:538) [bci: 171]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j450 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j450  <|@  <|@
f <@~|@floating>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
displacement: 158
stamp: void*
stride: S1
=== Inputs ===
base: j445 
index: - 
=== Succesors ===
=== Usages ===
j450 j452 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j445 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j450 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ObjectMonitor::_succ
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:539) [bci: 186]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v641 
lastLocationAccess: - 
=== Succesors ===
next: v398 
=== Usages ===
v395 
=== Predecessor ===
v392 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v641 lastLocationAccess: - #next: v398  <|@  <|@
f <@~|@floating>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:540) [bci: 199]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j450 
y: j259 
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j450 y: j259  <|@  <|@
f <@*|@fixed>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:540) [bci: 205]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v395 
=== Succesors ===
trueSuccessor: v397 
falseSuccessor: v396 
=== Usages ===
=== Predecessor ===
j450 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v395 #trueSuccessor: v397 #falseSuccessor: v396  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" 
    xhandlers
    flags 
    probability 4469173740924655728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:563) [bci: 314]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v433 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v433  <|@  <|@
f <@*|@fixed>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v613 
=== Predecessor ===
v397 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4483447853581828992
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:543) [bci: 208]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v451 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v451  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: ANY_LOCATION
location: ANY_LOCATION
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:543) [bci: 215]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v640 
lastLocationAccess: - 
value: j259 
stateAfter: - 
=== Succesors ===
next: j452 
=== Usages ===
=== Predecessor ===
v396 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v640 lastLocationAccess: - value: j259 stateAfter: - #next: j452  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j452 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ObjectMonitor::_succ
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:544) [bci: 225]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v641 
lastLocationAccess: - 
=== Succesors ===
next: v402 
=== Usages ===
v399 
=== Predecessor ===
v451 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v641 lastLocationAccess: - #next: v402  <|@  <|@
f <@~|@floating>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:545) [bci: 238]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j452 
y: j259 
=== Succesors ===
=== Usages ===
v402 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j452 y: j259  <|@  <|@
f <@*|@fixed>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:545) [bci: 244]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v399 
=== Succesors ===
trueSuccessor: v401 
falseSuccessor: v400 
=== Usages ===
=== Predecessor ===
j452 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v399 #trueSuccessor: v401 #falseSuccessor: v400  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4482760871184273395
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:554) [bci: 265]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i403 
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i403  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i403 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: ObjectMonitor::_owner
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:554) [bci: 279]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i32 [0 - 1] bits:0...0x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v640 
lastLocationAccess: - 
expectedValue: j259 
newValue: j375 
stateAfter: - 
=== Succesors ===
next: v434 
=== Usages ===
i439 
=== Predecessor ===
v401 >@ <|@
instruction <@LogicCompareAndSwap|@jdk.graal.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v640 lastLocationAccess: - expectedValue: j259 newValue: j375 stateAfter: - #next: v434  <|@  <|@
f <@~|@floating>@ <|@
tid i439 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:554) [bci: 293]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
x: i403 
y: i29 
=== Succesors ===
=== Usages ===
i409 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i403 y: i29  <|@  <|@
f <@*|@fixed>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v407 
=== Predecessor ===
i403 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B20" "B27" 
    successors "B29" "B31" 
    xhandlers
    flags 
    probability 4529074299895794134
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i409 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v407 
values: i406 i439 
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v407 values: i406 i439  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v411 v434 
=== Succesors ===
next: v415 
=== Usages ===
i409 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v411 v434 #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 76] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i409 
y: i15 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i409 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 76] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v412 
=== Succesors ===
trueSuccessor: v614 
falseSuccessor: v610 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v412 #trueSuccessor: v614 #falseSuccessor: v610  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:406) [bci: 87] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v615 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v615  <|@  <|@
f <@*|@fixed>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 76] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v613 
=== Predecessor ===
v614 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B25" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524572191115640556
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 76] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v615 v433 
=== Succesors ===
next: v418 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v615 v433 #next: v418  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{monitorexit(Object,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=STACK_INSPECTABLE_LEAF}
descriptorName: monitorexit
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexitStubC(ForeignCallDescriptor, Object, Word) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:406) [bci: 93] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a2 j376 
=== Succesors ===
next: v421 
=== Usages ===
=== Predecessor ===
v613 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a2 j376 #next: v421  <|@  <|@
f <@*|@fixed>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:408) [bci: 96] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
v418 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:404) [bci: 79] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v611 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v611  <|@  <|@
f <@*|@fixed>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 76] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v610 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 4468563089904606309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:548) [bci: 247]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v435 
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v435  <|@  <|@
f <@*|@fixed>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v400 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B34" 
    xhandlers
    flags 
    probability 4469235422845872850
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:565) [bci: 317]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v453 
=== Usages ===
=== Predecessor ===
v388 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v453  <|@  <|@
f <@~|@floating>@ <|@
tid j431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:565) [bci: 324]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64
=== Inputs ===
x: j446 
y: j430 
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j446 y: j430  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: ObjectMonitor::_recursions
location: ObjectMonitor::_recursions
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:565) [bci: 330]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v637 
lastLocationAccess: - 
value: j431 
stateAfter: - 
=== Succesors ===
next: v432 
=== Usages ===
=== Predecessor ===
v387 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v637 lastLocationAccess: - value: j431 stateAfter: - #next: v432  <|@  <|@
f <@*|@fixed>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v453 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B18" "B23" "B33" "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4530432362446083730
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 76] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v611 v408 v410 v432 v435 
=== Succesors ===
next: j441 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v611 v408 v410 v432 v435 #next: j441  <|@  <|@
f <@~|@floating>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
displacement: 1360
stamp: void*
stride: S1
=== Inputs ===
base: j375 
index: - 
=== Succesors ===
=== Usages ===
j441 v442 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j375 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j441 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: JavaThread::_held_monitor_count
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.updateHeldMonitorCount(MonitorSnippets.java:584) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.decrementHeldMonitorCount(MonitorSnippets.java:580) [bci: 2]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:404) [bci: 81] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v636 
lastLocationAccess: - 
=== Succesors ===
next: v442 
=== Usages ===
j417 
=== Predecessor ===
v609 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v636 lastLocationAccess: - #next: v442  <|@  <|@
f <@~|@floating>@ <|@
tid j417 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.updateHeldMonitorCount(MonitorSnippets.java:585) [bci: 26]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.decrementHeldMonitorCount(MonitorSnippets.java:580) [bci: 2]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:404) [bci: 81] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64
=== Inputs ===
x: j441 
y: j430 
=== Succesors ===
=== Usages ===
v442 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j441 y: j430  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: JavaThread::_held_monitor_count
location: JavaThread::_held_monitor_count
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.updateHeldMonitorCount(MonitorSnippets.java:585) [bci: 32]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.decrementHeldMonitorCount(MonitorSnippets.java:580) [bci: 2]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:404) [bci: 81] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v636 
lastLocationAccess: - 
value: j417 
stateAfter: - 
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
j441 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v636 lastLocationAccess: - value: j417 stateAfter: - #next: v419  <|@  <|@
f <@*|@fixed>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:408) [bci: 96] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
v442 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B30" 
    successors "B36" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:408) [bci: 96] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v419 v421 
=== Succesors ===
next: v422 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v419 v421 #next: v422  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.nodes.EndLockScopeNode.endLockScope() [bci: -1]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:408) [bci: 96] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v60 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@EndLockScope|@jdk.graal.compiler.hotspot.nodes.EndLockScopeNode>@ stateAfter: - #next: v60  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
v422 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B1" "B35" 
    successors "B37" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i50 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v49 
values: i603 i604 
=== Succesors ===
=== Usages ===
?11 i37 ?22 i114 v210 v88 v113 v99 v581 j525 a554 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v49 values: i603 i604  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v55 v60 
=== Succesors ===
next: i605 
=== Usages ===
i50 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v55 v60 #next: i605  <|@  <|@
f <@~|@floating>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i605 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i605 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.isLatin1(AbstractStringBuilder.java:1693) [bci: 7]
at java.lang.String.<init>(String.java:4786) [bci: 16]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v623 
lastLocationAccess: - 
=== Succesors ===
next: v19 
=== Usages ===
v200 
=== Predecessor ===
v49 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v623 lastLocationAccess: - #next: v19  <|@  <|@
f <@~|@floating>@ <|@
tid i199 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.isLatin1(AbstractStringBuilder.java:1693) [bci: 10]
at java.lang.String.<init>(String.java:4786) [bci: 16]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v200 v139 v207 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.AbstractStringBuilder.isLatin1(AbstractStringBuilder.java:1693) [bci: 10]
at java.lang.String.<init>(String.java:4786) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i605 
y: i199 
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i605 y: i199  <|@  <|@
tid ?11 <|@
d <@d|@=== Debug Properties ===
bci: 13
bytecode: istore
code: ResolvedJavaMethodBytecode<String.<init>(AbstractStringBuilder, Void)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.lang.String.<init>(String.java:4785) [bci: 10]
sourceFile: String.java
sourceLine: 4785
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i50 a1 a2 - a126 
=== Succesors ===
=== Usages ===
v666 i606 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i50 a1 a2 - a126  <|@  <|@
f <@~|@floating>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v188 v197 v287 v289 v290 v292 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v139 v194 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:4786) [bci: 19]
profileData: PROFILED designatedSuccessorProbability: 0.9999908853703156
stamp: void
=== Inputs ===
condition: v200 
=== Succesors ===
trueSuccessor: v17 
falseSuccessor: v18 
=== Usages ===
=== Predecessor ===
i605 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v200 #trueSuccessor: v17 #falseSuccessor: v18  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B42" 
    xhandlers
    flags 
    probability 4607182336702731707
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.<init>(String.java:4787) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: i606 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i606  <|@  <|@
f <@~|@floating>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a602 
=== Succesors ===
=== Usages ===
i606 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a602  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i606 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-36107|0xffffffffffff72f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3853) [bci: 6]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?11 
guard: - 
address: v625 
lastLocationAccess: - 
=== Succesors ===
next: v139 
=== Usages ===
v88 v113 i114 v502 j520 v209 a473 
=== Predecessor ===
v17 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?11 guard: - address: v625 lastLocationAccess: - #next: v139  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: String.coder
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.<init>(String.java:4787) [bci: 24]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v624 
lastLocationAccess: - 
value: i199 
stateAfter: - 
=== Succesors ===
next: v91 
=== Usages ===
=== Predecessor ===
i606 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v624 lastLocationAccess: - value: i199 stateAfter: - #next: v91  <|@  <|@
f <@~|@floating>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3853) [bci: 7]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i50 
y: i606 
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i50 y: i606  <|@  <|@
tid ?22 <|@
d <@d|@=== Debug Properties ===
bci: 27
bytecode: aload_0
code: ResolvedJavaMethodBytecode<String.<init>(AbstractStringBuilder, Void)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.lang.String.<init>(String.java:4787) [bci: 24]
sourceFile: String.java
sourceLine: 4788
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - - a126 i50 
=== Succesors ===
=== Usages ===
v618 v280 v620 a473 a554 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - a126 i50  <|@  <|@
f <@~|@floating>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
rawvalue: meta{HotSpotType<[B, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<[B, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v501 v580 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
rawvalue: meta{HotSpotType<[B, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[B, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a473 a554 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j482 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
rawvalue: 23
stableDimension: 0
stamp: i64 [23]
stampKind: i64
value: long[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
j483 j561 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j462 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:132) [bci: 23]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j463 j526 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3853) [bci: 7]
at java.lang.String.<init>(String.java:4788) [bci: 32]
profileData: PROFILED designatedSuccessorProbability: 0.2541630105061688
stamp: void
=== Inputs ===
condition: v88 
=== Succesors ===
trueSuccessor: v89 
falseSuccessor: v90 
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v88 #trueSuccessor: v89 #falseSuccessor: v90  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 17]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v512 
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v512  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: j458 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j458  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j458 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j495 
=== Usages ===
v643 v644 
=== Predecessor ===
v512 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j495  <|@  <|@
f <@~|@floating>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j458 
index: - 
=== Succesors ===
=== Usages ===
j495 v497 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j458 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j495 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v643 
lastLocationAccess: - 
=== Succesors ===
next: j496 
=== Usages ===
j464 v645 v646 a472 v650 v647 v648 v649 
=== Predecessor ===
j458 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v643 lastLocationAccess: - #next: j496  <|@  <|@
f <@~|@floating>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j458 
index: - 
=== Succesors ===
=== Usages ===
j496 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j458 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j496 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v644 
lastLocationAccess: - 
=== Succesors ===
next: v468 
=== Usages ===
v465 
=== Predecessor ===
j495 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v644 lastLocationAccess: - #next: v468  <|@  <|@
f <@~|@floating>@ <|@
tid j520 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i606 
=== Succesors ===
=== Usages ===
v521 j483 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i606  <|@  <|@
f <@~|@floating>@ <|@
tid j483 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: i64 [23 - 2147483670] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j520 
y: j482 
=== Succesors ===
=== Usages ===
j463 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j520 y: j482  <|@  <|@
f <@~|@floating>@ <|@
tid j463 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: i64 [0 - 2147483664] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j483 
y: j462 
=== Succesors ===
=== Usages ===
j464 v647 v648 v649 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j483 y: j462  <|@  <|@
f <@~|@floating>@ <|@
tid j464 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: i64
=== Inputs ===
x: j463 
y: j495 
=== Succesors ===
=== Usages ===
v465 v497 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j463 y: j495  <|@  <|@
f <@~|@floating>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j496 
y: j464 
=== Succesors ===
=== Usages ===
v468 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j496 y: j464  <|@  <|@
f <@*|@fixed>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v465 
=== Succesors ===
trueSuccessor: v467 
falseSuccessor: v466 
=== Usages ===
=== Predecessor ===
j496 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v465 #trueSuccessor: v467 #falseSuccessor: v466  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4568006969118877196
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: a473 
=== Usages ===
=== Predecessor ===
v468 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a473  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a473 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?22 
arguments: v457 i606 
=== Succesors ===
next: v618 
=== Usages ===
v618 a493 
=== Predecessor ===
v467 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?22 arguments: v457 i606 #next: v618  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-130161|0xfffffffffffe038f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?22 
object: a473 
=== Succesors ===
next: v477 
=== Usages ===
=== Predecessor ===
a473 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?22 object: a473 #next: v477  <|@  <|@
f <@*|@fixed>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v476 
=== Predecessor ===
v618 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4598204386423092713
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v497 
=== Usages ===
=== Predecessor ===
v468 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v497  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v643 
lastLocationAccess: - 
value: j464 
stateAfter: - 
=== Succesors ===
next: v485 
=== Usages ===
=== Predecessor ===
v466 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v643 lastLocationAccess: - value: j464 stateAfter: - #next: v485  <|@  <|@
f <@~|@floating>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j463 
index: j495 
=== Succesors ===
=== Usages ===
v485 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j463 index: j495  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
address: v647 
=== Succesors ===
next: v488 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v647 #next: v488  <|@  <|@
f <@~|@floating>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j463 
index: j495 
=== Succesors ===
=== Usages ===
v488 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j463 index: j495  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
address: v648 
=== Succesors ===
next: v491 
=== Usages ===
=== Predecessor ===
v485 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v648 #next: v491  <|@  <|@
f <@~|@floating>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j463 
index: j495 
=== Succesors ===
=== Usages ===
v491 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j463 index: j495  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
address: v649 
=== Succesors ===
next: v498 
=== Usages ===
=== Predecessor ===
v488 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v649 #next: v498  <|@  <|@
f <@~|@floating>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j495 
index: - 
=== Succesors ===
=== Usages ===
v498 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j495 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v645 
lastLocationAccess: - 
value: j346 
stateAfter: - 
=== Succesors ===
next: v501 
=== Usages ===
=== Predecessor ===
v491 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v645 lastLocationAccess: - value: j346 stateAfter: - #next: v501  <|@  <|@
f <@~|@floating>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j495 
index: - 
=== Succesors ===
=== Usages ===
v501 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j495 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v650 
lastLocationAccess: - 
value: v600 
stateAfter: - 
=== Succesors ===
next: v502 
=== Usages ===
=== Predecessor ===
v498 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v650 lastLocationAccess: - value: v600 stateAfter: - #next: v502  <|@  <|@
f <@~|@floating>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j495 
index: - 
=== Succesors ===
=== Usages ===
v502 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j495 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v646 
lastLocationAccess: - 
value: i606 
stateAfter: - 
=== Succesors ===
next: v471 
=== Usages ===
=== Predecessor ===
v501 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v646 lastLocationAccess: - value: i606 stateAfter: - #next: v471  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: a472 
=== Usages ===
=== Predecessor ===
v502 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a472  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a472 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j495 
=== Succesors ===
next: v475 
=== Usages ===
a493 
=== Predecessor ===
v471 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j495 #next: v475  <|@  <|@
f <@*|@fixed>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v476 
=== Predecessor ===
a472 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a493 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v476 
values: a472 a473 
=== Succesors ===
=== Usages ===
j518 a152 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v476 values: a472 a473  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v475 v477 
=== Succesors ===
next: j514 
=== Usages ===
a493 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v475 v477 #next: j514  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: i64
=== Inputs ===
object: a126 
=== Succesors ===
next: j518 
=== Usages ===
v651 
=== Predecessor ===
v476 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a126 #next: j518  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: i64
=== Inputs ===
object: a493 
=== Succesors ===
next: v521 
=== Usages ===
v652 
=== Predecessor ===
j514 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a493 #next: v521  <|@  <|@
f <@~|@floating>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j514 
index: - 
=== Succesors ===
=== Usages ===
v521 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j514 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j518 
index: - 
=== Succesors ===
=== Usages ===
v521 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j518 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}
descriptorName: byteDisjointArraycopyKillInit
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v651 v652 j520 
=== Succesors ===
next: v151 
=== Usages ===
=== Predecessor ===
j518 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v651 v652 j520 #next: v151  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:80) [bci: 39] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: a152 
=== Usages ===
=== Predecessor ===
v521 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a152  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:81) [bci: 43] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: a!# byte[]
=== Inputs ===
object: a493 
=== Succesors ===
next: v118 
=== Usages ===
a119 
=== Predecessor ===
v151 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a493 #next: v118  <|@  <|@
f <@*|@fixed>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v117 
=== Predecessor ===
a152 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v236 
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v236  <|@  <|@
f <@~|@floating>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Arrays.checkLength(Arrays.java:3820) [bci: 2]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3861) [bci: 2]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i50 
y: i15 
=== Succesors ===
=== Usages ===
v236 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i50 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.checkLength(Arrays.java:3820) [bci: 2]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3861) [bci: 2]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v99 
=== Succesors ===
trueSuccessor: v234 
falseSuccessor: v235 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v99 #trueSuccessor: v234 #falseSuccessor: v235  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.checkLength(Arrays.java:3820) [bci: 2]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3861) [bci: 2]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v275 
=== Usages ===
=== Predecessor ===
v236 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v275  <|@  <|@
f <@~|@floating>@ <|@
tid j277 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.checkLength(Arrays.java:3820) [bci: 2]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3861) [bci: 2]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j279 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i276 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.checkLength(Arrays.java:3820) [bci: 2]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3861) [bci: 2]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
rawvalue: -59667
stableDimension: 0
stamp: i32 [-59667]
stampKind: i32
value: int[-59667|0xffffffffffff16ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i278 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.checkLength(Arrays.java:3820) [bci: 2]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3861) [bci: 2]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v274 
=== Predecessor ===
v234 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.checkLength(Arrays.java:3823) [bci: 37]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3861) [bci: 2]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v592 
=== Usages ===
=== Predecessor ===
v236 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v592  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: j522 
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j522  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j522 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j574 
=== Usages ===
v653 v654 
=== Predecessor ===
v592 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j574  <|@  <|@
f <@~|@floating>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j522 
index: - 
=== Succesors ===
=== Usages ===
j574 v576 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j522 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j574 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v653 
lastLocationAccess: - 
=== Succesors ===
next: j575 
=== Usages ===
j527 v655 v656 v657 a553 v658 v662 v659 v660 v661 
=== Predecessor ===
j522 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v653 lastLocationAccess: - #next: j575  <|@  <|@
f <@~|@floating>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j522 
index: - 
=== Succesors ===
=== Usages ===
j575 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j522 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j575 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v654 
lastLocationAccess: - 
=== Succesors ===
next: v531 
=== Usages ===
v528 
=== Predecessor ===
j574 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v654 lastLocationAccess: - #next: v531  <|@  <|@
f <@~|@floating>@ <|@
tid j525 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i50 
=== Succesors ===
=== Usages ===
j561 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i50  <|@  <|@
f <@~|@floating>@ <|@
tid j561 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: i64 [23 - 4294967318] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j525 
y: j482 
=== Succesors ===
=== Usages ===
j526 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j525 y: j482  <|@  <|@
f <@~|@floating>@ <|@
tid j526 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: i64 [0 - 4294967312] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j561 
y: j462 
=== Succesors ===
=== Usages ===
j527 v542 j563 v659 v660 v661 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j561 y: j462  <|@  <|@
f <@~|@floating>@ <|@
tid j527 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: i64
=== Inputs ===
x: j526 
y: j574 
=== Succesors ===
=== Usages ===
v528 v576 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j526 y: j574  <|@  <|@
f <@~|@floating>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j575 
y: j527 
=== Succesors ===
=== Usages ===
v531 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j575 y: j527  <|@  <|@
f <@*|@fixed>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v528 
=== Succesors ===
trueSuccessor: v530 
falseSuccessor: v529 
=== Usages ===
=== Predecessor ===
j575 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v528 #trueSuccessor: v530 #falseSuccessor: v529  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 4575248858818943354
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: a554 
=== Usages ===
=== Predecessor ===
v531 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a554  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a554 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?22 
arguments: v457 i50 
=== Succesors ===
next: v620 
=== Usages ===
v620 a572 
=== Predecessor ===
v530 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?22 arguments: v457 i50 #next: v620  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-150641|0xfffffffffffdb38f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?22 
object: a554 
=== Succesors ===
next: v558 
=== Usages ===
=== Predecessor ===
a554 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?22 object: a554 #next: v558  <|@  <|@
f <@*|@fixed>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
v620 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B51" 
    xhandlers
    flags 
    probability 4604825882278563758
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v576 
=== Usages ===
=== Predecessor ===
v531 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v576  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v653 
lastLocationAccess: - 
value: j527 
stateAfter: - 
=== Succesors ===
next: v567 
=== Usages ===
=== Predecessor ===
v529 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v653 lastLocationAccess: - value: j527 stateAfter: - #next: v567  <|@  <|@
f <@~|@floating>@ <|@
tid v659 <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j526 
index: j574 
=== Succesors ===
=== Usages ===
v567 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j526 index: j574  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
address: v659 
=== Succesors ===
next: v569 
=== Usages ===
=== Predecessor ===
v576 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v659 #next: v569  <|@  <|@
f <@~|@floating>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j526 
index: j574 
=== Succesors ===
=== Usages ===
v569 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j526 index: j574  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
address: v660 
=== Succesors ===
next: v571 
=== Usages ===
=== Predecessor ===
v567 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v660 #next: v571  <|@  <|@
f <@~|@floating>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j526 
index: j574 
=== Succesors ===
=== Usages ===
v571 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j526 index: j574  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
address: v661 
=== Succesors ===
next: v577 
=== Usages ===
=== Predecessor ===
v569 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v661 #next: v577  <|@  <|@
f <@~|@floating>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j574 
index: - 
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j574 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v655 
lastLocationAccess: - 
value: j346 
stateAfter: - 
=== Succesors ===
next: v580 
=== Usages ===
=== Predecessor ===
v571 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v655 lastLocationAccess: - value: j346 stateAfter: - #next: v580  <|@  <|@
f <@~|@floating>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j574 
index: - 
=== Succesors ===
=== Usages ===
v580 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j574 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v662 
lastLocationAccess: - 
value: v600 
stateAfter: - 
=== Succesors ===
next: v581 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v662 lastLocationAccess: - value: v600 stateAfter: - #next: v581  <|@  <|@
f <@~|@floating>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j574 
index: - 
=== Succesors ===
=== Usages ===
v581 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j574 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v656 
lastLocationAccess: - 
value: i50 
stateAfter: - 
=== Succesors ===
next: v537 
=== Usages ===
=== Predecessor ===
v580 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v656 lastLocationAccess: - value: i50 stateAfter: - #next: v537  <|@  <|@
f <@~|@floating>@ <|@
tid j562 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
rawvalue: -16
stableDimension: 0
stamp: i64 [-16]
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j563 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j563 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: i64 [-16 - 4294967296] bits:x...x000
=== Inputs ===
x: j526 
y: j562 
=== Succesors ===
=== Usages ===
v534 v538 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j526 y: j562  <|@  <|@
f <@~|@floating>@ <|@
tid j564 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
rawvalue: 2048
stableDimension: 0
stamp: i64 [2048]
stampKind: i64
value: long[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v534 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j563 
y: j564 
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j563 y: j564  <|@  <|@
f <@*|@fixed>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 28]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v534 
=== Succesors ===
trueSuccessor: v536 
falseSuccessor: v535 
=== Usages ===
=== Predecessor ===
v581 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v534 #trueSuccessor: v536 #falseSuccessor: v535  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4604759375651230885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:228) [bci: 62]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v539 
=== Usages ===
=== Predecessor ===
v537 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v539  <|@  <|@
f <@~|@floating>@ <|@
tid j293 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i64 [8]
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j550 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j133 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.isLatin1(AbstractStringBuilder.java:1693) [bci: 7]
at java.lang.String.<init>(String.java:4786) [bci: 16]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j541 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v540 
=== Predecessor ===
v536 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B49" 
    successors "B49" "B50" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4634844288894646813
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j541 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v540 
values: j133 j550 
=== Succesors ===
=== Usages ===
v542 v657 j550 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v540 values: j133 j550  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 56
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v539 
=== Succesors ===
next: v548 
=== Usages ===
j541 v547 v551 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v539 #next: v548  <|@  <|@
f <@~|@floating>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j541 
y: j526 
=== Succesors ===
=== Usages ===
v548 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j541 y: j526  <|@  <|@
f <@*|@fixed>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v542 
=== Succesors ===
trueSuccessor: v543 
falseSuccessor: v547 
=== Usages ===
=== Predecessor ===
v540 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v542 #trueSuccessor: v543 #falseSuccessor: v547  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4634792850175069044
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v582 
=== Usages ===
=== Predecessor ===
v548 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v582  <|@  <|@
f <@~|@floating>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j574 
index: j541 
=== Succesors ===
=== Usages ===
v582 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j574 index: j541  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v657 
lastLocationAccess: - 
value: j259 
stateAfter: - 
=== Succesors ===
next: v551 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v657 lastLocationAccess: - value: j259 stateAfter: - #next: v551  <|@  <|@
f <@~|@floating>@ <|@
tid j550 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: i64
=== Inputs ===
x: j541 
y: j293 
=== Succesors ===
=== Usages ===
j541 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j541 y: j293  <|@  <|@
f <@*|@fixed>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
loopBegin: v540 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v582 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v540  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604759375651230886
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v540 
=== Succesors ===
next: v546 
=== Usages ===
=== Predecessor ===
v548 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v540 #next: v546  <|@  <|@
f <@*|@fixed>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v545 
=== Predecessor ===
v547 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4575162870452290749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:225) [bci: 31]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v538 
=== Usages ===
=== Predecessor ===
v537 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v538  <|@  <|@
f <@~|@floating>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j574 
index: - 
=== Succesors ===
=== Usages ===
v538 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j574 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ZeroMemoryNode.zero(Word, long, boolean, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:226) [bci: 56]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v658 
lastLocationAccess: - 
length: j563 
=== Succesors ===
next: v544 
=== Usages ===
=== Predecessor ===
v535 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v658 lastLocationAccess: - length: j563 #next: v544  <|@  <|@
f <@*|@fixed>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v545 
=== Predecessor ===
v538 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4604825882278563759
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v544 v546 
=== Succesors ===
next: v552 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v544 v546 #next: v552  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: a553 
=== Usages ===
=== Predecessor ===
v545 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a553  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a553 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j574 
=== Succesors ===
next: v556 
=== Usages ===
a572 
=== Predecessor ===
v552 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j574 #next: v556  <|@  <|@
f <@*|@fixed>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
a553 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a572 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v557 
values: a553 a554 
=== Succesors ===
=== Usages ===
j596 a119 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v557 values: a553 a554  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v556 v558 
=== Succesors ===
next: v244 
=== Usages ===
a572 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v556 v558 #next: v244  <|@  <|@
f <@~|@floating>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3865) [bci: 24]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i50 
y: i606 
=== Succesors ===
=== Usages ===
i114 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i50 y: i606  <|@  <|@
f <@~|@floating>@ <|@
tid i114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3865) [bci: 24]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: i32
=== Inputs ===
condition: v113 
trueValue: i50 
falseValue: i606 
=== Succesors ===
=== Usages ===
j598 v210 v209 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v113 trueValue: i50 falseValue: i606  <|@  <|@
f <@~|@floating>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 140]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i606 
y: i114 
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i606 y: i114  <|@  <|@
f <@*|@fixed>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v209 
=== Succesors ===
trueSuccessor: v242 
falseSuccessor: v243 
=== Usages ===
=== Predecessor ===
v557 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v209 #trueSuccessor: v242 #falseSuccessor: v243  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v283 
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v283  <|@  <|@
f <@~|@floating>@ <|@
tid i284 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.checkLength(Arrays.java:3820) [bci: 2]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3861) [bci: 2]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
rawvalue: -61721
stableDimension: 0
stamp: i32 [-61721]
stampKind: i32
value: int[-61721|0xffffffffffff0ee7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i278 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.checkLength(Arrays.java:3820) [bci: 2]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3861) [bci: 2]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v274 
=== Predecessor ===
v242 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B58" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 171]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v248 
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v248  <|@  <|@
f <@~|@floating>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i50 
y: i114 
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i50 y: i114  <|@  <|@
f <@*|@fixed>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v210 
=== Succesors ===
trueSuccessor: v246 
falseSuccessor: v247 
=== Usages ===
=== Predecessor ===
v243 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v210 #trueSuccessor: v246 #falseSuccessor: v247  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v285 
=== Usages ===
=== Predecessor ===
v248 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v285  <|@  <|@
f <@~|@floating>@ <|@
tid i286 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.checkLength(Arrays.java:3820) [bci: 2]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3861) [bci: 2]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
rawvalue: -62745
stableDimension: 0
stamp: i32 [-62745]
stampKind: i32
value: int[-62745|0xffffffffffff0ae7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i278 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.checkLength(Arrays.java:3820) [bci: 2]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3861) [bci: 2]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v274 
=== Predecessor ===
v246 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B43" "B54" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i278 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.checkLength(Arrays.java:3820) [bci: 2]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3861) [bci: 2]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: i32 [-62745 - -59667] bits:1...1000xxx101110x1x1
valueDescription: i32
=== Inputs ===
merge: v274 
values: i276 i284 i286 
=== Succesors ===
=== Usages ===
v280 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v274 values: i276 i284 i286  <|@  <|@
f <@~|@floating>@ <|@
tid j279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.checkLength(Arrays.java:3820) [bci: 2]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3861) [bci: 2]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: i64 [0 - 1300] bits:0...0x0x000x0x00
valueDescription: i64
=== Inputs ===
merge: v274 
values: j277 j259 j259 
=== Succesors ===
=== Usages ===
v280 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v274 values: j277 j259 j259  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.checkLength(Arrays.java:3820) [bci: 2]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3861) [bci: 2]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v275 v283 v285 
=== Succesors ===
next: v280 
=== Usages ===
i278 j279 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v275 v283 v285 #next: v280  <|@  <|@
f <@*|@fixed>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.checkLength(Arrays.java:3820) [bci: 2]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3861) [bci: 2]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
stateBefore: ?22 
actionAndReason: i278 
speculation: j279 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v274 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?22 actionAndReason: i278 speculation: j279  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: j594 
=== Usages ===
=== Predecessor ===
v248 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j594  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j594 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: i64
=== Inputs ===
object: a126 
=== Succesors ===
next: j596 
=== Usages ===
v663 
=== Predecessor ===
v247 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a126 #next: j596  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j596 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: i64
=== Inputs ===
object: a572 
=== Succesors ===
next: v599 
=== Usages ===
v664 
=== Predecessor ===
j594 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a572 #next: v599  <|@  <|@
f <@~|@floating>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j594 
index: - 
=== Succesors ===
=== Usages ===
v599 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j594 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j596 
index: - 
=== Succesors ===
=== Usages ===
v599 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j596 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j598 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i114 
=== Succesors ===
=== Usages ===
v599 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i114  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}
descriptorName: byteDisjointArraycopy
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v663 v664 j598 
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
j596 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v663 v664 j598 #next: v120  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v117 
=== Predecessor ===
v599 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B41" "B58" 
    successors "B62" 
    xhandlers
    flags 
    probability 4607182336702731708
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a119 <|@
d <@d|@=== Debug Properties ===
stamp: a!# byte[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v117 
values: a152 a572 
=== Succesors ===
=== Usages ===
a186 v289 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v117 values: a152 a572  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v118 v120 
=== Succesors ===
next: v287 
=== Usages ===
a119 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v118 v120 #next: v287  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.lang.String.<init>(String.java:4788) [bci: 35]
precise: true
stamp: void
=== Inputs ===
address: v626 
value: - 
stateBefore: - 
=== Succesors ===
next: v188 
=== Usages ===
=== Predecessor ===
v117 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v626 value: - stateBefore: - #next: v188  <|@  <|@
f <@~|@floating>@ <|@
tid a186 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.<init>(String.java:4788) [bci: 35]
op: Compress
stamp: n!# byte[]
=== Inputs ===
value: a119 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a119  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: String.value
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.<init>(String.java:4788) [bci: 35]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v626 
lastLocationAccess: - 
value: a186 
stateAfter: - 
=== Succesors ===
next: v289 
=== Usages ===
=== Predecessor ===
v287 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v626 lastLocationAccess: - value: a186 stateAfter: - #next: v289  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.lang.String.<init>(String.java:4788) [bci: 35]
precise: false
stamp: void
=== Inputs ===
address: v626 
value: a119 
object: a1 
=== Succesors ===
next: v43 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v626 value: a119 object: a1 #next: v43  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:4802) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
v289 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.<init>(String.java:4791) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: i607 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i607  <|@  <|@
f <@~|@floating>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
displacement: 17
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i607 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i607 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.maybeLatin1
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.<init>(String.java:4791) [bci: 48]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v627 
lastLocationAccess: - 
=== Succesors ===
next: v252 
=== Usages ===
v207 
=== Predecessor ===
v18 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v627 lastLocationAccess: - #next: v252  <|@  <|@
f <@~|@floating>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.<init>(String.java:4791) [bci: 51]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i607 
y: i199 
=== Succesors ===
=== Usages ===
v252 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i607 y: i199  <|@  <|@
f <@*|@fixed>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:4791) [bci: 51]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v207 
=== Succesors ===
trueSuccessor: v250 
falseSuccessor: v251 
=== Usages ===
=== Predecessor ===
i607 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v207 #trueSuccessor: v250 #falseSuccessor: v251  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.<init>(String.java:4799) [bci: 80]
stamp: void
=== Inputs ===
=== Succesors ===
next: v194 
=== Usages ===
=== Predecessor ===
v252 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v194  <|@  <|@
f <@~|@floating>@ <|@
tid i208 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.<init>(String.java:4799) [bci: 82]
rawvalue: 1
stableDimension: 0
stamp: i8 [1]
stampKind: i8
value: byte[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: String.coder
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.<init>(String.java:4799) [bci: 82]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v624 
lastLocationAccess: - 
value: i208 
stateAfter: - 
=== Succesors ===
next: a39 
=== Usages ===
=== Predecessor ===
v250 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v624 lastLocationAccess: - value: i208 stateAfter: - #next: a39  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:4800) [bci: 91]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i50 
y: i29 
=== Succesors ===
=== Usages ===
v195 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i50 y: i29  <|@  <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.lang.String.<init>(String.java:4800) [bci: 92]
referencedType: [null]
returnStamp: a# byte[]
signature: [UnresolvedJavaType<[B>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Arrays.copyOfRange(byte[], int, int)>
=== Inputs ===
arguments: a126 i15 i37 
=== Succesors ===
=== Usages ===
a39 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a126 i15 i37  <|@  <|@
tid ?253 <|@
d <@d|@=== Debug Properties ===
bci: 92
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<String.<init>(AbstractStringBuilder, Void)>
localsSize: 6
locksSize: 0
sourceFile: String.java
sourceLine: 4800
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
a39 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a39 <|@
d <@d|@=== Debug Properties ===
bci: 92
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.lang.String.<init>(String.java:4800) [bci: 92]
polymorphic: false
stamp: a# byte[]
targetMethod: Direct#Arrays.copyOfRange
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v195 
stateDuring: ?253 
=== Succesors ===
next: v290 
=== Usages ===
a196 v292 
=== Predecessor ===
v194 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v195 stateDuring: ?253 #next: v290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.lang.String.<init>(String.java:4800) [bci: 95]
precise: true
stamp: void
=== Inputs ===
address: v626 
value: - 
stateBefore: - 
=== Succesors ===
next: v197 
=== Usages ===
=== Predecessor ===
a39 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v626 value: - stateBefore: - #next: v197  <|@  <|@
f <@~|@floating>@ <|@
tid a196 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.<init>(String.java:4800) [bci: 95]
op: Compress
stamp: n# byte[]
=== Inputs ===
value: a39 
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a39  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: String.value
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.<init>(String.java:4800) [bci: 95]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v626 
lastLocationAccess: - 
value: a196 
stateAfter: - 
=== Succesors ===
next: v292 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v626 lastLocationAccess: - value: a196 stateAfter: - #next: v292  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.lang.String.<init>(String.java:4800) [bci: 95]
precise: false
stamp: void
=== Inputs ===
address: v626 
value: a39 
object: a1 
=== Succesors ===
next: v45 
=== Usages ===
=== Predecessor ===
v197 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v626 value: a39 object: a1 #next: v45  <|@  <|@
f <@*|@fixed>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:4802) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
v292 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.<init>(String.java:4802) [bci: 98]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v43 v45 
=== Succesors ===
next: v198 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v43 v45 #next: v198  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: ANY_LOCATION
nodeSourcePosition: at java.lang.String.<init>(String.java:4802) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: v48  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:4802) [bci: 98]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.<init>(String.java:4791) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: v666 
=== Usages ===
=== Predecessor ===
v252 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v666  <|@  <|@
f <@*|@fixed>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 249
mayConvertToGuard: true
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3853) [bci: 6]
at java.lang.String.<init>(String.java:4788) [bci: 32]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0x6b3f8a14]: UnreachedCode@6[HotSpotMethod<String.<init>(AbstractStringBuilder, Void)>, 54]}
stamp: void
=== Inputs ===
stateBefore: ?11 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?11  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v665 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v665  <|@  <|@
f <@*|@fixed>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 61
mayConvertToGuard: true
nodeSourcePosition: at java.lang.String.<init>(String.java:4784) [bci: 5]
reason: TypeCheckedInliningViolated
speculation: {0x0000000000000294[index: 20, len: 20, hash: 0x5c92fa1d]: FallbackDeopt@9[HotSpotMethod<String.<init>(AbstractStringBuilder, Void)>, 10, FALSE, jdk.graal.compiler.phases.common.inlining.InliningUtil$ReceiverTypeSpeculationContext, HotSpotType<Ljava/lang/StringBuilder;, resolved>, HotSpotType<Ljava/lang/StringBuffer;, resolved>]}
stamp: void
=== Inputs ===
stateBefore: ?4 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?4  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B64" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [vstack:0|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@32f57492 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4783) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v5|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B64 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607182323057074616
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B1 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B1" "B35" 
    successors "B37" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 16] trueDestinationProbability: 0.9999908853703156 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B60 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B42" 
    xhandlers
    flags 
    probability 4607182336702731707
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4785) [bci: 13]
stack: v27|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v4|QWORD[.] - - 
>@ <|@ instruction v28|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:13] <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v0|QWORD[.] + 16] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v28|DWORD, y: v27|DWORD) trueDestinationProbability: 0.2541630105061688 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v27|DWORD, y: v27|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = LEA address: [v42|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = AND x: v43|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = ADD (x: v44|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v45|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B51" 
    xhandlers
    flags 
    probability 4604825882278563758
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v44|QWORD + v41|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v44|QWORD + v41|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v44|QWORD + v41|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v41|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v41|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v41|QWORD + 12], y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA address: [v44|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v47|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B51 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4604759375651230885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B49" 
    successors "B49" "B50" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4634844288894646813
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v44|QWORD, y: v48|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4634792850175069044
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v41|QWORD + v48|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA address: [v48|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|QWORD] destination: B49 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604759375651230886
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4604825882278563759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = CMOVE (falseValue: v28|DWORD, ~trueValue: v27|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v28|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B58" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v27|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[*] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[*] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v56|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v57|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v52|QWORD[.]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = AND x: v32|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = ADD (x: v33|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v34|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4598204386423092713
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v30|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v30|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v30|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v30|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v30|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v30|QWORD + 12], y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|QWORD[.]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[*] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = MOVE input: v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v39|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v40|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v38|QWORD[.]] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B41" "B58" 
    successors "B62" 
    xhandlers
    flags 
    probability 4607182336702731708
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v60|QWORD, temp2: v61|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr   -1  <|@ instruction v62|DWORD[_] = COMPRESSPOINTER (input: v59|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v62|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v59|QWORD[.]) {temp: v63|QWORD, temp2: v64|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 4575248858818943354
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v29|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction NULLCHECK address: [v46|QWORD[.]] state [bci:27] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v46|QWORD[.]] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4575162870452290749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v41|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4568006969118877196
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v29|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction NULLCHECK address: [v35|QWORD[.]] state [bci:27] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v8|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B2 -> B3 falseDestination: B2 -> B8 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4532329488911171509
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = OR x: v8|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v1|QWORD[.]], cmpValue: rax|QWORD, newValue: v9|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|QWORD, y: v10|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4532267370277133279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B4" "B6" "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532382201905571021
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV input: [v14|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|QWORD, y: v15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4529143557278551352
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v17|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B19 -> B20 falseDestination: B19 -> B21 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529068261964565618
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v1|QWORD[.]], cmpValue: rax|QWORD, newValue: v15|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B20" "B27" 
    successors "B29" "B31" 
    xhandlers
    flags 
    probability 4529074299895794134
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 17] trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v0|QWORD[.] + 16] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = SHL value: v27|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v65|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4800) [bci: 92]
stack: v0|QWORD[.] 
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOfRange(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:92] <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v67|QWORD, temp2: v68|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr   -1  <|@ instruction v69|DWORD[_] = COMPRESSPOINTER (input: v66|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v69|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v66|QWORD[.]) {temp: v70|QWORD, temp2: v71|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B34" 
    xhandlers
    flags 
    probability 4526633713479026896
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B18" "B23" "B33" "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4530432362446083730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B25" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524572191115640556
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B30" 
    successors "B36" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|DWORD] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4502623928274233274
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD] y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV input: [v8|QWORD + 62] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|QWORD, y: v13|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4501820778258385448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v8|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4501097943244122404
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4502543613272648492
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = SUB (x: v11|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v12|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B14" 
    xhandlers
    flags 
    probability 4502464101421079557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B33" 
    xhandlers
    flags 
    probability 4499411328210841968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV input: [v19|QWORD + 134] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|QWORD, y: v20|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4499363139209891098
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOV input: [v19|QWORD + 150] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = OR (x: v21|QWORD, ~y: [v19|QWORD + 142]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|QWORD, y: v22|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4498676108457829474
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v19|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" "B15" 
    xhandlers
    flags 
    probability 4487506829360426131
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4484288269758412157
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4486864309347747871
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4484211167356890766
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v19|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4483447853581828992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v19|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v19|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4482760871184273395
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v19|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = XOR x: v23|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4481718189707699113
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction INC value: [v8|QWORD + 134] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4472659588851943866
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B7" "B15" "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4490722176362376714
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
locals: v1|QWORD[.] 
locks: monitor[v1|QWORD[.], vstack:0|QWORD] 
java.lang.String.<init>(String.java:4785) [bci: 10]
locals: v0|QWORD[.] v1|QWORD[.] - v4|QWORD[.] - - 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0, 10] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B34" 
    xhandlers
    flags 
    probability 4469235422845872850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = DEC value: v20|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD + 134], y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" 
    xhandlers
    flags 
    probability 4469173740924655728
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 4468563089904606309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -63763 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4785) [bci: 13]
stack: v27|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v4|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:13] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15667 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4783) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-61721|0xffffffffffff0ee7], long[0|0x0]] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-62745|0xffffffffffff0ae7], long[0|0x0]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-59667|0xffffffffffff16ed], long[1300|0x514]] destination: B43 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B43" "B54" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|DWORD, v55|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_1       
     5: invokevirtual #142        // java.lang.AbstractStringBuilder.getValue:()byte[]
     8: astore_3      
     9: aload_1       
    10: invokevirtual #141        // java.lang.AbstractStringBuilder.length:()int
    13: istore        4
    15: aload_1       
    16: invokevirtual #292        // java.lang.AbstractStringBuilder.isLatin1:()boolean
    19: ifeq          41
    22: aload_0       
    23: iconst_0      
    24: putfield      #2          // coder:byte
    27: aload_0       
    28: aload_3       
    29: iconst_0      
    30: iload         4
    32: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    35: putfield      #1          // value:byte[]
    38: goto          98
    41: getstatic     #8          // COMPACT_STRINGS:boolean
    44: ifeq          80
    47: aload_1       
    48: getfield      #293        // java.lang.AbstractStringBuilder.maybeLatin1:boolean
    51: ifeq          80
    54: aload_3       
    55: iconst_0      
    56: iload         4
    58: invokestatic  #294        // java.lang.StringUTF16.compress:(byte[], int, int)byte[]
    61: astore        5
    63: aload         5
    65: ifnull        80
    68: aload_0       
    69: iconst_0      
    70: putfield      #2          // coder:byte
    73: aload_0       
    74: aload         5
    76: putfield      #1          // value:byte[]
    79: return        
    80: aload_0       
    81: iconst_1      
    82: putfield      #2          // coder:byte
    85: aload_0       
    86: aload_3       
    87: iconst_0      
    88: iload         4
    90: iconst_1      
    91: ishl          
    92: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    95: putfield      #1          // value:byte[]
    98: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B64" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v601 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v601  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.lang.String
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?11 ?78 v624 ?22 v292 v626 ?253 v289 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a java.lang.AbstractStringBuilder
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v336 v627 j404 ?11 v622 ?78 v621 v623 v628 v642 v418 ?73 ?73 j317 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<String.<init>(AbstractStringBuilder, Void)>
localsSize: 6
locksSize: 0
sourceFile: String.java
sourceLine: 4783
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 
=== Succesors ===
=== Usages ===
v665 v601 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2  <|@  <|@
f <@~|@floating>@ <|@
tid v628 <|@
result [v1|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v601 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v601 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-31243|0xffffffffffff85f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v628 
lastLocationAccess: - 
=== Succesors ===
next: a602 
=== Usages ===
v296 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v628 lastLocationAccess: - #next: a602  <|@  <|@
f <@~|@floating>@ <|@
tid v621 <|@
result [v1|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a602 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a602 <|@
result v3|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.getValue(AbstractStringBuilder.java:1657) [bci: 1]
at java.lang.String.<init>(String.java:4784) [bci: 5]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v621 
lastLocationAccess: - 
=== Succesors ===
next: v66 
=== Usages ===
a126 v625 
=== Predecessor ===
v601 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v621 lastLocationAccess: - #next: v66  <|@  <|@
f <@~|@floating>@ <|@
tid a126 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.getValue(AbstractStringBuilder.java:1657) [bci: 1]
at java.lang.String.<init>(String.java:4784) [bci: 5]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a602 
=== Succesors ===
=== Usages ===
?11 ?78 ?22 v195 j514 j594 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a602  <|@  <|@
f <@~|@floating>@ <|@
tid v296 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v601 
=== Succesors ===
=== Usages ===
v66 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v601  <|@  <|@
f <@~|@floating>@ <|@
tid i29 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.<init>(String.java:4791) [bci: 41]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i37 i439 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.<init>(String.java:4786) [bci: 19]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v99 v195 v412 v308 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j259 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.<init>(String.java:4784) [bci: 5]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v395 v399 j279 j279 i307 v451 v303 v449 v582 v360 i403 v378 v385 v390 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j346 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:260) [bci: 154]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
j316 j318 j335 v498 v577 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v622 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i603 i604 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}]
keySuccessors: [I@3f00dd76
keys: [HotSpotType<Ljava/lang/StringBuilder;, resolved>, HotSpotType<Ljava/lang/StringBuffer;, resolved>]
profileData: PROFILED keyProbabilities: [0.9999893703980467, 1.0629601953295656E-5, 0.0]
stamp: void
=== Inputs ===
value: v296 
=== Succesors ===
successors: v54 v59 v62 
=== Usages ===
=== Predecessor ===
a602 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v296 #successors: v54 v59 v62  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [vstack:0|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@32f57492 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4783) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v5|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B64 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607182323057074616
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: i603 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i603  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i603 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.length(AbstractStringBuilder.java:195) [bci: 1]
at java.lang.StringBuilder.length(StringBuilder.java:91) [bci: 1]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v622 
lastLocationAccess: - 
=== Succesors ===
next: v55 
=== Usages ===
i50 
=== Predecessor ===
v54 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v622 lastLocationAccess: - #next: v55  <|@  <|@
f <@*|@fixed>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
i603 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B1 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: j358 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j358  <|@  <|@
f <@~|@floating>@ <|@
tid v642 <|@
result [v1|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
j444 j445 j358 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j358 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:757) [bci: 30]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:197) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v642 
lastLocationAccess: - 
=== Succesors ===
next: j297 
=== Usages ===
j318 v342 v632 v633 
=== Predecessor ===
v59 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v642 lastLocationAccess: - #next: j297  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j297 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
lockDepth: 0
nodeSourcePosition: at jdk.graal.compiler.hotspot.nodes.BeginLockScopeNode.beginLockScope(int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:198) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j298 
=== Usages ===
v629 v336 j320 
=== Predecessor ===
j358 >@ <|@
instruction <@BeginLockScope|@jdk.graal.compiler.hotspot.nodes.BeginLockScopeNode>@ stateAfter: - #next: j298  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j298 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:199) [bci: 24] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: v301 
=== Usages ===
i307 v312 v631 
=== Predecessor ===
j297 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: v301  <|@  <|@
f <@~|@floating>@ <|@
tid v629 <|@
result [v9|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j297 
index: - 
=== Succesors ===
=== Usages ===
v359 v360 v361 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j297 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j341 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:272) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
rawvalue: 2
stableDimension: 0
stamp: i64 [2]
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v342 v424 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:272) [bci: 14]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
x: j358 
y: j341 
=== Succesors ===
=== Usages ===
v301 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j358 y: j341  <|@  <|@
f <@*|@fixed>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:272) [bci: 20]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v342 
=== Succesors ===
trueSuccessor: v300 
falseSuccessor: v299 
=== Usages ===
=== Predecessor ===
j298 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v342 #trueSuccessor: v300 #falseSuccessor: v299  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v8|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B2 -> B3 falseDestination: B2 -> B8 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4532329488911171509
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:279) [bci: 51]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j317 
=== Usages ===
=== Predecessor ===
v301 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j317  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j317 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:279) [bci: 52]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2 
=== Succesors ===
next: v359 
=== Usages ===
v630 
=== Predecessor ===
v300 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a2 #next: v359  <|@  <|@
f <@~|@floating>@ <|@
tid j318 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:282) [bci: 64]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64 [-9223372036854775807 - 9223372036854775807] bits:x...x1
=== Inputs ===
x: j358 
y: j346 
=== Succesors ===
=== Usages ===
j320 v321 v359 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: j358 y: j346  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: DisplacedMarkWord
location: DisplacedMarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:286) [bci: 90]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v629 
lastLocationAccess: - 
value: j318 
stateAfter: - 
=== Succesors ===
next: j320 
=== Usages ===
=== Predecessor ===
j317 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v629 lastLocationAccess: - value: j318 stateAfter: - #next: j320  <|@  <|@
f <@~|@floating>@ <|@
tid v630 <|@
result [v1|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j317 
index: - 
=== Succesors ===
=== Usages ===
j320 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j317 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j320 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: MarkWord
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:293) [bci: 107]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v630 
lastLocationAccess: - 
expectedValue: j318 
newValue: j297 
stateAfter: - 
=== Succesors ===
next: v324 
=== Usages ===
v321 j326 
=== Predecessor ===
v359 >@ <|@
instruction <@ValueCompareAndSwap|@jdk.graal.compiler.nodes.java.ValueCompareAndSwapNode>@ stateBefore: - guard: - address: v630 lastLocationAccess: - expectedValue: j318 newValue: j297 stateAfter: - #next: v324  <|@  <|@
f <@~|@floating>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:294) [bci: 124]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j318 
y: j320 
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j318 y: j320  <|@  <|@
f <@*|@fixed>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:294) [bci: 130]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v321 
=== Succesors ===
trueSuccessor: v322 
falseSuccessor: v323 
=== Usages ===
=== Predecessor ===
j320 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v321 #trueSuccessor: v322 #falseSuccessor: v323  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = OR x: v8|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v1|QWORD[.]], cmpValue: rax|QWORD, newValue: v9|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|QWORD, y: v10|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4532267370277133279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:295) [bci: 133]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v331 
=== Usages ===
=== Predecessor ===
v324 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v331  <|@  <|@
f <@*|@fixed>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
v322 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4502543613272648492
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:299) [bci: 152]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j325 
=== Usages ===
=== Predecessor ===
v324 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j325  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j325 <|@
result rsp|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:316) [bci: 176]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
register: rsp
stamp: i64
=== Inputs ===
=== Succesors ===
next: v329 
=== Usages ===
j326 
=== Predecessor ===
v323 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: v329  <|@  <|@
f <@~|@floating>@ <|@
tid j326 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:317) [bci: 188]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64
=== Inputs ===
x: j320 
y: j325 
=== Succesors ===
=== Usages ===
v351 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: j320 y: j325  <|@  <|@
f <@~|@floating>@ <|@
tid j350 <|@
result long[-4089|0xfffffffffffff007] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:317) [bci: 199]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
rawvalue: -4089
stableDimension: 0
stamp: i64 [-4089]
stampKind: i64
value: long[-4089|0xfffffffffffff007]
=== Inputs ===
=== Succesors ===
=== Usages ===
v351 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:317) [bci: 206]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
x: j326 
y: j350 
=== Succesors ===
=== Usages ===
v329 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j326 y: j350  <|@  <|@
f <@*|@fixed>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:317) [bci: 212]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v351 
=== Succesors ===
trueSuccessor: v327 
falseSuccessor: v328 
=== Usages ===
=== Predecessor ===
j325 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v351 #trueSuccessor: v327 #falseSuccessor: v328  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = SUB (x: v11|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v12|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B14" 
    xhandlers
    flags 
    probability 4502464101421079557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:319) [bci: 215]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v360 
=== Usages ===
=== Predecessor ===
v329 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v360  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: DisplacedMarkWord
location: DisplacedMarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:319) [bci: 228]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v629 
lastLocationAccess: - 
value: j259 
stateAfter: - 
=== Succesors ===
next: v332 
=== Usages ===
=== Predecessor ===
v327 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v629 lastLocationAccess: - value: j259 stateAfter: - #next: v332  <|@  <|@
f <@*|@fixed>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
v360 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4472659588851943866
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:324) [bci: 250]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v333 
=== Usages ===
=== Predecessor ===
v329 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v333  <|@  <|@
f <@*|@fixed>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v353 
=== Predecessor ===
v328 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4502623928274233274
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:275) [bci: 23]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v361 
=== Usages ===
=== Predecessor ===
v301 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v361  <|@  <|@
f <@~|@floating>@ <|@
tid j343 <|@
result long[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:275) [bci: 31]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
rawvalue: 3
stableDimension: 0
stamp: i64 [3]
stampKind: i64
value: long[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v361 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: DisplacedMarkWord
location: DisplacedMarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:275) [bci: 37]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v629 
lastLocationAccess: - 
value: j343 
stateAfter: - 
=== Succesors ===
next: j362 
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v629 lastLocationAccess: - value: j343 stateAfter: - #next: j362  <|@  <|@
f <@~|@floating>@ <|@
tid v632 <|@
result [v8|QWORD + 62] <|@
d <@d|@=== Debug Properties ===
displacement: 62
stamp: void*
stride: S1
=== Inputs ===
base: j358 
index: - 
=== Succesors ===
=== Usages ===
i307 j362 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j358 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j362 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ObjectMonitor::_owner
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:241) [bci: 27]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v632 
lastLocationAccess: - 
=== Succesors ===
next: v306 
=== Usages ===
v303 v312 
=== Predecessor ===
v361 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v632 lastLocationAccess: - #next: v306  <|@  <|@
f <@~|@floating>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:246) [bci: 41]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j362 
y: j259 
=== Succesors ===
=== Usages ===
v306 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j362 y: j259  <|@  <|@
f <@*|@fixed>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:246) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v303 
=== Succesors ===
trueSuccessor: v304 
falseSuccessor: v305 
=== Usages ===
=== Predecessor ===
j362 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v303 #trueSuccessor: v304 #falseSuccessor: v305  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD] y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV input: [v8|QWORD + 62] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|QWORD, y: v13|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4501820778258385448
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:248) [bci: 50]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i307 
=== Usages ===
=== Predecessor ===
v306 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i307  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i307 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: ObjectMonitor::_owner
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:248) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i32 [0 - 1] bits:0...0x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v632 
lastLocationAccess: - 
expectedValue: j259 
newValue: j298 
stateAfter: - 
=== Succesors ===
next: v311 
=== Usages ===
v308 
=== Predecessor ===
v304 >@ <|@
instruction <@LogicCompareAndSwap|@jdk.graal.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v632 lastLocationAccess: - expectedValue: j259 newValue: j298 stateAfter: - #next: v311  <|@  <|@
f <@~|@floating>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:248) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i307 
y: i15 
=== Succesors ===
=== Usages ===
v311 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i307 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:248) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v308 
=== Succesors ===
trueSuccessor: v310 
falseSuccessor: v309 
=== Usages ===
=== Predecessor ===
i307 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v308 #trueSuccessor: v310 #falseSuccessor: v309  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v8|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4486864309347747871
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:254) [bci: 90]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v348 
=== Usages ===
=== Predecessor ===
v311 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v348  <|@  <|@
f <@*|@fixed>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v353 
=== Predecessor ===
v310 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4501097943244122404
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:250) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v330 
=== Usages ===
=== Predecessor ===
v311 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v330  <|@  <|@
f <@*|@fixed>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
v309 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" "B15" 
    xhandlers
    flags 
    probability 4487506829360426131
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:257) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v315 
=== Usages ===
=== Predecessor ===
v306 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v315  <|@  <|@
f <@~|@floating>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:257) [bci: 115]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j298 
y: j362 
=== Succesors ===
=== Usages ===
v315 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j298 y: j362  <|@  <|@
f <@*|@fixed>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:257) [bci: 121]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.4
stamp: void
=== Inputs ===
condition: v312 
=== Succesors ===
trueSuccessor: v313 
falseSuccessor: v314 
=== Usages ===
=== Predecessor ===
v305 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v312 #trueSuccessor: v313 #falseSuccessor: v314  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4481718189707699113
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:258) [bci: 124]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j363 
=== Usages ===
=== Predecessor ===
v315 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j363  <|@  <|@
f <@~|@floating>@ <|@
tid v633 <|@
result [v8|QWORD + 134] <|@
d <@d|@=== Debug Properties ===
displacement: 134
stamp: void*
stride: S1
=== Inputs ===
base: j358 
index: - 
=== Succesors ===
=== Usages ===
j363 v364 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j358 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j363 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ObjectMonitor::_recursions
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:259) [bci: 139]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v633 
lastLocationAccess: - 
=== Succesors ===
next: v364 
=== Usages ===
j316 
=== Predecessor ===
v313 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v633 lastLocationAccess: - #next: v364  <|@  <|@
f <@~|@floating>@ <|@
tid j316 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:260) [bci: 154]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64
=== Inputs ===
x: j363 
y: j346 
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j363 y: j346  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: ObjectMonitor::_recursions
location: ObjectMonitor::_recursions
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:260) [bci: 160]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v633 
lastLocationAccess: - 
value: j316 
stateAfter: - 
=== Succesors ===
next: v349 
=== Usages ===
=== Predecessor ===
j363 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v633 lastLocationAccess: - value: j316 stateAfter: - #next: v349  <|@  <|@
f <@*|@fixed>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
v364 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction INC value: [v8|QWORD + 134] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B4" "B6" "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532382201905571021
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 125] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v330 v331 v332 v349 
=== Succesors ===
next: j365 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v330 v331 v332 v349 #next: j365  <|@  <|@
f <@~|@floating>@ <|@
tid v631 <|@
result [r15|QWORD + 1360] <|@
d <@d|@=== Debug Properties ===
displacement: 1360
stamp: void*
stride: S1
=== Inputs ===
base: j298 
index: - 
=== Succesors ===
=== Usages ===
j365 v366 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j298 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j365 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: JavaThread::_held_monitor_count
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.updateHeldMonitorCount(MonitorSnippets.java:584) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.incrementHeldMonitorCount(MonitorSnippets.java:576) [bci: 2]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:216) [bci: 130] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v631 
lastLocationAccess: - 
=== Succesors ===
next: v366 
=== Usages ===
j335 
=== Predecessor ===
v352 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v631 lastLocationAccess: - #next: v366  <|@  <|@
f <@~|@floating>@ <|@
tid j335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.updateHeldMonitorCount(MonitorSnippets.java:585) [bci: 26]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.incrementHeldMonitorCount(MonitorSnippets.java:576) [bci: 2]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:216) [bci: 130] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64
=== Inputs ===
x: j365 
y: j346 
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j365 y: j346  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: JavaThread::_held_monitor_count
location: JavaThread::_held_monitor_count
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.updateHeldMonitorCount(MonitorSnippets.java:585) [bci: 32]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.incrementHeldMonitorCount(MonitorSnippets.java:576) [bci: 2]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:216) [bci: 130] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v631 
lastLocationAccess: - 
value: j335 
stateAfter: - 
=== Succesors ===
next: v337 
=== Usages ===
=== Predecessor ===
j365 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v631 lastLocationAccess: - value: j335 stateAfter: - #next: v337  <|@  <|@
f <@*|@fixed>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:221) [bci: 145] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
v366 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4484288269758412157
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:265) [bci: 181]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v347 
=== Usages ===
=== Predecessor ===
v315 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v347  <|@  <|@
f <@*|@fixed>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryEnterInflated(MonitorSnippets.java:268) [bci: 197]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackLocking(MonitorSnippets.java:276) [bci: 47]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathLocking(MonitorSnippets.java:230) [bci: 42]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 122] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v353 
=== Predecessor ===
v314 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B7" "B15" "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4490722176362376714
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:215) [bci: 125] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v333 v347 v348 
=== Succesors ===
next: v336 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v333 v347 v348 #next: v336  <|@  <|@
tid ?78 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<String.<init>(AbstractStringBuilder, Void)>
localsSize: 6
locksSize: 0
sourceFile: String.java
sourceLine: 4785
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 - a126 
=== Succesors ===
=== Usages ===
?73 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - a126  <|@  <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
bci: 0
eliminated: false
lockDepth: 0
multipleEntry: false
nodeSourcePosition: at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
?73 
=== Predecessor ===
- >@ <|@
instruction <@MonitorId|@jdk.graal.compiler.nodes.java.MonitorIdNode>@  <|@  <|@
tid ?73 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<StringBuffer.length()>
localsSize: 1
locksSize: 1
nodeSourcePosition: at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
sourceFile: StringBuffer.java
sourceLine: 205
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?78 
values: a2 a2 
monitorIds: v71 
=== Succesors ===
=== Usages ===
v336 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?78 values: a2 a2 monitorIds: v71  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{monitorenter(Object,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[ANY_LOCATION], transition=SAFEPOINT}
descriptorName: monitorenter
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenterStubC(ForeignCallDescriptor, Object, Word) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:219) [bci: 142] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?73 
arguments: a2 j297 
=== Succesors ===
next: v339 
=== Usages ===
=== Predecessor ===
v353 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?73 arguments: a2 j297 #next: v339  <|@  <|@
f <@*|@fixed>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:221) [bci: 145] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
v336 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
locals: v1|QWORD[.] 
locks: monitor[v1|QWORD[.], vstack:0|QWORD] 
java.lang.String.<init>(String.java:4785) [bci: 10]
locals: v0|QWORD[.] v1|QWORD[.] - v4|QWORD[.] - - 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0, 10] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(MonitorSnippets.java:221) [bci: 145] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorenter(Object, KlassPointer, int, Register, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v337 v339 
=== Succesors ===
next: v456 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v337 v339 #next: v456  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
locations: [DisplacedMarkWord, ObjectMonitor::_owner, ObjectMonitor::_cxq, ObjectMonitor::_EntryList, ObjectMonitor::_recursions, ObjectMonitor::_succ, MarkWord, JavaThread::_held_monitor_count]
nodeSourcePosition: at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j375 
=== Usages ===
=== Predecessor ===
v338 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j375  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j375 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:395) [bci: 6] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j376 
=== Usages ===
i403 v636 
=== Predecessor ===
v456 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j376  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j376 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
lockDepth: 0
nodeSourcePosition: at jdk.graal.compiler.hotspot.nodes.CurrentLockNode.currentLock(int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:396) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64
=== Inputs ===
=== Succesors ===
next: j440 
=== Usages ===
v634 i406 v418 
=== Predecessor ===
j375 >@ <|@
instruction <@CurrentLock|@jdk.graal.compiler.hotspot.nodes.CurrentLockNode>@ #next: j440  <|@  <|@
f <@~|@floating>@ <|@
tid v634 <|@
result [v14|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j376 
index: - 
=== Succesors ===
=== Usages ===
j440 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j376 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j440 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: DisplacedMarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:397) [bci: 28] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v634 
lastLocationAccess: - 
=== Succesors ===
next: i604 
=== Usages ===
v378 i406 
=== Predecessor ===
j376 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v634 lastLocationAccess: - #next: i604  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i604 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 1]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v622 
lastLocationAccess: - 
=== Succesors ===
next: v381 
=== Usages ===
i50 
=== Predecessor ===
j440 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v622 lastLocationAccess: - #next: v381  <|@  <|@
f <@~|@floating>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:427) [bci: 5]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j440 
y: j259 
=== Succesors ===
=== Usages ===
v381 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j440 y: j259  <|@  <|@
f <@~|@floating>@ <|@
tid j430 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:565) [bci: 324]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
rawvalue: -1
stableDimension: 0
stamp: i64 [-1]
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j417 j431 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:427) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.4
stamp: void
=== Inputs ===
condition: v378 
=== Succesors ===
trueSuccessor: v379 
falseSuccessor: v380 
=== Usages ===
=== Predecessor ===
i604 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v378 #trueSuccessor: v379 #falseSuccessor: v380  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV input: [v14|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|QWORD, y: v15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B34" 
    xhandlers
    flags 
    probability 4526633713479026896
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:429) [bci: 14]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v408 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v408  <|@  <|@
f <@*|@fixed>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v379 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4529143557278551352
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:434) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j444 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j444  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j444 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:757) [bci: 30]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:434) [bci: 41]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v642 
lastLocationAccess: - 
=== Succesors ===
next: v384 
=== Usages ===
v424 
=== Predecessor ===
v380 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v642 lastLocationAccess: - #next: v384  <|@  <|@
f <@~|@floating>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:436) [bci: 61]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
x: j444 
y: j341 
=== Succesors ===
=== Usages ===
v384 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j444 y: j341  <|@  <|@
f <@*|@fixed>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:436) [bci: 67]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v424 
=== Succesors ===
trueSuccessor: v383 
falseSuccessor: v382 
=== Usages ===
=== Predecessor ===
j444 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v424 #trueSuccessor: v383 #falseSuccessor: v382  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v17|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B19 -> B20 falseDestination: B19 -> B21 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529068261964565618
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:440) [bci: 80]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j404 
=== Usages ===
=== Predecessor ===
v384 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j404  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j404 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:440) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2 
=== Succesors ===
next: i406 
=== Usages ===
v635 
=== Predecessor ===
v383 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a2 #next: i406  <|@  <|@
f <@~|@floating>@ <|@
tid v635 <|@
result [v1|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j404 
index: - 
=== Succesors ===
=== Usages ===
i406 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j404 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i406 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: MarkWord
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:440) [bci: 98]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i32 [0 - 1] bits:0...0x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v635 
lastLocationAccess: - 
expectedValue: j376 
newValue: j440 
stateAfter: - 
=== Succesors ===
next: v411 
=== Usages ===
i409 
=== Predecessor ===
j404 >@ <|@
instruction <@LogicCompareAndSwap|@jdk.graal.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v635 lastLocationAccess: - expectedValue: j376 newValue: j440 stateAfter: - #next: v411  <|@  <|@
f <@*|@fixed>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v407 
=== Predecessor ===
i406 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v1|QWORD[.]], cmpValue: rax|QWORD, newValue: v15|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B33" 
    xhandlers
    flags 
    probability 4499411328210841968
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 70]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j445 
=== Usages ===
=== Predecessor ===
v384 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j445  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j445 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:757) [bci: 30]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:517) [bci: 7]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v642 
lastLocationAccess: - 
=== Succesors ===
next: j446 
=== Usages ===
v637 v638 v639 v640 v641 
=== Predecessor ===
v382 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v642 lastLocationAccess: - #next: j446  <|@  <|@
f <@~|@floating>@ <|@
tid v637 <|@
result [v19|QWORD + 134] <|@
d <@d|@=== Debug Properties ===
displacement: 134
stamp: void*
stride: S1
=== Inputs ===
base: j445 
index: - 
=== Succesors ===
=== Usages ===
j446 v453 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j445 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j446 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ObjectMonitor::_recursions
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:521) [bci: 48]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v637 
lastLocationAccess: - 
=== Succesors ===
next: v388 
=== Usages ===
v385 j431 
=== Predecessor ===
j445 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v637 lastLocationAccess: - #next: v388  <|@  <|@
f <@~|@floating>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:522) [bci: 62]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j446 
y: j259 
=== Succesors ===
=== Usages ===
v388 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j446 y: j259  <|@  <|@
f <@*|@fixed>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:522) [bci: 68]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v385 
=== Succesors ===
trueSuccessor: v386 
falseSuccessor: v387 
=== Usages ===
=== Predecessor ===
j446 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v385 #trueSuccessor: v386 #falseSuccessor: v387  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV input: [v19|QWORD + 134] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|QWORD, y: v20|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4499363139209891098
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:524) [bci: 71]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j447 
=== Usages ===
=== Predecessor ===
v388 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j447  <|@  <|@
f <@~|@floating>@ <|@
tid v638 <|@
result [v19|QWORD + 150] <|@
d <@d|@=== Debug Properties ===
displacement: 150
stamp: void*
stride: S1
=== Inputs ===
base: j445 
index: - 
=== Succesors ===
=== Usages ===
j447 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j445 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j447 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ObjectMonitor::_cxq
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:525) [bci: 86]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v638 
lastLocationAccess: - 
=== Succesors ===
next: j448 
=== Usages ===
j389 
=== Predecessor ===
v386 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v638 lastLocationAccess: - #next: j448  <|@  <|@
f <@~|@floating>@ <|@
tid v639 <|@
result [v19|QWORD + 142] <|@
d <@d|@=== Debug Properties ===
displacement: 142
stamp: void*
stride: S1
=== Inputs ===
base: j445 
index: - 
=== Succesors ===
=== Usages ===
j448 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j445 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j448 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ObjectMonitor::_EntryList
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:527) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v639 
lastLocationAccess: - 
=== Succesors ===
next: v393 
=== Usages ===
j389 
=== Predecessor ===
j447 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v639 lastLocationAccess: - #next: v393  <|@  <|@
f <@~|@floating>@ <|@
tid j389 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:528) [bci: 124]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64
=== Inputs ===
x: j447 
y: j448 
=== Succesors ===
=== Usages ===
v390 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: j447 y: j448  <|@  <|@
f <@~|@floating>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:528) [bci: 128]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j389 
y: j259 
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j389 y: j259  <|@  <|@
f <@~|@floating>@ <|@
tid v640 <|@
result [v19|QWORD + 62] <|@
d <@d|@=== Debug Properties ===
displacement: 62
stamp: void*
stride: S1
=== Inputs ===
base: j445 
index: - 
=== Succesors ===
=== Usages ===
i403 v449 v451 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j445 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:528) [bci: 134]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v390 
=== Succesors ===
trueSuccessor: v391 
falseSuccessor: v392 
=== Usages ===
=== Predecessor ===
j448 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v390 #trueSuccessor: v391 #falseSuccessor: v392  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOV input: [v19|QWORD + 150] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = OR (x: v21|QWORD, ~y: [v19|QWORD + 142]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|QWORD, y: v22|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4498676108457829474
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:532) [bci: 137]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v394 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v394  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
barriersString: LOAD_STORE STORE_STORE
fence: STORE_RELEASE
location: ANY_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:532) [bci: 140]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v449 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: v449  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: ANY_LOCATION
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:533) [bci: 150]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v640 
lastLocationAccess: - 
value: j259 
stateAfter: - 
=== Succesors ===
next: v410 
=== Usages ===
=== Predecessor ===
v394 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v640 lastLocationAccess: - value: j259 stateAfter: - #next: v410  <|@  <|@
f <@*|@fixed>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v449 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v19|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4484211167356890766
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:538) [bci: 171]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j450 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j450  <|@  <|@
f <@~|@floating>@ <|@
tid v641 <|@
result [v19|QWORD + 158] <|@
d <@d|@=== Debug Properties ===
displacement: 158
stamp: void*
stride: S1
=== Inputs ===
base: j445 
index: - 
=== Succesors ===
=== Usages ===
j450 j452 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j445 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j450 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ObjectMonitor::_succ
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:539) [bci: 186]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v641 
lastLocationAccess: - 
=== Succesors ===
next: v398 
=== Usages ===
v395 
=== Predecessor ===
v392 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v641 lastLocationAccess: - #next: v398  <|@  <|@
f <@~|@floating>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:540) [bci: 199]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j450 
y: j259 
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j450 y: j259  <|@  <|@
f <@*|@fixed>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:540) [bci: 205]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v395 
=== Succesors ===
trueSuccessor: v397 
falseSuccessor: v396 
=== Usages ===
=== Predecessor ===
j450 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v395 #trueSuccessor: v397 #falseSuccessor: v396  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v19|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" 
    xhandlers
    flags 
    probability 4469173740924655728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:563) [bci: 314]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v433 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v433  <|@  <|@
f <@*|@fixed>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v613 
=== Predecessor ===
v397 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4483447853581828992
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:543) [bci: 208]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v451 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v451  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: ANY_LOCATION
location: ANY_LOCATION
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:543) [bci: 215]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v640 
lastLocationAccess: - 
value: j259 
stateAfter: - 
=== Succesors ===
next: j452 
=== Usages ===
=== Predecessor ===
v396 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v640 lastLocationAccess: - value: j259 stateAfter: - #next: j452  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j452 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ObjectMonitor::_succ
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:544) [bci: 225]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v641 
lastLocationAccess: - 
=== Succesors ===
next: v402 
=== Usages ===
v399 
=== Predecessor ===
v451 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v641 lastLocationAccess: - #next: v402  <|@  <|@
f <@~|@floating>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:545) [bci: 238]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j452 
y: j259 
=== Succesors ===
=== Usages ===
v402 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j452 y: j259  <|@  <|@
f <@*|@fixed>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:545) [bci: 244]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v399 
=== Succesors ===
trueSuccessor: v401 
falseSuccessor: v400 
=== Usages ===
=== Predecessor ===
j452 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v399 #trueSuccessor: v401 #falseSuccessor: v400  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v19|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v19|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4482760871184273395
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:554) [bci: 265]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i403 
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i403  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i403 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
location: ObjectMonitor::_owner
memoryOrder: VOLATILE
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:554) [bci: 279]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i32 [0 - 1] bits:0...0x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v640 
lastLocationAccess: - 
expectedValue: j259 
newValue: j375 
stateAfter: - 
=== Succesors ===
next: v434 
=== Usages ===
i439 
=== Predecessor ===
v401 >@ <|@
instruction <@LogicCompareAndSwap|@jdk.graal.compiler.nodes.java.LogicCompareAndSwapNode>@ stateBefore: - guard: - address: v640 lastLocationAccess: - expectedValue: j259 newValue: j375 stateAfter: - #next: v434  <|@  <|@
f <@~|@floating>@ <|@
tid i439 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:554) [bci: 293]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
x: i403 
y: i29 
=== Succesors ===
=== Usages ===
i409 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i403 y: i29  <|@  <|@
f <@*|@fixed>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v407 
=== Predecessor ===
i403 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v19|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = XOR x: v23|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B20" "B27" 
    successors "B29" "B31" 
    xhandlers
    flags 
    probability 4529074299895794134
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i409 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i32 [0 - 1] bits:0...0x
valueDescription: i32
=== Inputs ===
merge: v407 
values: i406 i439 
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v407 values: i406 i439  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v411 v434 
=== Succesors ===
next: v415 
=== Usages ===
i409 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v411 v434 #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 76] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i409 
y: i15 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i409 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 76] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v412 
=== Succesors ===
trueSuccessor: v614 
falseSuccessor: v610 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v412 #trueSuccessor: v614 #falseSuccessor: v610  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:406) [bci: 87] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v615 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v615  <|@  <|@
f <@*|@fixed>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 76] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v613 
=== Predecessor ===
v614 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B25" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524572191115640556
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 76] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v615 v433 
=== Succesors ===
next: v418 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v615 v433 #next: v418  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{monitorexit(Object,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=STACK_INSPECTABLE_LEAF}
descriptorName: monitorexit
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexitStubC(ForeignCallDescriptor, Object, Word) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:406) [bci: 93] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a2 j376 
=== Succesors ===
next: v421 
=== Usages ===
=== Predecessor ===
v613 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a2 j376 #next: v421  <|@  <|@
f <@*|@fixed>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:408) [bci: 96] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
v418 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:404) [bci: 79] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v611 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v611  <|@  <|@
f <@*|@fixed>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 76] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v610 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 4468563089904606309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:548) [bci: 247]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v435 
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v435  <|@  <|@
f <@*|@fixed>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v400 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B34" 
    xhandlers
    flags 
    probability 4469235422845872850
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:565) [bci: 317]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v453 
=== Usages ===
=== Predecessor ===
v388 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v453  <|@  <|@
f <@~|@floating>@ <|@
tid j431 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:565) [bci: 324]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64
=== Inputs ===
x: j446 
y: j430 
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j446 y: j430  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: ObjectMonitor::_recursions
location: ObjectMonitor::_recursions
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryExitInflated(MonitorSnippets.java:565) [bci: 330]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v637 
lastLocationAccess: - 
value: j431 
stateAfter: - 
=== Succesors ===
next: v432 
=== Usages ===
=== Predecessor ===
v387 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v637 lastLocationAccess: - value: j431 stateAfter: - #next: v432  <|@  <|@
f <@*|@fixed>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryStackUnlocking(MonitorSnippets.java:437) [bci: 76]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.tryFastPathUnlocking(MonitorSnippets.java:419) [bci: 34]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 73] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
v453 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = DEC value: v20|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD + 134], y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B18" "B23" "B33" "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4530432362446083730
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:403) [bci: 76] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v611 v408 v410 v432 v435 
=== Succesors ===
next: j441 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v611 v408 v410 v432 v435 #next: j441  <|@  <|@
f <@~|@floating>@ <|@
tid v636 <|@
result [r15|QWORD + 1360] <|@
d <@d|@=== Debug Properties ===
displacement: 1360
stamp: void*
stride: S1
=== Inputs ===
base: j375 
index: - 
=== Succesors ===
=== Usages ===
j441 v442 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j375 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j441 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: JavaThread::_held_monitor_count
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.updateHeldMonitorCount(MonitorSnippets.java:584) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.decrementHeldMonitorCount(MonitorSnippets.java:580) [bci: 2]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:404) [bci: 81] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v636 
lastLocationAccess: - 
=== Succesors ===
next: v442 
=== Usages ===
j417 
=== Predecessor ===
v609 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v636 lastLocationAccess: - #next: v442  <|@  <|@
f <@~|@floating>@ <|@
tid j417 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.updateHeldMonitorCount(MonitorSnippets.java:585) [bci: 26]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.decrementHeldMonitorCount(MonitorSnippets.java:580) [bci: 2]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:404) [bci: 81] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: i64
=== Inputs ===
x: j441 
y: j430 
=== Succesors ===
=== Usages ===
v442 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j441 y: j430  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: JavaThread::_held_monitor_count
location: JavaThread::_held_monitor_count
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.updateHeldMonitorCount(MonitorSnippets.java:585) [bci: 32]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.decrementHeldMonitorCount(MonitorSnippets.java:580) [bci: 2]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:404) [bci: 81] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v636 
lastLocationAccess: - 
value: j417 
stateAfter: - 
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
j441 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v636 lastLocationAccess: - value: j417 stateAfter: - #next: v419  <|@  <|@
f <@*|@fixed>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:408) [bci: 96] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
v442 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B30" 
    successors "B36" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:408) [bci: 96] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v419 v421 
=== Succesors ===
next: v422 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v419 v421 #next: v422  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.nodes.EndLockScopeNode.endLockScope() [bci: -1]
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(MonitorSnippets.java:408) [bci: 96] Substitution
at jdk.graal.compiler.hotspot.replacements.MonitorSnippets.monitorexit(Object, int, Register, boolean, MonitorSnippets$Counters) [bci: -1] Substitution
at java.lang.StringBuffer.length() [bci: -3]
at java.lang.String.<init>(String.java:4785) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v60 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@EndLockScope|@jdk.graal.compiler.hotspot.nodes.EndLockScopeNode>@ stateAfter: - #next: v60  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
v422 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|DWORD] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B1" "B35" 
    successors "B37" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i50 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v49 
values: i603 i604 
=== Succesors ===
=== Usages ===
?11 i37 ?22 i114 v210 v88 v113 v99 v581 j525 a554 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v49 values: i603 i604  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v55 v60 
=== Succesors ===
next: i605 
=== Usages ===
i50 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v55 v60 #next: i605  <|@  <|@
f <@~|@floating>@ <|@
tid v623 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i605 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i605 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.isLatin1(AbstractStringBuilder.java:1693) [bci: 7]
at java.lang.String.<init>(String.java:4786) [bci: 16]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v623 
lastLocationAccess: - 
=== Succesors ===
next: v19 
=== Usages ===
v200 
=== Predecessor ===
v49 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v623 lastLocationAccess: - #next: v19  <|@  <|@
f <@~|@floating>@ <|@
tid i199 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.isLatin1(AbstractStringBuilder.java:1693) [bci: 10]
at java.lang.String.<init>(String.java:4786) [bci: 16]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v200 v139 v207 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.AbstractStringBuilder.isLatin1(AbstractStringBuilder.java:1693) [bci: 10]
at java.lang.String.<init>(String.java:4786) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i605 
y: i199 
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i605 y: i199  <|@  <|@
tid ?11 <|@
d <@d|@=== Debug Properties ===
bci: 13
bytecode: istore
code: ResolvedJavaMethodBytecode<String.<init>(AbstractStringBuilder, Void)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.lang.String.<init>(String.java:4785) [bci: 10]
sourceFile: String.java
sourceLine: 4785
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i50 a1 a2 - a126 
=== Succesors ===
=== Usages ===
v666 i606 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i50 a1 a2 - a126  <|@  <|@
f <@~|@floating>@ <|@
tid v626 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v188 v197 v287 v289 v290 v292 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v624 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v139 v194 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:4786) [bci: 19]
profileData: PROFILED designatedSuccessorProbability: 0.9999908853703156
stamp: void
=== Inputs ===
condition: v200 
=== Succesors ===
trueSuccessor: v17 
falseSuccessor: v18 
=== Usages ===
=== Predecessor ===
i605 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v200 #trueSuccessor: v17 #falseSuccessor: v18  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 16] trueDestinationProbability: 0.9999908853703156 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B60 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B42" 
    xhandlers
    flags 
    probability 4607182336702731707
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.<init>(String.java:4787) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: i606 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i606  <|@  <|@
f <@~|@floating>@ <|@
tid v625 <|@
result [v3|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a602 
=== Succesors ===
=== Usages ===
i606 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a602  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i606 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-36107|0xffffffffffff72f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3853) [bci: 6]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?11 
guard: - 
address: v625 
lastLocationAccess: - 
=== Succesors ===
next: v139 
=== Usages ===
v88 v113 i114 v502 j520 v209 a473 
=== Predecessor ===
v17 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?11 guard: - address: v625 lastLocationAccess: - #next: v139  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: String.coder
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.<init>(String.java:4787) [bci: 24]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v624 
lastLocationAccess: - 
value: i199 
stateAfter: - 
=== Succesors ===
next: v91 
=== Usages ===
=== Predecessor ===
i606 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v624 lastLocationAccess: - value: i199 stateAfter: - #next: v91  <|@  <|@
f <@~|@floating>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3853) [bci: 7]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i50 
y: i606 
=== Succesors ===
=== Usages ===
v91 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i50 y: i606  <|@  <|@
tid ?22 <|@
d <@d|@=== Debug Properties ===
bci: 27
bytecode: aload_0
code: ResolvedJavaMethodBytecode<String.<init>(AbstractStringBuilder, Void)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.lang.String.<init>(String.java:4787) [bci: 24]
sourceFile: String.java
sourceLine: 4788
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - - a126 i50 
=== Succesors ===
=== Usages ===
v618 v280 v620 a473 a554 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - a126 i50  <|@  <|@
f <@~|@floating>@ <|@
tid v600 <|@
result meta{HotSpotType<[B, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
rawvalue: meta{HotSpotType<[B, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<[B, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v501 v580 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v457 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
rawvalue: meta{HotSpotType<[B, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[B, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a473 a554 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j482 <|@
result long[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
rawvalue: 23
stableDimension: 0
stamp: i64 [23]
stampKind: i64
value: long[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
j483 j561 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j462 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:132) [bci: 23]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j463 j526 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3853) [bci: 7]
at java.lang.String.<init>(String.java:4788) [bci: 32]
profileData: PROFILED designatedSuccessorProbability: 0.2541630105061688
stamp: void
=== Inputs ===
condition: v88 
=== Succesors ===
trueSuccessor: v89 
falseSuccessor: v90 
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v88 #trueSuccessor: v89 #falseSuccessor: v90  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4785) [bci: 13]
stack: v27|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v4|QWORD[.] - - 
>@ <|@ instruction v28|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:13] <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v0|QWORD[.] + 16] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v28|DWORD, y: v27|DWORD) trueDestinationProbability: 0.2541630105061688 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 17]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v512 
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v512  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: j458 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j458  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j458 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j495 
=== Usages ===
v643 v644 
=== Predecessor ===
v512 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j495  <|@  <|@
f <@~|@floating>@ <|@
tid v643 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j458 
index: - 
=== Succesors ===
=== Usages ===
j495 v497 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j458 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j495 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v643 
lastLocationAccess: - 
=== Succesors ===
next: j496 
=== Usages ===
j464 v645 v646 a472 v650 v647 v648 v649 
=== Predecessor ===
j458 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v643 lastLocationAccess: - #next: j496  <|@  <|@
f <@~|@floating>@ <|@
tid v644 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j458 
index: - 
=== Succesors ===
=== Usages ===
j496 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j458 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j496 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v644 
lastLocationAccess: - 
=== Succesors ===
next: v468 
=== Usages ===
v465 
=== Predecessor ===
j495 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v644 lastLocationAccess: - #next: v468  <|@  <|@
f <@~|@floating>@ <|@
tid j520 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i606 
=== Succesors ===
=== Usages ===
v521 j483 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i606  <|@  <|@
f <@~|@floating>@ <|@
tid j483 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: i64 [23 - 2147483670] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j520 
y: j482 
=== Succesors ===
=== Usages ===
j463 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j520 y: j482  <|@  <|@
f <@~|@floating>@ <|@
tid j463 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: i64 [0 - 2147483664] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j483 
y: j462 
=== Succesors ===
=== Usages ===
j464 v647 v648 v649 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j483 y: j462  <|@  <|@
f <@~|@floating>@ <|@
tid j464 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: i64
=== Inputs ===
x: j463 
y: j495 
=== Succesors ===
=== Usages ===
v465 v497 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j463 y: j495  <|@  <|@
f <@~|@floating>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j496 
y: j464 
=== Succesors ===
=== Usages ===
v468 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j496 y: j464  <|@  <|@
f <@*|@fixed>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v465 
=== Succesors ===
trueSuccessor: v467 
falseSuccessor: v466 
=== Usages ===
=== Predecessor ===
j496 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v465 #trueSuccessor: v467 #falseSuccessor: v466  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = AND x: v32|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = ADD (x: v33|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v34|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4568006969118877196
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: a473 
=== Usages ===
=== Predecessor ===
v468 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a473  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a473 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?22 
arguments: v457 i606 
=== Succesors ===
next: v618 
=== Usages ===
v618 a493 
=== Predecessor ===
v467 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?22 arguments: v457 i606 #next: v618  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-130161|0xfffffffffffe038f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?22 
object: a473 
=== Succesors ===
next: v477 
=== Usages ===
=== Predecessor ===
a473 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?22 object: a473 #next: v477  <|@  <|@
f <@*|@fixed>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v476 
=== Predecessor ===
v618 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v29|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction NULLCHECK address: [v35|QWORD[.]] state [bci:27] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4598204386423092713
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v497 
=== Usages ===
=== Predecessor ===
v468 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v497  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v643 
lastLocationAccess: - 
value: j464 
stateAfter: - 
=== Succesors ===
next: v485 
=== Usages ===
=== Predecessor ===
v466 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v643 lastLocationAccess: - value: j464 stateAfter: - #next: v485  <|@  <|@
f <@~|@floating>@ <|@
tid v647 <|@
result [v33|QWORD + v30|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j463 
index: j495 
=== Succesors ===
=== Usages ===
v485 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j463 index: j495  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
address: v647 
=== Succesors ===
next: v488 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v647 #next: v488  <|@  <|@
f <@~|@floating>@ <|@
tid v648 <|@
result [v33|QWORD + v30|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j463 
index: j495 
=== Succesors ===
=== Usages ===
v488 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j463 index: j495  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
address: v648 
=== Succesors ===
next: v491 
=== Usages ===
=== Predecessor ===
v485 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v648 #next: v491  <|@  <|@
f <@~|@floating>@ <|@
tid v649 <|@
result [v33|QWORD + v30|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j463 
index: j495 
=== Succesors ===
=== Usages ===
v491 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j463 index: j495  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
address: v649 
=== Succesors ===
next: v498 
=== Usages ===
=== Predecessor ===
v488 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v649 #next: v498  <|@  <|@
f <@~|@floating>@ <|@
tid v645 <|@
result [v30|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j495 
index: - 
=== Succesors ===
=== Usages ===
v498 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j495 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v645 
lastLocationAccess: - 
value: j346 
stateAfter: - 
=== Succesors ===
next: v501 
=== Usages ===
=== Predecessor ===
v491 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v645 lastLocationAccess: - value: j346 stateAfter: - #next: v501  <|@  <|@
f <@~|@floating>@ <|@
tid v650 <|@
result [v30|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j495 
index: - 
=== Succesors ===
=== Usages ===
v501 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j495 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v650 
lastLocationAccess: - 
value: v600 
stateAfter: - 
=== Succesors ===
next: v502 
=== Usages ===
=== Predecessor ===
v498 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v650 lastLocationAccess: - value: v600 stateAfter: - #next: v502  <|@  <|@
f <@~|@floating>@ <|@
tid v646 <|@
result [v30|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j495 
index: - 
=== Succesors ===
=== Usages ===
v502 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j495 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v646 
lastLocationAccess: - 
value: i606 
stateAfter: - 
=== Succesors ===
next: v471 
=== Usages ===
=== Predecessor ===
v501 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v646 lastLocationAccess: - value: i606 stateAfter: - #next: v471  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: a472 
=== Usages ===
=== Predecessor ===
v502 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a472  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a472 <|@
result v37|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j495 
=== Succesors ===
next: v475 
=== Usages ===
a493 
=== Predecessor ===
v471 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j495 #next: v475  <|@  <|@
f <@*|@fixed>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v476 
=== Predecessor ===
a472 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v30|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v30|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v30|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v30|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v30|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v30|QWORD + 12], y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|QWORD[.]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a493 <|@
result v38|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v476 
values: a472 a473 
=== Succesors ===
=== Usages ===
j518 a152 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v476 values: a472 a473  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v475 v477 
=== Succesors ===
next: j514 
=== Usages ===
a493 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v475 v477 #next: j514  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j514 <|@
result v39|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: i64
=== Inputs ===
object: a126 
=== Succesors ===
next: j518 
=== Usages ===
v651 
=== Predecessor ===
v476 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a126 #next: j518  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j518 <|@
result v40|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: i64
=== Inputs ===
object: a493 
=== Succesors ===
next: v521 
=== Usages ===
v652 
=== Predecessor ===
j514 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a493 #next: v521  <|@  <|@
f <@~|@floating>@ <|@
tid v651 <|@
result [v39|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j514 
index: - 
=== Succesors ===
=== Usages ===
v521 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j514 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v652 <|@
result [v40|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j518 
index: - 
=== Succesors ===
=== Usages ===
v521 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j518 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}
descriptorName: byteDisjointArraycopyKillInit
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v651 v652 j520 
=== Succesors ===
next: v151 
=== Usages ===
=== Predecessor ===
j518 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v651 v652 j520 #next: v151  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:80) [bci: 39] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: a152 
=== Usages ===
=== Predecessor ===
v521 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a152  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a152 <|@
result v38|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:81) [bci: 43] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOfRange(Arrays.java:3856) [bci: 18]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: a!# byte[]
=== Inputs ===
object: a493 
=== Succesors ===
next: v118 
=== Usages ===
a119 
=== Predecessor ===
v151 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a493 #next: v118  <|@  <|@
f <@*|@fixed>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v117 
=== Predecessor ===
a152 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[*] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = MOVE input: v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v39|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v40|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v38|QWORD[.]] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 10]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v236 
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v236  <|@  <|@
f <@~|@floating>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Arrays.checkLength(Arrays.java:3820) [bci: 2]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3861) [bci: 2]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i50 
y: i15 
=== Succesors ===
=== Usages ===
v236 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i50 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.checkLength(Arrays.java:3820) [bci: 2]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3861) [bci: 2]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v99 
=== Succesors ===
trueSuccessor: v234 
falseSuccessor: v235 
=== Usages ===
=== Predecessor ===
v90 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v99 #trueSuccessor: v234 #falseSuccessor: v235  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v27|DWORD, y: v27|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.checkLength(Arrays.java:3820) [bci: 2]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3861) [bci: 2]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v275 
=== Usages ===
=== Predecessor ===
v236 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v275  <|@  <|@
f <@~|@floating>@ <|@
tid j277 <|@
result long[1300|0x514] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.checkLength(Arrays.java:3820) [bci: 2]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3861) [bci: 2]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j279 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i276 <|@
result int[-59667|0xffffffffffff16ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.checkLength(Arrays.java:3820) [bci: 2]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3861) [bci: 2]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
rawvalue: -59667
stableDimension: 0
stamp: i32 [-59667]
stampKind: i32
value: int[-59667|0xffffffffffff16ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i278 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.checkLength(Arrays.java:3820) [bci: 2]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3861) [bci: 2]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v274 
=== Predecessor ===
v234 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-59667|0xffffffffffff16ed], long[1300|0x514]] destination: B43 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.checkLength(Arrays.java:3823) [bci: 37]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3861) [bci: 2]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v592 
=== Usages ===
=== Predecessor ===
v236 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v592  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: j522 
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j522  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j522 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j574 
=== Usages ===
v653 v654 
=== Predecessor ===
v592 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j574  <|@  <|@
f <@~|@floating>@ <|@
tid v653 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j522 
index: - 
=== Succesors ===
=== Usages ===
j574 v576 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j522 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j574 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v653 
lastLocationAccess: - 
=== Succesors ===
next: j575 
=== Usages ===
j527 v655 v656 v657 a553 v658 v662 v659 v660 v661 
=== Predecessor ===
j522 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v653 lastLocationAccess: - #next: j575  <|@  <|@
f <@~|@floating>@ <|@
tid v654 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j522 
index: - 
=== Succesors ===
=== Usages ===
j575 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j522 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j575 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v654 
lastLocationAccess: - 
=== Succesors ===
next: v531 
=== Usages ===
v528 
=== Predecessor ===
j574 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v654 lastLocationAccess: - #next: v531  <|@  <|@
f <@~|@floating>@ <|@
tid j525 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i50 
=== Succesors ===
=== Usages ===
j561 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i50  <|@  <|@
f <@~|@floating>@ <|@
tid j561 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: i64 [23 - 4294967318] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j525 
y: j482 
=== Succesors ===
=== Usages ===
j526 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j525 y: j482  <|@  <|@
f <@~|@floating>@ <|@
tid j526 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: i64 [0 - 4294967312] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j561 
y: j462 
=== Succesors ===
=== Usages ===
j527 v542 j563 v659 v660 v661 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j561 y: j462  <|@  <|@
f <@~|@floating>@ <|@
tid j527 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: i64
=== Inputs ===
x: j526 
y: j574 
=== Succesors ===
=== Usages ===
v528 v576 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j526 y: j574  <|@  <|@
f <@~|@floating>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j575 
y: j527 
=== Succesors ===
=== Usages ===
v531 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j575 y: j527  <|@  <|@
f <@*|@fixed>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v528 
=== Succesors ===
trueSuccessor: v530 
falseSuccessor: v529 
=== Usages ===
=== Predecessor ===
j575 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v528 #trueSuccessor: v530 #falseSuccessor: v529  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = LEA address: [v42|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = AND x: v43|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = ADD (x: v44|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v45|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 4575248858818943354
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: a554 
=== Usages ===
=== Predecessor ===
v531 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a554  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a554 <|@
result v46|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?22 
arguments: v457 i50 
=== Succesors ===
next: v620 
=== Usages ===
v620 a572 
=== Predecessor ===
v530 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?22 arguments: v457 i50 #next: v620  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-150641|0xfffffffffffdb38f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?22 
object: a554 
=== Succesors ===
next: v558 
=== Usages ===
=== Predecessor ===
a554 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?22 object: a554 #next: v558  <|@  <|@
f <@*|@fixed>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
v620 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v29|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction NULLCHECK address: [v46|QWORD[.]] state [bci:27] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v46|QWORD[.]] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B51" 
    xhandlers
    flags 
    probability 4604825882278563758
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v576 
=== Usages ===
=== Predecessor ===
v531 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v576  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v653 
lastLocationAccess: - 
value: j527 
stateAfter: - 
=== Succesors ===
next: v567 
=== Usages ===
=== Predecessor ===
v529 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v653 lastLocationAccess: - value: j527 stateAfter: - #next: v567  <|@  <|@
f <@~|@floating>@ <|@
tid v659 <|@
result [v44|QWORD + v41|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j526 
index: j574 
=== Succesors ===
=== Usages ===
v567 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j526 index: j574  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
address: v659 
=== Succesors ===
next: v569 
=== Usages ===
=== Predecessor ===
v576 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v659 #next: v569  <|@  <|@
f <@~|@floating>@ <|@
tid v660 <|@
result [v44|QWORD + v41|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j526 
index: j574 
=== Succesors ===
=== Usages ===
v569 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j526 index: j574  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
address: v660 
=== Succesors ===
next: v571 
=== Usages ===
=== Predecessor ===
v567 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v660 #next: v571  <|@  <|@
f <@~|@floating>@ <|@
tid v661 <|@
result [v44|QWORD + v41|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j526 
index: j574 
=== Succesors ===
=== Usages ===
v571 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j526 index: j574  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
address: v661 
=== Succesors ===
next: v577 
=== Usages ===
=== Predecessor ===
v569 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v661 #next: v577  <|@  <|@
f <@~|@floating>@ <|@
tid v655 <|@
result [v41|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j574 
index: - 
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j574 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v655 
lastLocationAccess: - 
value: j346 
stateAfter: - 
=== Succesors ===
next: v580 
=== Usages ===
=== Predecessor ===
v571 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v655 lastLocationAccess: - value: j346 stateAfter: - #next: v580  <|@  <|@
f <@~|@floating>@ <|@
tid v662 <|@
result [v41|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j574 
index: - 
=== Succesors ===
=== Usages ===
v580 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j574 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v662 
lastLocationAccess: - 
value: v600 
stateAfter: - 
=== Succesors ===
next: v581 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v662 lastLocationAccess: - value: v600 stateAfter: - #next: v581  <|@  <|@
f <@~|@floating>@ <|@
tid v656 <|@
result [v41|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j574 
index: - 
=== Succesors ===
=== Usages ===
v581 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j574 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v656 
lastLocationAccess: - 
value: i50 
stateAfter: - 
=== Succesors ===
next: v537 
=== Usages ===
=== Predecessor ===
v580 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v656 lastLocationAccess: - value: i50 stateAfter: - #next: v537  <|@  <|@
f <@~|@floating>@ <|@
tid j562 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
rawvalue: -16
stableDimension: 0
stamp: i64 [-16]
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j563 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j563 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: i64 [-16 - 4294967296] bits:x...x000
=== Inputs ===
x: j526 
y: j562 
=== Succesors ===
=== Usages ===
v534 v538 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j526 y: j562  <|@  <|@
f <@~|@floating>@ <|@
tid j564 <|@
result long[2048|0x800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
rawvalue: 2048
stableDimension: 0
stamp: i64 [2048]
stampKind: i64
value: long[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v534 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j563 
y: j564 
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j563 y: j564  <|@  <|@
f <@*|@fixed>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 28]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v534 
=== Succesors ===
trueSuccessor: v536 
falseSuccessor: v535 
=== Usages ===
=== Predecessor ===
v581 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v534 #trueSuccessor: v536 #falseSuccessor: v535  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v44|QWORD + v41|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v44|QWORD + v41|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v44|QWORD + v41|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v41|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v41|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v41|QWORD + 12], y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA address: [v44|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v47|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B51 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4604759375651230885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:228) [bci: 62]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v539 
=== Usages ===
=== Predecessor ===
v537 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v539  <|@  <|@
f <@~|@floating>@ <|@
tid j293 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i64 [8]
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j550 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j133 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.isLatin1(AbstractStringBuilder.java:1693) [bci: 7]
at java.lang.String.<init>(String.java:4786) [bci: 16]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j541 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v540 
=== Predecessor ===
v536 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B49" 
    successors "B49" "B50" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4634844288894646813
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j541 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v540 
values: j133 j550 
=== Succesors ===
=== Usages ===
v542 v657 j550 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v540 values: j133 j550  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 56
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v539 
=== Succesors ===
next: v548 
=== Usages ===
j541 v547 v551 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v539 #next: v548  <|@  <|@
f <@~|@floating>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j541 
y: j526 
=== Succesors ===
=== Usages ===
v548 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j541 y: j526  <|@  <|@
f <@*|@fixed>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v542 
=== Succesors ===
trueSuccessor: v543 
falseSuccessor: v547 
=== Usages ===
=== Predecessor ===
v540 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v542 #trueSuccessor: v543 #falseSuccessor: v547  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v44|QWORD, y: v48|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4634792850175069044
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v582 
=== Usages ===
=== Predecessor ===
v548 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v582  <|@  <|@
f <@~|@floating>@ <|@
tid v657 <|@
result [v41|QWORD + v48|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j574 
index: j541 
=== Succesors ===
=== Usages ===
v582 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j574 index: j541  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v657 
lastLocationAccess: - 
value: j259 
stateAfter: - 
=== Succesors ===
next: v551 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v657 lastLocationAccess: - value: j259 stateAfter: - #next: v551  <|@  <|@
f <@~|@floating>@ <|@
tid j550 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: i64
=== Inputs ===
x: j541 
y: j293 
=== Succesors ===
=== Usages ===
j541 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j541 y: j293  <|@  <|@
f <@*|@fixed>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
loopBegin: v540 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v582 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v540  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v41|QWORD + v48|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA address: [v48|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|QWORD] destination: B49 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604759375651230886
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v540 
=== Succesors ===
next: v546 
=== Usages ===
=== Predecessor ===
v548 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v540 #next: v546  <|@  <|@
f <@*|@fixed>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v545 
=== Predecessor ===
v547 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4575162870452290749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:225) [bci: 31]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v538 
=== Usages ===
=== Predecessor ===
v537 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v538  <|@  <|@
f <@~|@floating>@ <|@
tid v658 <|@
result [v41|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j574 
index: - 
=== Succesors ===
=== Usages ===
v538 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j574 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ZeroMemoryNode.zero(Word, long, boolean, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:226) [bci: 56]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v658 
lastLocationAccess: - 
length: j563 
=== Succesors ===
next: v544 
=== Usages ===
=== Predecessor ===
v535 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v658 lastLocationAccess: - length: j563 #next: v544  <|@  <|@
f <@*|@fixed>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v545 
=== Predecessor ===
v538 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v41|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4604825882278563759
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v544 v546 
=== Succesors ===
next: v552 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v544 v546 #next: v552  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: a553 
=== Usages ===
=== Predecessor ===
v545 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a553  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a553 <|@
result v51|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j574 
=== Succesors ===
next: v556 
=== Usages ===
a572 
=== Predecessor ===
v552 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j574 #next: v556  <|@  <|@
f <@*|@fixed>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
a553 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a572 <|@
result v52|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v557 
values: a553 a554 
=== Succesors ===
=== Usages ===
j596 a119 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v557 values: a553 a554  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOfRangeByte(Arrays.java:3863) [bci: 10]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v556 v558 
=== Succesors ===
next: v244 
=== Usages ===
a572 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v556 v558 #next: v244  <|@  <|@
f <@~|@floating>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3865) [bci: 24]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i50 
y: i606 
=== Succesors ===
=== Usages ===
i114 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i50 y: i606  <|@  <|@
f <@~|@floating>@ <|@
tid i114 <|@
result v53|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3865) [bci: 24]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: i32
=== Inputs ===
condition: v113 
trueValue: i50 
falseValue: i606 
=== Succesors ===
=== Usages ===
j598 v210 v209 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v113 trueValue: i50 falseValue: i606  <|@  <|@
f <@~|@floating>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 140]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i606 
y: i114 
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i606 y: i114  <|@  <|@
f <@*|@fixed>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v209 
=== Succesors ===
trueSuccessor: v242 
falseSuccessor: v243 
=== Usages ===
=== Predecessor ===
v557 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v209 #trueSuccessor: v242 #falseSuccessor: v243  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = CMOVE (falseValue: v28|DWORD, ~trueValue: v27|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v28|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v283 
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v283  <|@  <|@
f <@~|@floating>@ <|@
tid i284 <|@
result int[-61721|0xffffffffffff0ee7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.checkLength(Arrays.java:3820) [bci: 2]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3861) [bci: 2]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
rawvalue: -61721
stableDimension: 0
stamp: i32 [-61721]
stampKind: i32
value: int[-61721|0xffffffffffff0ee7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i278 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.checkLength(Arrays.java:3820) [bci: 2]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3861) [bci: 2]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v274 
=== Predecessor ===
v242 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-61721|0xffffffffffff0ee7], long[0|0x0]] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B58" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 171]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v248 
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v248  <|@  <|@
f <@~|@floating>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i50 
y: i114 
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i50 y: i114  <|@  <|@
f <@*|@fixed>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v210 
=== Succesors ===
trueSuccessor: v246 
falseSuccessor: v247 
=== Usages ===
=== Predecessor ===
v243 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v210 #trueSuccessor: v246 #falseSuccessor: v247  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v27|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v285 
=== Usages ===
=== Predecessor ===
v248 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v285  <|@  <|@
f <@~|@floating>@ <|@
tid i286 <|@
result int[-62745|0xffffffffffff0ae7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.checkLength(Arrays.java:3820) [bci: 2]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3861) [bci: 2]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
rawvalue: -62745
stableDimension: 0
stamp: i32 [-62745]
stampKind: i32
value: int[-62745|0xffffffffffff0ae7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i278 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.checkLength(Arrays.java:3820) [bci: 2]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3861) [bci: 2]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v274 
=== Predecessor ===
v246 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-62745|0xffffffffffff0ae7], long[0|0x0]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B43" "B54" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i278 <|@
result v54|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.checkLength(Arrays.java:3820) [bci: 2]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3861) [bci: 2]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: i32 [-62745 - -59667] bits:1...1000xxx101110x1x1
valueDescription: i32
=== Inputs ===
merge: v274 
values: i276 i284 i286 
=== Succesors ===
=== Usages ===
v280 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v274 values: i276 i284 i286  <|@  <|@
f <@~|@floating>@ <|@
tid j279 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.checkLength(Arrays.java:3820) [bci: 2]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3861) [bci: 2]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: i64 [0 - 1300] bits:0...0x0x000x0x00
valueDescription: i64
=== Inputs ===
merge: v274 
values: j277 j259 j259 
=== Succesors ===
=== Usages ===
v280 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v274 values: j277 j259 j259  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.checkLength(Arrays.java:3820) [bci: 2]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3861) [bci: 2]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v275 v283 v285 
=== Succesors ===
next: v280 
=== Usages ===
i278 j279 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v275 v283 v285 #next: v280  <|@  <|@
f <@*|@fixed>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.checkLength(Arrays.java:3820) [bci: 2]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3861) [bci: 2]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
stateBefore: ?22 
actionAndReason: i278 
speculation: j279 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v274 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?22 actionAndReason: i278 speculation: j279  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|DWORD, v55|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: j594 
=== Usages ===
=== Predecessor ===
v248 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j594  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j594 <|@
result v56|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: i64
=== Inputs ===
object: a126 
=== Succesors ===
next: j596 
=== Usages ===
v663 
=== Predecessor ===
v247 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a126 #next: j596  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j596 <|@
result v57|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: i64
=== Inputs ===
object: a572 
=== Succesors ===
next: v599 
=== Usages ===
v664 
=== Predecessor ===
j594 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a572 #next: v599  <|@  <|@
f <@~|@floating>@ <|@
tid v663 <|@
result [v56|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j594 
index: - 
=== Succesors ===
=== Usages ===
v599 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j594 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v664 <|@
result [v57|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j596 
index: - 
=== Succesors ===
=== Usages ===
v599 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j596 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j598 <|@
result v58|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i114 
=== Succesors ===
=== Usages ===
v599 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i114  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}
descriptorName: byteDisjointArraycopy
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOfRangeByte(Arrays.java:3864) [bci: 27]
at java.util.Arrays.copyOfRange(Arrays.java:3854) [bci: 13]
at java.lang.String.<init>(String.java:4788) [bci: 32]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v663 v664 j598 
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
j596 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v663 v664 j598 #next: v120  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v117 
=== Predecessor ===
v599 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[*] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[*] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v56|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v57|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v52|QWORD[.]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B41" "B58" 
    successors "B62" 
    xhandlers
    flags 
    probability 4607182336702731708
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a119 <|@
result v59|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# byte[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v117 
values: a152 a572 
=== Succesors ===
=== Usages ===
a186 v289 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v117 values: a152 a572  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v118 v120 
=== Succesors ===
next: v287 
=== Usages ===
a119 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v118 v120 #next: v287  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.lang.String.<init>(String.java:4788) [bci: 35]
precise: true
stamp: void
=== Inputs ===
address: v626 
value: - 
stateBefore: - 
=== Succesors ===
next: v188 
=== Usages ===
=== Predecessor ===
v117 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v626 value: - stateBefore: - #next: v188  <|@  <|@
f <@~|@floating>@ <|@
tid a186 <|@
result v62|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.<init>(String.java:4788) [bci: 35]
op: Compress
stamp: n!# byte[]
=== Inputs ===
value: a119 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a119  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: String.value
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.<init>(String.java:4788) [bci: 35]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v626 
lastLocationAccess: - 
value: a186 
stateAfter: - 
=== Succesors ===
next: v289 
=== Usages ===
=== Predecessor ===
v287 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v626 lastLocationAccess: - value: a186 stateAfter: - #next: v289  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.lang.String.<init>(String.java:4788) [bci: 35]
precise: false
stamp: void
=== Inputs ===
address: v626 
value: a119 
object: a1 
=== Succesors ===
next: v43 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v626 value: a119 object: a1 #next: v43  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:4802) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
v289 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v60|QWORD, temp2: v61|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr   -1  <|@ instruction v62|DWORD[_] = COMPRESSPOINTER (input: v59|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v62|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v59|QWORD[.]) {temp: v63|QWORD, temp2: v64|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.<init>(String.java:4791) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: i607 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i607  <|@  <|@
f <@~|@floating>@ <|@
tid v627 <|@
result [v1|QWORD[.] + 17] <|@
d <@d|@=== Debug Properties ===
displacement: 17
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i607 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i607 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.maybeLatin1
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.<init>(String.java:4791) [bci: 48]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v627 
lastLocationAccess: - 
=== Succesors ===
next: v252 
=== Usages ===
v207 
=== Predecessor ===
v18 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v627 lastLocationAccess: - #next: v252  <|@  <|@
f <@~|@floating>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.<init>(String.java:4791) [bci: 51]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i607 
y: i199 
=== Succesors ===
=== Usages ===
v252 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i607 y: i199  <|@  <|@
f <@*|@fixed>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:4791) [bci: 51]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v207 
=== Succesors ===
trueSuccessor: v250 
falseSuccessor: v251 
=== Usages ===
=== Predecessor ===
i607 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v207 #trueSuccessor: v250 #falseSuccessor: v251  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 17] trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.<init>(String.java:4799) [bci: 80]
stamp: void
=== Inputs ===
=== Succesors ===
next: v194 
=== Usages ===
=== Predecessor ===
v252 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v194  <|@  <|@
f <@~|@floating>@ <|@
tid i208 <|@
result byte[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.String.<init>(String.java:4799) [bci: 82]
rawvalue: 1
stableDimension: 0
stamp: i8 [1]
stampKind: i8
value: byte[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: String.coder
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.<init>(String.java:4799) [bci: 82]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v624 
lastLocationAccess: - 
value: i208 
stateAfter: - 
=== Succesors ===
next: a39 
=== Usages ===
=== Predecessor ===
v250 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v624 lastLocationAccess: - value: i208 stateAfter: - #next: a39  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:4800) [bci: 91]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i50 
y: i29 
=== Succesors ===
=== Usages ===
v195 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i50 y: i29  <|@  <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.lang.String.<init>(String.java:4800) [bci: 92]
referencedType: [null]
returnStamp: a# byte[]
signature: [UnresolvedJavaType<[B>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Arrays.copyOfRange(byte[], int, int)>
=== Inputs ===
arguments: a126 i15 i37 
=== Succesors ===
=== Usages ===
a39 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a126 i15 i37  <|@  <|@
tid ?253 <|@
d <@d|@=== Debug Properties ===
bci: 92
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<String.<init>(AbstractStringBuilder, Void)>
localsSize: 6
locksSize: 0
sourceFile: String.java
sourceLine: 4800
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
a39 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a39 <|@
result v66|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 92
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.lang.String.<init>(String.java:4800) [bci: 92]
polymorphic: false
stamp: a# byte[]
targetMethod: Direct#Arrays.copyOfRange
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v195 
stateDuring: ?253 
=== Succesors ===
next: v290 
=== Usages ===
a196 v292 
=== Predecessor ===
v194 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v195 stateDuring: ?253 #next: v290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.lang.String.<init>(String.java:4800) [bci: 95]
precise: true
stamp: void
=== Inputs ===
address: v626 
value: - 
stateBefore: - 
=== Succesors ===
next: v197 
=== Usages ===
=== Predecessor ===
a39 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v626 value: - stateBefore: - #next: v197  <|@  <|@
f <@~|@floating>@ <|@
tid a196 <|@
result v69|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.<init>(String.java:4800) [bci: 95]
op: Compress
stamp: n# byte[]
=== Inputs ===
value: a39 
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a39  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: String.value
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.<init>(String.java:4800) [bci: 95]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v626 
lastLocationAccess: - 
value: a196 
stateAfter: - 
=== Succesors ===
next: v292 
=== Usages ===
=== Predecessor ===
v290 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v626 lastLocationAccess: - value: a196 stateAfter: - #next: v292  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.lang.String.<init>(String.java:4800) [bci: 95]
precise: false
stamp: void
=== Inputs ===
address: v626 
value: a39 
object: a1 
=== Succesors ===
next: v45 
=== Usages ===
=== Predecessor ===
v197 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v626 value: a39 object: a1 #next: v45  <|@  <|@
f <@*|@fixed>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:4802) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v44 
=== Predecessor ===
v292 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v0|QWORD[.] + 16] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = SHL value: v27|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v65|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4800) [bci: 92]
stack: v0|QWORD[.] 
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOfRange(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:92] <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v67|QWORD, temp2: v68|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr   -1  <|@ instruction v69|DWORD[_] = COMPRESSPOINTER (input: v66|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v69|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v66|QWORD[.]) {temp: v70|QWORD, temp2: v71|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.<init>(String.java:4802) [bci: 98]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v43 v45 
=== Succesors ===
next: v198 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v43 v45 #next: v198  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: ANY_LOCATION
nodeSourcePosition: at java.lang.String.<init>(String.java:4802) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
next: v48 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: v48  <|@  <|@
f <@*|@fixed>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:4802) [bci: 98]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.<init>(String.java:4791) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: v666 
=== Usages ===
=== Predecessor ===
v252 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v666  <|@  <|@
f <@*|@fixed>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 249
mayConvertToGuard: true
nodeSourcePosition: at java.util.Arrays.copyOfRange(Arrays.java:3853) [bci: 6]
at java.lang.String.<init>(String.java:4788) [bci: 32]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0x6b3f8a14]: UnreachedCode@6[HotSpotMethod<String.<init>(AbstractStringBuilder, Void)>, 54]}
stamp: void
=== Inputs ===
stateBefore: ?11 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?11  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -63763 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4785) [bci: 13]
stack: v27|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v4|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:13] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v665 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v665  <|@  <|@
f <@*|@fixed>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 61
mayConvertToGuard: true
nodeSourcePosition: at java.lang.String.<init>(String.java:4784) [bci: 5]
reason: TypeCheckedInliningViolated
speculation: {0x0000000000000294[index: 20, len: 20, hash: 0x5c92fa1d]: FallbackDeopt@9[HotSpotMethod<String.<init>(AbstractStringBuilder, Void)>, 10, FALSE, jdk.graal.compiler.phases.common.inlining.InliningUtil$ReceiverTypeSpeculationContext, HotSpotType<Ljava/lang/StringBuilder;, resolved>, HotSpotType<Ljava/lang/StringBuffer;, resolved>]}
stamp: void
=== Inputs ===
stateBefore: ?4 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?4  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15667 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4783) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B64" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [vstack:0|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@32f57492 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4783) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v5|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B64 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607182323057074616
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B1 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B1" "B35" 
    successors "B37" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 16] trueDestinationProbability: 0.9999908853703156 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B60 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B42" 
    xhandlers
    flags 
    probability 4607182336702731707
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4785) [bci: 13]
stack: v27|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v4|QWORD[.] - - 
>@ <|@ instruction v28|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:13] <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v0|QWORD[.] + 16] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v28|DWORD, y: v27|DWORD) trueDestinationProbability: 0.2541630105061688 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v27|DWORD, y: v27|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = LEA address: [v42|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = AND x: v43|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = ADD (x: v44|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v45|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B51" 
    xhandlers
    flags 
    probability 4604825882278563758
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v44|QWORD + v41|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v44|QWORD + v41|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v44|QWORD + v41|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v41|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v41|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v41|QWORD + 12], y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA address: [v44|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v47|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B51 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4604759375651230885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B49" 
    successors "B49" "B50" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4634844288894646813
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v44|QWORD, y: v48|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4634792850175069044
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v41|QWORD + v48|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA address: [v48|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|QWORD] destination: B49 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604759375651230886
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4604825882278563759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = CMOVE (falseValue: v28|DWORD, ~trueValue: v27|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v28|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B58" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v27|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[*] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[*] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v56|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v57|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v52|QWORD[.]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = AND x: v32|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = ADD (x: v33|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v34|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4598204386423092713
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v30|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v30|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v30|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v30|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v30|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v30|QWORD + 12], y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|QWORD[.]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[*] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = MOVE input: v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v39|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v40|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v38|QWORD[.]] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B41" "B58" 
    successors "B62" 
    xhandlers
    flags 
    probability 4607182336702731708
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v60|QWORD, temp2: v61|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr   -1  <|@ instruction v62|DWORD[_] = COMPRESSPOINTER (input: v59|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v62|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v59|QWORD[.]) {temp: v63|QWORD, temp2: v64|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 4575248858818943354
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v29|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction NULLCHECK address: [v46|QWORD[.]] state [bci:27] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v46|QWORD[.]] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4575162870452290749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v41|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4568006969118877196
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v29|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction NULLCHECK address: [v35|QWORD[.]] state [bci:27] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v8|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B2 -> B3 falseDestination: B2 -> B8 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4532329488911171509
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = OR x: v8|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v1|QWORD[.]], cmpValue: rax|QWORD, newValue: v9|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|QWORD, y: v10|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4532267370277133279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B4" "B6" "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532382201905571021
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV input: [v14|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|QWORD, y: v15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4529143557278551352
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v17|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B19 -> B20 falseDestination: B19 -> B21 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529068261964565618
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v1|QWORD[.]], cmpValue: rax|QWORD, newValue: v15|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B20" "B27" 
    successors "B29" "B31" 
    xhandlers
    flags 
    probability 4529074299895794134
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 17] trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v0|QWORD[.] + 16] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = SHL value: v27|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v65|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4800) [bci: 92]
stack: v0|QWORD[.] 
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOfRange(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:92] <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v67|QWORD, temp2: v68|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr   -1  <|@ instruction v69|DWORD[_] = COMPRESSPOINTER (input: v66|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v69|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v66|QWORD[.]) {temp: v70|QWORD, temp2: v71|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B34" 
    xhandlers
    flags 
    probability 4526633713479026896
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B18" "B23" "B33" "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4530432362446083730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B25" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524572191115640556
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B30" 
    successors "B36" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|DWORD] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4502623928274233274
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD] y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV input: [v8|QWORD + 62] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|QWORD, y: v13|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4501820778258385448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v8|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4501097943244122404
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4502543613272648492
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = SUB (x: v11|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v12|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B14" 
    xhandlers
    flags 
    probability 4502464101421079557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B33" 
    xhandlers
    flags 
    probability 4499411328210841968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV input: [v19|QWORD + 134] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|QWORD, y: v20|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4499363139209891098
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOV input: [v19|QWORD + 150] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = OR (x: v21|QWORD, ~y: [v19|QWORD + 142]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|QWORD, y: v22|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4498676108457829474
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v19|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" "B15" 
    xhandlers
    flags 
    probability 4487506829360426131
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4484288269758412157
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4486864309347747871
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4484211167356890766
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v19|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4483447853581828992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v19|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v19|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4482760871184273395
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v19|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = XOR x: v23|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4481718189707699113
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction INC value: [v8|QWORD + 134] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4472659588851943866
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B7" "B15" "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4490722176362376714
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
locals: v1|QWORD[.] 
locks: monitor[v1|QWORD[.], vstack:0|QWORD] 
java.lang.String.<init>(String.java:4785) [bci: 10]
locals: v0|QWORD[.] v1|QWORD[.] - v4|QWORD[.] - - 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0, 10] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B34" 
    xhandlers
    flags 
    probability 4469235422845872850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = DEC value: v20|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD + 134], y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" 
    xhandlers
    flags 
    probability 4469173740924655728
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 4468563089904606309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -63763 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4785) [bci: 13]
stack: v27|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v4|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:13] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15667 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4783) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-61721|0xffffffffffff0ee7], long[0|0x0]] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-62745|0xffffffffffff0ae7], long[0|0x0]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-59667|0xffffffffffff16ed], long[1300|0x514]] destination: B43 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B43" "B54" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|DWORD, v55|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_1       
     5: invokevirtual #142        // java.lang.AbstractStringBuilder.getValue:()byte[]
     8: astore_3      
     9: aload_1       
    10: invokevirtual #141        // java.lang.AbstractStringBuilder.length:()int
    13: istore        4
    15: aload_1       
    16: invokevirtual #292        // java.lang.AbstractStringBuilder.isLatin1:()boolean
    19: ifeq          41
    22: aload_0       
    23: iconst_0      
    24: putfield      #2          // coder:byte
    27: aload_0       
    28: aload_3       
    29: iconst_0      
    30: iload         4
    32: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    35: putfield      #1          // value:byte[]
    38: goto          98
    41: getstatic     #8          // COMPACT_STRINGS:boolean
    44: ifeq          80
    47: aload_1       
    48: getfield      #293        // java.lang.AbstractStringBuilder.maybeLatin1:boolean
    51: ifeq          80
    54: aload_3       
    55: iconst_0      
    56: iload         4
    58: invokestatic  #294        // java.lang.StringUTF16.compress:(byte[], int, int)byte[]
    61: astore        5
    63: aload         5
    65: ifnull        80
    68: aload_0       
    69: iconst_0      
    70: putfield      #2          // coder:byte
    73: aload_0       
    74: aload         5
    76: putfield      #1          // value:byte[]
    79: return        
    80: aload_0       
    81: iconst_1      
    82: putfield      #2          // coder:byte
    85: aload_0       
    86: aload_3       
    87: iconst_0      
    88: iload         4
    90: iconst_1      
    91: ishl          
    92: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    95: putfield      #1          // value:byte[]
    98: return        
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B64" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [vstack:0|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@32f57492 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4783) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v5|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B64 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607182323057074616
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B1 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B1" "B35" 
    successors "B37" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 16] trueDestinationProbability: 0.9999908853703156 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B60 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B42" 
    xhandlers
    flags 
    probability 4607182336702731707
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4785) [bci: 13]
stack: v27|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v4|QWORD[.] - - 
>@ <|@ instruction v28|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:13] <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v0|QWORD[.] + 16] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v28|DWORD, y: v27|DWORD) trueDestinationProbability: 0.2541630105061688 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v27|DWORD, y: v27|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = LEA address: [v42|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = AND x: v43|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = ADD (x: v44|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v45|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B51" 
    xhandlers
    flags 
    probability 4604825882278563758
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v44|QWORD + v41|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v44|QWORD + v41|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v44|QWORD + v41|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v41|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v41|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v41|QWORD + 12], y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA address: [v44|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v47|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B51 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4604759375651230885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B49" 
    successors "B49" "B50" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4634844288894646813
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v44|QWORD, y: v48|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4634792850175069044
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v41|QWORD + v48|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA address: [v48|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|QWORD] destination: B49 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604759375651230886
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4604825882278563759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = CMOVE (falseValue: v28|DWORD, ~trueValue: v27|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v28|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B58" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v27|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[*] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[*] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v56|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v57|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v52|QWORD[.]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = AND x: v32|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = ADD (x: v33|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v34|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4598204386423092713
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v30|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v30|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v30|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v30|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v30|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v30|QWORD + 12], y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|QWORD[.]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[*] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = MOVE input: v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v39|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v40|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v38|QWORD[.]] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B41" "B58" 
    successors "B62" 
    xhandlers
    flags 
    probability 4607182336702731708
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v60|QWORD, temp2: v61|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr   -1  <|@ instruction v62|DWORD[_] = COMPRESSPOINTER (input: v59|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v62|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v59|QWORD[.]) {temp: v63|QWORD, temp2: v64|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 4575248858818943354
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v72|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction NULLCHECK address: [v46|QWORD[.]] state [bci:27] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v46|QWORD[.]] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4575162870452290749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v41|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4568006969118877196
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v73|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction NULLCHECK address: [v35|QWORD[.]] state [bci:27] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v8|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B2 -> B3 falseDestination: B2 -> B8 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4532329488911171509
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = OR x: v8|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v1|QWORD[.]], cmpValue: rax|QWORD, newValue: v9|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|QWORD, y: v10|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4532267370277133279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B4" "B6" "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532382201905571021
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV input: [v14|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|QWORD, y: v15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4529143557278551352
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v17|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B19 -> B20 falseDestination: B19 -> B21 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529068261964565618
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v1|QWORD[.]], cmpValue: rax|QWORD, newValue: v15|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B20" "B27" 
    successors "B29" "B31" 
    xhandlers
    flags 
    probability 4529074299895794134
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 17] trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v0|QWORD[.] + 16] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = SHL value: v27|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v65|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4800) [bci: 92]
stack: v0|QWORD[.] 
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOfRange(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:92] <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v67|QWORD, temp2: v68|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr   -1  <|@ instruction v69|DWORD[_] = COMPRESSPOINTER (input: v66|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v69|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v66|QWORD[.]) {temp: v70|QWORD, temp2: v71|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B34" 
    xhandlers
    flags 
    probability 4526633713479026896
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B18" "B23" "B33" "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4530432362446083730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B25" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524572191115640556
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B30" 
    successors "B36" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|DWORD] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4502623928274233274
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD] y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV input: [v8|QWORD + 62] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|QWORD, y: v13|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4501820778258385448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v8|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4501097943244122404
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4502543613272648492
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = SUB (x: v11|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v12|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B14" 
    xhandlers
    flags 
    probability 4502464101421079557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B33" 
    xhandlers
    flags 
    probability 4499411328210841968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV input: [v19|QWORD + 134] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|QWORD, y: v20|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4499363139209891098
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOV input: [v19|QWORD + 150] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = OR (x: v21|QWORD, ~y: [v19|QWORD + 142]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|QWORD, y: v22|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4498676108457829474
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v19|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" "B15" 
    xhandlers
    flags 
    probability 4487506829360426131
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4484288269758412157
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4486864309347747871
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4484211167356890766
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v19|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4483447853581828992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v19|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v19|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4482760871184273395
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v19|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = XOR x: v23|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4481718189707699113
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction INC value: [v8|QWORD + 134] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4472659588851943866
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B7" "B15" "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4490722176362376714
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
locals: v1|QWORD[.] 
locks: monitor[v1|QWORD[.], vstack:0|QWORD] 
java.lang.String.<init>(String.java:4785) [bci: 10]
locals: v0|QWORD[.] v1|QWORD[.] - v4|QWORD[.] - - 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0, 10] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B34" 
    xhandlers
    flags 
    probability 4469235422845872850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = DEC value: v20|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD + 134], y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" 
    xhandlers
    flags 
    probability 4469173740924655728
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 4468563089904606309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -63763 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4785) [bci: 13]
stack: v27|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v4|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:13] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15667 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4783) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-61721|0xffffffffffff0ee7], long[0|0x0]] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-62745|0xffffffffffff0ae7], long[0|0x0]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-59667|0xffffffffffff16ed], long[1300|0x514]] destination: B43 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B43" "B54" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|DWORD, v55|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_1       
     5: invokevirtual #142        // java.lang.AbstractStringBuilder.getValue:()byte[]
     8: astore_3      
     9: aload_1       
    10: invokevirtual #141        // java.lang.AbstractStringBuilder.length:()int
    13: istore        4
    15: aload_1       
    16: invokevirtual #292        // java.lang.AbstractStringBuilder.isLatin1:()boolean
    19: ifeq          41
    22: aload_0       
    23: iconst_0      
    24: putfield      #2          // coder:byte
    27: aload_0       
    28: aload_3       
    29: iconst_0      
    30: iload         4
    32: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    35: putfield      #1          // value:byte[]
    38: goto          98
    41: getstatic     #8          // COMPACT_STRINGS:boolean
    44: ifeq          80
    47: aload_1       
    48: getfield      #293        // java.lang.AbstractStringBuilder.maybeLatin1:boolean
    51: ifeq          80
    54: aload_3       
    55: iconst_0      
    56: iload         4
    58: invokestatic  #294        // java.lang.StringUTF16.compress:(byte[], int, int)byte[]
    61: astore        5
    63: aload         5
    65: ifnull        80
    68: aload_0       
    69: iconst_0      
    70: putfield      #2          // coder:byte
    73: aload_0       
    74: aload         5
    76: putfield      #1          // value:byte[]
    79: return        
    80: aload_0       
    81: iconst_1      
    82: putfield      #2          // coder:byte
    85: aload_0       
    86: aload_3       
    87: iconst_0      
    88: iload         4
    90: iconst_1      
    91: ishl          
    92: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    95: putfield      #1          // value:byte[]
    98: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B64" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [vstack:0|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@32f57492 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4783) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v5|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B64 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607182323057074616
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B1 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B1" "B35" 
    successors "B37" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 16] trueDestinationProbability: 0.9999908853703156 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B60 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B42" 
    xhandlers
    flags 
    probability 4607182336702731707
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4785) [bci: 13]
stack: v27|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v4|QWORD[.] - - 
>@ <|@ instruction v28|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:13] <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v0|QWORD[.] + 16] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v28|DWORD, y: v27|DWORD) trueDestinationProbability: 0.2541630105061688 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v27|DWORD, y: v27|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = LEA address: [v42|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = AND x: v43|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = ADD (x: v44|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v45|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B51" 
    xhandlers
    flags 
    probability 4604825882278563758
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v44|QWORD + v41|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v44|QWORD + v41|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v44|QWORD + v41|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v41|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v41|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v41|QWORD + 12], y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA address: [v44|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v47|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B51 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4604759375651230885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B49" 
    successors "B49" "B50" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4634844288894646813
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v44|QWORD, y: v48|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4634792850175069044
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v41|QWORD + v48|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA address: [v48|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|QWORD] destination: B49 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604759375651230886
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4604825882278563759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = CMOVE (falseValue: v28|DWORD, ~trueValue: v27|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v28|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B58" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v27|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[*] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[*] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v56|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v57|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v52|QWORD[.]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = AND x: v32|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = ADD (x: v33|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v34|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4598204386423092713
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v30|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v30|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v30|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v30|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v30|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v30|QWORD + 12], y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|QWORD[.]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[*] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = MOVE input: v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v39|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v40|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v38|QWORD[.]] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B41" "B58" 
    successors "B62" 
    xhandlers
    flags 
    probability 4607182336702731708
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v60|QWORD, temp2: v61|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr   -1  <|@ instruction v62|DWORD[_] = COMPRESSPOINTER (input: v59|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v62|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v59|QWORD[.]) {temp: v63|QWORD, temp2: v64|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 4575248858818943354
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v72|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction NULLCHECK address: [v46|QWORD[.]] state [bci:27] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v46|QWORD[.]] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4575162870452290749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v41|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4568006969118877196
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v73|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction NULLCHECK address: [v35|QWORD[.]] state [bci:27] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v8|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B2 -> B3 falseDestination: B2 -> B8 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4532329488911171509
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = OR x: v8|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v1|QWORD[.]], cmpValue: rax|QWORD, newValue: v9|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|QWORD, y: v10|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4532267370277133279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B4" "B6" "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532382201905571021
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV input: [v14|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|QWORD, y: v15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4529143557278551352
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v17|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B19 -> B20 falseDestination: B19 -> B21 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529068261964565618
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v1|QWORD[.]], cmpValue: rax|QWORD, newValue: v15|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B20" "B27" 
    successors "B29" "B31" 
    xhandlers
    flags 
    probability 4529074299895794134
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 17] trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v0|QWORD[.] + 16] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = SHL value: v27|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v65|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4800) [bci: 92]
stack: v0|QWORD[.] 
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOfRange(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:92] <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v67|QWORD, temp2: v68|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr   -1  <|@ instruction v69|DWORD[_] = COMPRESSPOINTER (input: v66|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v69|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v66|QWORD[.]) {temp: v70|QWORD, temp2: v71|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B34" 
    xhandlers
    flags 
    probability 4526633713479026896
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B18" "B23" "B33" "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4530432362446083730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B25" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524572191115640556
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B30" 
    successors "B36" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|DWORD] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4502623928274233274
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD] y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV input: [v8|QWORD + 62] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|QWORD, y: v13|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4501820778258385448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v8|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4501097943244122404
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4502543613272648492
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = SUB (x: v11|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v12|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B14" 
    xhandlers
    flags 
    probability 4502464101421079557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B33" 
    xhandlers
    flags 
    probability 4499411328210841968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV input: [v19|QWORD + 134] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|QWORD, y: v20|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4499363139209891098
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOV input: [v19|QWORD + 150] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = OR (x: v21|QWORD, ~y: [v19|QWORD + 142]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|QWORD, y: v22|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4498676108457829474
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v19|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" "B15" 
    xhandlers
    flags 
    probability 4487506829360426131
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4484288269758412157
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4486864309347747871
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4484211167356890766
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v19|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4483447853581828992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v19|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v19|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4482760871184273395
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v19|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = XOR x: v23|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4481718189707699113
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction INC value: [v8|QWORD + 134] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4472659588851943866
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B7" "B15" "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4490722176362376714
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
locals: v1|QWORD[.] 
locks: monitor[v1|QWORD[.], vstack:0|QWORD] 
java.lang.String.<init>(String.java:4785) [bci: 10]
locals: v0|QWORD[.] v1|QWORD[.] - v4|QWORD[.] - - 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0, 10] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B34" 
    xhandlers
    flags 
    probability 4469235422845872850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = DEC value: v20|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD + 134], y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" 
    xhandlers
    flags 
    probability 4469173740924655728
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 4468563089904606309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -63763 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4785) [bci: 13]
stack: v27|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v4|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:13] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15667 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4783) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-61721|0xffffffffffff0ee7], long[0|0x0]] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-62745|0xffffffffffff0ae7], long[0|0x0]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-59667|0xffffffffffff16ed], long[1300|0x514]] destination: B43 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B43" "B54" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|DWORD, v55|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_1       
     5: invokevirtual #142        // java.lang.AbstractStringBuilder.getValue:()byte[]
     8: astore_3      
     9: aload_1       
    10: invokevirtual #141        // java.lang.AbstractStringBuilder.length:()int
    13: istore        4
    15: aload_1       
    16: invokevirtual #292        // java.lang.AbstractStringBuilder.isLatin1:()boolean
    19: ifeq          41
    22: aload_0       
    23: iconst_0      
    24: putfield      #2          // coder:byte
    27: aload_0       
    28: aload_3       
    29: iconst_0      
    30: iload         4
    32: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    35: putfield      #1          // value:byte[]
    38: goto          98
    41: getstatic     #8          // COMPACT_STRINGS:boolean
    44: ifeq          80
    47: aload_1       
    48: getfield      #293        // java.lang.AbstractStringBuilder.maybeLatin1:boolean
    51: ifeq          80
    54: aload_3       
    55: iconst_0      
    56: iload         4
    58: invokestatic  #294        // java.lang.StringUTF16.compress:(byte[], int, int)byte[]
    61: astore        5
    63: aload         5
    65: ifnull        80
    68: aload_0       
    69: iconst_0      
    70: putfield      #2          // coder:byte
    73: aload_0       
    74: aload         5
    76: putfield      #1          // value:byte[]
    79: return        
    80: aload_0       
    81: iconst_1      
    82: putfield      #2          // coder:byte
    85: aload_0       
    86: aload_3       
    87: iconst_0      
    88: iload         4
    90: iconst_1      
    91: ishl          
    92: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    95: putfield      #1          // value:byte[]
    98: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B64" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [vstack:0|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@32f57492 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4783) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v5|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B64 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607182323057074616
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B1 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B1" "B35" 
    successors "B37" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 16] trueDestinationProbability: 0.9999908853703156 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B60 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B42" 
    xhandlers
    flags 
    probability 4607182336702731707
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4785) [bci: 13]
stack: v27|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v4|QWORD[.] - - 
>@ <|@ instruction v28|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:13] <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v0|QWORD[.] + 16] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v28|DWORD, y: v27|DWORD) trueDestinationProbability: 0.2541630105061688 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v27|DWORD, y: v27|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = LEA address: [v42|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = AND x: v43|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = ADD (x: v44|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v45|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B51" 
    xhandlers
    flags 
    probability 4604825882278563758
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v44|QWORD + v41|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v44|QWORD + v41|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v44|QWORD + v41|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v41|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v41|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v41|QWORD + 12], y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA address: [v44|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v47|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B51 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4604759375651230885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B49" 
    successors "B49" "B50" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4634844288894646813
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v44|QWORD, y: v48|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4634792850175069044
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v41|QWORD + v48|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA address: [v48|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|QWORD] destination: B49 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604759375651230886
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4604825882278563759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = CMOVE (falseValue: v28|DWORD, ~trueValue: v27|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v28|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B58" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v27|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[*] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[*] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v56|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v57|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v52|QWORD[.]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = AND x: v32|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = ADD (x: v33|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v34|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4598204386423092713
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v30|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v30|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v30|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v30|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v30|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v30|QWORD + 12], y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|QWORD[.]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[*] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = MOVE input: v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v39|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v40|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v38|QWORD[.]] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B41" "B58" 
    successors "B62" 
    xhandlers
    flags 
    probability 4607182336702731708
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v60|QWORD, temp2: v61|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr   -1  <|@ instruction v62|DWORD[_] = COMPRESSPOINTER (input: v59|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v62|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v59|QWORD[.]) {temp: v63|QWORD, temp2: v64|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 4575248858818943354
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v72|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction NULLCHECK address: [v46|QWORD[.]] state [bci:27] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v46|QWORD[.]] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4575162870452290749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v41|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4568006969118877196
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v73|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction NULLCHECK address: [v35|QWORD[.]] state [bci:27] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v8|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B2 -> B3 falseDestination: B2 -> B8 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4532329488911171509
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = OR x: v8|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v1|QWORD[.]], cmpValue: rax|QWORD, newValue: v9|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|QWORD, y: v10|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4532267370277133279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B4" "B6" "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532382201905571021
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV input: [v14|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|QWORD, y: v15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4529143557278551352
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v17|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B19 -> B20 falseDestination: B19 -> B21 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529068261964565618
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v1|QWORD[.]], cmpValue: rax|QWORD, newValue: v15|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B20" "B27" 
    successors "B29" "B31" 
    xhandlers
    flags 
    probability 4529074299895794134
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 17] trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v0|QWORD[.] + 16] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = SHL value: v27|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v65|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4800) [bci: 92]
stack: v0|QWORD[.] 
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOfRange(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:92] <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v67|QWORD, temp2: v68|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr   -1  <|@ instruction v69|DWORD[_] = COMPRESSPOINTER (input: v66|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v69|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v66|QWORD[.]) {temp: v70|QWORD, temp2: v71|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B34" 
    xhandlers
    flags 
    probability 4526633713479026896
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B18" "B23" "B33" "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4530432362446083730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B25" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524572191115640556
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B30" 
    successors "B36" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|DWORD] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4502623928274233274
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD] y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV input: [v8|QWORD + 62] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|QWORD, y: v13|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4501820778258385448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v8|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4501097943244122404
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4502543613272648492
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = SUB (x: v11|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v12|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B14" 
    xhandlers
    flags 
    probability 4502464101421079557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B33" 
    xhandlers
    flags 
    probability 4499411328210841968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV input: [v19|QWORD + 134] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|QWORD, y: v20|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4499363139209891098
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOV input: [v19|QWORD + 150] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = OR (x: v21|QWORD, ~y: [v19|QWORD + 142]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|QWORD, y: v22|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4498676108457829474
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v19|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" "B15" 
    xhandlers
    flags 
    probability 4487506829360426131
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4484288269758412157
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4486864309347747871
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4484211167356890766
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v19|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4483447853581828992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v19|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v19|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4482760871184273395
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v19|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = XOR x: v23|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4481718189707699113
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction INC value: [v8|QWORD + 134] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4472659588851943866
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B7" "B15" "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4490722176362376714
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
locals: v1|QWORD[.] 
locks: monitor[v1|QWORD[.], vstack:0|QWORD] 
java.lang.String.<init>(String.java:4785) [bci: 10]
locals: v0|QWORD[.] v1|QWORD[.] - v4|QWORD[.] - - 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0, 10] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B34" 
    xhandlers
    flags 
    probability 4469235422845872850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = DEC value: v20|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD + 134], y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" 
    xhandlers
    flags 
    probability 4469173740924655728
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 4468563089904606309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -63763 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4785) [bci: 13]
stack: v27|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v4|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:13] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15667 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4783) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-61721|0xffffffffffff0ee7], long[0|0x0]] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-62745|0xffffffffffff0ae7], long[0|0x0]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-59667|0xffffffffffff16ed], long[1300|0x514]] destination: B43 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B43" "B54" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|DWORD, v55|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_1       
     5: invokevirtual #142        // java.lang.AbstractStringBuilder.getValue:()byte[]
     8: astore_3      
     9: aload_1       
    10: invokevirtual #141        // java.lang.AbstractStringBuilder.length:()int
    13: istore        4
    15: aload_1       
    16: invokevirtual #292        // java.lang.AbstractStringBuilder.isLatin1:()boolean
    19: ifeq          41
    22: aload_0       
    23: iconst_0      
    24: putfield      #2          // coder:byte
    27: aload_0       
    28: aload_3       
    29: iconst_0      
    30: iload         4
    32: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    35: putfield      #1          // value:byte[]
    38: goto          98
    41: getstatic     #8          // COMPACT_STRINGS:boolean
    44: ifeq          80
    47: aload_1       
    48: getfield      #293        // java.lang.AbstractStringBuilder.maybeLatin1:boolean
    51: ifeq          80
    54: aload_3       
    55: iconst_0      
    56: iload         4
    58: invokestatic  #294        // java.lang.StringUTF16.compress:(byte[], int, int)byte[]
    61: astore        5
    63: aload         5
    65: ifnull        80
    68: aload_0       
    69: iconst_0      
    70: putfield      #2          // coder:byte
    73: aload_0       
    74: aload         5
    76: putfield      #1          // value:byte[]
    79: return        
    80: aload_0       
    81: iconst_1      
    82: putfield      #2          // coder:byte
    85: aload_0       
    86: aload_3       
    87: iconst_0      
    88: iload         4
    90: iconst_1      
    91: ishl          
    92: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    95: putfield      #1          // value:byte[]
    98: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B64" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [vstack:0|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@32f57492 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4783) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v5|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B64 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607182323057074616
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B1 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B1" "B35" 
    successors "B37" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 16] trueDestinationProbability: 0.9999908853703156 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B60 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B42" 
    xhandlers
    flags 
    probability 4607182336702731707
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4785) [bci: 13]
stack: v27|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v4|QWORD[.] - - 
>@ <|@ instruction v28|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:13] <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v0|QWORD[.] + 16] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v28|DWORD, y: v27|DWORD) trueDestinationProbability: 0.2541630105061688 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v27|DWORD, y: v27|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = LEA address: [v42|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = AND x: v43|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = ADD (x: v44|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v45|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B51" 
    xhandlers
    flags 
    probability 4604825882278563758
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v44|QWORD + v41|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v44|QWORD + v41|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v44|QWORD + v41|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v41|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v41|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v41|QWORD + 12], y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA address: [v44|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v47|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B51 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4604759375651230885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B49" 
    successors "B49" "B50" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4634844288894646813
    begin_IR
      LIR
      nr   -1  <|@ instruction [v48|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v44|QWORD, y: v48|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4634792850175069044
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v41|QWORD + v48|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA address: [v48|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|QWORD] destination: B49 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604759375651230886
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4604825882278563759
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = CMOVE (falseValue: v28|DWORD, ~trueValue: v27|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v28|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B58" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v27|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[*] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[*] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v56|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v57|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v52|QWORD[.]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = AND x: v32|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = ADD (x: v33|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v34|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4598204386423092713
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v30|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v30|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v30|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v30|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v30|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v30|QWORD + 12], y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v37|QWORD[.]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[*] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = MOVE input: v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v39|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v40|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v38|QWORD[.]] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B41" "B58" 
    successors "B62" 
    xhandlers
    flags 
    probability 4607182336702731708
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v60|QWORD, temp2: v61|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr   -1  <|@ instruction v62|DWORD[_] = COMPRESSPOINTER (input: v59|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v62|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v59|QWORD[.]) {temp: v63|QWORD, temp2: v64|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 4575248858818943354
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v72|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction NULLCHECK address: [v46|QWORD[.]] state [bci:27] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v46|QWORD[.]] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4575162870452290749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v41|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4568006969118877196
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v73|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction NULLCHECK address: [v35|QWORD[.]] state [bci:27] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v8|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B2 -> B3 falseDestination: B2 -> B8 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4532329488911171509
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = OR x: v8|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v1|QWORD[.]], cmpValue: rax|QWORD, newValue: v9|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|QWORD, y: v10|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4532267370277133279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B4" "B6" "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532382201905571021
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV input: [v14|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|QWORD, y: v15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4529143557278551352
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction BITTESTANDBRANCH value: v17|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B19 -> B20 falseDestination: B19 -> B21 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529068261964565618
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v1|QWORD[.]], cmpValue: rax|QWORD, newValue: v15|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B20" "B27" 
    successors "B29" "B31" 
    xhandlers
    flags 
    probability 4529074299895794134
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 17] trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v0|QWORD[.] + 16] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = SHL value: v27|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v65|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4800) [bci: 92]
stack: v0|QWORD[.] 
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOfRange(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:92] <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v67|QWORD, temp2: v68|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr   -1  <|@ instruction v69|DWORD[_] = COMPRESSPOINTER (input: v66|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v69|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v66|QWORD[.]) {temp: v70|QWORD, temp2: v71|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B34" 
    xhandlers
    flags 
    probability 4526633713479026896
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B18" "B23" "B33" "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4530432362446083730
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B25" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524572191115640556
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B30" 
    successors "B36" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v16|DWORD] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4502623928274233274
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD] y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV input: [v8|QWORD + 62] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|QWORD, y: v13|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4501820778258385448
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v8|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4501097943244122404
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4502543613272648492
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = SUB (x: v11|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v12|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B14" 
    xhandlers
    flags 
    probability 4502464101421079557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v9|QWORD] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B33" 
    xhandlers
    flags 
    probability 4499411328210841968
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV input: [v19|QWORD + 134] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|QWORD, y: v20|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4499363139209891098
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOV input: [v19|QWORD + 150] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = OR (x: v21|QWORD, ~y: [v19|QWORD + 142]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v22|QWORD, y: v22|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4498676108457829474
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v19|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" "B15" 
    xhandlers
    flags 
    probability 4487506829360426131
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4484288269758412157
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4486864309347747871
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4484211167356890766
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v19|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4483447853581828992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v19|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: [v19|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4482760871184273395
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = CAS (address: [v19|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = XOR x: v23|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v24|DWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4481718189707699113
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction INC value: [v8|QWORD + 134] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4472659588851943866
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B7" "B15" "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4490722176362376714
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
locals: v1|QWORD[.] 
locks: monitor[v1|QWORD[.], vstack:0|QWORD] 
java.lang.String.<init>(String.java:4785) [bci: 10]
locals: v0|QWORD[.] v1|QWORD[.] - v4|QWORD[.] - - 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0, 10] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B34" 
    xhandlers
    flags 
    probability 4469235422845872850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = DEC value: v20|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD + 134], y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" 
    xhandlers
    flags 
    probability 4469173740924655728
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 4468563089904606309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -63763 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4785) [bci: 13]
stack: v27|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v4|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:13] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15667 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4783) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-61721|0xffffffffffff0ee7], long[0|0x0]] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-62745|0xffffffffffff0ae7], long[0|0x0]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-59667|0xffffffffffff16ed], long[1300|0x514]] destination: B43 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B43" "B54" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|DWORD, v55|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_1       
     5: invokevirtual #142        // java.lang.AbstractStringBuilder.getValue:()byte[]
     8: astore_3      
     9: aload_1       
    10: invokevirtual #141        // java.lang.AbstractStringBuilder.length:()int
    13: istore        4
    15: aload_1       
    16: invokevirtual #292        // java.lang.AbstractStringBuilder.isLatin1:()boolean
    19: ifeq          41
    22: aload_0       
    23: iconst_0      
    24: putfield      #2          // coder:byte
    27: aload_0       
    28: aload_3       
    29: iconst_0      
    30: iload         4
    32: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    35: putfield      #1          // value:byte[]
    38: goto          98
    41: getstatic     #8          // COMPACT_STRINGS:boolean
    44: ifeq          80
    47: aload_1       
    48: getfield      #293        // java.lang.AbstractStringBuilder.maybeLatin1:boolean
    51: ifeq          80
    54: aload_3       
    55: iconst_0      
    56: iload         4
    58: invokestatic  #294        // java.lang.StringUTF16.compress:(byte[], int, int)byte[]
    61: astore        5
    63: aload         5
    65: ifnull        80
    68: aload_0       
    69: iconst_0      
    70: putfield      #2          // coder:byte
    73: aload_0       
    74: aload         5
    76: putfield      #1          // value:byte[]
    79: return        
    80: aload_0       
    81: iconst_1      
    82: putfield      #2          // coder:byte
    85: aload_0       
    86: aload_3       
    87: iconst_0      
    88: iload         4
    90: iconst_1      
    91: ishl          
    92: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    95: putfield      #1          // value:byte[]
    98: return        
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B64" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction [vstack:0|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@32f57492 slotKind: QWORD <|@ <|@
      nr   48  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4783) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction v3|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   60  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   62  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v5|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B64 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607182323057074616
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B1 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B1" "B35" 
    successors "B37" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   78  <|@ instruction [v27|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 16] trueDestinationProbability: 0.9999908853703156 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B60 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B42" 
    xhandlers
    flags 
    probability 4607182336702731707
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4785) [bci: 13]
stack: v27|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v4|QWORD[.] - - 
>@ <|@ instruction v28|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:13] <|@ <|@
      nr  108  <|@ instruction MOVB x: [v0|QWORD[.] + 16] y: 0 size: BYTE <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: v28|DWORD, y: v27|DWORD) trueDestinationProbability: 0.2541630105061688 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction TESTBRANCH (x: v27|DWORD, y: v27|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction v41|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  150  <|@ instruction v42|QWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction v43|QWORD = LEA address: [v42|QWORD + 23] size: QWORD <|@ <|@
      nr  154  <|@ instruction v44|QWORD = AND x: v43|QWORD y: -8 size: QWORD <|@ <|@
      nr  156  <|@ instruction v45|QWORD = ADD (x: v44|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: v45|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B51" 
    xhandlers
    flags 
    probability 4604825882278563758
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction MOV (x: [r15|QWORD + 440], y: v45|QWORD) size: QWORD <|@ <|@
      nr  192  <|@ instruction AMD64PREFETCH ~address: [v44|QWORD + v41|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  194  <|@ instruction AMD64PREFETCH ~address: [v44|QWORD + v41|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  196  <|@ instruction AMD64PREFETCH ~address: [v44|QWORD + v41|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  198  <|@ instruction MOV x: [v41|QWORD] y: 1 size: QWORD <|@ <|@
      nr  200  <|@ instruction MOV x: [v41|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  202  <|@ instruction MOV (x: [v41|QWORD + 12], y: v27|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction v47|QWORD = LEA address: [v44|QWORD - 16] size: QWORD <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH x: v47|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B51 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4604759375651230885
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B49" 
    successors "B49" "B50" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4634844288894646813
    begin_IR
      LIR
      nr  218  <|@ instruction [v48|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction CMPBRANCH (x: v44|QWORD, y: v48|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4634792850175069044
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction MOV x: [v41|QWORD + v48|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  248  <|@ instruction v49|QWORD = LEA address: [v48|QWORD + 8] size: QWORD <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [v49|QWORD] destination: B49 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604759375651230886
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4604825882278563759
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction v51|QWORD[.] = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr  276  <|@ instruction [v52|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction CMP (x: v28|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr  292  <|@ instruction v53|DWORD = CMOVE (falseValue: v28|DWORD, ~trueValue: v27|DWORD) condition: > <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v28|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B58" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v27|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction v56|QWORD[*] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction v57|QWORD[*] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction v58|QWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction rdi|QWORD = LEA address: [v56|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  348  <|@ instruction rsi|QWORD = LEA address: [v57|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  350  <|@ instruction rdx|QWORD = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [v52|QWORD[.]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction v30|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  382  <|@ instruction v31|QWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 23] size: QWORD <|@ <|@
      nr  386  <|@ instruction v33|QWORD = AND x: v32|QWORD y: -8 size: QWORD <|@ <|@
      nr  388  <|@ instruction v34|QWORD = ADD (x: v33|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr  390  <|@ instruction CMPBRANCH (x: v34|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4598204386423092713
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction MOV (x: [r15|QWORD + 440], y: v34|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v30|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  420  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v30|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  422  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v30|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  424  <|@ instruction MOV x: [v30|QWORD] y: 1 size: QWORD <|@ <|@
      nr  426  <|@ instruction MOV x: [v30|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  428  <|@ instruction MOV (x: [v30|QWORD + 12], y: v28|DWORD) size: DWORD <|@ <|@
      nr  430  <|@ instruction v37|QWORD[.] = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [v37|QWORD[.]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr  434  <|@ instruction [v38|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction v39|QWORD[*] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction v40|QWORD[*] = MOVE input: v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction rdi|QWORD = LEA address: [v39|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  470  <|@ instruction rsi|QWORD = LEA address: [v40|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction rdx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  476  <|@ instruction JUMP ~outgoingValues: [v38|QWORD[.]] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B41" "B58" 
    successors "B62" 
    xhandlers
    flags 
    probability 4607182336702731708
    begin_IR
      LIR
      nr  478  <|@ instruction [v59|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v60|QWORD, temp2: v61|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr  594  <|@ instruction v62|DWORD[_] = COMPRESSPOINTER (input: v59|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr  596  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v62|DWORD[_]) size: DWORD <|@ <|@
      nr  598  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v59|QWORD[.]) {temp: v63|QWORD, temp2: v64|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 4575248858818943354
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction v72|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction rsi|QWORD = MOVE input: v72|QWORD moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction rdx|DWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr  646  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  648  <|@ instruction v46|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction NULLCHECK address: [v46|QWORD[.]] state [bci:27] <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [v46|QWORD[.]] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4575162870452290749
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction rcx|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction ZERO_MEMORY (pointer: [v41|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  678  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4568006969118877196
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction v73|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction rsi|QWORD = MOVE input: v73|QWORD moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction rdx|DWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  708  <|@ instruction v35|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction NULLCHECK address: [v35|QWORD[.]] state [bci:27] <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction v8|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr  732  <|@ instruction v9|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr  734  <|@ instruction BITTESTANDBRANCH value: v8|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B2 -> B3 falseDestination: B2 -> B8 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4532329488911171509
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction v10|QWORD = OR x: v8|QWORD y: 1 size: QWORD <|@ <|@
      nr  766  <|@ instruction MOV (x: [v9|QWORD], y: v10|QWORD) size: QWORD <|@ <|@
      nr  768  <|@ instruction rax|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction rax|QWORD = CAS (address: [v1|QWORD[.]], cmpValue: rax|QWORD, newValue: v9|QWORD) accessKind: QWORD <|@ <|@
      nr  772  <|@ instruction v11|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction CMPBRANCH (x: v11|QWORD, y: v10|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4532267370277133279
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B4" "B6" "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532382201905571021
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  798  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction v14|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr  820  <|@ instruction v15|QWORD = MOV input: [v14|QWORD] size: QWORD <|@ <|@
      nr  822  <|@ instruction v16|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  824  <|@ instruction TESTBRANCH (x: v15|QWORD, y: v15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4529143557278551352
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction v17|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr  840  <|@ instruction BITTESTANDBRANCH value: v17|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B19 -> B20 falseDestination: B19 -> B21 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529068261964565618
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction rax|QWORD = CAS (address: [v1|QWORD[.]], cmpValue: rax|QWORD, newValue: v15|QWORD) accessKind: QWORD <|@ <|@
      nr  870  <|@ instruction v18|DWORD = SETCC condition: = <|@ <|@
      nr  872  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B20" "B27" 
    successors "B29" "B31" 
    xhandlers
    flags 
    probability 4529074299895794134
    begin_IR
      LIR
      nr  874  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 17] trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction MOVB x: [v0|QWORD[.] + 16] y: 1 size: BYTE <|@ <|@
      nr 1042  <|@ instruction v65|DWORD = SHL value: v27|DWORD size: DWORD <|@ <|@
      nr 1044  <|@ instruction rsi|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1048  <|@ instruction rcx|DWORD = MOVE input: v65|DWORD moveKind: DWORD <|@ <|@
      nr 1050  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4800) [bci: 92]
stack: v0|QWORD[.] 
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOfRange(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:92] <|@ <|@
      nr 1052  <|@ instruction v66|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1054  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v67|QWORD, temp2: v68|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1056  <|@ instruction v69|DWORD[_] = COMPRESSPOINTER (input: v66|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr 1058  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v69|DWORD[_]) size: DWORD <|@ <|@
      nr 1060  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v66|QWORD[.]) {temp: v70|QWORD, temp2: v71|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B34" 
    xhandlers
    flags 
    probability 4526633713479026896
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B18" "B23" "B33" "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4530432362446083730
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr 1086  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B25" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524572191115640556
    begin_IR
      LIR
      nr 1098  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1116  <|@ instruction rdx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr 1118  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr 1120  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B30" 
    successors "B36" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction JUMP ~outgoingValues: [v16|DWORD] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4502623928274233274
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction MOV x: [v9|QWORD] y: 3 size: QWORD <|@ <|@
      nr 1148  <|@ instruction v13|QWORD = MOV input: [v8|QWORD + 62] size: QWORD <|@ <|@
      nr 1150  <|@ instruction TESTBRANCH (x: v13|QWORD, y: v13|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4501820778258385448
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1174  <|@ instruction rax|QWORD = CAS (address: [v8|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr 1176  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4501097943244122404
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4502543613272648492
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction v12|QWORD = SUB (x: v11|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr 1202  <|@ instruction TESTCONSTBRANCH x: v12|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B14" 
    xhandlers
    flags 
    probability 4502464101421079557
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction MOV x: [v9|QWORD] y: 0 size: QWORD <|@ <|@
      nr 1216  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B33" 
    xhandlers
    flags 
    probability 4499411328210841968
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction v19|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr 1234  <|@ instruction v20|QWORD = MOV input: [v19|QWORD + 134] size: QWORD <|@ <|@
      nr 1236  <|@ instruction TESTBRANCH (x: v20|QWORD, y: v20|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4499363139209891098
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction v21|QWORD = MOV input: [v19|QWORD + 150] size: QWORD <|@ <|@
      nr 1254  <|@ instruction v22|QWORD = OR (x: v21|QWORD, ~y: [v19|QWORD + 142]) size: QWORD <|@ <|@
      nr 1256  <|@ instruction TESTBRANCH (x: v22|QWORD, y: v22|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4498676108457829474
    begin_IR
      LIR
      nr 1258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction MOV x: [v19|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr 1270  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" "B15" 
    xhandlers
    flags 
    probability 4487506829360426131
    begin_IR
      LIR
      nr 1272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction CMPBRANCH (x: v13|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4484288269758412157
    begin_IR
      LIR
      nr 1284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4486864309347747871
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4484211167356890766
    begin_IR
      LIR
      nr 1304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction CMPCONSTBRANCH x: [v19|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4483447853581828992
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction MOV x: [v19|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr 1332  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1334  <|@ instruction CMPCONSTBRANCH x: [v19|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4482760871184273395
    begin_IR
      LIR
      nr 1336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1364  <|@ instruction rax|QWORD = CAS (address: [v19|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr 1366  <|@ instruction v23|DWORD = SETCC condition: = <|@ <|@
      nr 1368  <|@ instruction v24|DWORD = XOR x: v23|DWORD y: 1 size: DWORD <|@ <|@
      nr 1370  <|@ instruction JUMP ~outgoingValues: [v24|DWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4481718189707699113
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction INC value: [v8|QWORD + 134] size: QWORD <|@ <|@
      nr 1384  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4472659588851943866
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B7" "B15" "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4490722176362376714
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1414  <|@ instruction rdx|QWORD = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr 1416  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
locals: v1|QWORD[.] 
locks: monitor[v1|QWORD[.], vstack:0|QWORD] 
java.lang.String.<init>(String.java:4785) [bci: 10]
locals: v0|QWORD[.] v1|QWORD[.] - v4|QWORD[.] - - 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0, 10] <|@ <|@
      nr 1418  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B34" 
    xhandlers
    flags 
    probability 4469235422845872850
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction v26|QWORD = DEC value: v20|QWORD size: QWORD <|@ <|@
      nr 1434  <|@ instruction MOV (x: [v19|QWORD + 134], y: v26|QWORD) size: QWORD <|@ <|@
      nr 1436  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" 
    xhandlers
    flags 
    probability 4469173740924655728
    begin_IR
      LIR
      nr 1438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 4468563089904606309
    begin_IR
      LIR
      nr 1448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction MOV x: [r15|QWORD + 1156] y: -63763 size: DWORD <|@ <|@
      nr 1476  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1478  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4785) [bci: 13]
stack: v27|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v4|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:13] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15667 size: DWORD <|@ <|@
      nr 1498  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1500  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4783) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction JUMP ~outgoingValues: [int[-61721|0xffffffffffff0ee7], long[0|0x0]] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction JUMP ~outgoingValues: [int[-62745|0xffffffffffff0ae7], long[0|0x0]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction JUMP ~outgoingValues: [int[-59667|0xffffffffffff16ed], long[1300|0x514]] destination: B43 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B43" "B54" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1532  <|@ instruction [v54|DWORD, v55|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v54|DWORD) size: DWORD <|@ <|@
      nr 1550  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v55|QWORD) size: QWORD <|@ <|@
      nr 1552  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_1       
     5: invokevirtual #142        // java.lang.AbstractStringBuilder.getValue:()byte[]
     8: astore_3      
     9: aload_1       
    10: invokevirtual #141        // java.lang.AbstractStringBuilder.length:()int
    13: istore        4
    15: aload_1       
    16: invokevirtual #292        // java.lang.AbstractStringBuilder.isLatin1:()boolean
    19: ifeq          41
    22: aload_0       
    23: iconst_0      
    24: putfield      #2          // coder:byte
    27: aload_0       
    28: aload_3       
    29: iconst_0      
    30: iload         4
    32: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    35: putfield      #1          // value:byte[]
    38: goto          98
    41: getstatic     #8          // COMPACT_STRINGS:boolean
    44: ifeq          80
    47: aload_1       
    48: getfield      #293        // java.lang.AbstractStringBuilder.maybeLatin1:boolean
    51: ifeq          80
    54: aload_3       
    55: iconst_0      
    56: iload         4
    58: invokestatic  #294        // java.lang.StringUTF16.compress:(byte[], int, int)byte[]
    61: astore        5
    63: aload         5
    65: ifnull        80
    68: aload_0       
    69: iconst_0      
    70: putfield      #2          // coder:byte
    73: aload_0       
    74: aload         5
    76: putfield      #1          // value:byte[]
    79: return        
    80: aload_0       
    81: iconst_1      
    82: putfield      #2          // coder:byte
    85: aload_0       
    86: aload_3       
    87: iconst_0      
    88: iload         4
    90: iconst_1      
    91: ishl          
    92: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    95: putfield      #1          // value:byte[]
    98: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B64" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction [vstack:0|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@32f57492 slotKind: QWORD <|@ <|@
      nr   48  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4783) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction v3|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   60  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   62  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v5|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B64 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607182323057074616
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B1 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B1" "B35" 
    successors "B37" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   78  <|@ instruction [v27|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 16] trueDestinationProbability: 0.9999908853703156 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B60 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B42" 
    xhandlers
    flags 
    probability 4607182336702731707
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4785) [bci: 13]
stack: v27|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v4|QWORD[.] - - 
>@ <|@ instruction v28|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:13] <|@ <|@
      nr  108  <|@ instruction MOVB x: [v0|QWORD[.] + 16] y: 0 size: BYTE <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: v28|DWORD, y: v27|DWORD) trueDestinationProbability: 0.2541630105061688 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction TESTBRANCH (x: v27|DWORD, y: v27|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction v41|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  150  <|@ instruction v42|QWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction v43|QWORD = LEA address: [v42|QWORD + 23] size: QWORD <|@ <|@
      nr  154  <|@ instruction v44|QWORD = AND x: v43|QWORD y: -8 size: QWORD <|@ <|@
      nr  156  <|@ instruction v45|QWORD = ADD (x: v44|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: v45|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B51" 
    xhandlers
    flags 
    probability 4604825882278563758
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction MOV (x: [r15|QWORD + 440], y: v45|QWORD) size: QWORD <|@ <|@
      nr  192  <|@ instruction AMD64PREFETCH ~address: [v44|QWORD + v41|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  194  <|@ instruction AMD64PREFETCH ~address: [v44|QWORD + v41|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  196  <|@ instruction AMD64PREFETCH ~address: [v44|QWORD + v41|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  198  <|@ instruction MOV x: [v41|QWORD] y: 1 size: QWORD <|@ <|@
      nr  200  <|@ instruction MOV x: [v41|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  202  <|@ instruction MOV (x: [v41|QWORD + 12], y: v27|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction v47|QWORD = LEA address: [v44|QWORD - 16] size: QWORD <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH x: v47|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B51 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4604759375651230885
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B49" 
    successors "B49" "B50" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4634844288894646813
    begin_IR
      LIR
      nr  218  <|@ instruction [v48|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction CMPBRANCH (x: v44|QWORD, y: v48|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4634792850175069044
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction MOV x: [v41|QWORD + v48|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  248  <|@ instruction v49|QWORD = LEA address: [v48|QWORD + 8] size: QWORD <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [v49|QWORD] destination: B49 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604759375651230886
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4604825882278563759
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction v51|QWORD[.] = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr  276  <|@ instruction [v52|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction CMP (x: v28|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr  292  <|@ instruction v53|DWORD = CMOVE (falseValue: v28|DWORD, ~trueValue: v27|DWORD) condition: > <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v28|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B58" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v27|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction v56|QWORD[*] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction v57|QWORD[*] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction v58|QWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction rdi|QWORD = LEA address: [v56|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  348  <|@ instruction rsi|QWORD = LEA address: [v57|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  350  <|@ instruction rdx|QWORD = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [v52|QWORD[.]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction v30|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  382  <|@ instruction v31|QWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 23] size: QWORD <|@ <|@
      nr  386  <|@ instruction v33|QWORD = AND x: v32|QWORD y: -8 size: QWORD <|@ <|@
      nr  388  <|@ instruction v34|QWORD = ADD (x: v33|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr  390  <|@ instruction CMPBRANCH (x: v34|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4598204386423092713
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction MOV (x: [r15|QWORD + 440], y: v34|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v30|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  420  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v30|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  422  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v30|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  424  <|@ instruction MOV x: [v30|QWORD] y: 1 size: QWORD <|@ <|@
      nr  426  <|@ instruction MOV x: [v30|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  428  <|@ instruction MOV (x: [v30|QWORD + 12], y: v28|DWORD) size: DWORD <|@ <|@
      nr  430  <|@ instruction v37|QWORD[.] = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [v37|QWORD[.]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr  434  <|@ instruction [v38|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction v39|QWORD[*] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction v40|QWORD[*] = MOVE input: v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction rdi|QWORD = LEA address: [v39|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  470  <|@ instruction rsi|QWORD = LEA address: [v40|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction rdx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  476  <|@ instruction JUMP ~outgoingValues: [v38|QWORD[.]] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B41" "B58" 
    successors "B62" 
    xhandlers
    flags 
    probability 4607182336702731708
    begin_IR
      LIR
      nr  478  <|@ instruction [v59|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v60|QWORD, temp2: v61|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr  594  <|@ instruction v62|DWORD[_] = COMPRESSPOINTER (input: v59|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr  596  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v62|DWORD[_]) size: DWORD <|@ <|@
      nr  598  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v59|QWORD[.]) {temp: v63|QWORD, temp2: v64|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 4575248858818943354
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction v72|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction rsi|QWORD = MOVE input: v72|QWORD moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction rdx|DWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr  646  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  648  <|@ instruction v46|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction NULLCHECK address: [v46|QWORD[.]] state [bci:27] <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [v46|QWORD[.]] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4575162870452290749
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction rcx|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction ZERO_MEMORY (pointer: [v41|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  678  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4568006969118877196
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction v73|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction rsi|QWORD = MOVE input: v73|QWORD moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction rdx|DWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  708  <|@ instruction v35|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction NULLCHECK address: [v35|QWORD[.]] state [bci:27] <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction v8|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr  732  <|@ instruction v9|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr  734  <|@ instruction BITTESTANDBRANCH value: v8|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B2 -> B3 falseDestination: B2 -> B8 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4532329488911171509
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction v10|QWORD = OR x: v8|QWORD y: 1 size: QWORD <|@ <|@
      nr  766  <|@ instruction MOV (x: [v9|QWORD], y: v10|QWORD) size: QWORD <|@ <|@
      nr  768  <|@ instruction rax|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction rax|QWORD = CAS (address: [v1|QWORD[.]], cmpValue: rax|QWORD, newValue: v9|QWORD) accessKind: QWORD <|@ <|@
      nr  772  <|@ instruction v11|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction CMPBRANCH (x: v11|QWORD, y: v10|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4532267370277133279
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B4" "B6" "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532382201905571021
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  798  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction v14|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr  820  <|@ instruction v15|QWORD = MOV input: [v14|QWORD] size: QWORD <|@ <|@
      nr  822  <|@ instruction v16|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  824  <|@ instruction TESTBRANCH (x: v15|QWORD, y: v15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4529143557278551352
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction v17|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr  840  <|@ instruction BITTESTANDBRANCH value: v17|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B19 -> B20 falseDestination: B19 -> B21 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529068261964565618
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction rax|QWORD = CAS (address: [v1|QWORD[.]], cmpValue: rax|QWORD, newValue: v15|QWORD) accessKind: QWORD <|@ <|@
      nr  870  <|@ instruction v18|DWORD = SETCC condition: = <|@ <|@
      nr  872  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B20" "B27" 
    successors "B29" "B31" 
    xhandlers
    flags 
    probability 4529074299895794134
    begin_IR
      LIR
      nr  874  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 17] trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction MOVB x: [v0|QWORD[.] + 16] y: 1 size: BYTE <|@ <|@
      nr 1042  <|@ instruction v65|DWORD = SHL value: v27|DWORD size: DWORD <|@ <|@
      nr 1044  <|@ instruction rsi|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1048  <|@ instruction rcx|DWORD = MOVE input: v65|DWORD moveKind: DWORD <|@ <|@
      nr 1050  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4800) [bci: 92]
stack: v0|QWORD[.] 
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOfRange(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:92] <|@ <|@
      nr 1052  <|@ instruction v66|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1054  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v67|QWORD, temp2: v68|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1056  <|@ instruction v69|DWORD[_] = COMPRESSPOINTER (input: v66|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr 1058  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v69|DWORD[_]) size: DWORD <|@ <|@
      nr 1060  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v66|QWORD[.]) {temp: v70|QWORD, temp2: v71|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B34" 
    xhandlers
    flags 
    probability 4526633713479026896
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B18" "B23" "B33" "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4530432362446083730
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr 1086  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B25" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524572191115640556
    begin_IR
      LIR
      nr 1098  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1116  <|@ instruction rdx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr 1118  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr 1120  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B30" 
    successors "B36" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction JUMP ~outgoingValues: [v16|DWORD] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4502623928274233274
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction MOV x: [v9|QWORD] y: 3 size: QWORD <|@ <|@
      nr 1148  <|@ instruction v13|QWORD = MOV input: [v8|QWORD + 62] size: QWORD <|@ <|@
      nr 1150  <|@ instruction TESTBRANCH (x: v13|QWORD, y: v13|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4501820778258385448
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1174  <|@ instruction rax|QWORD = CAS (address: [v8|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr 1176  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4501097943244122404
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4502543613272648492
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction v12|QWORD = SUB (x: v11|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr 1202  <|@ instruction TESTCONSTBRANCH x: v12|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B14" 
    xhandlers
    flags 
    probability 4502464101421079557
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction MOV x: [v9|QWORD] y: 0 size: QWORD <|@ <|@
      nr 1216  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B33" 
    xhandlers
    flags 
    probability 4499411328210841968
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction v19|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr 1234  <|@ instruction v20|QWORD = MOV input: [v19|QWORD + 134] size: QWORD <|@ <|@
      nr 1236  <|@ instruction TESTBRANCH (x: v20|QWORD, y: v20|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4499363139209891098
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction v21|QWORD = MOV input: [v19|QWORD + 150] size: QWORD <|@ <|@
      nr 1254  <|@ instruction v22|QWORD = OR (x: v21|QWORD, ~y: [v19|QWORD + 142]) size: QWORD <|@ <|@
      nr 1256  <|@ instruction TESTBRANCH (x: v22|QWORD, y: v22|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4498676108457829474
    begin_IR
      LIR
      nr 1258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction MOV x: [v19|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr 1270  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" "B15" 
    xhandlers
    flags 
    probability 4487506829360426131
    begin_IR
      LIR
      nr 1272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction CMPBRANCH (x: v13|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4484288269758412157
    begin_IR
      LIR
      nr 1284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4486864309347747871
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4484211167356890766
    begin_IR
      LIR
      nr 1304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction CMPCONSTBRANCH x: [v19|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4483447853581828992
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction MOV x: [v19|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr 1332  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1334  <|@ instruction CMPCONSTBRANCH x: [v19|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4482760871184273395
    begin_IR
      LIR
      nr 1336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1364  <|@ instruction rax|QWORD = CAS (address: [v19|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr 1366  <|@ instruction v23|DWORD = SETCC condition: = <|@ <|@
      nr 1368  <|@ instruction v24|DWORD = XOR x: v23|DWORD y: 1 size: DWORD <|@ <|@
      nr 1370  <|@ instruction JUMP ~outgoingValues: [v24|DWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4481718189707699113
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction INC value: [v8|QWORD + 134] size: QWORD <|@ <|@
      nr 1384  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4472659588851943866
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B7" "B15" "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4490722176362376714
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1414  <|@ instruction rdx|QWORD = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr 1416  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
locals: v1|QWORD[.] 
locks: monitor[v1|QWORD[.], vstack:0|QWORD] 
java.lang.String.<init>(String.java:4785) [bci: 10]
locals: v0|QWORD[.] v1|QWORD[.] - v4|QWORD[.] - - 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0, 10] <|@ <|@
      nr 1418  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B34" 
    xhandlers
    flags 
    probability 4469235422845872850
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction v26|QWORD = DEC value: v20|QWORD size: QWORD <|@ <|@
      nr 1434  <|@ instruction MOV (x: [v19|QWORD + 134], y: v26|QWORD) size: QWORD <|@ <|@
      nr 1436  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" 
    xhandlers
    flags 
    probability 4469173740924655728
    begin_IR
      LIR
      nr 1438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 4468563089904606309
    begin_IR
      LIR
      nr 1448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction MOV x: [r15|QWORD + 1156] y: -63763 size: DWORD <|@ <|@
      nr 1476  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1478  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4785) [bci: 13]
stack: v27|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v4|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:13] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15667 size: DWORD <|@ <|@
      nr 1498  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1500  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4783) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction JUMP ~outgoingValues: [int[-61721|0xffffffffffff0ee7], long[0|0x0]] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction JUMP ~outgoingValues: [int[-62745|0xffffffffffff0ae7], long[0|0x0]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction JUMP ~outgoingValues: [int[-59667|0xffffffffffff16ed], long[1300|0x514]] destination: B43 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B43" "B54" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1532  <|@ instruction [v54|DWORD, v55|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v54|DWORD) size: DWORD <|@ <|@
      nr 1550  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v55|QWORD) size: QWORD <|@ <|@
      nr 1552  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_1       
     5: invokevirtual #142        // java.lang.AbstractStringBuilder.getValue:()byte[]
     8: astore_3      
     9: aload_1       
    10: invokevirtual #141        // java.lang.AbstractStringBuilder.length:()int
    13: istore        4
    15: aload_1       
    16: invokevirtual #292        // java.lang.AbstractStringBuilder.isLatin1:()boolean
    19: ifeq          41
    22: aload_0       
    23: iconst_0      
    24: putfield      #2          // coder:byte
    27: aload_0       
    28: aload_3       
    29: iconst_0      
    30: iload         4
    32: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    35: putfield      #1          // value:byte[]
    38: goto          98
    41: getstatic     #8          // COMPACT_STRINGS:boolean
    44: ifeq          80
    47: aload_1       
    48: getfield      #293        // java.lang.AbstractStringBuilder.maybeLatin1:boolean
    51: ifeq          80
    54: aload_3       
    55: iconst_0      
    56: iload         4
    58: invokestatic  #294        // java.lang.StringUTF16.compress:(byte[], int, int)byte[]
    61: astore        5
    63: aload         5
    65: ifnull        80
    68: aload_0       
    69: iconst_0      
    70: putfield      #2          // coder:byte
    73: aload_0       
    74: aload         5
    76: putfield      #1          // value:byte[]
    79: return        
    80: aload_0       
    81: iconst_1      
    82: putfield      #2          // coder:byte
    85: aload_0       
    86: aload_3       
    87: iconst_0      
    88: iload         4
    90: iconst_1      
    91: ishl          
    92: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    95: putfield      #1          // value:byte[]
    98: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v10|q [0, 1[[352, 353[[474, 475[[646, 648[[676, 677[[706, 708[[768, 772[[866, 869[[1050, 1052[[1172, 1175[[1362, 1365[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v47|q [0, 1[[352, 353[[474, 475[[674, 677[[1048, 1051[ "NoOptimization"
  rdx|q fixed "[rdx|q]" rdx|q v58|q [0, 50[[350, 353[[472, 475[[644, 646[[704, 706[[1046, 1051[[1116, 1118[[1414, 1416[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 44[[352, 353[[474, 475[[1050, 1051[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v72|q [0, 48[[348, 353[[470, 475[[642, 646[[702, 706[[1044, 1051[[1114, 1118[[1412, 1416[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[346, 353[[468, 475[[676, 677[[1050, 1051[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[[1416, 1417[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|q [48, 599[[620, 1061[[1064, 1479[[1480, 1501[[1502, 1553[48 MustHaveRegister 108 MustHaveRegister 592 MustHaveRegister 596 MustHaveRegister 598 MustHaveRegister 1040 MustHaveRegister 1054 MustHaveRegister 1058 MustHaveRegister 1060 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|q [50, 107[[714, 908[[1064, 1479[[1480, 1501[50 MustHaveRegister 52 MustHaveRegister 54 MustHaveRegister 74 MustHaveRegister 88 MustHaveRegister 730 MustHaveRegister 770 MustHaveRegister 822 MustHaveRegister 838 MustHaveRegister 868 MustHaveRegister 906 MustHaveRegister 1114 ShouldHaveRegister 1232 MustHaveRegister 1412 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [52, 60[52 MustHaveRegister 60 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [54, 106[[714, 896[[1064, 1458[54 MustHaveRegister 56 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q v3|d [56, 340[[356, 464[[620, 1044[[1064, 1479[[1502, 1553[56 MustHaveRegister 340 ShouldHaveRegister 464 ShouldHaveRegister 1044 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q v2|d [60, 63[60 MustHaveRegister 62 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q -1 [58, 61[58 MustHaveRegister 60 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d v27|d [74, 77[74 MustHaveRegister 76 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q -1 [730, 764[[1132, 1174[[1272, 1284[[1372, 1382[730 MustHaveRegister 734 MustHaveRegister 764 MustHaveRegister 1148 MustHaveRegister 1174 MustHaveRegister 1382 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q -1 [732, 776[[1132, 1178[[1188, 1214[[1272, 1304[[1386, 1414[732 MustHaveRegister 766 MustHaveRegister 770 MustHaveRegister 1146 MustHaveRegister 1214 MustHaveRegister 1414 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q v8|q [764, 774[764 MustHaveRegister 766 MustHaveRegister 768 ShouldHaveRegister 774 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q rax|q [772, 776[[1188, 1200[772 MustHaveRegister 774 MustHaveRegister 1200 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q v11|q [1200, 1202[1200 MustHaveRegister 1202 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q -1 [1148, 1152[[1272, 1282[1148 MustHaveRegister 1150 MustHaveRegister 1282 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q -1 [818, 886[[1088, 1116[[1218, 1258[[1304, 1372[[1438, 1448[818 MustHaveRegister 820 MustHaveRegister 866 ShouldHaveRegister 1116 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q -1 [820, 868[820 MustHaveRegister 824 MustHaveRegister 868 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[v16|d]" v16|d -1 [822, 896[[1064, 1131[[1218, 1272[[1304, 1372[[1420, 1458[822 MustHaveRegister 1130 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q -1 [838, 840[838 MustHaveRegister 840 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[v18|d]" v18|d v25|d [870, 873[870 MustHaveRegister 872 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q -1 [1232, 1268[[1304, 1364[[1420, 1434[1232 MustHaveRegister 1234 MustHaveRegister 1252 MustHaveRegister 1254 MustHaveRegister 1268 MustHaveRegister 1314 MustHaveRegister 1330 MustHaveRegister 1334 MustHaveRegister 1364 MustHaveRegister 1434 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q -1 [1234, 1238[[1420, 1432[1234 MustHaveRegister 1236 MustHaveRegister 1432 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[v21|q]" v21|q -1 [1252, 1254[1252 MustHaveRegister 1254 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[v22|q]" v22|q v21|q [1254, 1256[1254 MustHaveRegister 1256 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[v23|d]" v23|d -1 [1366, 1368[1366 MustHaveRegister 1368 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[v24|d]" v24|d v23|d [1368, 1371[1368 MustHaveRegister 1370 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[v25|d]" v25|d v18|d [874, 884[884 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[v26|q]" v26|q v20|q [1432, 1434[1432 MustHaveRegister 1434 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[v27|d]" v27|d v7|d [78, 308[[356, 392[[620, 711[[896, 1042[[1458, 1479[[1502, 1553[110 ShouldHaveRegister 122 MustHaveRegister 150 ShouldHaveRegister 202 MustHaveRegister 290 ShouldHaveRegister 292 MustHaveRegister 306 ShouldHaveRegister 644 ShouldHaveRegister 1042 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[v28|d]" v28|d -1 [106, 294[[356, 428[[620, 704[106 MustHaveRegister 110 MustHaveRegister 290 MustHaveRegister 292 ShouldHaveRegister 294 ShouldHaveRegister 382 ShouldHaveRegister 428 MustHaveRegister 704 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[v30|q]" v30|q -1 [380, 430[380 MustHaveRegister 388 ShouldHaveRegister 418 MustHaveRegister 420 MustHaveRegister 422 MustHaveRegister 424 MustHaveRegister 426 MustHaveRegister 428 MustHaveRegister 430 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[v31|q]" v31|q v28|d [382, 472[[680, 714[382 MustHaveRegister 384 MustHaveRegister 472 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[v32|q]" v32|q -1 [384, 386[384 MustHaveRegister 386 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[v33|q]" v33|q v32|q [386, 423[386 MustHaveRegister 388 ShouldHaveRegister 418 MustHaveRegister 420 MustHaveRegister 422 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[v34|q]" v34|q v33|q [388, 416[388 MustHaveRegister 390 MustHaveRegister 416 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[v35|q]" v35|q rax|q [708, 713[708 MustHaveRegister 710 MustHaveRegister 712 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[v37|q]" v37|q v30|q [430, 433[430 MustHaveRegister 432 ShouldHaveRegister  "NoSpillStore"
  v38|q QWORD "[v38|q]" v38|q v37|q [434, 477[466 ShouldHaveRegister 476 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[v39|q]" v39|q v4|q [464, 468[464 MustHaveRegister 468 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[v40|q]" v40|q v38|q [466, 470[466 MustHaveRegister 470 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[v41|q]" v41|q -1 [148, 272[[654, 680[148 MustHaveRegister 156 ShouldHaveRegister 192 MustHaveRegister 194 MustHaveRegister 196 MustHaveRegister 198 MustHaveRegister 200 MustHaveRegister 202 MustHaveRegister 246 MustHaveRegister 251 LiveAtLoopEnd 272 ShouldHaveRegister 676 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[v42|q]" v42|q v27|d [150, 152[150 MustHaveRegister 152 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[v43|q]" v43|q -1 [152, 154[152 MustHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[v44|q]" v44|q v43|q [154, 252[154 MustHaveRegister 156 ShouldHaveRegister 192 MustHaveRegister 194 MustHaveRegister 196 MustHaveRegister 204 MustHaveRegister 228 MustHaveRegister 251 LiveAtLoopEnd  "NoSpillStore"
  v45|q QWORD "[v45|q]" v45|q v44|q [156, 190[156 MustHaveRegister 158 MustHaveRegister 190 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[v46|q]" v46|q rax|q [648, 653[648 MustHaveRegister 650 MustHaveRegister 652 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[v47|q]" v47|q -1 [204, 208[[654, 674[204 MustHaveRegister 206 ShouldHaveRegister 674 ShouldHaveRegister  "NoSpillStore"
  v48|q QWORD "[v48|q]" v48|q v49|q [218, 248[228 ShouldHaveRegister 246 MustHaveRegister 248 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[v49|q]" v49|q v48|q [248, 251[248 MustHaveRegister 250 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[v51|q]" v51|q v41|q [272, 275[272 MustHaveRegister 274 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[v52|q]" v52|q v51|q [276, 355[342 ShouldHaveRegister 354 ShouldHaveRegister  "NoSpillStore"
  v53|d DWORD "[v53|d]" v53|d v28|d [292, 344[292 MustHaveRegister 294 MustHaveRegister 306 MustHaveRegister 344 ShouldHaveRegister  "NoSpillStore"
  v54|d DWORD "[v54|d]" v54|d -1 [1532, 1548[1548 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[v55|q]" v55|q -1 [1532, 1550[1550 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[v56|q]" v56|q v4|q [340, 346[340 MustHaveRegister 346 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[v57|q]" v57|q v52|q [342, 348[342 MustHaveRegister 348 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[v58|q]" v58|q v53|d [344, 350[344 MustHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[v59|q]" v59|q v52|q [478, 599[594 MustHaveRegister 598 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[v60|q]" v60|q -1 [592, 593[592 MustHaveRegister  "NoDefinitionFound"
  v61|q QWORD "[v61|q]" v61|q -1 [592, 593[592 MustHaveRegister  "NoDefinitionFound"
  v62|d DWORD "[v62|d]" v62|d v59|q [594, 596[594 MustHaveRegister 596 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[v63|q]" v63|q -1 [598, 599[598 MustHaveRegister  "NoDefinitionFound"
  v64|q QWORD "[v64|q]" v64|q -1 [598, 599[598 MustHaveRegister  "NoDefinitionFound"
  v65|d DWORD "[v65|d]" v65|d v27|d [1042, 1048[1042 MustHaveRegister 1048 ShouldHaveRegister  "NoSpillStore"
  v66|q QWORD "[v66|q]" v66|q rax|q [1052, 1061[1052 MustHaveRegister 1056 MustHaveRegister 1060 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[v67|q]" v67|q -1 [1054, 1055[1054 MustHaveRegister  "NoDefinitionFound"
  v68|q QWORD "[v68|q]" v68|q -1 [1054, 1055[1054 MustHaveRegister  "NoDefinitionFound"
  v69|d DWORD "[v69|d]" v69|d v66|q [1056, 1058[1056 MustHaveRegister 1058 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[v70|q]" v70|q -1 [1060, 1061[1060 MustHaveRegister  "NoDefinitionFound"
  v71|q QWORD "[v71|q]" v71|q -1 [1060, 1061[1060 MustHaveRegister  "NoDefinitionFound"
  v72|q QWORD "[v72|q]" v72|q -1 [622, 642[622 MustHaveRegister 642 ShouldHaveRegister  "NoSpillStore"
  v73|q QWORD "[v73|q]" v73|q -1 [682, 702[682 MustHaveRegister 702 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v10|q [0, 1[[352, 353[[474, 475[[646, 648[[676, 677[[706, 708[[768, 772[[866, 869[[1050, 1052[[1172, 1175[[1362, 1365[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v47|q [0, 1[[352, 353[[474, 475[[674, 677[[1048, 1051[ "NoOptimization"
  rdx|q fixed "[rdx|q]" rdx|q v58|q [0, 50[[350, 353[[472, 475[[644, 646[[704, 706[[1046, 1051[[1116, 1118[[1414, 1416[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 44[[352, 353[[474, 475[[1050, 1051[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v72|q [0, 48[[348, 353[[470, 475[[642, 646[[702, 706[[1044, 1051[[1114, 1118[[1412, 1416[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[346, 353[[468, 475[[676, 677[[1050, 1051[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[[1416, 1417[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [48, 308[48 MustHaveRegister 108 MustHaveRegister  "SpillInDominator"
  v1|q QWORD "[r11|q]" v1|q rdx|q [50, 107[[714, 908[[1064, 1479[[1480, 1501[50 MustHaveRegister 52 MustHaveRegister 54 MustHaveRegister 74 MustHaveRegister 88 MustHaveRegister 730 MustHaveRegister 770 MustHaveRegister 822 MustHaveRegister 838 MustHaveRegister 868 MustHaveRegister 906 MustHaveRegister 1114 ShouldHaveRegister 1232 MustHaveRegister 1412 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rdi|d]" v2|d -1 [52, 60[52 MustHaveRegister 60 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d -1 [54, 106[[714, 896[[1064, 1458[54 MustHaveRegister 56 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[r9|q]" v4|q v3|d [56, 340[[356, 464[[620, 1044[[1064, 1479[[1502, 1553[56 MustHaveRegister 340 ShouldHaveRegister 464 ShouldHaveRegister 1044 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rdi|q]" v5|q v2|d [60, 63[60 MustHaveRegister 62 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rdx|q]" v6|q -1 [58, 61[58 MustHaveRegister 60 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[rdi|d]" v7|d v27|d [74, 77[74 MustHaveRegister 76 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[r10|q]" v8|q -1 [730, 764[[1132, 1174[[1272, 1284[[1372, 1382[730 MustHaveRegister 734 MustHaveRegister 764 MustHaveRegister 1148 MustHaveRegister 1174 MustHaveRegister 1382 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rcx|q]" v9|q -1 [732, 776[[1132, 1178[[1188, 1214[[1272, 1304[[1386, 1414[732 MustHaveRegister 766 MustHaveRegister 770 MustHaveRegister 1146 MustHaveRegister 1214 MustHaveRegister 1414 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[r10|q]" v10|q v8|q [764, 774[764 MustHaveRegister 766 MustHaveRegister 768 ShouldHaveRegister 774 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rax|q]" v11|q rax|q [772, 776[[1188, 1200[772 MustHaveRegister 774 MustHaveRegister 1200 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q v11|q [1200, 1202[1200 MustHaveRegister 1202 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rsi|q]" v13|q -1 [1148, 1152[[1272, 1282[1148 MustHaveRegister 1150 MustHaveRegister 1282 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[r10|q]" v14|q -1 [818, 886[[1088, 1116[[1218, 1258[[1304, 1372[[1438, 1448[818 MustHaveRegister 820 MustHaveRegister 866 ShouldHaveRegister 1116 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rsi|q]" v15|q -1 [820, 868[820 MustHaveRegister 824 MustHaveRegister 868 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[rcx|d]" v16|d -1 [822, 896[[1064, 1131[[1218, 1272[[1304, 1372[[1420, 1458[822 MustHaveRegister 1130 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rax|q]" v17|q -1 [838, 840[838 MustHaveRegister 840 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[rsi|d]" v18|d v25|d [870, 873[870 MustHaveRegister 872 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rdi|q]" v19|q -1 [1232, 1268[[1304, 1364[[1420, 1434[1232 MustHaveRegister 1234 MustHaveRegister 1252 MustHaveRegister 1254 MustHaveRegister 1268 MustHaveRegister 1314 MustHaveRegister 1330 MustHaveRegister 1334 MustHaveRegister 1364 MustHaveRegister 1434 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[rdx|q]" v20|q -1 [1234, 1238[[1420, 1432[1234 MustHaveRegister 1236 MustHaveRegister 1432 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[rax|q]" v21|q -1 [1252, 1254[1252 MustHaveRegister 1254 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[rax|q]" v22|q v21|q [1254, 1256[1254 MustHaveRegister 1256 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[rsi|d]" v23|d -1 [1366, 1368[1366 MustHaveRegister 1368 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[rsi|d]" v24|d v23|d [1368, 1371[1368 MustHaveRegister 1370 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[rsi|d]" v25|d v18|d [874, 884[884 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rdx|q]" v26|q v20|q [1432, 1434[1432 MustHaveRegister 1434 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[r10|d]" v27|d v7|d [78, 308[[356, 392[[620, 711[[896, 1042[[1458, 1479[[1502, 1553[110 ShouldHaveRegister 122 MustHaveRegister 150 ShouldHaveRegister 202 MustHaveRegister 290 ShouldHaveRegister 292 MustHaveRegister 306 ShouldHaveRegister 644 ShouldHaveRegister 1042 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[r8|d]" v28|d -1 [106, 294[[356, 428[[620, 704[106 MustHaveRegister 110 MustHaveRegister 290 MustHaveRegister 292 ShouldHaveRegister 294 ShouldHaveRegister 382 ShouldHaveRegister 428 MustHaveRegister 704 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[rdi|q]" v30|q -1 [380, 430[380 MustHaveRegister 388 ShouldHaveRegister 418 MustHaveRegister 420 MustHaveRegister 422 MustHaveRegister 424 MustHaveRegister 426 MustHaveRegister 428 MustHaveRegister 430 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[r11|q]" v31|q v28|d [382, 472[[680, 714[382 MustHaveRegister 384 MustHaveRegister 472 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[rsi|q]" v32|q -1 [384, 386[384 MustHaveRegister 386 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rsi|q]" v33|q v32|q [386, 423[386 MustHaveRegister 388 ShouldHaveRegister 418 MustHaveRegister 420 MustHaveRegister 422 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[rdx|q]" v34|q v33|q [388, 416[388 MustHaveRegister 390 MustHaveRegister 416 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[rax|q]" v35|q rax|q [708, 713[708 MustHaveRegister 710 MustHaveRegister 712 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[rdi|q]" v37|q v30|q [430, 433[430 MustHaveRegister 432 ShouldHaveRegister  "NoSpillStore"
  v38|q QWORD "[rdi|q]" v38|q v37|q [434, 467[466 ShouldHaveRegister  "OneSpillStore"
  v39|q QWORD "[r9|q]" v39|q v4|q [464, 468[464 MustHaveRegister 468 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rsi|q]" v40|q v38|q [466, 470[466 MustHaveRegister 470 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[r11|q]" v41|q -1 [148, 272[[654, 680[148 MustHaveRegister 156 ShouldHaveRegister 192 MustHaveRegister 194 MustHaveRegister 196 MustHaveRegister 198 MustHaveRegister 200 MustHaveRegister 202 MustHaveRegister 246 MustHaveRegister 251 LiveAtLoopEnd 272 ShouldHaveRegister 676 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[rdi|q]" v42|q v27|d [150, 152[150 MustHaveRegister 152 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[rdi|q]" v43|q -1 [152, 154[152 MustHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[rdi|q]" v44|q v43|q [154, 252[154 MustHaveRegister 156 ShouldHaveRegister 192 MustHaveRegister 194 MustHaveRegister 196 MustHaveRegister 204 MustHaveRegister 228 MustHaveRegister 251 LiveAtLoopEnd  "NoSpillStore"
  v45|q QWORD "[rdx|q]" v45|q v44|q [156, 190[156 MustHaveRegister 158 MustHaveRegister 190 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[rax|q]" v46|q rax|q [648, 653[648 MustHaveRegister 650 MustHaveRegister 652 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[rcx|q]" v47|q -1 [204, 208[[654, 674[204 MustHaveRegister 206 ShouldHaveRegister 674 ShouldHaveRegister  "NoSpillStore"
  v48|q QWORD "[rdx|q]" v48|q v49|q [218, 248[228 ShouldHaveRegister 246 MustHaveRegister 248 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[rdx|q]" v49|q v48|q [248, 251[248 MustHaveRegister 250 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[r11|q]" v51|q v41|q [272, 275[272 MustHaveRegister 274 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[r11|q]" v52|q v51|q [276, 351[342 ShouldHaveRegister  "OneSpillStore"
  v53|d DWORD "[rdi|d]" v53|d v28|d [292, 344[292 MustHaveRegister 294 MustHaveRegister 306 MustHaveRegister 344 ShouldHaveRegister  "NoSpillStore"
  v54|d DWORD "[r11|d]" v54|d -1 [1532, 1548[1548 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[r8|q]" v55|q -1 [1532, 1550[1550 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[r9|q]" v56|q v4|q [340, 346[340 MustHaveRegister 346 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[rdx|q]" v57|q v52|q [342, 348[342 MustHaveRegister 348 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[r10|q]" v58|q v53|d [344, 350[344 MustHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[r11|q]" v59|q v52|q [478, 599[594 MustHaveRegister 598 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rdx|q]" v60|q -1 [592, 593[592 MustHaveRegister  "NoDefinitionFound"
  v61|q QWORD "[rax|q]" v61|q -1 [592, 593[592 MustHaveRegister  "NoDefinitionFound"
  v62|d DWORD "[rdx|d]" v62|d v59|q [594, 596[594 MustHaveRegister 596 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[rdx|q]" v63|q -1 [598, 599[598 MustHaveRegister  "NoDefinitionFound"
  v64|q QWORD "[rax|q]" v64|q -1 [598, 599[598 MustHaveRegister  "NoDefinitionFound"
  v65|d DWORD "[r10|d]" v65|d v27|d [1042, 1048[1042 MustHaveRegister 1048 ShouldHaveRegister  "NoSpillStore"
  v66|q QWORD "[rax|q]" v66|q rax|q [1052, 1061[1052 MustHaveRegister 1056 MustHaveRegister 1060 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[rsi|q]" v67|q -1 [1054, 1055[1054 MustHaveRegister  "NoDefinitionFound"
  v68|q QWORD "[rdx|q]" v68|q -1 [1054, 1055[1054 MustHaveRegister  "NoDefinitionFound"
  v69|d DWORD "[rsi|d]" v69|d v66|q [1056, 1058[1056 MustHaveRegister 1058 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[rsi|q]" v70|q -1 [1060, 1061[1060 MustHaveRegister  "NoDefinitionFound"
  v71|q QWORD "[rdx|q]" v71|q -1 [1060, 1061[1060 MustHaveRegister  "NoDefinitionFound"
  v72|q QWORD "[rdx|q]" v72|q -1 [622, 642[622 MustHaveRegister 642 ShouldHaveRegister  "NoSpillStore"
  v73|q QWORD "[rsi|q]" v73|q -1 [682, 702[682 MustHaveRegister 702 ShouldHaveRegister  "NoSpillStore"
  v74|q QWORD "[vstack:2|q]" v0|q v0|q [308, 347[ "SpillInDominator"
  v75|q QWORD "[vstack:1|q]" v52|q v52|q [351, 355[354 ShouldHaveRegister  "OneSpillStore"
  v76|q QWORD "[vstack:2|q]" v0|q v0|q [347, 351[ "SpillInDominator"
  v77|q QWORD "[vstack:2|q]" v0|q v0|q [351, 478[ "SpillInDominator"
  v78|q QWORD "[rsi|q]" v0|q v0|q [478, 599[592 MustHaveRegister 596 MustHaveRegister 598 MustHaveRegister  "SpillInDominator"
  v79|q QWORD "[vstack:4|q]" v38|q v38|q [467, 473[ "OneSpillStore"
  v80|q QWORD "[vstack:4|q]" v38|q v38|q [473, 477[476 ShouldHaveRegister  "OneSpillStore"
  v81|q QWORD "[rsi|q]" v0|q v0|q [620, 641[ "SpillInDominator"
  v82|q QWORD "[rbx|q]" v0|q v0|q [641, 1049[1040 MustHaveRegister  "SpillInDominator"
  v83|q QWORD "[vstack:2|q]" v0|q v0|q [1049, 1053[ "SpillInDominator"
  v84|q QWORD "[rbx|q]" v0|q v0|q [1053, 1061[[1064, 1479[[1480, 1501[[1502, 1553[1054 MustHaveRegister 1058 MustHaveRegister 1060 MustHaveRegister  "SpillInDominator"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B64" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction [vstack:0|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@32f57492 slotKind: QWORD <|@ <|@
      nr   48  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4783) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction v3|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   60  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   62  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v5|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B64 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607182323057074616
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B1 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B1" "B35" 
    successors "B37" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   78  <|@ instruction [v27|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 16] trueDestinationProbability: 0.9999908853703156 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B60 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B42" 
    xhandlers
    flags 
    probability 4607182336702731707
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4785) [bci: 13]
stack: v27|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v4|QWORD[.] - - 
>@ <|@ instruction v28|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:13] <|@ <|@
      nr  108  <|@ instruction MOVB x: [v0|QWORD[.] + 16] y: 0 size: BYTE <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: v28|DWORD, y: v27|DWORD) trueDestinationProbability: 0.2541630105061688 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction TESTBRANCH (x: v27|DWORD, y: v27|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction v41|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  150  <|@ instruction v42|QWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction v43|QWORD = LEA address: [v42|QWORD + 23] size: QWORD <|@ <|@
      nr  154  <|@ instruction v44|QWORD = AND x: v43|QWORD y: -8 size: QWORD <|@ <|@
      nr  156  <|@ instruction v45|QWORD = ADD (x: v44|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: v45|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B51" 
    xhandlers
    flags 
    probability 4604825882278563758
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction MOV (x: [r15|QWORD + 440], y: v45|QWORD) size: QWORD <|@ <|@
      nr  192  <|@ instruction AMD64PREFETCH ~address: [v44|QWORD + v41|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  194  <|@ instruction AMD64PREFETCH ~address: [v44|QWORD + v41|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  196  <|@ instruction AMD64PREFETCH ~address: [v44|QWORD + v41|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  198  <|@ instruction MOV x: [v41|QWORD] y: 1 size: QWORD <|@ <|@
      nr  200  <|@ instruction MOV x: [v41|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  202  <|@ instruction MOV (x: [v41|QWORD + 12], y: v27|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction v47|QWORD = LEA address: [v44|QWORD - 16] size: QWORD <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH x: v47|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B51 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4604759375651230885
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B49" 
    successors "B49" "B50" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4634844288894646813
    begin_IR
      LIR
      nr  218  <|@ instruction [v48|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction CMPBRANCH (x: v44|QWORD, y: v48|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4634792850175069044
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction MOV x: [v41|QWORD + v48|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  248  <|@ instruction v49|QWORD = LEA address: [v48|QWORD + 8] size: QWORD <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [v49|QWORD] destination: B49 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604759375651230886
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4604825882278563759
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction v51|QWORD[.] = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr  276  <|@ instruction [v52|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction CMP (x: v28|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr  292  <|@ instruction v53|DWORD = CMOVE (falseValue: v28|DWORD, ~trueValue: v27|DWORD) condition: > <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v28|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B58" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v27|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction v56|QWORD[*] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction v57|QWORD[*] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction v58|QWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction rdi|QWORD = LEA address: [v56|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  348  <|@ instruction rsi|QWORD = LEA address: [v57|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  350  <|@ instruction rdx|QWORD = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = STACKMOVE (input: v76|QWORD[.], ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  352  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [v52|QWORD[.]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction v30|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  382  <|@ instruction v31|QWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 23] size: QWORD <|@ <|@
      nr  386  <|@ instruction v33|QWORD = AND x: v32|QWORD y: -8 size: QWORD <|@ <|@
      nr  388  <|@ instruction v34|QWORD = ADD (x: v33|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr  390  <|@ instruction CMPBRANCH (x: v34|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4598204386423092713
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction MOV (x: [r15|QWORD + 440], y: v34|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v30|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  420  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v30|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  422  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v30|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  424  <|@ instruction MOV x: [v30|QWORD] y: 1 size: QWORD <|@ <|@
      nr  426  <|@ instruction MOV x: [v30|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  428  <|@ instruction MOV (x: [v30|QWORD + 12], y: v28|DWORD) size: DWORD <|@ <|@
      nr  430  <|@ instruction v37|QWORD[.] = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [v37|QWORD[.]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr  434  <|@ instruction [v38|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction v39|QWORD[*] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction v40|QWORD[*] = MOVE input: v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = MOVE input: v38|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  468  <|@ instruction rdi|QWORD = LEA address: [v39|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  470  <|@ instruction rsi|QWORD = LEA address: [v40|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction rdx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = STACKMOVE (input: v79|QWORD[.], ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  474  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  476  <|@ instruction JUMP ~outgoingValues: [v38|QWORD[.]] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B41" "B58" 
    successors "B62" 
    xhandlers
    flags 
    probability 4607182336702731708
    begin_IR
      LIR
      nr  478  <|@ instruction [v59|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v60|QWORD, temp2: v61|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr  594  <|@ instruction v62|DWORD[_] = COMPRESSPOINTER (input: v59|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr  596  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v62|DWORD[_]) size: DWORD <|@ <|@
      nr  598  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v59|QWORD[.]) {temp: v63|QWORD, temp2: v64|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 4575248858818943354
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction v72|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  642  <|@ instruction rsi|QWORD = MOVE input: v72|QWORD moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction rdx|DWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr  646  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  648  <|@ instruction v46|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction NULLCHECK address: [v46|QWORD[.]] state [bci:27] <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [v46|QWORD[.]] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4575162870452290749
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction rcx|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction ZERO_MEMORY (pointer: [v41|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  678  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4568006969118877196
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction v73|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction rsi|QWORD = MOVE input: v73|QWORD moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction rdx|DWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  708  <|@ instruction v35|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction NULLCHECK address: [v35|QWORD[.]] state [bci:27] <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction v8|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr  732  <|@ instruction v9|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr  734  <|@ instruction BITTESTANDBRANCH value: v8|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B2 -> B3 falseDestination: B2 -> B8 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4532329488911171509
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction v10|QWORD = OR x: v8|QWORD y: 1 size: QWORD <|@ <|@
      nr  766  <|@ instruction MOV (x: [v9|QWORD], y: v10|QWORD) size: QWORD <|@ <|@
      nr  768  <|@ instruction rax|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction rax|QWORD = CAS (address: [v1|QWORD[.]], cmpValue: rax|QWORD, newValue: v9|QWORD) accessKind: QWORD <|@ <|@
      nr  772  <|@ instruction v11|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction CMPBRANCH (x: v11|QWORD, y: v10|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4532267370277133279
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B4" "B6" "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532382201905571021
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  798  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction v14|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr  820  <|@ instruction v15|QWORD = MOV input: [v14|QWORD] size: QWORD <|@ <|@
      nr  822  <|@ instruction v16|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  824  <|@ instruction TESTBRANCH (x: v15|QWORD, y: v15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4529143557278551352
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction v17|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr  840  <|@ instruction BITTESTANDBRANCH value: v17|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B19 -> B20 falseDestination: B19 -> B21 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529068261964565618
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction rax|QWORD = CAS (address: [v1|QWORD[.]], cmpValue: rax|QWORD, newValue: v15|QWORD) accessKind: QWORD <|@ <|@
      nr  870  <|@ instruction v18|DWORD = SETCC condition: = <|@ <|@
      nr  872  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B20" "B27" 
    successors "B29" "B31" 
    xhandlers
    flags 
    probability 4529074299895794134
    begin_IR
      LIR
      nr  874  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 17] trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction MOVB x: [v0|QWORD[.] + 16] y: 1 size: BYTE <|@ <|@
      nr 1042  <|@ instruction v65|DWORD = SHL value: v27|DWORD size: DWORD <|@ <|@
      nr 1044  <|@ instruction rsi|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1048  <|@ instruction rcx|DWORD = MOVE input: v65|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1050  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4800) [bci: 92]
stack: v0|QWORD[.] 
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOfRange(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:92] <|@ <|@
      nr 1052  <|@ instruction v66|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v83|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1054  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v67|QWORD, temp2: v68|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1056  <|@ instruction v69|DWORD[_] = COMPRESSPOINTER (input: v66|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr 1058  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v69|DWORD[_]) size: DWORD <|@ <|@
      nr 1060  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v66|QWORD[.]) {temp: v70|QWORD, temp2: v71|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B34" 
    xhandlers
    flags 
    probability 4526633713479026896
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B18" "B23" "B33" "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4530432362446083730
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr 1086  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B25" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524572191115640556
    begin_IR
      LIR
      nr 1098  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1116  <|@ instruction rdx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr 1118  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr 1120  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B30" 
    successors "B36" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction JUMP ~outgoingValues: [v16|DWORD] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4502623928274233274
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction MOV x: [v9|QWORD] y: 3 size: QWORD <|@ <|@
      nr 1148  <|@ instruction v13|QWORD = MOV input: [v8|QWORD + 62] size: QWORD <|@ <|@
      nr 1150  <|@ instruction TESTBRANCH (x: v13|QWORD, y: v13|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4501820778258385448
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1174  <|@ instruction rax|QWORD = CAS (address: [v8|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr 1176  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4501097943244122404
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4502543613272648492
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction v12|QWORD = SUB (x: v11|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr 1202  <|@ instruction TESTCONSTBRANCH x: v12|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B14" 
    xhandlers
    flags 
    probability 4502464101421079557
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction MOV x: [v9|QWORD] y: 0 size: QWORD <|@ <|@
      nr 1216  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B33" 
    xhandlers
    flags 
    probability 4499411328210841968
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction v19|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr 1234  <|@ instruction v20|QWORD = MOV input: [v19|QWORD + 134] size: QWORD <|@ <|@
      nr 1236  <|@ instruction TESTBRANCH (x: v20|QWORD, y: v20|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4499363139209891098
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction v21|QWORD = MOV input: [v19|QWORD + 150] size: QWORD <|@ <|@
      nr 1254  <|@ instruction v22|QWORD = OR (x: v21|QWORD, ~y: [v19|QWORD + 142]) size: QWORD <|@ <|@
      nr 1256  <|@ instruction TESTBRANCH (x: v22|QWORD, y: v22|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4498676108457829474
    begin_IR
      LIR
      nr 1258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction MOV x: [v19|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr 1270  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" "B15" 
    xhandlers
    flags 
    probability 4487506829360426131
    begin_IR
      LIR
      nr 1272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction CMPBRANCH (x: v13|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4484288269758412157
    begin_IR
      LIR
      nr 1284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4486864309347747871
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4484211167356890766
    begin_IR
      LIR
      nr 1304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction CMPCONSTBRANCH x: [v19|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4483447853581828992
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction MOV x: [v19|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr 1332  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1334  <|@ instruction CMPCONSTBRANCH x: [v19|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4482760871184273395
    begin_IR
      LIR
      nr 1336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1364  <|@ instruction rax|QWORD = CAS (address: [v19|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr 1366  <|@ instruction v23|DWORD = SETCC condition: = <|@ <|@
      nr 1368  <|@ instruction v24|DWORD = XOR x: v23|DWORD y: 1 size: DWORD <|@ <|@
      nr 1370  <|@ instruction JUMP ~outgoingValues: [v24|DWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4481718189707699113
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction INC value: [v8|QWORD + 134] size: QWORD <|@ <|@
      nr 1384  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4472659588851943866
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B7" "B15" "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4490722176362376714
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1414  <|@ instruction rdx|QWORD = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr 1416  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
locals: v1|QWORD[.] 
locks: monitor[v1|QWORD[.], vstack:0|QWORD] 
java.lang.String.<init>(String.java:4785) [bci: 10]
locals: v0|QWORD[.] v1|QWORD[.] - v4|QWORD[.] - - 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0, 10] <|@ <|@
      nr 1418  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B34" 
    xhandlers
    flags 
    probability 4469235422845872850
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction v26|QWORD = DEC value: v20|QWORD size: QWORD <|@ <|@
      nr 1434  <|@ instruction MOV (x: [v19|QWORD + 134], y: v26|QWORD) size: QWORD <|@ <|@
      nr 1436  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" 
    xhandlers
    flags 
    probability 4469173740924655728
    begin_IR
      LIR
      nr 1438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 4468563089904606309
    begin_IR
      LIR
      nr 1448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction MOV x: [r15|QWORD + 1156] y: -63763 size: DWORD <|@ <|@
      nr 1476  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1478  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4785) [bci: 13]
stack: v27|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v4|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:13] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15667 size: DWORD <|@ <|@
      nr 1498  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1500  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4783) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction JUMP ~outgoingValues: [int[-61721|0xffffffffffff0ee7], long[0|0x0]] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction JUMP ~outgoingValues: [int[-62745|0xffffffffffff0ae7], long[0|0x0]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction JUMP ~outgoingValues: [int[-59667|0xffffffffffff16ed], long[1300|0x514]] destination: B43 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B43" "B54" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1532  <|@ instruction [v54|DWORD, v55|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v54|DWORD) size: DWORD <|@ <|@
      nr 1550  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v55|QWORD) size: QWORD <|@ <|@
      nr 1552  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_1       
     5: invokevirtual #142        // java.lang.AbstractStringBuilder.getValue:()byte[]
     8: astore_3      
     9: aload_1       
    10: invokevirtual #141        // java.lang.AbstractStringBuilder.length:()int
    13: istore        4
    15: aload_1       
    16: invokevirtual #292        // java.lang.AbstractStringBuilder.isLatin1:()boolean
    19: ifeq          41
    22: aload_0       
    23: iconst_0      
    24: putfield      #2          // coder:byte
    27: aload_0       
    28: aload_3       
    29: iconst_0      
    30: iload         4
    32: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    35: putfield      #1          // value:byte[]
    38: goto          98
    41: getstatic     #8          // COMPACT_STRINGS:boolean
    44: ifeq          80
    47: aload_1       
    48: getfield      #293        // java.lang.AbstractStringBuilder.maybeLatin1:boolean
    51: ifeq          80
    54: aload_3       
    55: iconst_0      
    56: iload         4
    58: invokestatic  #294        // java.lang.StringUTF16.compress:(byte[], int, int)byte[]
    61: astore        5
    63: aload         5
    65: ifnull        80
    68: aload_0       
    69: iconst_0      
    70: putfield      #2          // coder:byte
    73: aload_0       
    74: aload         5
    76: putfield      #1          // value:byte[]
    79: return        
    80: aload_0       
    81: iconst_1      
    82: putfield      #2          // coder:byte
    85: aload_0       
    86: aload_3       
    87: iconst_0      
    88: iload         4
    90: iconst_1      
    91: ishl          
    92: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    95: putfield      #1          // value:byte[]
    98: return        
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v10|q [0, 1[[352, 353[[474, 475[[646, 648[[676, 677[[706, 708[[768, 772[[866, 869[[1050, 1052[[1172, 1175[[1362, 1365[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v47|q [0, 1[[352, 353[[474, 475[[674, 677[[1048, 1051[ "NoOptimization"
  rdx|q fixed "[rdx|q]" rdx|q v58|q [0, 50[[350, 353[[472, 475[[644, 646[[704, 706[[1046, 1051[[1116, 1118[[1414, 1416[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 44[[352, 353[[474, 475[[1050, 1051[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v72|q [0, 48[[348, 353[[470, 475[[642, 646[[702, 706[[1044, 1051[[1114, 1118[[1412, 1416[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[346, 353[[468, 475[[676, 677[[1050, 1051[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[[1416, 1417[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [48, 308[48 MustHaveRegister 108 MustHaveRegister  "StoreAtDefinition"
  v1|q QWORD "[r11|q]" v1|q rdx|q [50, 107[[714, 908[[1064, 1479[[1480, 1501[50 MustHaveRegister 52 MustHaveRegister 54 MustHaveRegister 74 MustHaveRegister 88 MustHaveRegister 730 MustHaveRegister 770 MustHaveRegister 822 MustHaveRegister 838 MustHaveRegister 868 MustHaveRegister 906 MustHaveRegister 1114 ShouldHaveRegister 1232 MustHaveRegister 1412 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rdi|d]" v2|d -1 [52, 60[52 MustHaveRegister 60 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d -1 [54, 106[[714, 896[[1064, 1458[54 MustHaveRegister 56 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[r9|q]" v4|q v3|d [56, 340[[356, 464[[620, 1044[[1064, 1479[[1502, 1553[56 MustHaveRegister 340 ShouldHaveRegister 464 ShouldHaveRegister 1044 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rdi|q]" v5|q v2|d [60, 63[60 MustHaveRegister 62 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rdx|q]" v6|q -1 [58, 61[58 MustHaveRegister 60 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[rdi|d]" v7|d v27|d [74, 77[74 MustHaveRegister 76 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[r10|q]" v8|q -1 [730, 764[[1132, 1174[[1272, 1284[[1372, 1382[730 MustHaveRegister 734 MustHaveRegister 764 MustHaveRegister 1148 MustHaveRegister 1174 MustHaveRegister 1382 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rcx|q]" v9|q -1 [732, 776[[1132, 1178[[1188, 1214[[1272, 1304[[1386, 1414[732 MustHaveRegister 766 MustHaveRegister 770 MustHaveRegister 1146 MustHaveRegister 1214 MustHaveRegister 1414 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[r10|q]" v10|q v8|q [764, 774[764 MustHaveRegister 766 MustHaveRegister 768 ShouldHaveRegister 774 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rax|q]" v11|q rax|q [772, 776[[1188, 1200[772 MustHaveRegister 774 MustHaveRegister 1200 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q v11|q [1200, 1202[1200 MustHaveRegister 1202 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rsi|q]" v13|q -1 [1148, 1152[[1272, 1282[1148 MustHaveRegister 1150 MustHaveRegister 1282 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[r10|q]" v14|q -1 [818, 886[[1088, 1116[[1218, 1258[[1304, 1372[[1438, 1448[818 MustHaveRegister 820 MustHaveRegister 866 ShouldHaveRegister 1116 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rsi|q]" v15|q -1 [820, 868[820 MustHaveRegister 824 MustHaveRegister 868 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[rcx|d]" v16|d -1 [822, 896[[1064, 1131[[1218, 1272[[1304, 1372[[1420, 1458[822 MustHaveRegister 1130 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rax|q]" v17|q -1 [838, 840[838 MustHaveRegister 840 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[rsi|d]" v18|d v25|d [870, 873[870 MustHaveRegister 872 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rdi|q]" v19|q -1 [1232, 1268[[1304, 1364[[1420, 1434[1232 MustHaveRegister 1234 MustHaveRegister 1252 MustHaveRegister 1254 MustHaveRegister 1268 MustHaveRegister 1314 MustHaveRegister 1330 MustHaveRegister 1334 MustHaveRegister 1364 MustHaveRegister 1434 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[rdx|q]" v20|q -1 [1234, 1238[[1420, 1432[1234 MustHaveRegister 1236 MustHaveRegister 1432 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[rax|q]" v21|q -1 [1252, 1254[1252 MustHaveRegister 1254 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[rax|q]" v22|q v21|q [1254, 1256[1254 MustHaveRegister 1256 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[rsi|d]" v23|d -1 [1366, 1368[1366 MustHaveRegister 1368 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[rsi|d]" v24|d v23|d [1368, 1371[1368 MustHaveRegister 1370 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[rsi|d]" v25|d v18|d [874, 884[884 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rdx|q]" v26|q v20|q [1432, 1434[1432 MustHaveRegister 1434 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[r10|d]" v27|d v7|d [78, 308[[356, 392[[620, 711[[896, 1042[[1458, 1479[[1502, 1553[110 ShouldHaveRegister 122 MustHaveRegister 150 ShouldHaveRegister 202 MustHaveRegister 290 ShouldHaveRegister 292 MustHaveRegister 306 ShouldHaveRegister 644 ShouldHaveRegister 1042 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[r8|d]" v28|d -1 [106, 294[[356, 428[[620, 704[106 MustHaveRegister 110 MustHaveRegister 290 MustHaveRegister 292 ShouldHaveRegister 294 ShouldHaveRegister 382 ShouldHaveRegister 428 MustHaveRegister 704 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[rdi|q]" v30|q -1 [380, 430[380 MustHaveRegister 388 ShouldHaveRegister 418 MustHaveRegister 420 MustHaveRegister 422 MustHaveRegister 424 MustHaveRegister 426 MustHaveRegister 428 MustHaveRegister 430 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[r11|q]" v31|q v28|d [382, 472[[680, 714[382 MustHaveRegister 384 MustHaveRegister 472 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[rsi|q]" v32|q -1 [384, 386[384 MustHaveRegister 386 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rsi|q]" v33|q v32|q [386, 423[386 MustHaveRegister 388 ShouldHaveRegister 418 MustHaveRegister 420 MustHaveRegister 422 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[rdx|q]" v34|q v33|q [388, 416[388 MustHaveRegister 390 MustHaveRegister 416 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[rax|q]" v35|q rax|q [708, 713[708 MustHaveRegister 710 MustHaveRegister 712 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[rdi|q]" v37|q v30|q [430, 433[430 MustHaveRegister 432 ShouldHaveRegister  "NoSpillStore"
  v38|q QWORD "[rdi|q]" v38|q v37|q [434, 467[466 ShouldHaveRegister  "OneSpillStore"
  v39|q QWORD "[r9|q]" v39|q v4|q [464, 468[464 MustHaveRegister 468 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rsi|q]" v40|q v38|q [466, 470[466 MustHaveRegister 470 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[r11|q]" v41|q -1 [148, 272[[654, 680[148 MustHaveRegister 156 ShouldHaveRegister 192 MustHaveRegister 194 MustHaveRegister 196 MustHaveRegister 198 MustHaveRegister 200 MustHaveRegister 202 MustHaveRegister 246 MustHaveRegister 251 LiveAtLoopEnd 272 ShouldHaveRegister 676 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[rdi|q]" v42|q v27|d [150, 152[150 MustHaveRegister 152 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[rdi|q]" v43|q -1 [152, 154[152 MustHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[rdi|q]" v44|q v43|q [154, 252[154 MustHaveRegister 156 ShouldHaveRegister 192 MustHaveRegister 194 MustHaveRegister 196 MustHaveRegister 204 MustHaveRegister 228 MustHaveRegister 251 LiveAtLoopEnd  "NoSpillStore"
  v45|q QWORD "[rdx|q]" v45|q v44|q [156, 190[156 MustHaveRegister 158 MustHaveRegister 190 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[rax|q]" v46|q rax|q [648, 653[648 MustHaveRegister 650 MustHaveRegister 652 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[rcx|q]" v47|q -1 [204, 208[[654, 674[204 MustHaveRegister 206 ShouldHaveRegister 674 ShouldHaveRegister  "NoSpillStore"
  v48|q QWORD "[rdx|q]" v48|q v49|q [218, 248[228 ShouldHaveRegister 246 MustHaveRegister 248 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[rdx|q]" v49|q v48|q [248, 251[248 MustHaveRegister 250 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[r11|q]" v51|q v41|q [272, 275[272 MustHaveRegister 274 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[r11|q]" v52|q v51|q [276, 351[342 ShouldHaveRegister  "OneSpillStore"
  v53|d DWORD "[rdi|d]" v53|d v28|d [292, 344[292 MustHaveRegister 294 MustHaveRegister 306 MustHaveRegister 344 ShouldHaveRegister  "NoSpillStore"
  v54|d DWORD "[r11|d]" v54|d -1 [1532, 1548[1548 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[r8|q]" v55|q -1 [1532, 1550[1550 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[r9|q]" v56|q v4|q [340, 346[340 MustHaveRegister 346 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[rdx|q]" v57|q v52|q [342, 348[342 MustHaveRegister 348 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[r10|q]" v58|q v53|d [344, 350[344 MustHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[r11|q]" v59|q v52|q [478, 599[594 MustHaveRegister 598 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rdx|q]" v60|q -1 [592, 593[592 MustHaveRegister  "NoDefinitionFound"
  v61|q QWORD "[rax|q]" v61|q -1 [592, 593[592 MustHaveRegister  "NoDefinitionFound"
  v62|d DWORD "[rdx|d]" v62|d v59|q [594, 596[594 MustHaveRegister 596 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[rdx|q]" v63|q -1 [598, 599[598 MustHaveRegister  "NoDefinitionFound"
  v64|q QWORD "[rax|q]" v64|q -1 [598, 599[598 MustHaveRegister  "NoDefinitionFound"
  v65|d DWORD "[r10|d]" v65|d v27|d [1042, 1048[1042 MustHaveRegister 1048 ShouldHaveRegister  "NoSpillStore"
  v66|q QWORD "[rax|q]" v66|q rax|q [1052, 1061[1052 MustHaveRegister 1056 MustHaveRegister 1060 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[rsi|q]" v67|q -1 [1054, 1055[1054 MustHaveRegister  "NoDefinitionFound"
  v68|q QWORD "[rdx|q]" v68|q -1 [1054, 1055[1054 MustHaveRegister  "NoDefinitionFound"
  v69|d DWORD "[rsi|d]" v69|d v66|q [1056, 1058[1056 MustHaveRegister 1058 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[rsi|q]" v70|q -1 [1060, 1061[1060 MustHaveRegister  "NoDefinitionFound"
  v71|q QWORD "[rdx|q]" v71|q -1 [1060, 1061[1060 MustHaveRegister  "NoDefinitionFound"
  v72|q QWORD "[rdx|q]" v72|q -1 [622, 642[622 MustHaveRegister 642 ShouldHaveRegister  "NoSpillStore"
  v73|q QWORD "[rsi|q]" v73|q -1 [682, 702[682 MustHaveRegister 702 ShouldHaveRegister  "NoSpillStore"
  v74|q QWORD "[vstack:2|q]" v0|q v0|q [308, 347[ "StoreAtDefinition"
  v75|q QWORD "[vstack:1|q]" v52|q v52|q [351, 355[354 ShouldHaveRegister  "OneSpillStore"
  v76|q QWORD "[vstack:2|q]" v0|q v0|q [347, 351[ "StoreAtDefinition"
  v77|q QWORD "[vstack:2|q]" v0|q v0|q [351, 478[ "StoreAtDefinition"
  v78|q QWORD "[rsi|q]" v0|q v0|q [478, 599[592 MustHaveRegister 596 MustHaveRegister 598 MustHaveRegister  "StoreAtDefinition"
  v79|q QWORD "[vstack:4|q]" v38|q v38|q [467, 473[ "OneSpillStore"
  v80|q QWORD "[vstack:4|q]" v38|q v38|q [473, 477[476 ShouldHaveRegister  "OneSpillStore"
  v81|q QWORD "[rsi|q]" v0|q v0|q [620, 641[ "StoreAtDefinition"
  v82|q QWORD "[rbx|q]" v0|q v0|q [641, 1049[1040 MustHaveRegister  "StoreAtDefinition"
  v83|q QWORD "[vstack:2|q]" v0|q v0|q [1049, 1053[ "StoreAtDefinition"
  v84|q QWORD "[rbx|q]" v0|q v0|q [1053, 1061[[1064, 1479[[1480, 1501[[1502, 1553[1054 MustHaveRegister 1058 MustHaveRegister 1060 MustHaveRegister  "StoreAtDefinition"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B64" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction [vstack:0|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@32f57492 slotKind: QWORD <|@ <|@
      nr   48  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4783) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction v3|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   60  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   62  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v5|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B64 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607182323057074616
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B1 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B1" "B35" 
    successors "B37" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   78  <|@ instruction [v27|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 16] trueDestinationProbability: 0.9999908853703156 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B60 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B42" 
    xhandlers
    flags 
    probability 4607182336702731707
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4785) [bci: 13]
stack: v27|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v4|QWORD[.] - - 
>@ <|@ instruction v28|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:13] <|@ <|@
      nr  108  <|@ instruction MOVB x: [v0|QWORD[.] + 16] y: 0 size: BYTE <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: v28|DWORD, y: v27|DWORD) trueDestinationProbability: 0.2541630105061688 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction TESTBRANCH (x: v27|DWORD, y: v27|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction v41|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  150  <|@ instruction v42|QWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction v43|QWORD = LEA address: [v42|QWORD + 23] size: QWORD <|@ <|@
      nr  154  <|@ instruction v44|QWORD = AND x: v43|QWORD y: -8 size: QWORD <|@ <|@
      nr  156  <|@ instruction v45|QWORD = ADD (x: v44|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: v45|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B51" 
    xhandlers
    flags 
    probability 4604825882278563758
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction MOV (x: [r15|QWORD + 440], y: v45|QWORD) size: QWORD <|@ <|@
      nr  192  <|@ instruction AMD64PREFETCH ~address: [v44|QWORD + v41|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  194  <|@ instruction AMD64PREFETCH ~address: [v44|QWORD + v41|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  196  <|@ instruction AMD64PREFETCH ~address: [v44|QWORD + v41|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  198  <|@ instruction MOV x: [v41|QWORD] y: 1 size: QWORD <|@ <|@
      nr  200  <|@ instruction MOV x: [v41|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  202  <|@ instruction MOV (x: [v41|QWORD + 12], y: v27|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction v47|QWORD = LEA address: [v44|QWORD - 16] size: QWORD <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH x: v47|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B51 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4604759375651230885
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B49" 
    successors "B49" "B50" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4634844288894646813
    begin_IR
      LIR
      nr  218  <|@ instruction [v48|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction CMPBRANCH (x: v44|QWORD, y: v48|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4634792850175069044
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction MOV x: [v41|QWORD + v48|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  248  <|@ instruction v49|QWORD = LEA address: [v48|QWORD + 8] size: QWORD <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [v49|QWORD] destination: B49 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604759375651230886
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4604825882278563759
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction v51|QWORD[.] = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [v51|QWORD[.]] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr  276  <|@ instruction [v52|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction CMP (x: v28|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr  292  <|@ instruction v53|DWORD = CMOVE (falseValue: v28|DWORD, ~trueValue: v27|DWORD) condition: > <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v28|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B58" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v27|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction v56|QWORD[*] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction v57|QWORD[*] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction v58|QWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction rdi|QWORD = LEA address: [v56|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  348  <|@ instruction rsi|QWORD = LEA address: [v57|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  350  <|@ instruction rdx|QWORD = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = STACKMOVE (input: v76|QWORD[.], ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  352  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [v52|QWORD[.]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction v30|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  382  <|@ instruction v31|QWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 23] size: QWORD <|@ <|@
      nr  386  <|@ instruction v33|QWORD = AND x: v32|QWORD y: -8 size: QWORD <|@ <|@
      nr  388  <|@ instruction v34|QWORD = ADD (x: v33|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr  390  <|@ instruction CMPBRANCH (x: v34|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4598204386423092713
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction MOV (x: [r15|QWORD + 440], y: v34|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v30|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  420  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v30|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  422  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v30|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  424  <|@ instruction MOV x: [v30|QWORD] y: 1 size: QWORD <|@ <|@
      nr  426  <|@ instruction MOV x: [v30|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  428  <|@ instruction MOV (x: [v30|QWORD + 12], y: v28|DWORD) size: DWORD <|@ <|@
      nr  430  <|@ instruction v37|QWORD[.] = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [v37|QWORD[.]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr  434  <|@ instruction [v38|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction v39|QWORD[*] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction v40|QWORD[*] = MOVE input: v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = MOVE input: v38|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  468  <|@ instruction rdi|QWORD = LEA address: [v39|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  470  <|@ instruction rsi|QWORD = LEA address: [v40|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction rdx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = STACKMOVE (input: v79|QWORD[.], ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  474  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  476  <|@ instruction JUMP ~outgoingValues: [v38|QWORD[.]] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B41" "B58" 
    successors "B62" 
    xhandlers
    flags 
    probability 4607182336702731708
    begin_IR
      LIR
      nr  478  <|@ instruction [v59|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v60|QWORD, temp2: v61|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr  594  <|@ instruction v62|DWORD[_] = COMPRESSPOINTER (input: v59|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr  596  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v62|DWORD[_]) size: DWORD <|@ <|@
      nr  598  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v59|QWORD[.]) {temp: v63|QWORD, temp2: v64|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 4575248858818943354
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction v72|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  642  <|@ instruction rsi|QWORD = MOVE input: v72|QWORD moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction rdx|DWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr  646  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  648  <|@ instruction v46|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction NULLCHECK address: [v46|QWORD[.]] state [bci:27] <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [v46|QWORD[.]] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4575162870452290749
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction rcx|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction ZERO_MEMORY (pointer: [v41|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  678  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4568006969118877196
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction v73|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction rsi|QWORD = MOVE input: v73|QWORD moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction rdx|DWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  708  <|@ instruction v35|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction NULLCHECK address: [v35|QWORD[.]] state [bci:27] <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction v8|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr  732  <|@ instruction v9|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr  734  <|@ instruction BITTESTANDBRANCH value: v8|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B2 -> B3 falseDestination: B2 -> B8 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4532329488911171509
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction v10|QWORD = OR x: v8|QWORD y: 1 size: QWORD <|@ <|@
      nr  766  <|@ instruction MOV (x: [v9|QWORD], y: v10|QWORD) size: QWORD <|@ <|@
      nr  768  <|@ instruction rax|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction rax|QWORD = CAS (address: [v1|QWORD[.]], cmpValue: rax|QWORD, newValue: v9|QWORD) accessKind: QWORD <|@ <|@
      nr  772  <|@ instruction v11|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction CMPBRANCH (x: v11|QWORD, y: v10|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4532267370277133279
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B4" "B6" "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532382201905571021
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  798  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction v14|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr  820  <|@ instruction v15|QWORD = MOV input: [v14|QWORD] size: QWORD <|@ <|@
      nr  822  <|@ instruction v16|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  824  <|@ instruction TESTBRANCH (x: v15|QWORD, y: v15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4529143557278551352
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction v17|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr  840  <|@ instruction BITTESTANDBRANCH value: v17|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B19 -> B20 falseDestination: B19 -> B21 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529068261964565618
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction rax|QWORD = CAS (address: [v1|QWORD[.]], cmpValue: rax|QWORD, newValue: v15|QWORD) accessKind: QWORD <|@ <|@
      nr  870  <|@ instruction v18|DWORD = SETCC condition: = <|@ <|@
      nr  872  <|@ instruction JUMP ~outgoingValues: [v18|DWORD] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B20" "B27" 
    successors "B29" "B31" 
    xhandlers
    flags 
    probability 4529074299895794134
    begin_IR
      LIR
      nr  874  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 17] trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction MOVB x: [v0|QWORD[.] + 16] y: 1 size: BYTE <|@ <|@
      nr 1042  <|@ instruction v65|DWORD = SHL value: v27|DWORD size: DWORD <|@ <|@
      nr 1044  <|@ instruction rsi|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1048  <|@ instruction rcx|DWORD = MOVE input: v65|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1050  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4800) [bci: 92]
stack: v0|QWORD[.] 
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOfRange(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:92] <|@ <|@
      nr 1052  <|@ instruction v66|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v83|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1054  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v67|QWORD, temp2: v68|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1056  <|@ instruction v69|DWORD[_] = COMPRESSPOINTER (input: v66|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr 1058  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v69|DWORD[_]) size: DWORD <|@ <|@
      nr 1060  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v66|QWORD[.]) {temp: v70|QWORD, temp2: v71|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B34" 
    xhandlers
    flags 
    probability 4526633713479026896
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B18" "B23" "B33" "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4530432362446083730
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr 1086  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B25" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524572191115640556
    begin_IR
      LIR
      nr 1098  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1116  <|@ instruction rdx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr 1118  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr 1120  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B30" 
    successors "B36" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction JUMP ~outgoingValues: [v16|DWORD] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4502623928274233274
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction MOV x: [v9|QWORD] y: 3 size: QWORD <|@ <|@
      nr 1148  <|@ instruction v13|QWORD = MOV input: [v8|QWORD + 62] size: QWORD <|@ <|@
      nr 1150  <|@ instruction TESTBRANCH (x: v13|QWORD, y: v13|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4501820778258385448
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1174  <|@ instruction rax|QWORD = CAS (address: [v8|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr 1176  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4501097943244122404
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4502543613272648492
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction v12|QWORD = SUB (x: v11|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr 1202  <|@ instruction TESTCONSTBRANCH x: v12|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B14" 
    xhandlers
    flags 
    probability 4502464101421079557
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction MOV x: [v9|QWORD] y: 0 size: QWORD <|@ <|@
      nr 1216  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B33" 
    xhandlers
    flags 
    probability 4499411328210841968
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction v19|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr 1234  <|@ instruction v20|QWORD = MOV input: [v19|QWORD + 134] size: QWORD <|@ <|@
      nr 1236  <|@ instruction TESTBRANCH (x: v20|QWORD, y: v20|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4499363139209891098
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction v21|QWORD = MOV input: [v19|QWORD + 150] size: QWORD <|@ <|@
      nr 1254  <|@ instruction v22|QWORD = OR (x: v21|QWORD, ~y: [v19|QWORD + 142]) size: QWORD <|@ <|@
      nr 1256  <|@ instruction TESTBRANCH (x: v22|QWORD, y: v22|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4498676108457829474
    begin_IR
      LIR
      nr 1258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction MOV x: [v19|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr 1270  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" "B15" 
    xhandlers
    flags 
    probability 4487506829360426131
    begin_IR
      LIR
      nr 1272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction CMPBRANCH (x: v13|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4484288269758412157
    begin_IR
      LIR
      nr 1284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4486864309347747871
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4484211167356890766
    begin_IR
      LIR
      nr 1304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction CMPCONSTBRANCH x: [v19|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4483447853581828992
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction MOV x: [v19|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr 1332  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1334  <|@ instruction CMPCONSTBRANCH x: [v19|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4482760871184273395
    begin_IR
      LIR
      nr 1336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1364  <|@ instruction rax|QWORD = CAS (address: [v19|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr 1366  <|@ instruction v23|DWORD = SETCC condition: = <|@ <|@
      nr 1368  <|@ instruction v24|DWORD = XOR x: v23|DWORD y: 1 size: DWORD <|@ <|@
      nr 1370  <|@ instruction JUMP ~outgoingValues: [v24|DWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4481718189707699113
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction INC value: [v8|QWORD + 134] size: QWORD <|@ <|@
      nr 1384  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4472659588851943866
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B7" "B15" "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4490722176362376714
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1414  <|@ instruction rdx|QWORD = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr 1416  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
locals: v1|QWORD[.] 
locks: monitor[v1|QWORD[.], vstack:0|QWORD] 
java.lang.String.<init>(String.java:4785) [bci: 10]
locals: v0|QWORD[.] v1|QWORD[.] - v4|QWORD[.] - - 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0, 10] <|@ <|@
      nr 1418  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B34" 
    xhandlers
    flags 
    probability 4469235422845872850
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction v26|QWORD = DEC value: v20|QWORD size: QWORD <|@ <|@
      nr 1434  <|@ instruction MOV (x: [v19|QWORD + 134], y: v26|QWORD) size: QWORD <|@ <|@
      nr 1436  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" 
    xhandlers
    flags 
    probability 4469173740924655728
    begin_IR
      LIR
      nr 1438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 4468563089904606309
    begin_IR
      LIR
      nr 1448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction MOV x: [r15|QWORD + 1156] y: -63763 size: DWORD <|@ <|@
      nr 1476  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1478  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4785) [bci: 13]
stack: v27|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v4|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:13] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15667 size: DWORD <|@ <|@
      nr 1498  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1500  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4783) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction JUMP ~outgoingValues: [int[-61721|0xffffffffffff0ee7], long[0|0x0]] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction JUMP ~outgoingValues: [int[-62745|0xffffffffffff0ae7], long[0|0x0]] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction JUMP ~outgoingValues: [int[-59667|0xffffffffffff16ed], long[1300|0x514]] destination: B43 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B43" "B54" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1532  <|@ instruction [v54|DWORD, v55|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v54|DWORD) size: DWORD <|@ <|@
      nr 1550  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v55|QWORD) size: QWORD <|@ <|@
      nr 1552  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_1       
     5: invokevirtual #142        // java.lang.AbstractStringBuilder.getValue:()byte[]
     8: astore_3      
     9: aload_1       
    10: invokevirtual #141        // java.lang.AbstractStringBuilder.length:()int
    13: istore        4
    15: aload_1       
    16: invokevirtual #292        // java.lang.AbstractStringBuilder.isLatin1:()boolean
    19: ifeq          41
    22: aload_0       
    23: iconst_0      
    24: putfield      #2          // coder:byte
    27: aload_0       
    28: aload_3       
    29: iconst_0      
    30: iload         4
    32: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    35: putfield      #1          // value:byte[]
    38: goto          98
    41: getstatic     #8          // COMPACT_STRINGS:boolean
    44: ifeq          80
    47: aload_1       
    48: getfield      #293        // java.lang.AbstractStringBuilder.maybeLatin1:boolean
    51: ifeq          80
    54: aload_3       
    55: iconst_0      
    56: iload         4
    58: invokestatic  #294        // java.lang.StringUTF16.compress:(byte[], int, int)byte[]
    61: astore        5
    63: aload         5
    65: ifnull        80
    68: aload_0       
    69: iconst_0      
    70: putfield      #2          // coder:byte
    73: aload_0       
    74: aload         5
    76: putfield      #1          // value:byte[]
    79: return        
    80: aload_0       
    81: iconst_1      
    82: putfield      #2          // coder:byte
    85: aload_0       
    86: aload_3       
    87: iconst_0      
    88: iload         4
    90: iconst_1      
    91: ishl          
    92: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    95: putfield      #1          // value:byte[]
    98: return        
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v10|q [0, 1[[352, 353[[474, 475[[646, 648[[676, 677[[706, 708[[768, 772[[866, 869[[1050, 1052[[1172, 1175[[1362, 1365[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v47|q [0, 1[[352, 353[[474, 475[[674, 677[[1048, 1051[ "NoOptimization"
  rdx|q fixed "[rdx|q]" rdx|q v58|q [0, 50[[350, 353[[472, 475[[644, 646[[704, 706[[1046, 1051[[1116, 1118[[1414, 1416[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 44[[352, 353[[474, 475[[1050, 1051[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v72|q [0, 48[[348, 353[[470, 475[[642, 646[[702, 706[[1044, 1051[[1114, 1118[[1412, 1416[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[346, 353[[468, 475[[676, 677[[1050, 1051[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[[1416, 1417[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[352, 353[[474, 475[[1050, 1051[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [48, 308[48 MustHaveRegister 108 MustHaveRegister  "StoreAtDefinition"
  v1|q QWORD "[r11|q]" v1|q rdx|q [50, 107[[714, 908[[1064, 1479[[1480, 1501[50 MustHaveRegister 52 MustHaveRegister 54 MustHaveRegister 74 MustHaveRegister 88 MustHaveRegister 730 MustHaveRegister 770 MustHaveRegister 822 MustHaveRegister 838 MustHaveRegister 868 MustHaveRegister 906 MustHaveRegister 1114 ShouldHaveRegister 1232 MustHaveRegister 1412 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rdi|d]" v2|d -1 [52, 60[52 MustHaveRegister 60 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d -1 [54, 106[[714, 896[[1064, 1458[54 MustHaveRegister 56 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[r9|q]" v4|q v3|d [56, 340[[356, 464[[620, 1044[[1064, 1479[[1502, 1553[56 MustHaveRegister 340 ShouldHaveRegister 464 ShouldHaveRegister 1044 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rdi|q]" v5|q v2|d [60, 63[60 MustHaveRegister 62 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rdx|q]" v6|q -1 [58, 61[58 MustHaveRegister 60 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[rdi|d]" v7|d v27|d [74, 77[74 MustHaveRegister 76 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[r10|q]" v8|q -1 [730, 764[[1132, 1174[[1272, 1284[[1372, 1382[730 MustHaveRegister 734 MustHaveRegister 764 MustHaveRegister 1148 MustHaveRegister 1174 MustHaveRegister 1382 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rcx|q]" v9|q -1 [732, 776[[1132, 1178[[1188, 1214[[1272, 1304[[1386, 1414[732 MustHaveRegister 766 MustHaveRegister 770 MustHaveRegister 1146 MustHaveRegister 1214 MustHaveRegister 1414 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[r10|q]" v10|q v8|q [764, 774[764 MustHaveRegister 766 MustHaveRegister 768 ShouldHaveRegister 774 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rax|q]" v11|q rax|q [772, 776[[1188, 1200[772 MustHaveRegister 774 MustHaveRegister 1200 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q v11|q [1200, 1202[1200 MustHaveRegister 1202 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rsi|q]" v13|q -1 [1148, 1152[[1272, 1282[1148 MustHaveRegister 1150 MustHaveRegister 1282 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[r10|q]" v14|q -1 [818, 886[[1088, 1116[[1218, 1258[[1304, 1372[[1438, 1448[818 MustHaveRegister 820 MustHaveRegister 866 ShouldHaveRegister 1116 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rsi|q]" v15|q -1 [820, 868[820 MustHaveRegister 824 MustHaveRegister 868 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[rcx|d]" v16|d -1 [822, 896[[1064, 1131[[1218, 1272[[1304, 1372[[1420, 1458[822 MustHaveRegister 1130 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rax|q]" v17|q -1 [838, 840[838 MustHaveRegister 840 MustHaveRegister  "NoSpillStore"
  v18|d DWORD "[rsi|d]" v18|d v25|d [870, 873[870 MustHaveRegister 872 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rdi|q]" v19|q -1 [1232, 1268[[1304, 1364[[1420, 1434[1232 MustHaveRegister 1234 MustHaveRegister 1252 MustHaveRegister 1254 MustHaveRegister 1268 MustHaveRegister 1314 MustHaveRegister 1330 MustHaveRegister 1334 MustHaveRegister 1364 MustHaveRegister 1434 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[rdx|q]" v20|q -1 [1234, 1238[[1420, 1432[1234 MustHaveRegister 1236 MustHaveRegister 1432 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[rax|q]" v21|q -1 [1252, 1254[1252 MustHaveRegister 1254 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[rax|q]" v22|q v21|q [1254, 1256[1254 MustHaveRegister 1256 MustHaveRegister  "NoSpillStore"
  v23|d DWORD "[rsi|d]" v23|d -1 [1366, 1368[1366 MustHaveRegister 1368 MustHaveRegister  "NoSpillStore"
  v24|d DWORD "[rsi|d]" v24|d v23|d [1368, 1371[1368 MustHaveRegister 1370 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[rsi|d]" v25|d v18|d [874, 884[884 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rdx|q]" v26|q v20|q [1432, 1434[1432 MustHaveRegister 1434 MustHaveRegister  "NoSpillStore"
  v27|d DWORD "[r10|d]" v27|d v7|d [78, 308[[356, 392[[620, 711[[896, 1042[[1458, 1479[[1502, 1553[110 ShouldHaveRegister 122 MustHaveRegister 150 ShouldHaveRegister 202 MustHaveRegister 290 ShouldHaveRegister 292 MustHaveRegister 306 ShouldHaveRegister 644 ShouldHaveRegister 1042 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[r8|d]" v28|d -1 [106, 294[[356, 428[[620, 704[106 MustHaveRegister 110 MustHaveRegister 290 MustHaveRegister 292 ShouldHaveRegister 294 ShouldHaveRegister 382 ShouldHaveRegister 428 MustHaveRegister 704 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[rdi|q]" v30|q -1 [380, 430[380 MustHaveRegister 388 ShouldHaveRegister 418 MustHaveRegister 420 MustHaveRegister 422 MustHaveRegister 424 MustHaveRegister 426 MustHaveRegister 428 MustHaveRegister 430 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[r11|q]" v31|q v28|d [382, 472[[680, 714[382 MustHaveRegister 384 MustHaveRegister 472 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[rsi|q]" v32|q -1 [384, 386[384 MustHaveRegister 386 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rsi|q]" v33|q v32|q [386, 423[386 MustHaveRegister 388 ShouldHaveRegister 418 MustHaveRegister 420 MustHaveRegister 422 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[rdx|q]" v34|q v33|q [388, 416[388 MustHaveRegister 390 MustHaveRegister 416 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[rax|q]" v35|q rax|q [708, 713[708 MustHaveRegister 710 MustHaveRegister 712 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[rdi|q]" v37|q v30|q [430, 433[430 MustHaveRegister 432 ShouldHaveRegister  "NoSpillStore"
  v38|q QWORD "[rdi|q]" v38|q v37|q [434, 467[466 ShouldHaveRegister  "OneSpillStore"
  v39|q QWORD "[r9|q]" v39|q v4|q [464, 468[464 MustHaveRegister 468 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rsi|q]" v40|q v38|q [466, 470[466 MustHaveRegister 470 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[r11|q]" v41|q -1 [148, 272[[654, 680[148 MustHaveRegister 156 ShouldHaveRegister 192 MustHaveRegister 194 MustHaveRegister 196 MustHaveRegister 198 MustHaveRegister 200 MustHaveRegister 202 MustHaveRegister 246 MustHaveRegister 251 LiveAtLoopEnd 272 ShouldHaveRegister 676 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[rdi|q]" v42|q v27|d [150, 152[150 MustHaveRegister 152 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[rdi|q]" v43|q -1 [152, 154[152 MustHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[rdi|q]" v44|q v43|q [154, 252[154 MustHaveRegister 156 ShouldHaveRegister 192 MustHaveRegister 194 MustHaveRegister 196 MustHaveRegister 204 MustHaveRegister 228 MustHaveRegister 251 LiveAtLoopEnd  "NoSpillStore"
  v45|q QWORD "[rdx|q]" v45|q v44|q [156, 190[156 MustHaveRegister 158 MustHaveRegister 190 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[rax|q]" v46|q rax|q [648, 653[648 MustHaveRegister 650 MustHaveRegister 652 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[rcx|q]" v47|q -1 [204, 208[[654, 674[204 MustHaveRegister 206 ShouldHaveRegister 674 ShouldHaveRegister  "NoSpillStore"
  v48|q QWORD "[rdx|q]" v48|q v49|q [218, 248[228 ShouldHaveRegister 246 MustHaveRegister 248 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[rdx|q]" v49|q v48|q [248, 251[248 MustHaveRegister 250 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[r11|q]" v51|q v41|q [272, 275[272 MustHaveRegister 274 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[r11|q]" v52|q v51|q [276, 351[342 ShouldHaveRegister  "OneSpillStore"
  v53|d DWORD "[rdi|d]" v53|d v28|d [292, 344[292 MustHaveRegister 294 MustHaveRegister 306 MustHaveRegister 344 ShouldHaveRegister  "NoSpillStore"
  v54|d DWORD "[r11|d]" v54|d -1 [1532, 1548[1548 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[r8|q]" v55|q -1 [1532, 1550[1550 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[r9|q]" v56|q v4|q [340, 346[340 MustHaveRegister 346 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[rdx|q]" v57|q v52|q [342, 348[342 MustHaveRegister 348 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[r10|q]" v58|q v53|d [344, 350[344 MustHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[r11|q]" v59|q v52|q [478, 599[594 MustHaveRegister 598 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rdx|q]" v60|q -1 [592, 593[592 MustHaveRegister  "NoDefinitionFound"
  v61|q QWORD "[rax|q]" v61|q -1 [592, 593[592 MustHaveRegister  "NoDefinitionFound"
  v62|d DWORD "[rdx|d]" v62|d v59|q [594, 596[594 MustHaveRegister 596 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[rdx|q]" v63|q -1 [598, 599[598 MustHaveRegister  "NoDefinitionFound"
  v64|q QWORD "[rax|q]" v64|q -1 [598, 599[598 MustHaveRegister  "NoDefinitionFound"
  v65|d DWORD "[r10|d]" v65|d v27|d [1042, 1048[1042 MustHaveRegister 1048 ShouldHaveRegister  "NoSpillStore"
  v66|q QWORD "[rax|q]" v66|q rax|q [1052, 1061[1052 MustHaveRegister 1056 MustHaveRegister 1060 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[rsi|q]" v67|q -1 [1054, 1055[1054 MustHaveRegister  "NoDefinitionFound"
  v68|q QWORD "[rdx|q]" v68|q -1 [1054, 1055[1054 MustHaveRegister  "NoDefinitionFound"
  v69|d DWORD "[rsi|d]" v69|d v66|q [1056, 1058[1056 MustHaveRegister 1058 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[rsi|q]" v70|q -1 [1060, 1061[1060 MustHaveRegister  "NoDefinitionFound"
  v71|q QWORD "[rdx|q]" v71|q -1 [1060, 1061[1060 MustHaveRegister  "NoDefinitionFound"
  v72|q QWORD "[rdx|q]" v72|q -1 [622, 642[622 MustHaveRegister 642 ShouldHaveRegister  "NoSpillStore"
  v73|q QWORD "[rsi|q]" v73|q -1 [682, 702[682 MustHaveRegister 702 ShouldHaveRegister  "NoSpillStore"
  v74|q QWORD "[vstack:2|q]" v0|q v0|q [308, 347[ "StoreAtDefinition"
  v75|q QWORD "[vstack:1|q]" v52|q v52|q [351, 355[354 ShouldHaveRegister  "OneSpillStore"
  v76|q QWORD "[vstack:2|q]" v0|q v0|q [347, 351[ "StoreAtDefinition"
  v77|q QWORD "[vstack:2|q]" v0|q v0|q [351, 478[ "StoreAtDefinition"
  v78|q QWORD "[rsi|q]" v0|q v0|q [478, 599[592 MustHaveRegister 596 MustHaveRegister 598 MustHaveRegister  "StoreAtDefinition"
  v79|q QWORD "[vstack:4|q]" v38|q v38|q [467, 473[ "OneSpillStore"
  v80|q QWORD "[vstack:4|q]" v38|q v38|q [473, 477[476 ShouldHaveRegister  "OneSpillStore"
  v81|q QWORD "[rsi|q]" v0|q v0|q [620, 641[ "StoreAtDefinition"
  v82|q QWORD "[rbx|q]" v0|q v0|q [641, 1049[1040 MustHaveRegister  "StoreAtDefinition"
  v83|q QWORD "[vstack:2|q]" v0|q v0|q [1049, 1053[ "StoreAtDefinition"
  v84|q QWORD "[rbx|q]" v0|q v0|q [1053, 1061[[1064, 1479[[1480, 1501[[1502, 1553[1054 MustHaveRegister 1058 MustHaveRegister 1060 MustHaveRegister  "StoreAtDefinition"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B64" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction [vstack:0|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@32f57492 slotKind: QWORD <|@ <|@
      nr   48  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4783) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction v3|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   60  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   62  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v5|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B64 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607182323057074616
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: v7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B1" "B35" 
    successors "B37" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   78  <|@ instruction [v27|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 16] trueDestinationProbability: 0.9999908853703156 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B60 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B42" 
    xhandlers
    flags 
    probability 4607182336702731707
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4785) [bci: 13]
stack: v27|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v4|QWORD[.] - - 
>@ <|@ instruction v28|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:13] <|@ <|@
      nr  108  <|@ instruction MOVB x: [v0|QWORD[.] + 16] y: 0 size: BYTE <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: v28|DWORD, y: v27|DWORD) trueDestinationProbability: 0.2541630105061688 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction TESTBRANCH (x: v27|DWORD, y: v27|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction v41|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  150  <|@ instruction v42|QWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction v43|QWORD = LEA address: [v42|QWORD + 23] size: QWORD <|@ <|@
      nr  154  <|@ instruction v44|QWORD = AND x: v43|QWORD y: -8 size: QWORD <|@ <|@
      nr  156  <|@ instruction v45|QWORD = ADD (x: v44|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: v45|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B51" 
    xhandlers
    flags 
    probability 4604825882278563758
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction MOV (x: [r15|QWORD + 440], y: v45|QWORD) size: QWORD <|@ <|@
      nr  192  <|@ instruction AMD64PREFETCH ~address: [v44|QWORD + v41|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  194  <|@ instruction AMD64PREFETCH ~address: [v44|QWORD + v41|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  196  <|@ instruction AMD64PREFETCH ~address: [v44|QWORD + v41|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  198  <|@ instruction MOV x: [v41|QWORD] y: 1 size: QWORD <|@ <|@
      nr  200  <|@ instruction MOV x: [v41|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  202  <|@ instruction MOV (x: [v41|QWORD + 12], y: v27|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction v47|QWORD = LEA address: [v44|QWORD - 16] size: QWORD <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH x: v47|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B51 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4604759375651230885
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  216  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B49" 
    successors "B49" "B50" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4634844288894646813
    begin_IR
      LIR
      nr  218  <|@ instruction [v48|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction CMPBRANCH (x: v44|QWORD, y: v48|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4634792850175069044
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction MOV x: [v41|QWORD + v48|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  248  <|@ instruction v49|QWORD = LEA address: [v48|QWORD + 8] size: QWORD <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604759375651230886
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4604825882278563759
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction v51|QWORD[.] = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr  276  <|@ instruction [v52|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction CMP (x: v28|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr  292  <|@ instruction v53|DWORD = CMOVE (falseValue: v28|DWORD, ~trueValue: v27|DWORD) condition: > <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v28|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B58" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v27|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction v56|QWORD[*] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction v57|QWORD[*] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction v58|QWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction rdi|QWORD = LEA address: [v56|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = MOVE input: v74|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  348  <|@ instruction rsi|QWORD = LEA address: [v57|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  350  <|@ instruction rdx|QWORD = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = STACKMOVE (input: v76|QWORD[.], ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  352  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = MOVE input: v77|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction v30|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  382  <|@ instruction v31|QWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 23] size: QWORD <|@ <|@
      nr  386  <|@ instruction v33|QWORD = AND x: v32|QWORD y: -8 size: QWORD <|@ <|@
      nr  388  <|@ instruction v34|QWORD = ADD (x: v33|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr  390  <|@ instruction CMPBRANCH (x: v34|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4598204386423092713
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction MOV (x: [r15|QWORD + 440], y: v34|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v30|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  420  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v30|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  422  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v30|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  424  <|@ instruction MOV x: [v30|QWORD] y: 1 size: QWORD <|@ <|@
      nr  426  <|@ instruction MOV x: [v30|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  428  <|@ instruction MOV (x: [v30|QWORD + 12], y: v28|DWORD) size: DWORD <|@ <|@
      nr  430  <|@ instruction v37|QWORD[.] = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr  434  <|@ instruction [v38|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction v39|QWORD[*] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction v40|QWORD[*] = MOVE input: v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = MOVE input: v38|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  468  <|@ instruction rdi|QWORD = LEA address: [v39|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  470  <|@ instruction rsi|QWORD = LEA address: [v40|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction rdx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = STACKMOVE (input: v79|QWORD[.], ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  474  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE input: v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = MOVE input: v77|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  476  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B41" "B58" 
    successors "B62" 
    xhandlers
    flags 
    probability 4607182336702731708
    begin_IR
      LIR
      nr  478  <|@ instruction [v59|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v60|QWORD, temp2: v61|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr  594  <|@ instruction v62|DWORD[_] = COMPRESSPOINTER (input: v59|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr  596  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v62|DWORD[_]) size: DWORD <|@ <|@
      nr  598  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v59|QWORD[.]) {temp: v63|QWORD, temp2: v64|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 4575248858818943354
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction v72|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  642  <|@ instruction rsi|QWORD = MOVE input: v72|QWORD moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction rdx|DWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr  646  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  648  <|@ instruction v46|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction NULLCHECK address: [v46|QWORD[.]] state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4575162870452290749
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction rcx|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction ZERO_MEMORY (pointer: [v41|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  678  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4568006969118877196
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE input: v77|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  682  <|@ instruction v73|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction rsi|QWORD = MOVE input: v73|QWORD moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction rdx|DWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  708  <|@ instruction v35|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction NULLCHECK address: [v35|QWORD[.]] state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction v8|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr  732  <|@ instruction v9|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr  734  <|@ instruction BITTESTANDBRANCH value: v8|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B2 -> B3 falseDestination: B2 -> B8 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4532329488911171509
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction v10|QWORD = OR x: v8|QWORD y: 1 size: QWORD <|@ <|@
      nr  766  <|@ instruction MOV (x: [v9|QWORD], y: v10|QWORD) size: QWORD <|@ <|@
      nr  768  <|@ instruction rax|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction rax|QWORD = CAS (address: [v1|QWORD[.]], cmpValue: rax|QWORD, newValue: v9|QWORD) accessKind: QWORD <|@ <|@
      nr  772  <|@ instruction v11|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction CMPBRANCH (x: v11|QWORD, y: v10|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4532267370277133279
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B4" "B6" "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532382201905571021
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  798  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction v14|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr  820  <|@ instruction v15|QWORD = MOV input: [v14|QWORD] size: QWORD <|@ <|@
      nr  822  <|@ instruction v16|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  824  <|@ instruction TESTBRANCH (x: v15|QWORD, y: v15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4529143557278551352
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction v17|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr  840  <|@ instruction BITTESTANDBRANCH value: v17|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B19 -> B20 falseDestination: B19 -> B21 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529068261964565618
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction rax|QWORD = CAS (address: [v1|QWORD[.]], cmpValue: rax|QWORD, newValue: v15|QWORD) accessKind: QWORD <|@ <|@
      nr  870  <|@ instruction v18|DWORD = SETCC condition: = <|@ <|@
      nr  872  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B20" "B27" 
    successors "B29" "B31" 
    xhandlers
    flags 
    probability 4529074299895794134
    begin_IR
      LIR
      nr  874  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 17] trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction MOVB x: [v0|QWORD[.] + 16] y: 1 size: BYTE <|@ <|@
      nr 1042  <|@ instruction v65|DWORD = SHL value: v27|DWORD size: DWORD <|@ <|@
      nr 1044  <|@ instruction rsi|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1048  <|@ instruction rcx|DWORD = MOVE input: v65|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1050  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4800) [bci: 92]
stack: v0|QWORD[.] 
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOfRange(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:92] <|@ <|@
      nr 1052  <|@ instruction v66|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v83|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1054  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v67|QWORD, temp2: v68|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1056  <|@ instruction v69|DWORD[_] = COMPRESSPOINTER (input: v66|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr 1058  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v69|DWORD[_]) size: DWORD <|@ <|@
      nr 1060  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v66|QWORD[.]) {temp: v70|QWORD, temp2: v71|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B34" 
    xhandlers
    flags 
    probability 4526633713479026896
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B18" "B23" "B33" "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4530432362446083730
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr 1086  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B25" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524572191115640556
    begin_IR
      LIR
      nr 1098  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1116  <|@ instruction rdx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr 1118  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr 1120  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B30" 
    successors "B36" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: v16|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1130  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4502623928274233274
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction MOV x: [v9|QWORD] y: 3 size: QWORD <|@ <|@
      nr 1148  <|@ instruction v13|QWORD = MOV input: [v8|QWORD + 62] size: QWORD <|@ <|@
      nr 1150  <|@ instruction TESTBRANCH (x: v13|QWORD, y: v13|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4501820778258385448
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1174  <|@ instruction rax|QWORD = CAS (address: [v8|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr 1176  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4501097943244122404
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4502543613272648492
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction v12|QWORD = SUB (x: v11|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr 1202  <|@ instruction TESTCONSTBRANCH x: v12|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B14" 
    xhandlers
    flags 
    probability 4502464101421079557
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction MOV x: [v9|QWORD] y: 0 size: QWORD <|@ <|@
      nr 1216  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B33" 
    xhandlers
    flags 
    probability 4499411328210841968
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction v19|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr 1234  <|@ instruction v20|QWORD = MOV input: [v19|QWORD + 134] size: QWORD <|@ <|@
      nr 1236  <|@ instruction TESTBRANCH (x: v20|QWORD, y: v20|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4499363139209891098
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction v21|QWORD = MOV input: [v19|QWORD + 150] size: QWORD <|@ <|@
      nr 1254  <|@ instruction v22|QWORD = OR (x: v21|QWORD, ~y: [v19|QWORD + 142]) size: QWORD <|@ <|@
      nr 1256  <|@ instruction TESTBRANCH (x: v22|QWORD, y: v22|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4498676108457829474
    begin_IR
      LIR
      nr 1258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction MOV x: [v19|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr 1270  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" "B15" 
    xhandlers
    flags 
    probability 4487506829360426131
    begin_IR
      LIR
      nr 1272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction CMPBRANCH (x: v13|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4484288269758412157
    begin_IR
      LIR
      nr 1284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4486864309347747871
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4484211167356890766
    begin_IR
      LIR
      nr 1304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction CMPCONSTBRANCH x: [v19|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4483447853581828992
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction MOV x: [v19|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr 1332  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1334  <|@ instruction CMPCONSTBRANCH x: [v19|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4482760871184273395
    begin_IR
      LIR
      nr 1336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1364  <|@ instruction rax|QWORD = CAS (address: [v19|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr 1366  <|@ instruction v23|DWORD = SETCC condition: = <|@ <|@
      nr 1368  <|@ instruction v24|DWORD = XOR x: v23|DWORD y: 1 size: DWORD <|@ <|@
      nr 1370  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4481718189707699113
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction INC value: [v8|QWORD + 134] size: QWORD <|@ <|@
      nr 1384  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4472659588851943866
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B7" "B15" "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4490722176362376714
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1414  <|@ instruction rdx|QWORD = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr 1416  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
locals: v1|QWORD[.] 
locks: monitor[v1|QWORD[.], vstack:0|QWORD] 
java.lang.String.<init>(String.java:4785) [bci: 10]
locals: v0|QWORD[.] v1|QWORD[.] - v4|QWORD[.] - - 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0, 10] <|@ <|@
      nr 1418  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B34" 
    xhandlers
    flags 
    probability 4469235422845872850
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction v26|QWORD = DEC value: v20|QWORD size: QWORD <|@ <|@
      nr 1434  <|@ instruction MOV (x: [v19|QWORD + 134], y: v26|QWORD) size: QWORD <|@ <|@
      nr 1436  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" 
    xhandlers
    flags 
    probability 4469173740924655728
    begin_IR
      LIR
      nr 1438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 4468563089904606309
    begin_IR
      LIR
      nr 1448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction MOV x: [r15|QWORD + 1156] y: -63763 size: DWORD <|@ <|@
      nr 1476  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1478  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4785) [bci: 13]
stack: v27|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v4|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:13] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15667 size: DWORD <|@ <|@
      nr 1498  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1500  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4783) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVE input: int[-61721|0xffffffffffff0ee7] // MoveResolver resolve mapping <|@ <|@
      nr 1510  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVE input: int[-62745|0xffffffffffff0ae7] // MoveResolver resolve mapping <|@ <|@
      nr 1520  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVE input: int[-59667|0xffffffffffff16ed] // MoveResolver resolve mapping <|@ <|@
      nr 1530  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B43" "B54" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1532  <|@ instruction [v54|DWORD, v55|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v54|DWORD) size: DWORD <|@ <|@
      nr 1550  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v55|QWORD) size: QWORD <|@ <|@
      nr 1552  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_1       
     5: invokevirtual #142        // java.lang.AbstractStringBuilder.getValue:()byte[]
     8: astore_3      
     9: aload_1       
    10: invokevirtual #141        // java.lang.AbstractStringBuilder.length:()int
    13: istore        4
    15: aload_1       
    16: invokevirtual #292        // java.lang.AbstractStringBuilder.isLatin1:()boolean
    19: ifeq          41
    22: aload_0       
    23: iconst_0      
    24: putfield      #2          // coder:byte
    27: aload_0       
    28: aload_3       
    29: iconst_0      
    30: iload         4
    32: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    35: putfield      #1          // value:byte[]
    38: goto          98
    41: getstatic     #8          // COMPACT_STRINGS:boolean
    44: ifeq          80
    47: aload_1       
    48: getfield      #293        // java.lang.AbstractStringBuilder.maybeLatin1:boolean
    51: ifeq          80
    54: aload_3       
    55: iconst_0      
    56: iload         4
    58: invokestatic  #294        // java.lang.StringUTF16.compress:(byte[], int, int)byte[]
    61: astore        5
    63: aload         5
    65: ifnull        80
    68: aload_0       
    69: iconst_0      
    70: putfield      #2          // coder:byte
    73: aload_0       
    74: aload         5
    76: putfield      #1          // value:byte[]
    79: return        
    80: aload_0       
    81: iconst_1      
    82: putfield      #2          // coder:byte
    85: aload_0       
    86: aload_3       
    87: iconst_0      
    88: iload         4
    90: iconst_1      
    91: ishl          
    92: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    95: putfield      #1          // value:byte[]
    98: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B64" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction [vstack:0|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@32f57492 slotKind: QWORD <|@ <|@
      nr   48  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   50  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4783) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction v2|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction v3|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction v6|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   60  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   62  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v5|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B64 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607182323057074616
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction v7|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: v7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B1" "B35" 
    successors "B37" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 16] trueDestinationProbability: 0.9999908853703156 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B60 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B42" 
    xhandlers
    flags 
    probability 4607182336702731707
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4785) [bci: 13]
stack: v27|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v4|QWORD[.] - - 
>@ <|@ instruction v28|DWORD = MOV input: [v3|DWORD[_] * 8 + 12] size: DWORD state [bci:13] <|@ <|@
      nr  108  <|@ instruction MOVB x: [v0|QWORD[.] + 16] y: 0 size: BYTE <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: v28|DWORD, y: v27|DWORD) trueDestinationProbability: 0.2541630105061688 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction TESTBRANCH (x: v27|DWORD, y: v27|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction v41|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  150  <|@ instruction v42|QWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction v43|QWORD = LEA address: [v42|QWORD + 23] size: QWORD <|@ <|@
      nr  154  <|@ instruction v44|QWORD = AND x: v43|QWORD y: -8 size: QWORD <|@ <|@
      nr  156  <|@ instruction v45|QWORD = ADD (x: v44|QWORD, y: v41|QWORD) size: QWORD <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: v45|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B51" 
    xhandlers
    flags 
    probability 4604825882278563758
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction MOV (x: [r15|QWORD + 440], y: v45|QWORD) size: QWORD <|@ <|@
      nr  192  <|@ instruction AMD64PREFETCH ~address: [v44|QWORD + v41|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  194  <|@ instruction AMD64PREFETCH ~address: [v44|QWORD + v41|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  196  <|@ instruction AMD64PREFETCH ~address: [v44|QWORD + v41|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  198  <|@ instruction MOV x: [v41|QWORD] y: 1 size: QWORD <|@ <|@
      nr  200  <|@ instruction MOV x: [v41|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  202  <|@ instruction MOV (x: [v41|QWORD + 12], y: v27|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction v47|QWORD = LEA address: [v44|QWORD - 16] size: QWORD <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH x: v47|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B51 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4604759375651230885
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  216  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B49" 
    successors "B49" "B50" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4634844288894646813
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction CMPBRANCH (x: v44|QWORD, y: v48|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4634792850175069044
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction MOV x: [v41|QWORD + v48|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  248  <|@ instruction v49|QWORD = LEA address: [v48|QWORD + 8] size: QWORD <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604759375651230886
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4604825882278563759
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction v51|QWORD[.] = MOVE input: v41|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction CMP (x: v28|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr  292  <|@ instruction v53|DWORD = CMOVE (falseValue: v28|DWORD, ~trueValue: v27|DWORD) condition: > <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v28|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B58" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v27|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction v56|QWORD[*] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction v57|QWORD[*] = MOVE input: v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction v58|QWORD = MOVE input: v53|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction rdi|QWORD = LEA address: [v56|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  348  <|@ instruction rsi|QWORD = LEA address: [v57|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  350  <|@ instruction rdx|QWORD = MOVE input: v58|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v52|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  352  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = MOVE input: v77|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction v30|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  382  <|@ instruction v31|QWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 23] size: QWORD <|@ <|@
      nr  386  <|@ instruction v33|QWORD = AND x: v32|QWORD y: -8 size: QWORD <|@ <|@
      nr  388  <|@ instruction v34|QWORD = ADD (x: v33|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr  390  <|@ instruction CMPBRANCH (x: v34|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4598204386423092713
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction MOV (x: [r15|QWORD + 440], y: v34|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v30|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  420  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v30|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  422  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v30|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  424  <|@ instruction MOV x: [v30|QWORD] y: 1 size: QWORD <|@ <|@
      nr  426  <|@ instruction MOV x: [v30|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  428  <|@ instruction MOV (x: [v30|QWORD + 12], y: v28|DWORD) size: DWORD <|@ <|@
      nr  430  <|@ instruction v37|QWORD[.] = MOVE input: v30|QWORD moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction v39|QWORD[*] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction v40|QWORD[*] = MOVE input: v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = MOVE input: v38|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  468  <|@ instruction rdi|QWORD = LEA address: [v39|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  470  <|@ instruction rsi|QWORD = LEA address: [v40|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction rdx|QWORD = MOVE input: v31|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = STACKMOVE (input: v79|QWORD[.], ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  474  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = MOVE input: v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = MOVE input: v77|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  476  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B41" "B58" 
    successors "B62" 
    xhandlers
    flags 
    probability 4607182336702731708
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v60|QWORD, temp2: v61|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr  594  <|@ instruction v62|DWORD[_] = COMPRESSPOINTER (input: v59|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr  596  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v62|DWORD[_]) size: DWORD <|@ <|@
      nr  598  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v59|QWORD[.]) {temp: v63|QWORD, temp2: v64|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 4575248858818943354
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction v72|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  642  <|@ instruction rsi|QWORD = MOVE input: v72|QWORD moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction rdx|DWORD = MOVE input: v27|DWORD moveKind: DWORD <|@ <|@
      nr  646  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  648  <|@ instruction v46|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction NULLCHECK address: [v46|QWORD[.]] state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = MOVE input: v46|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4575162870452290749
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction rcx|QWORD = MOVE input: v47|QWORD moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction ZERO_MEMORY (pointer: [v41|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v82|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  678  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4568006969118877196
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE input: v77|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  682  <|@ instruction v73|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction rsi|QWORD = MOVE input: v73|QWORD moveKind: QWORD <|@ <|@
      nr  704  <|@ instruction rdx|DWORD = MOVE input: v28|DWORD moveKind: DWORD <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  708  <|@ instruction v35|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction NULLCHECK address: [v35|QWORD[.]] state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction v8|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr  732  <|@ instruction v9|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr  734  <|@ instruction BITTESTANDBRANCH value: v8|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B2 -> B3 falseDestination: B2 -> B8 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4532329488911171509
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction v10|QWORD = OR x: v8|QWORD y: 1 size: QWORD <|@ <|@
      nr  766  <|@ instruction MOV (x: [v9|QWORD], y: v10|QWORD) size: QWORD <|@ <|@
      nr  768  <|@ instruction rax|QWORD = MOVE input: v10|QWORD moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction rax|QWORD = CAS (address: [v1|QWORD[.]], cmpValue: rax|QWORD, newValue: v9|QWORD) accessKind: QWORD <|@ <|@
      nr  772  <|@ instruction v11|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction CMPBRANCH (x: v11|QWORD, y: v10|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4532267370277133279
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B4" "B6" "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532382201905571021
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  798  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction v14|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr  820  <|@ instruction v15|QWORD = MOV input: [v14|QWORD] size: QWORD <|@ <|@
      nr  822  <|@ instruction v16|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  824  <|@ instruction TESTBRANCH (x: v15|QWORD, y: v15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4529143557278551352
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction v17|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr  840  <|@ instruction BITTESTANDBRANCH value: v17|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B19 -> B20 falseDestination: B19 -> B21 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529068261964565618
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction rax|QWORD = CAS (address: [v1|QWORD[.]], cmpValue: rax|QWORD, newValue: v15|QWORD) accessKind: QWORD <|@ <|@
      nr  870  <|@ instruction v18|DWORD = SETCC condition: = <|@ <|@
      nr  872  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B20" "B27" 
    successors "B29" "B31" 
    xhandlers
    flags 
    probability 4529074299895794134
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction TESTBRANCH (x: v25|DWORD, y: v25|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction CMPCONSTBRANCH x: [v1|QWORD[.] + 17] trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction MOVB x: [v0|QWORD[.] + 16] y: 1 size: BYTE <|@ <|@
      nr 1042  <|@ instruction v65|DWORD = SHL value: v27|DWORD size: DWORD <|@ <|@
      nr 1044  <|@ instruction rsi|QWORD[.] = MOVE input: v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1048  <|@ instruction rcx|DWORD = MOVE input: v65|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1050  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4800) [bci: 92]
stack: v0|QWORD[.] 
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOfRange(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:92] <|@ <|@
      nr 1052  <|@ instruction v66|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v83|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1054  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v67|QWORD, temp2: v68|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1056  <|@ instruction v69|DWORD[_] = COMPRESSPOINTER (input: v66|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr 1058  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v69|DWORD[_]) size: DWORD <|@ <|@
      nr 1060  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v66|QWORD[.]) {temp: v70|QWORD, temp2: v71|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B34" 
    xhandlers
    flags 
    probability 4526633713479026896
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B18" "B23" "B33" "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4530432362446083730
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr 1086  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B25" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524572191115640556
    begin_IR
      LIR
      nr 1098  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1116  <|@ instruction rdx|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr 1118  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr 1120  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B30" 
    successors "B36" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE input: v16|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v84|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1130  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4502623928274233274
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction MOV x: [v9|QWORD] y: 3 size: QWORD <|@ <|@
      nr 1148  <|@ instruction v13|QWORD = MOV input: [v8|QWORD + 62] size: QWORD <|@ <|@
      nr 1150  <|@ instruction TESTBRANCH (x: v13|QWORD, y: v13|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4501820778258385448
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1174  <|@ instruction rax|QWORD = CAS (address: [v8|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr 1176  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4501097943244122404
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4502543613272648492
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction v12|QWORD = SUB (x: v11|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr 1202  <|@ instruction TESTCONSTBRANCH x: v12|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B14" 
    xhandlers
    flags 
    probability 4502464101421079557
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction MOV x: [v9|QWORD] y: 0 size: QWORD <|@ <|@
      nr 1216  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B33" 
    xhandlers
    flags 
    probability 4499411328210841968
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction v19|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr 1234  <|@ instruction v20|QWORD = MOV input: [v19|QWORD + 134] size: QWORD <|@ <|@
      nr 1236  <|@ instruction TESTBRANCH (x: v20|QWORD, y: v20|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4499363139209891098
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction v21|QWORD = MOV input: [v19|QWORD + 150] size: QWORD <|@ <|@
      nr 1254  <|@ instruction v22|QWORD = OR (x: v21|QWORD, ~y: [v19|QWORD + 142]) size: QWORD <|@ <|@
      nr 1256  <|@ instruction TESTBRANCH (x: v22|QWORD, y: v22|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4498676108457829474
    begin_IR
      LIR
      nr 1258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction MOV x: [v19|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr 1270  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" "B15" 
    xhandlers
    flags 
    probability 4487506829360426131
    begin_IR
      LIR
      nr 1272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction CMPBRANCH (x: v13|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4484288269758412157
    begin_IR
      LIR
      nr 1284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4486864309347747871
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4484211167356890766
    begin_IR
      LIR
      nr 1304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction CMPCONSTBRANCH x: [v19|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4483447853581828992
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction MOV x: [v19|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr 1332  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1334  <|@ instruction CMPCONSTBRANCH x: [v19|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4482760871184273395
    begin_IR
      LIR
      nr 1336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1364  <|@ instruction rax|QWORD = CAS (address: [v19|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr 1366  <|@ instruction v23|DWORD = SETCC condition: = <|@ <|@
      nr 1368  <|@ instruction v24|DWORD = XOR x: v23|DWORD y: 1 size: DWORD <|@ <|@
      nr 1370  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4481718189707699113
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction INC value: [v8|QWORD + 134] size: QWORD <|@ <|@
      nr 1384  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4472659588851943866
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B7" "B15" "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4490722176362376714
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1414  <|@ instruction rdx|QWORD = MOVE input: v9|QWORD moveKind: QWORD <|@ <|@
      nr 1416  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
locals: v1|QWORD[.] 
locks: monitor[v1|QWORD[.], vstack:0|QWORD] 
java.lang.String.<init>(String.java:4785) [bci: 10]
locals: v0|QWORD[.] v1|QWORD[.] - v4|QWORD[.] - - 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0, 10] <|@ <|@
      nr 1418  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B34" 
    xhandlers
    flags 
    probability 4469235422845872850
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction v26|QWORD = DEC value: v20|QWORD size: QWORD <|@ <|@
      nr 1434  <|@ instruction MOV (x: [v19|QWORD + 134], y: v26|QWORD) size: QWORD <|@ <|@
      nr 1436  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" 
    xhandlers
    flags 
    probability 4469173740924655728
    begin_IR
      LIR
      nr 1438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 4468563089904606309
    begin_IR
      LIR
      nr 1448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction MOV x: [r15|QWORD + 1156] y: -63763 size: DWORD <|@ <|@
      nr 1476  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1478  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4785) [bci: 13]
stack: v27|DWORD 
locals: v0|QWORD[.] v1|QWORD[.] - v4|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:13] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15667 size: DWORD <|@ <|@
      nr 1498  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1500  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4783) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVE input: int[-61721|0xffffffffffff0ee7] // MoveResolver resolve mapping <|@ <|@
      nr 1510  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVE input: int[-62745|0xffffffffffff0ae7] // MoveResolver resolve mapping <|@ <|@
      nr 1520  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOVE input: int[-59667|0xffffffffffff16ed] // MoveResolver resolve mapping <|@ <|@
      nr 1530  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B43" "B54" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v54|DWORD) size: DWORD <|@ <|@
      nr 1550  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v55|QWORD) size: QWORD <|@ <|@
      nr 1552  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: v0|QWORD[.] - - v4|QWORD[.] v27|DWORD - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_1       
     5: invokevirtual #142        // java.lang.AbstractStringBuilder.getValue:()byte[]
     8: astore_3      
     9: aload_1       
    10: invokevirtual #141        // java.lang.AbstractStringBuilder.length:()int
    13: istore        4
    15: aload_1       
    16: invokevirtual #292        // java.lang.AbstractStringBuilder.isLatin1:()boolean
    19: ifeq          41
    22: aload_0       
    23: iconst_0      
    24: putfield      #2          // coder:byte
    27: aload_0       
    28: aload_3       
    29: iconst_0      
    30: iload         4
    32: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    35: putfield      #1          // value:byte[]
    38: goto          98
    41: getstatic     #8          // COMPACT_STRINGS:boolean
    44: ifeq          80
    47: aload_1       
    48: getfield      #293        // java.lang.AbstractStringBuilder.maybeLatin1:boolean
    51: ifeq          80
    54: aload_3       
    55: iconst_0      
    56: iload         4
    58: invokestatic  #294        // java.lang.StringUTF16.compress:(byte[], int, int)byte[]
    61: astore        5
    63: aload         5
    65: ifnull        80
    68: aload_0       
    69: iconst_0      
    70: putfield      #2          // coder:byte
    73: aload_0       
    74: aload         5
    76: putfield      #1          // value:byte[]
    79: return        
    80: aload_0       
    81: iconst_1      
    82: putfield      #2          // coder:byte
    85: aload_0       
    86: aload_3       
    87: iconst_0      
    88: iload         4
    90: iconst_1      
    91: ishl          
    92: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    95: putfield      #1          // value:byte[]
    98: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B64" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction [vstack:0|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@32f57492 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   50  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4783) [bci: 0]
locals: rsi|QWORD[.] r11|QWORD[.] - - - - 
>@ <|@ instruction rdi|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction r8|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   60  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   62  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdi|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B64 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607182323057074616
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rdi|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B1" "B35" 
    successors "B37" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD[.] + 16] trueDestinationProbability: 0.9999908853703156 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B60 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B42" 
    xhandlers
    flags 
    probability 4607182336702731707
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4785) [bci: 13]
stack: r10|DWORD 
locals: rsi|QWORD[.] r11|QWORD[.] - r9|QWORD[.] - - 
>@ <|@ instruction r8|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD state [bci:13] <|@ <|@
      nr  108  <|@ instruction MOVB x: [rsi|QWORD[.] + 16] y: 0 size: BYTE <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.2541630105061688 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  150  <|@ instruction rdi|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  154  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  156  <|@ instruction rdx|QWORD = ADD (x: rdi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B51" 
    xhandlers
    flags 
    probability 4604825882278563758
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  192  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r11|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  194  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r11|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  196  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r11|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  198  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  200  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  202  <|@ instruction MOV (x: [r11|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B51 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4604759375651230885
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  216  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B49" 
    successors "B49" "B50" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4634844288894646813
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4634792850175069044
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction MOV x: [r11|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  248  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604759375651230886
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4604825882278563759
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  292  <|@ instruction rdi|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: > <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B58" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction rdx|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction r10|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  348  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  350  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  352  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  382  <|@ instruction r11|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  386  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  388  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  390  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4598204386423092713
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  420  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  422  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  424  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  426  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  428  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  430  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  468  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  470  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  476  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B41" "B58" 
    successors "B62" 
    xhandlers
    flags 
    probability 4607182336702731708
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr  594  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr  596  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  598  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 4575248858818943354
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  642  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  646  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  650  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:27] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4575162870452290749
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  678  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4568006969118877196
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  682  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  710  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:27] <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction r10|QWORD = MOV input: [r11|QWORD[.]] size: QWORD <|@ <|@
      nr  732  <|@ instruction rcx|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr  734  <|@ instruction BITTESTANDBRANCH value: r10|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B2 -> B3 falseDestination: B2 -> B8 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4532329488911171509
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction r10|QWORD = OR x: r10|QWORD y: 1 size: QWORD <|@ <|@
      nr  766  <|@ instruction MOV (x: [rcx|QWORD], y: r10|QWORD) size: QWORD <|@ <|@
      nr  768  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD[.]], cmpValue: rax|QWORD, newValue: rcx|QWORD) accessKind: QWORD <|@ <|@
      nr  774  <|@ instruction CMPBRANCH (x: rax|QWORD, y: r10|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4532267370277133279
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B4" "B6" "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532382201905571021
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  798  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction r10|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr  820  <|@ instruction rsi|QWORD = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr  822  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  824  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4529143557278551352
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction rax|QWORD = MOV input: [r11|QWORD[.]] size: QWORD <|@ <|@
      nr  840  <|@ instruction BITTESTANDBRANCH value: rax|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B19 -> B20 falseDestination: B19 -> B21 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529068261964565618
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD <|@ <|@
      nr  870  <|@ instruction rsi|DWORD = SETCC condition: = <|@ <|@
      nr  872  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B20" "B27" 
    successors "B29" "B31" 
    xhandlers
    flags 
    probability 4529074299895794134
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD[.] + 17] trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction MOVB x: [rbx|QWORD[.] + 16] y: 1 size: BYTE <|@ <|@
      nr 1042  <|@ instruction r10|DWORD = SHL value: r10|DWORD size: DWORD <|@ <|@
      nr 1044  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1048  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1050  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4800) [bci: 92]
stack: vstack:2|QWORD[.] 
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOfRange(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:92] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1054  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rbx|QWORD[.] + 20], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1056  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr 1058  <|@ instruction MOV (x: [rbx|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1060  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rbx|QWORD[.], ~newValue: rax|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B34" 
    xhandlers
    flags 
    probability 4526633713479026896
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B18" "B23" "B33" "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4530432362446083730
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr 1086  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B25" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524572191115640556
    begin_IR
      LIR
      nr 1098  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1116  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1118  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr 1120  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B30" 
    successors "B36" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1130  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4502623928274233274
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction MOV x: [rcx|QWORD] y: 3 size: QWORD <|@ <|@
      nr 1148  <|@ instruction rsi|QWORD = MOV input: [r10|QWORD + 62] size: QWORD <|@ <|@
      nr 1150  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4501820778258385448
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1174  <|@ instruction rax|QWORD = CAS (address: [r10|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr 1176  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4501097943244122404
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4502543613272648492
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr 1202  <|@ instruction TESTCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B14" 
    xhandlers
    flags 
    probability 4502464101421079557
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction MOV x: [rcx|QWORD] y: 0 size: QWORD <|@ <|@
      nr 1216  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B33" 
    xhandlers
    flags 
    probability 4499411328210841968
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction rdi|QWORD = MOV input: [r11|QWORD[.]] size: QWORD <|@ <|@
      nr 1234  <|@ instruction rdx|QWORD = MOV input: [rdi|QWORD + 134] size: QWORD <|@ <|@
      nr 1236  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4499363139209891098
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction rax|QWORD = MOV input: [rdi|QWORD + 150] size: QWORD <|@ <|@
      nr 1254  <|@ instruction rax|QWORD = OR (x: rax|QWORD, ~y: [rdi|QWORD + 142]) size: QWORD <|@ <|@
      nr 1256  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4498676108457829474
    begin_IR
      LIR
      nr 1258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction MOV x: [rdi|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr 1270  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" "B15" 
    xhandlers
    flags 
    probability 4487506829360426131
    begin_IR
      LIR
      nr 1272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4484288269758412157
    begin_IR
      LIR
      nr 1284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4486864309347747871
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4484211167356890766
    begin_IR
      LIR
      nr 1304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4483447853581828992
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction MOV x: [rdi|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr 1332  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1334  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4482760871184273395
    begin_IR
      LIR
      nr 1336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1364  <|@ instruction rax|QWORD = CAS (address: [rdi|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr 1366  <|@ instruction rsi|DWORD = SETCC condition: = <|@ <|@
      nr 1368  <|@ instruction rsi|DWORD = XOR x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 1370  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4481718189707699113
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction INC value: [r10|QWORD + 134] size: QWORD <|@ <|@
      nr 1384  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4472659588851943866
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B7" "B15" "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4490722176362376714
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1414  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1416  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
locals: r11|QWORD[.] 
locks: monitor[r11|QWORD[.], vstack:0|QWORD] 
java.lang.String.<init>(String.java:4785) [bci: 10]
locals: rbx|QWORD[.] r11|QWORD[.] - r9|QWORD[.] - - 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0, 10] <|@ <|@
      nr 1418  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B34" 
    xhandlers
    flags 
    probability 4469235422845872850
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction rdx|QWORD = DEC value: rdx|QWORD size: QWORD <|@ <|@
      nr 1434  <|@ instruction MOV (x: [rdi|QWORD + 134], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1436  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" 
    xhandlers
    flags 
    probability 4469173740924655728
    begin_IR
      LIR
      nr 1438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 4468563089904606309
    begin_IR
      LIR
      nr 1448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction MOV x: [r15|QWORD + 1156] y: -63763 size: DWORD <|@ <|@
      nr 1476  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1478  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4785) [bci: 13]
stack: r10|DWORD 
locals: rbx|QWORD[.] r11|QWORD[.] - r9|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:13] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15667 size: DWORD <|@ <|@
      nr 1498  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1500  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4783) [bci: 0]
locals: rbx|QWORD[.] r11|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-61721|0xffffffffffff0ee7] // MoveResolver resolve mapping <|@ <|@
      nr 1510  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-62745|0xffffffffffff0ae7] // MoveResolver resolve mapping <|@ <|@
      nr 1520  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-59667|0xffffffffffff16ed] // MoveResolver resolve mapping <|@ <|@
      nr 1530  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B43" "B54" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1550  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1552  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_1       
     5: invokevirtual #142        // java.lang.AbstractStringBuilder.getValue:()byte[]
     8: astore_3      
     9: aload_1       
    10: invokevirtual #141        // java.lang.AbstractStringBuilder.length:()int
    13: istore        4
    15: aload_1       
    16: invokevirtual #292        // java.lang.AbstractStringBuilder.isLatin1:()boolean
    19: ifeq          41
    22: aload_0       
    23: iconst_0      
    24: putfield      #2          // coder:byte
    27: aload_0       
    28: aload_3       
    29: iconst_0      
    30: iload         4
    32: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    35: putfield      #1          // value:byte[]
    38: goto          98
    41: getstatic     #8          // COMPACT_STRINGS:boolean
    44: ifeq          80
    47: aload_1       
    48: getfield      #293        // java.lang.AbstractStringBuilder.maybeLatin1:boolean
    51: ifeq          80
    54: aload_3       
    55: iconst_0      
    56: iload         4
    58: invokestatic  #294        // java.lang.StringUTF16.compress:(byte[], int, int)byte[]
    61: astore        5
    63: aload         5
    65: ifnull        80
    68: aload_0       
    69: iconst_0      
    70: putfield      #2          // coder:byte
    73: aload_0       
    74: aload         5
    76: putfield      #1          // value:byte[]
    79: return        
    80: aload_0       
    81: iconst_1      
    82: putfield      #2          // coder:byte
    85: aload_0       
    86: aload_3       
    87: iconst_0      
    88: iload         4
    90: iconst_1      
    91: ishl          
    92: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    95: putfield      #1          // value:byte[]
    98: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B64" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction [vstack:0|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@32f57492 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   50  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4783) [bci: 0]
locals: rsi|QWORD[.] r11|QWORD[.] - - - - 
>@ <|@ instruction rdi|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction r8|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   60  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   62  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdi|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B64 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607182323057074616
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rdi|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B1" "B35" 
    successors "B37" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD[.] + 16] trueDestinationProbability: 0.9999908853703156 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B60 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B42" 
    xhandlers
    flags 
    probability 4607182336702731707
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4785) [bci: 13]
stack: r10|DWORD 
locals: rsi|QWORD[.] r11|QWORD[.] - r9|QWORD[.] - - 
>@ <|@ instruction r8|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD state [bci:13] <|@ <|@
      nr  108  <|@ instruction MOVB x: [rsi|QWORD[.] + 16] y: 0 size: BYTE <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.2541630105061688 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  150  <|@ instruction rdi|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  154  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  156  <|@ instruction rdx|QWORD = ADD (x: rdi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B51" 
    xhandlers
    flags 
    probability 4604825882278563758
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  192  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r11|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  194  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r11|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  196  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r11|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  198  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  200  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  202  <|@ instruction MOV (x: [r11|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  206  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B51 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4604759375651230885
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  216  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B49" 
    successors "B49" "B50" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4634844288894646813
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4634792850175069044
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction MOV x: [r11|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  248  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604759375651230886
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4604825882278563759
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  292  <|@ instruction rdi|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: > <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B58" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction rdx|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction r10|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  346  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  348  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  350  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  352  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  382  <|@ instruction r11|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  386  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  388  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  390  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4598204386423092713
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  420  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  422  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  424  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  426  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  428  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  430  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  468  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  470  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  472  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  476  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B41" "B58" 
    successors "B62" 
    xhandlers
    flags 
    probability 4607182336702731708
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr  594  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr  596  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  598  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr  600  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 4575248858818943354
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  642  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  644  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  646  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  650  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:27] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4575162870452290749
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  678  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4568006969118877196
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  682  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  706  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  710  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:27] <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  712  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction r10|QWORD = MOV input: [r11|QWORD[.]] size: QWORD <|@ <|@
      nr  732  <|@ instruction rcx|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr  734  <|@ instruction BITTESTANDBRANCH value: r10|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B2 -> B3 falseDestination: B2 -> B8 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4532329488911171509
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction r10|QWORD = OR x: r10|QWORD y: 1 size: QWORD <|@ <|@
      nr  766  <|@ instruction MOV (x: [rcx|QWORD], y: r10|QWORD) size: QWORD <|@ <|@
      nr  768  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD[.]], cmpValue: rax|QWORD, newValue: rcx|QWORD) accessKind: QWORD <|@ <|@
      nr  774  <|@ instruction CMPBRANCH (x: rax|QWORD, y: r10|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4532267370277133279
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B4" "B6" "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532382201905571021
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  798  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr  800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction r10|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr  820  <|@ instruction rsi|QWORD = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr  822  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  824  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4529143557278551352
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction rax|QWORD = MOV input: [r11|QWORD[.]] size: QWORD <|@ <|@
      nr  840  <|@ instruction BITTESTANDBRANCH value: rax|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B19 -> B20 falseDestination: B19 -> B21 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529068261964565618
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD <|@ <|@
      nr  870  <|@ instruction rsi|DWORD = SETCC condition: = <|@ <|@
      nr  872  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B20" "B27" 
    successors "B29" "B31" 
    xhandlers
    flags 
    probability 4529074299895794134
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD[.] + 17] trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction MOVB x: [rbx|QWORD[.] + 16] y: 1 size: BYTE <|@ <|@
      nr 1042  <|@ instruction r10|DWORD = SHL value: r10|DWORD size: DWORD <|@ <|@
      nr 1044  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1046  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1048  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1050  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4800) [bci: 92]
stack: vstack:2|QWORD[.] 
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOfRange(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:92] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1054  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rbx|QWORD[.] + 20], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1056  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr 1058  <|@ instruction MOV (x: [rbx|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1060  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rbx|QWORD[.], ~newValue: rax|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1062  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B34" 
    xhandlers
    flags 
    probability 4526633713479026896
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B18" "B23" "B33" "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4530432362446083730
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr 1086  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B25" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524572191115640556
    begin_IR
      LIR
      nr 1098  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1116  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1118  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr 1120  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B30" 
    successors "B36" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1130  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4502623928274233274
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction MOV x: [rcx|QWORD] y: 3 size: QWORD <|@ <|@
      nr 1148  <|@ instruction rsi|QWORD = MOV input: [r10|QWORD + 62] size: QWORD <|@ <|@
      nr 1150  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4501820778258385448
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1174  <|@ instruction rax|QWORD = CAS (address: [r10|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr 1176  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4501097943244122404
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4502543613272648492
    begin_IR
      LIR
      nr 1188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr 1202  <|@ instruction TESTCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B14" 
    xhandlers
    flags 
    probability 4502464101421079557
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction MOV x: [rcx|QWORD] y: 0 size: QWORD <|@ <|@
      nr 1216  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B33" 
    xhandlers
    flags 
    probability 4499411328210841968
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction rdi|QWORD = MOV input: [r11|QWORD[.]] size: QWORD <|@ <|@
      nr 1234  <|@ instruction rdx|QWORD = MOV input: [rdi|QWORD + 134] size: QWORD <|@ <|@
      nr 1236  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4499363139209891098
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction rax|QWORD = MOV input: [rdi|QWORD + 150] size: QWORD <|@ <|@
      nr 1254  <|@ instruction rax|QWORD = OR (x: rax|QWORD, ~y: [rdi|QWORD + 142]) size: QWORD <|@ <|@
      nr 1256  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4498676108457829474
    begin_IR
      LIR
      nr 1258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction MOV x: [rdi|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr 1270  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" "B15" 
    xhandlers
    flags 
    probability 4487506829360426131
    begin_IR
      LIR
      nr 1272  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4484288269758412157
    begin_IR
      LIR
      nr 1284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4486864309347747871
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4484211167356890766
    begin_IR
      LIR
      nr 1304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4483447853581828992
    begin_IR
      LIR
      nr 1316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction MOV x: [rdi|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr 1332  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr 1334  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4482760871184273395
    begin_IR
      LIR
      nr 1336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1364  <|@ instruction rax|QWORD = CAS (address: [rdi|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr 1366  <|@ instruction rsi|DWORD = SETCC condition: = <|@ <|@
      nr 1368  <|@ instruction rsi|DWORD = XOR x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 1370  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4481718189707699113
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction INC value: [r10|QWORD + 134] size: QWORD <|@ <|@
      nr 1384  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4472659588851943866
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B7" "B15" "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4490722176362376714
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1414  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1416  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
locals: r11|QWORD[.] 
locks: monitor[r11|QWORD[.], vstack:0|QWORD] 
java.lang.String.<init>(String.java:4785) [bci: 10]
locals: rbx|QWORD[.] r11|QWORD[.] - r9|QWORD[.] - - 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0, 10] <|@ <|@
      nr 1418  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B34" 
    xhandlers
    flags 
    probability 4469235422845872850
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction rdx|QWORD = DEC value: rdx|QWORD size: QWORD <|@ <|@
      nr 1434  <|@ instruction MOV (x: [rdi|QWORD + 134], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1436  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" 
    xhandlers
    flags 
    probability 4469173740924655728
    begin_IR
      LIR
      nr 1438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 4468563089904606309
    begin_IR
      LIR
      nr 1448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction MOV x: [r15|QWORD + 1156] y: -63763 size: DWORD <|@ <|@
      nr 1476  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1478  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4785) [bci: 13]
stack: r10|DWORD 
locals: rbx|QWORD[.] r11|QWORD[.] - r9|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:13] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15667 size: DWORD <|@ <|@
      nr 1498  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1500  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4783) [bci: 0]
locals: rbx|QWORD[.] r11|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-61721|0xffffffffffff0ee7] // MoveResolver resolve mapping <|@ <|@
      nr 1510  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-62745|0xffffffffffff0ae7] // MoveResolver resolve mapping <|@ <|@
      nr 1520  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-59667|0xffffffffffff16ed] // MoveResolver resolve mapping <|@ <|@
      nr 1530  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B43" "B54" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1550  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1552  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_1       
     5: invokevirtual #142        // java.lang.AbstractStringBuilder.getValue:()byte[]
     8: astore_3      
     9: aload_1       
    10: invokevirtual #141        // java.lang.AbstractStringBuilder.length:()int
    13: istore        4
    15: aload_1       
    16: invokevirtual #292        // java.lang.AbstractStringBuilder.isLatin1:()boolean
    19: ifeq          41
    22: aload_0       
    23: iconst_0      
    24: putfield      #2          // coder:byte
    27: aload_0       
    28: aload_3       
    29: iconst_0      
    30: iload         4
    32: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    35: putfield      #1          // value:byte[]
    38: goto          98
    41: getstatic     #8          // COMPACT_STRINGS:boolean
    44: ifeq          80
    47: aload_1       
    48: getfield      #293        // java.lang.AbstractStringBuilder.maybeLatin1:boolean
    51: ifeq          80
    54: aload_3       
    55: iconst_0      
    56: iload         4
    58: invokestatic  #294        // java.lang.StringUTF16.compress:(byte[], int, int)byte[]
    61: astore        5
    63: aload         5
    65: ifnull        80
    68: aload_0       
    69: iconst_0      
    70: putfield      #2          // coder:byte
    73: aload_0       
    74: aload         5
    76: putfield      #1          // value:byte[]
    79: return        
    80: aload_0       
    81: iconst_1      
    82: putfield      #2          // coder:byte
    85: aload_0       
    86: aload_3       
    87: iconst_0      
    88: iload         4
    90: iconst_1      
    91: ishl          
    92: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    95: putfield      #1          // value:byte[]
    98: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B64" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction [vstack:0|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@32f57492 slotKind: QWORD <|@ <|@
      nr   48  <|@ instruction vstack:2|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4783) [bci: 0]
locals: rsi|QWORD[.] r11|QWORD[.] - - - - 
>@ <|@ instruction rdi|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction r8|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   60  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   62  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdi|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B64 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607182323057074616
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rdi|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B1" "B35" 
    successors "B37" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD[.] + 16] trueDestinationProbability: 0.9999908853703156 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B60 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B42" 
    xhandlers
    flags 
    probability 4607182336702731707
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4785) [bci: 13]
stack: r10|DWORD 
locals: rsi|QWORD[.] r11|QWORD[.] - r9|QWORD[.] - - 
>@ <|@ instruction r8|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD state [bci:13] <|@ <|@
      nr  690  <|@ instruction MOVB x: [rsi|QWORD[.] + 16] y: 0 size: BYTE <|@ <|@
      nr  692  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.2541630105061688 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  910  <|@ instruction rdi|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  912  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  914  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  916  <|@ instruction rdx|QWORD = ADD (x: rdi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  918  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B51" 
    xhandlers
    flags 
    probability 4604825882278563758
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  990  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r11|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  992  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r11|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  994  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r11|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  996  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  998  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr 1000  <|@ instruction MOV (x: [r11|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr 1004  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B51 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4604759375651230885
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr 1016  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B49" 
    successors "B49" "B50" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4634844288894646813
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4634792850175069044
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction MOV x: [r11|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr 1048  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr 1050  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604759375651230886
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4604825882278563759
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1102  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1120  <|@ instruction rdi|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: > <|@ <|@
      nr 1122  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B58" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1224  <|@ instruction rdx|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1226  <|@ instruction r10|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1228  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1230  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1232  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1234  <|@ instruction vstack:1|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1236  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1238  <|@ instruction r11|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1240  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1242  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  720  <|@ instruction r11|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  724  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  726  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  728  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4598204386423092713
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  790  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  792  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  794  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  796  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  798  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  800  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  840  <|@ instruction vstack:4|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  844  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  846  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  850  <|@ instruction r11|QWORD[.] = MOVE input: vstack:4|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  854  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B41" "B58" 
    successors "B62" 
    xhandlers
    flags 
    probability 4607182336702731708
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1360  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr 1362  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1364  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1366  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 4575248858818943354
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  946  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  950  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:27] <|@ <|@
      nr  952  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4575162870452290749
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1064  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1086  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4568006969118877196
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  758  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:27] <|@ <|@
      nr  760  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction r10|QWORD = MOV input: [r11|QWORD[.]] size: QWORD <|@ <|@
      nr  100  <|@ instruction rcx|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr  102  <|@ instruction BITTESTANDBRANCH value: r10|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B2 -> B3 falseDestination: B2 -> B8 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4532329488911171509
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction r10|QWORD = OR x: r10|QWORD y: 1 size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV (x: [rcx|QWORD], y: r10|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD[.]], cmpValue: rax|QWORD, newValue: rcx|QWORD) accessKind: QWORD <|@ <|@
      nr  140  <|@ instruction CMPBRANCH (x: rax|QWORD, y: r10|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4532267370277133279
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B4" "B6" "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532382201905571021
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction r10|QWORD = STACKLEA slot: vstack:0|QWORD <|@ <|@
      nr  352  <|@ instruction rsi|QWORD = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr  354  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  356  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4529143557278551352
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction rax|QWORD = MOV input: [r11|QWORD[.]] size: QWORD <|@ <|@
      nr  382  <|@ instruction BITTESTANDBRANCH value: rax|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B19 -> B20 falseDestination: B19 -> B21 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529068261964565618
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD <|@ <|@
      nr  412  <|@ instruction rsi|DWORD = SETCC condition: = <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B20" "B27" 
    successors "B29" "B31" 
    xhandlers
    flags 
    probability 4529074299895794134
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1370  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD[.] + 17] trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr 1382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction MOVB x: [rbx|QWORD[.] + 16] y: 1 size: BYTE <|@ <|@
      nr 1516  <|@ instruction r10|DWORD = SHL value: r10|DWORD size: DWORD <|@ <|@
      nr 1518  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1520  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1522  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1524  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4800) [bci: 92]
stack: vstack:2|QWORD[.] 
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOfRange(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:92] <|@ <|@
      nr 1526  <|@ instruction rbx|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1528  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rbx|QWORD[.] + 20], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1530  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr 1532  <|@ instruction MOV (x: [rbx|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1534  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rbx|QWORD[.], ~newValue: rax|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1536  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B34" 
    xhandlers
    flags 
    probability 4526633713479026896
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B18" "B23" "B33" "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4530432362446083730
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  644  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B25" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524572191115640556
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B30" 
    successors "B36" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4502623928274233274
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction MOV x: [rcx|QWORD] y: 3 size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = MOV input: [r10|QWORD + 62] size: QWORD <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4501820778258385448
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  234  <|@ instruction rax|QWORD = CAS (address: [r10|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  236  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4501097943244122404
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4502543613272648492
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr  166  <|@ instruction TESTCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B14" 
    xhandlers
    flags 
    probability 4502464101421079557
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction MOV x: [rcx|QWORD] y: 0 size: QWORD <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B33" 
    xhandlers
    flags 
    probability 4499411328210841968
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction rdi|QWORD = MOV input: [r11|QWORD[.]] size: QWORD <|@ <|@
      nr  432  <|@ instruction rdx|QWORD = MOV input: [rdi|QWORD + 134] size: QWORD <|@ <|@
      nr  434  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4499363139209891098
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction rax|QWORD = MOV input: [rdi|QWORD + 150] size: QWORD <|@ <|@
      nr  452  <|@ instruction rax|QWORD = OR (x: rax|QWORD, ~y: [rdi|QWORD + 142]) size: QWORD <|@ <|@
      nr  454  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4498676108457829474
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction MOV x: [rdi|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" "B15" 
    xhandlers
    flags 
    probability 4487506829360426131
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4484288269758412157
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4486864309347747871
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4484211167356890766
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4483447853581828992
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction MOV x: [rdi|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr  508  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  510  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4482760871184273395
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  540  <|@ instruction rax|QWORD = CAS (address: [rdi|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|DWORD = SETCC condition: = <|@ <|@
      nr  544  <|@ instruction rsi|DWORD = XOR x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  546  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4481718189707699113
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction INC value: [r10|QWORD + 134] size: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4472659588851943866
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B7" "B15" "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4490722176362376714
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  328  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
locals: r11|QWORD[.] 
locks: monitor[r11|QWORD[.], vstack:0|QWORD] 
java.lang.String.<init>(String.java:4785) [bci: 10]
locals: rbx|QWORD[.] r11|QWORD[.] - r9|QWORD[.] - - 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0, 10] <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B34" 
    xhandlers
    flags 
    probability 4469235422845872850
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction rdx|QWORD = DEC value: rdx|QWORD size: QWORD <|@ <|@
      nr  628  <|@ instruction MOV (x: [rdi|QWORD + 134], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  630  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" 
    xhandlers
    flags 
    probability 4469173740924655728
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 4468563089904606309
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction MOV x: [r15|QWORD + 1156] y: -63763 size: DWORD <|@ <|@
      nr 1574  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1576  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4785) [bci: 13]
stack: r10|DWORD 
locals: rbx|QWORD[.] r11|QWORD[.] - r9|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:13] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1580  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15667 size: DWORD <|@ <|@
      nr 1598  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1600  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4783) [bci: 0]
locals: rbx|QWORD[.] r11|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1126  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1136  <|@ instruction r11|DWORD = MOVE input: int[-61721|0xffffffffffff0ee7] <|@ <|@
      nr 1138  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1164  <|@ instruction r11|DWORD = MOVE input: int[-62745|0xffffffffffff0ae7] <|@ <|@
      nr 1166  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  880  <|@ instruction r11|DWORD = MOVE input: int[-59667|0xffffffffffff16ed] <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B43" "B54" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1186  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1188  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_1       
     5: invokevirtual #142        // java.lang.AbstractStringBuilder.getValue:()byte[]
     8: astore_3      
     9: aload_1       
    10: invokevirtual #141        // java.lang.AbstractStringBuilder.length:()int
    13: istore        4
    15: aload_1       
    16: invokevirtual #292        // java.lang.AbstractStringBuilder.isLatin1:()boolean
    19: ifeq          41
    22: aload_0       
    23: iconst_0      
    24: putfield      #2          // coder:byte
    27: aload_0       
    28: aload_3       
    29: iconst_0      
    30: iload         4
    32: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    35: putfield      #1          // value:byte[]
    38: goto          98
    41: getstatic     #8          // COMPACT_STRINGS:boolean
    44: ifeq          80
    47: aload_1       
    48: getfield      #293        // java.lang.AbstractStringBuilder.maybeLatin1:boolean
    51: ifeq          80
    54: aload_3       
    55: iconst_0      
    56: iload         4
    58: invokestatic  #294        // java.lang.StringUTF16.compress:(byte[], int, int)byte[]
    61: astore        5
    63: aload         5
    65: ifnull        80
    68: aload_0       
    69: iconst_0      
    70: putfield      #2          // coder:byte
    73: aload_0       
    74: aload         5
    76: putfield      #1          // value:byte[]
    79: return        
    80: aload_0       
    81: iconst_1      
    82: putfield      #2          // coder:byte
    85: aload_0       
    86: aload_3       
    87: iconst_0      
    88: iload         4
    90: iconst_1      
    91: ishl          
    92: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    95: putfield      #1          // value:byte[]
    98: return        
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [0, 1600[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[vstack:1|q]" vstack:1|q -1 [1234, 1238[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[vstack:2|q]" vstack:2|q -1 [48, 1526[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[vstack:4|q]" vstack:4|q -1 [840, 850[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:32|q]" vstack:0|q -1 [0, 1600[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[stack:48|q]" vstack:1|q -1 [1234, 1238[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[stack:40|q]" vstack:2|q -1 [48, 1526[ "NOT_SUPPORTED"
  vstack:4|q QWORD "[stack:48|q]" vstack:4|q -1 [840, 850[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B64" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@32f57492 slotKind: QWORD <|@ <|@
      nr   48  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4783) [bci: 0]
locals: rsi|QWORD[.] r11|QWORD[.] - - - - 
>@ <|@ instruction rdi|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction r8|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   60  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   62  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdi|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B64 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607182323057074616
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rdi|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B1" "B35" 
    successors "B37" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD[.] + 16] trueDestinationProbability: 0.9999908853703156 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B60 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B42" 
    xhandlers
    flags 
    probability 4607182336702731707
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4785) [bci: 13]
stack: r10|DWORD 
locals: rsi|QWORD[.] r11|QWORD[.] - r9|QWORD[.] - - 
>@ <|@ instruction r8|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD state [bci:13] <|@ <|@
      nr  690  <|@ instruction MOVB x: [rsi|QWORD[.] + 16] y: 0 size: BYTE <|@ <|@
      nr  692  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.2541630105061688 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  910  <|@ instruction rdi|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  912  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  914  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  916  <|@ instruction rdx|QWORD = ADD (x: rdi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  918  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B51" 
    xhandlers
    flags 
    probability 4604825882278563758
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  990  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r11|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  992  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r11|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  994  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r11|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  996  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  998  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr 1000  <|@ instruction MOV (x: [r11|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr 1004  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B51 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4604759375651230885
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr 1016  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B49" 
    successors "B49" "B50" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4634844288894646813
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4634792850175069044
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction MOV x: [r11|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr 1048  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr 1050  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604759375651230886
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4604825882278563759
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1102  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1120  <|@ instruction rdi|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: > <|@ <|@
      nr 1122  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B58" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1224  <|@ instruction rdx|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1226  <|@ instruction r10|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1228  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1230  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1232  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1234  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1236  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1238  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1240  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1242  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  720  <|@ instruction r11|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  724  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  726  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  728  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4598204386423092713
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  790  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  792  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  794  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  796  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  798  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  800  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  840  <|@ instruction stack:48|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  844  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  846  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  850  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  854  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B41" "B58" 
    successors "B62" 
    xhandlers
    flags 
    probability 4607182336702731708
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1360  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr 1362  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1364  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1366  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 4575248858818943354
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  946  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  950  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:27] <|@ <|@
      nr  952  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4575162870452290749
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1064  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1086  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4568006969118877196
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction rbx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  758  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:27] <|@ <|@
      nr  760  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction r10|QWORD = MOV input: [r11|QWORD[.]] size: QWORD <|@ <|@
      nr  100  <|@ instruction rcx|QWORD = STACKLEA slot: stack:32|QWORD <|@ <|@
      nr  102  <|@ instruction BITTESTANDBRANCH value: r10|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B2 -> B3 falseDestination: B2 -> B8 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4532329488911171509
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction r10|QWORD = OR x: r10|QWORD y: 1 size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV (x: [rcx|QWORD], y: r10|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD[.]], cmpValue: rax|QWORD, newValue: rcx|QWORD) accessKind: QWORD <|@ <|@
      nr  140  <|@ instruction CMPBRANCH (x: rax|QWORD, y: r10|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4532267370277133279
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B4" "B6" "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532382201905571021
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction r10|QWORD = STACKLEA slot: stack:32|QWORD <|@ <|@
      nr  352  <|@ instruction rsi|QWORD = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr  354  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  356  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4529143557278551352
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction rax|QWORD = MOV input: [r11|QWORD[.]] size: QWORD <|@ <|@
      nr  382  <|@ instruction BITTESTANDBRANCH value: rax|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B19 -> B20 falseDestination: B19 -> B21 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529068261964565618
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD <|@ <|@
      nr  412  <|@ instruction rsi|DWORD = SETCC condition: = <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B20" "B27" 
    successors "B29" "B31" 
    xhandlers
    flags 
    probability 4529074299895794134
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1370  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD[.] + 17] trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr 1382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction MOVB x: [rbx|QWORD[.] + 16] y: 1 size: BYTE <|@ <|@
      nr 1516  <|@ instruction r10|DWORD = SHL value: r10|DWORD size: DWORD <|@ <|@
      nr 1518  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1520  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1522  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1524  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4800) [bci: 92]
stack: stack:40|QWORD[.] 
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOfRange(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:92] <|@ <|@
      nr 1526  <|@ instruction rbx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1528  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rbx|QWORD[.] + 20], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1530  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr 1532  <|@ instruction MOV (x: [rbx|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1534  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rbx|QWORD[.], ~newValue: rax|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1536  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B34" 
    xhandlers
    flags 
    probability 4526633713479026896
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B18" "B23" "B33" "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4530432362446083730
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  644  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B25" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524572191115640556
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B30" 
    successors "B36" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4502623928274233274
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction MOV x: [rcx|QWORD] y: 3 size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = MOV input: [r10|QWORD + 62] size: QWORD <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4501820778258385448
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  234  <|@ instruction rax|QWORD = CAS (address: [r10|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  236  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4501097943244122404
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4502543613272648492
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr  166  <|@ instruction TESTCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B14" 
    xhandlers
    flags 
    probability 4502464101421079557
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction MOV x: [rcx|QWORD] y: 0 size: QWORD <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B33" 
    xhandlers
    flags 
    probability 4499411328210841968
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction rdi|QWORD = MOV input: [r11|QWORD[.]] size: QWORD <|@ <|@
      nr  432  <|@ instruction rdx|QWORD = MOV input: [rdi|QWORD + 134] size: QWORD <|@ <|@
      nr  434  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4499363139209891098
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction rax|QWORD = MOV input: [rdi|QWORD + 150] size: QWORD <|@ <|@
      nr  452  <|@ instruction rax|QWORD = OR (x: rax|QWORD, ~y: [rdi|QWORD + 142]) size: QWORD <|@ <|@
      nr  454  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4498676108457829474
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction MOV x: [rdi|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" "B15" 
    xhandlers
    flags 
    probability 4487506829360426131
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4484288269758412157
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4486864309347747871
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4484211167356890766
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4483447853581828992
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction MOV x: [rdi|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr  508  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  510  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4482760871184273395
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  540  <|@ instruction rax|QWORD = CAS (address: [rdi|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|DWORD = SETCC condition: = <|@ <|@
      nr  544  <|@ instruction rsi|DWORD = XOR x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  546  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4481718189707699113
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction INC value: [r10|QWORD + 134] size: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4472659588851943866
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B7" "B15" "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4490722176362376714
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  328  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
locals: r11|QWORD[.] 
locks: monitor[r11|QWORD[.], stack:32|QWORD] 
java.lang.String.<init>(String.java:4785) [bci: 10]
locals: rbx|QWORD[.] r11|QWORD[.] - r9|QWORD[.] - - 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0, 10] <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B34" 
    xhandlers
    flags 
    probability 4469235422845872850
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction rdx|QWORD = DEC value: rdx|QWORD size: QWORD <|@ <|@
      nr  628  <|@ instruction MOV (x: [rdi|QWORD + 134], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  630  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" 
    xhandlers
    flags 
    probability 4469173740924655728
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 4468563089904606309
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction MOV x: [r15|QWORD + 1156] y: -63763 size: DWORD <|@ <|@
      nr 1574  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1576  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4785) [bci: 13]
stack: r10|DWORD 
locals: rbx|QWORD[.] r11|QWORD[.] - r9|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:13] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1580  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15667 size: DWORD <|@ <|@
      nr 1598  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1600  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4783) [bci: 0]
locals: rbx|QWORD[.] r11|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1126  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1136  <|@ instruction r11|DWORD = MOVE input: int[-61721|0xffffffffffff0ee7] <|@ <|@
      nr 1138  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1164  <|@ instruction r11|DWORD = MOVE input: int[-62745|0xffffffffffff0ae7] <|@ <|@
      nr 1166  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  880  <|@ instruction r11|DWORD = MOVE input: int[-59667|0xffffffffffff16ed] <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B43" "B54" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1186  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1188  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_1       
     5: invokevirtual #142        // java.lang.AbstractStringBuilder.getValue:()byte[]
     8: astore_3      
     9: aload_1       
    10: invokevirtual #141        // java.lang.AbstractStringBuilder.length:()int
    13: istore        4
    15: aload_1       
    16: invokevirtual #292        // java.lang.AbstractStringBuilder.isLatin1:()boolean
    19: ifeq          41
    22: aload_0       
    23: iconst_0      
    24: putfield      #2          // coder:byte
    27: aload_0       
    28: aload_3       
    29: iconst_0      
    30: iload         4
    32: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    35: putfield      #1          // value:byte[]
    38: goto          98
    41: getstatic     #8          // COMPACT_STRINGS:boolean
    44: ifeq          80
    47: aload_1       
    48: getfield      #293        // java.lang.AbstractStringBuilder.maybeLatin1:boolean
    51: ifeq          80
    54: aload_3       
    55: iconst_0      
    56: iload         4
    58: invokestatic  #294        // java.lang.StringUTF16.compress:(byte[], int, int)byte[]
    61: astore        5
    63: aload         5
    65: ifnull        80
    68: aload_0       
    69: iconst_0      
    70: putfield      #2          // coder:byte
    73: aload_0       
    74: aload         5
    76: putfield      #1          // value:byte[]
    79: return        
    80: aload_0       
    81: iconst_1      
    82: putfield      #2          // coder:byte
    85: aload_0       
    86: aload_3       
    87: iconst_0      
    88: iload         4
    90: iconst_1      
    91: ishl          
    92: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    95: putfield      #1          // value:byte[]
    98: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B64" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@32f57492 slotKind: QWORD <|@ <|@
      nr   48  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4783) [bci: 0]
locals: rsi|QWORD[.] r11|QWORD[.] - - - - 
>@ <|@ instruction rdi|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction r8|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   60  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   62  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdi|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B64 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607182323057074616
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rdi|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B1" "B35" 
    successors "B37" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD[.] + 16] trueDestinationProbability: 0.9999908853703156 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B60 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B42" 
    xhandlers
    flags 
    probability 4607182336702731707
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4785) [bci: 13]
stack: r10|DWORD 
locals: rsi|QWORD[.] r11|QWORD[.] - r9|QWORD[.] - - 
>@ <|@ instruction r8|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD state [bci:13] <|@ <|@
      nr  690  <|@ instruction MOVB x: [rsi|QWORD[.] + 16] y: 0 size: BYTE <|@ <|@
      nr  692  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.2541630105061688 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  910  <|@ instruction rdi|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  912  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  914  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  916  <|@ instruction rdx|QWORD = ADD (x: rdi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  918  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B51" 
    xhandlers
    flags 
    probability 4604825882278563758
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  990  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r11|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  992  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r11|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  994  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r11|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  996  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  998  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr 1000  <|@ instruction MOV (x: [r11|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr 1004  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B51 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4604759375651230885
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr 1016  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B49" 
    successors "B49" "B50" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4634844288894646813
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4634792850175069044
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction MOV x: [r11|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr 1048  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr 1050  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604759375651230886
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4604825882278563759
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1102  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1120  <|@ instruction rdi|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: > <|@ <|@
      nr 1122  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B58" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1224  <|@ instruction rdx|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1226  <|@ instruction r10|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1228  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1230  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1232  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1234  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1236  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1238  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1240  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1242  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  720  <|@ instruction r11|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  724  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  726  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  728  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4598204386423092713
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  790  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  792  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  794  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  796  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  798  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  800  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  840  <|@ instruction stack:48|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  844  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  846  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  850  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  854  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B41" "B58" 
    successors "B62" 
    xhandlers
    flags 
    probability 4607182336702731708
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1360  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr 1362  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1364  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1366  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 4575248858818943354
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  946  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  950  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:27] <|@ <|@
      nr  952  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4575162870452290749
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1064  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1086  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4568006969118877196
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction rbx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  758  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:27] <|@ <|@
      nr  760  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction r10|QWORD = MOV input: [r11|QWORD[.]] size: QWORD <|@ <|@
      nr  100  <|@ instruction rcx|QWORD = STACKLEA slot: stack:32|QWORD <|@ <|@
      nr  102  <|@ instruction BITTESTANDBRANCH value: r10|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B2 -> B3 falseDestination: B2 -> B8 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4532329488911171509
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction r10|QWORD = OR x: r10|QWORD y: 1 size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV (x: [rcx|QWORD], y: r10|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD[.]], cmpValue: rax|QWORD, newValue: rcx|QWORD) accessKind: QWORD <|@ <|@
      nr  140  <|@ instruction CMPBRANCH (x: rax|QWORD, y: r10|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4532267370277133279
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B4" "B6" "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532382201905571021
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction r10|QWORD = STACKLEA slot: stack:32|QWORD <|@ <|@
      nr  352  <|@ instruction rsi|QWORD = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr  354  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  356  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4529143557278551352
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction rax|QWORD = MOV input: [r11|QWORD[.]] size: QWORD <|@ <|@
      nr  382  <|@ instruction BITTESTANDBRANCH value: rax|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B19 -> B20 falseDestination: B19 -> B21 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529068261964565618
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD <|@ <|@
      nr  412  <|@ instruction rsi|DWORD = SETCC condition: = <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B20" "B27" 
    successors "B29" "B31" 
    xhandlers
    flags 
    probability 4529074299895794134
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1370  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD[.] + 17] trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr 1382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction MOVB x: [rbx|QWORD[.] + 16] y: 1 size: BYTE <|@ <|@
      nr 1516  <|@ instruction r10|DWORD = SHL value: r10|DWORD size: DWORD <|@ <|@
      nr 1518  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1520  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1522  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1524  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4800) [bci: 92]
stack: stack:40|QWORD[.] 
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOfRange(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:92] <|@ <|@
      nr 1526  <|@ instruction rbx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1528  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rbx|QWORD[.] + 20], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1530  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr 1532  <|@ instruction MOV (x: [rbx|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1534  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rbx|QWORD[.], ~newValue: rax|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1536  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B34" 
    xhandlers
    flags 
    probability 4526633713479026896
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B18" "B23" "B33" "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4530432362446083730
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  644  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B25" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524572191115640556
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B30" 
    successors "B36" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4502623928274233274
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction MOV x: [rcx|QWORD] y: 3 size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = MOV input: [r10|QWORD + 62] size: QWORD <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4501820778258385448
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  234  <|@ instruction rax|QWORD = CAS (address: [r10|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  236  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4501097943244122404
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4502543613272648492
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr  166  <|@ instruction TESTCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B14" 
    xhandlers
    flags 
    probability 4502464101421079557
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction MOV x: [rcx|QWORD] y: 0 size: QWORD <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B33" 
    xhandlers
    flags 
    probability 4499411328210841968
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction rdi|QWORD = MOV input: [r11|QWORD[.]] size: QWORD <|@ <|@
      nr  432  <|@ instruction rdx|QWORD = MOV input: [rdi|QWORD + 134] size: QWORD <|@ <|@
      nr  434  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4499363139209891098
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction rax|QWORD = MOV input: [rdi|QWORD + 150] size: QWORD <|@ <|@
      nr  452  <|@ instruction rax|QWORD = OR (x: rax|QWORD, ~y: [rdi|QWORD + 142]) size: QWORD <|@ <|@
      nr  454  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4498676108457829474
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction MOV x: [rdi|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" "B15" 
    xhandlers
    flags 
    probability 4487506829360426131
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4484288269758412157
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4486864309347747871
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4484211167356890766
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4483447853581828992
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction MOV x: [rdi|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr  508  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  510  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4482760871184273395
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  540  <|@ instruction rax|QWORD = CAS (address: [rdi|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|DWORD = SETCC condition: = <|@ <|@
      nr  544  <|@ instruction rsi|DWORD = XOR x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  546  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4481718189707699113
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction INC value: [r10|QWORD + 134] size: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4472659588851943866
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B7" "B15" "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4490722176362376714
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  328  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
locals: r11|QWORD[.] 
locks: monitor[r11|QWORD[.], stack:32|QWORD] 
java.lang.String.<init>(String.java:4785) [bci: 10]
locals: rbx|QWORD[.] r11|QWORD[.] - r9|QWORD[.] - - 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0, 10] <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B34" 
    xhandlers
    flags 
    probability 4469235422845872850
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction rdx|QWORD = DEC value: rdx|QWORD size: QWORD <|@ <|@
      nr  628  <|@ instruction MOV (x: [rdi|QWORD + 134], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  630  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" 
    xhandlers
    flags 
    probability 4469173740924655728
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 4468563089904606309
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction MOV x: [r15|QWORD + 1156] y: -63763 size: DWORD <|@ <|@
      nr 1574  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1576  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4785) [bci: 13]
stack: r10|DWORD 
locals: rbx|QWORD[.] r11|QWORD[.] - r9|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:13] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1580  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15667 size: DWORD <|@ <|@
      nr 1598  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1600  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4783) [bci: 0]
locals: rbx|QWORD[.] r11|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1126  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1136  <|@ instruction r11|DWORD = MOVE input: int[-61721|0xffffffffffff0ee7] <|@ <|@
      nr 1138  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1164  <|@ instruction r11|DWORD = MOVE input: int[-62745|0xffffffffffff0ae7] <|@ <|@
      nr 1166  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  880  <|@ instruction r11|DWORD = MOVE input: int[-59667|0xffffffffffff16ed] <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B43" "B54" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1186  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1188  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_1       
     5: invokevirtual #142        // java.lang.AbstractStringBuilder.getValue:()byte[]
     8: astore_3      
     9: aload_1       
    10: invokevirtual #141        // java.lang.AbstractStringBuilder.length:()int
    13: istore        4
    15: aload_1       
    16: invokevirtual #292        // java.lang.AbstractStringBuilder.isLatin1:()boolean
    19: ifeq          41
    22: aload_0       
    23: iconst_0      
    24: putfield      #2          // coder:byte
    27: aload_0       
    28: aload_3       
    29: iconst_0      
    30: iload         4
    32: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    35: putfield      #1          // value:byte[]
    38: goto          98
    41: getstatic     #8          // COMPACT_STRINGS:boolean
    44: ifeq          80
    47: aload_1       
    48: getfield      #293        // java.lang.AbstractStringBuilder.maybeLatin1:boolean
    51: ifeq          80
    54: aload_3       
    55: iconst_0      
    56: iload         4
    58: invokestatic  #294        // java.lang.StringUTF16.compress:(byte[], int, int)byte[]
    61: astore        5
    63: aload         5
    65: ifnull        80
    68: aload_0       
    69: iconst_0      
    70: putfield      #2          // coder:byte
    73: aload_0       
    74: aload         5
    76: putfield      #1          // value:byte[]
    79: return        
    80: aload_0       
    81: iconst_1      
    82: putfield      #2          // coder:byte
    85: aload_0       
    86: aload_3       
    87: iconst_0      
    88: iload         4
    90: iconst_1      
    91: ishl          
    92: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    95: putfield      #1          // value:byte[]
    98: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B64" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@32f57492 slotKind: QWORD <|@ <|@
      nr   48  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4783) [bci: 0]
locals: rsi|QWORD[.] r11|QWORD[.] - - - - 
>@ <|@ instruction rdi|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction r8|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   60  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   62  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdi|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B64 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607182323057074616
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rdi|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B1" "B35" 
    successors "B37" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD[.] + 16] trueDestinationProbability: 0.9999908853703156 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B60 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B42" 
    xhandlers
    flags 
    probability 4607182336702731707
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4785) [bci: 13]
stack: r10|DWORD 
locals: rsi|QWORD[.] r11|QWORD[.] - r9|QWORD[.] - - 
>@ <|@ instruction r8|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD state [bci:13] <|@ <|@
      nr  690  <|@ instruction MOVB x: [rsi|QWORD[.] + 16] y: 0 size: BYTE <|@ <|@
      nr  692  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.2541630105061688 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  910  <|@ instruction rdi|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  912  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  914  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  916  <|@ instruction rdx|QWORD = ADD (x: rdi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  918  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B51" 
    xhandlers
    flags 
    probability 4604825882278563758
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  990  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r11|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  992  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r11|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  994  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r11|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  996  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  998  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr 1000  <|@ instruction MOV (x: [r11|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr 1004  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B51 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4604759375651230885
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr 1016  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B49" 
    successors "B49" "B50" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4634844288894646813
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4634792850175069044
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction MOV x: [r11|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr 1048  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr 1050  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604759375651230886
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4604825882278563759
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1102  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1120  <|@ instruction rdi|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: > <|@ <|@
      nr 1122  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B58" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1224  <|@ instruction rdx|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1226  <|@ instruction r10|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1228  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1230  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1232  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1234  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1236  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1242  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  720  <|@ instruction r11|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  724  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  726  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  728  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4598204386423092713
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  790  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  792  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  794  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  796  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  798  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  800  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  840  <|@ instruction stack:48|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  844  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  846  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  854  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B41" "B58" 
    successors "B62" 
    xhandlers
    flags 
    probability 4607182336702731708
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  850  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1360  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr 1362  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1364  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1366  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 4575248858818943354
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  946  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  950  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:27] <|@ <|@
      nr  952  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4575162870452290749
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1064  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1086  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4568006969118877196
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction rbx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  758  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:27] <|@ <|@
      nr  760  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction r10|QWORD = MOV input: [r11|QWORD[.]] size: QWORD <|@ <|@
      nr  100  <|@ instruction rcx|QWORD = STACKLEA slot: stack:32|QWORD <|@ <|@
      nr  102  <|@ instruction BITTESTANDBRANCH value: r10|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B2 -> B3 falseDestination: B2 -> B8 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4532329488911171509
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction r10|QWORD = OR x: r10|QWORD y: 1 size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV (x: [rcx|QWORD], y: r10|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD[.]], cmpValue: rax|QWORD, newValue: rcx|QWORD) accessKind: QWORD <|@ <|@
      nr  140  <|@ instruction CMPBRANCH (x: rax|QWORD, y: r10|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4532267370277133279
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B4" "B6" "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532382201905571021
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction r10|QWORD = STACKLEA slot: stack:32|QWORD <|@ <|@
      nr  352  <|@ instruction rsi|QWORD = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr  354  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  356  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4529143557278551352
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction rax|QWORD = MOV input: [r11|QWORD[.]] size: QWORD <|@ <|@
      nr  382  <|@ instruction BITTESTANDBRANCH value: rax|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B19 -> B20 falseDestination: B19 -> B21 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529068261964565618
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD <|@ <|@
      nr  412  <|@ instruction rsi|DWORD = SETCC condition: = <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B20" "B27" 
    successors "B29" "B31" 
    xhandlers
    flags 
    probability 4529074299895794134
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1370  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD[.] + 17] trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr 1382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction MOVB x: [rbx|QWORD[.] + 16] y: 1 size: BYTE <|@ <|@
      nr 1516  <|@ instruction r10|DWORD = SHL value: r10|DWORD size: DWORD <|@ <|@
      nr 1518  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1520  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1522  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1524  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4800) [bci: 92]
stack: stack:40|QWORD[.] 
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOfRange(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:92] <|@ <|@
      nr 1526  <|@ instruction rbx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1528  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rbx|QWORD[.] + 20], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1530  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr 1532  <|@ instruction MOV (x: [rbx|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1534  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rbx|QWORD[.], ~newValue: rax|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1536  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B34" 
    xhandlers
    flags 
    probability 4526633713479026896
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B18" "B23" "B33" "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4530432362446083730
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  644  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B25" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524572191115640556
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B30" 
    successors "B36" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4502623928274233274
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction MOV x: [rcx|QWORD] y: 3 size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = MOV input: [r10|QWORD + 62] size: QWORD <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4501820778258385448
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  234  <|@ instruction rax|QWORD = CAS (address: [r10|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  236  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4501097943244122404
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4502543613272648492
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr  166  <|@ instruction TESTCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B14" 
    xhandlers
    flags 
    probability 4502464101421079557
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction MOV x: [rcx|QWORD] y: 0 size: QWORD <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B33" 
    xhandlers
    flags 
    probability 4499411328210841968
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction rdi|QWORD = MOV input: [r11|QWORD[.]] size: QWORD <|@ <|@
      nr  432  <|@ instruction rdx|QWORD = MOV input: [rdi|QWORD + 134] size: QWORD <|@ <|@
      nr  434  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4499363139209891098
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction rax|QWORD = MOV input: [rdi|QWORD + 150] size: QWORD <|@ <|@
      nr  452  <|@ instruction rax|QWORD = OR (x: rax|QWORD, ~y: [rdi|QWORD + 142]) size: QWORD <|@ <|@
      nr  454  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4498676108457829474
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction MOV x: [rdi|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" "B15" 
    xhandlers
    flags 
    probability 4487506829360426131
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4484288269758412157
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4486864309347747871
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4484211167356890766
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4483447853581828992
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction MOV x: [rdi|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr  508  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  510  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4482760871184273395
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  540  <|@ instruction rax|QWORD = CAS (address: [rdi|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|DWORD = SETCC condition: = <|@ <|@
      nr  544  <|@ instruction rsi|DWORD = XOR x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  546  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4481718189707699113
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction INC value: [r10|QWORD + 134] size: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4472659588851943866
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B7" "B15" "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4490722176362376714
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  328  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
locals: r11|QWORD[.] 
locks: monitor[r11|QWORD[.], stack:32|QWORD] 
java.lang.String.<init>(String.java:4785) [bci: 10]
locals: rbx|QWORD[.] r11|QWORD[.] - r9|QWORD[.] - - 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0, 10] <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B34" 
    xhandlers
    flags 
    probability 4469235422845872850
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction rdx|QWORD = DEC value: rdx|QWORD size: QWORD <|@ <|@
      nr  628  <|@ instruction MOV (x: [rdi|QWORD + 134], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  630  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" 
    xhandlers
    flags 
    probability 4469173740924655728
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 4468563089904606309
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction MOV x: [r15|QWORD + 1156] y: -63763 size: DWORD <|@ <|@
      nr 1574  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1576  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4785) [bci: 13]
stack: r10|DWORD 
locals: rbx|QWORD[.] r11|QWORD[.] - r9|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:13] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1580  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15667 size: DWORD <|@ <|@
      nr 1598  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1600  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4783) [bci: 0]
locals: rbx|QWORD[.] r11|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1126  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1136  <|@ instruction r11|DWORD = MOVE input: int[-61721|0xffffffffffff0ee7] <|@ <|@
      nr 1138  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1164  <|@ instruction r11|DWORD = MOVE input: int[-62745|0xffffffffffff0ae7] <|@ <|@
      nr 1166  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  880  <|@ instruction r11|DWORD = MOVE input: int[-59667|0xffffffffffff16ed] <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B43" "B54" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1186  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1188  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_1       
     5: invokevirtual #142        // java.lang.AbstractStringBuilder.getValue:()byte[]
     8: astore_3      
     9: aload_1       
    10: invokevirtual #141        // java.lang.AbstractStringBuilder.length:()int
    13: istore        4
    15: aload_1       
    16: invokevirtual #292        // java.lang.AbstractStringBuilder.isLatin1:()boolean
    19: ifeq          41
    22: aload_0       
    23: iconst_0      
    24: putfield      #2          // coder:byte
    27: aload_0       
    28: aload_3       
    29: iconst_0      
    30: iload         4
    32: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    35: putfield      #1          // value:byte[]
    38: goto          98
    41: getstatic     #8          // COMPACT_STRINGS:boolean
    44: ifeq          80
    47: aload_1       
    48: getfield      #293        // java.lang.AbstractStringBuilder.maybeLatin1:boolean
    51: ifeq          80
    54: aload_3       
    55: iconst_0      
    56: iload         4
    58: invokestatic  #294        // java.lang.StringUTF16.compress:(byte[], int, int)byte[]
    61: astore        5
    63: aload         5
    65: ifnull        80
    68: aload_0       
    69: iconst_0      
    70: putfield      #2          // coder:byte
    73: aload_0       
    74: aload         5
    76: putfield      #1          // value:byte[]
    79: return        
    80: aload_0       
    81: iconst_1      
    82: putfield      #2          // coder:byte
    85: aload_0       
    86: aload_3       
    87: iconst_0      
    88: iload         4
    90: iconst_1      
    91: ishl          
    92: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    95: putfield      #1          // value:byte[]
    98: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B64" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@32f57492 slotKind: QWORD <|@ <|@
      nr   48  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4783) [bci: 0]
locals: rsi|QWORD[.] r11|QWORD[.] - - - - 
>@ <|@ instruction rdi|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction r8|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   60  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   62  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdi|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B64 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607182323057074616
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rdi|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B1" "B35" 
    successors "B37" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD[.] + 16] trueDestinationProbability: 0.9999908853703156 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B60 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B42" 
    xhandlers
    flags 
    probability 4607182336702731707
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4785) [bci: 13]
stack: r10|DWORD 
locals: rsi|QWORD[.] r11|QWORD[.] - r9|QWORD[.] - - 
>@ <|@ instruction r8|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD state [bci:13] <|@ <|@
      nr  690  <|@ instruction MOVB x: [rsi|QWORD[.] + 16] y: 0 size: BYTE <|@ <|@
      nr  692  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.2541630105061688 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  910  <|@ instruction rdi|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  912  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  914  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  916  <|@ instruction rdx|QWORD = ADD (x: rdi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  918  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B51" 
    xhandlers
    flags 
    probability 4604825882278563758
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  990  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r11|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  992  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r11|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  994  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r11|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  996  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  998  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr 1000  <|@ instruction MOV (x: [r11|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr 1004  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B51 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4604759375651230885
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr 1016  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B49" 
    successors "B49" "B50" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4634844288894646813
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4634792850175069044
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction MOV x: [r11|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr 1048  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr 1050  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604759375651230886
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4604825882278563759
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1102  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1120  <|@ instruction rdi|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: > <|@ <|@
      nr 1122  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B58" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1224  <|@ instruction rdx|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1226  <|@ instruction r10|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1228  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1230  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1232  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1234  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1236  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1242  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  720  <|@ instruction r11|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  724  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  726  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  728  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4598204386423092713
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  790  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  792  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  794  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  796  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  798  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  800  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  840  <|@ instruction stack:48|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  844  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  846  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  854  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B41" "B58" 
    successors "B62" 
    xhandlers
    flags 
    probability 4607182336702731708
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  850  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1360  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr 1362  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1364  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1366  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 4575248858818943354
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  946  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  950  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:27] <|@ <|@
      nr  952  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4575162870452290749
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1064  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4568006969118877196
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction rbx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  758  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:27] <|@ <|@
      nr  760  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction r10|QWORD = MOV input: [r11|QWORD[.]] size: QWORD <|@ <|@
      nr  100  <|@ instruction rcx|QWORD = STACKLEA slot: stack:32|QWORD <|@ <|@
      nr  102  <|@ instruction BITTESTANDBRANCH value: r10|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B2 -> B3 falseDestination: B2 -> B8 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4532329488911171509
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction r10|QWORD = OR x: r10|QWORD y: 1 size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV (x: [rcx|QWORD], y: r10|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD[.]], cmpValue: rax|QWORD, newValue: rcx|QWORD) accessKind: QWORD <|@ <|@
      nr  140  <|@ instruction CMPBRANCH (x: rax|QWORD, y: r10|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4532267370277133279
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B4" "B6" "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532382201905571021
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction r10|QWORD = STACKLEA slot: stack:32|QWORD <|@ <|@
      nr  352  <|@ instruction rsi|QWORD = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr  354  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  356  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4529143557278551352
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction rax|QWORD = MOV input: [r11|QWORD[.]] size: QWORD <|@ <|@
      nr  382  <|@ instruction BITTESTANDBRANCH value: rax|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B19 -> B20 falseDestination: B19 -> B21 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529068261964565618
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD <|@ <|@
      nr  412  <|@ instruction rsi|DWORD = SETCC condition: = <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B20" "B27" 
    successors "B29" "B31" 
    xhandlers
    flags 
    probability 4529074299895794134
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1370  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD[.] + 17] trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr 1382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction MOVB x: [rbx|QWORD[.] + 16] y: 1 size: BYTE <|@ <|@
      nr 1516  <|@ instruction r10|DWORD = SHL value: r10|DWORD size: DWORD <|@ <|@
      nr 1518  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1520  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1522  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1524  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4800) [bci: 92]
stack: stack:40|QWORD[.] 
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOfRange(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:92] <|@ <|@
      nr 1526  <|@ instruction rbx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1528  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rbx|QWORD[.] + 20], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1530  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr 1532  <|@ instruction MOV (x: [rbx|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1534  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rbx|QWORD[.], ~newValue: rax|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1536  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B34" 
    xhandlers
    flags 
    probability 4526633713479026896
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B18" "B23" "B33" "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4530432362446083730
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  644  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B25" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524572191115640556
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B30" 
    successors "B36" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4502623928274233274
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction MOV x: [rcx|QWORD] y: 3 size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = MOV input: [r10|QWORD + 62] size: QWORD <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4501820778258385448
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  234  <|@ instruction rax|QWORD = CAS (address: [r10|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  236  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4501097943244122404
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4502543613272648492
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr  166  <|@ instruction TESTCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B14" 
    xhandlers
    flags 
    probability 4502464101421079557
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction MOV x: [rcx|QWORD] y: 0 size: QWORD <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B33" 
    xhandlers
    flags 
    probability 4499411328210841968
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction rdi|QWORD = MOV input: [r11|QWORD[.]] size: QWORD <|@ <|@
      nr  432  <|@ instruction rdx|QWORD = MOV input: [rdi|QWORD + 134] size: QWORD <|@ <|@
      nr  434  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4499363139209891098
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction rax|QWORD = MOV input: [rdi|QWORD + 150] size: QWORD <|@ <|@
      nr  452  <|@ instruction rax|QWORD = OR (x: rax|QWORD, ~y: [rdi|QWORD + 142]) size: QWORD <|@ <|@
      nr  454  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4498676108457829474
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction MOV x: [rdi|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" "B15" 
    xhandlers
    flags 
    probability 4487506829360426131
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4484288269758412157
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4486864309347747871
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4484211167356890766
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4483447853581828992
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction MOV x: [rdi|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr  508  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  510  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4482760871184273395
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  540  <|@ instruction rax|QWORD = CAS (address: [rdi|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|DWORD = SETCC condition: = <|@ <|@
      nr  544  <|@ instruction rsi|DWORD = XOR x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  546  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4481718189707699113
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction INC value: [r10|QWORD + 134] size: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4472659588851943866
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B7" "B15" "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4490722176362376714
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  328  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
locals: r11|QWORD[.] 
locks: monitor[r11|QWORD[.], stack:32|QWORD] 
java.lang.String.<init>(String.java:4785) [bci: 10]
locals: rbx|QWORD[.] r11|QWORD[.] - r9|QWORD[.] - - 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0, 10] <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B34" 
    xhandlers
    flags 
    probability 4469235422845872850
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction rdx|QWORD = DEC value: rdx|QWORD size: QWORD <|@ <|@
      nr  628  <|@ instruction MOV (x: [rdi|QWORD + 134], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  630  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" 
    xhandlers
    flags 
    probability 4469173740924655728
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 4468563089904606309
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction MOV x: [r15|QWORD + 1156] y: -63763 size: DWORD <|@ <|@
      nr 1574  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1576  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4785) [bci: 13]
stack: r10|DWORD 
locals: rbx|QWORD[.] r11|QWORD[.] - r9|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:13] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1580  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15667 size: DWORD <|@ <|@
      nr 1598  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1600  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4783) [bci: 0]
locals: rbx|QWORD[.] r11|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1126  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1136  <|@ instruction r11|DWORD = MOVE input: int[-61721|0xffffffffffff0ee7] <|@ <|@
      nr 1138  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1164  <|@ instruction r11|DWORD = MOVE input: int[-62745|0xffffffffffff0ae7] <|@ <|@
      nr 1166  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  880  <|@ instruction r11|DWORD = MOVE input: int[-59667|0xffffffffffff16ed] <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B43" "B54" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1186  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1188  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_1       
     5: invokevirtual #142        // java.lang.AbstractStringBuilder.getValue:()byte[]
     8: astore_3      
     9: aload_1       
    10: invokevirtual #141        // java.lang.AbstractStringBuilder.length:()int
    13: istore        4
    15: aload_1       
    16: invokevirtual #292        // java.lang.AbstractStringBuilder.isLatin1:()boolean
    19: ifeq          41
    22: aload_0       
    23: iconst_0      
    24: putfield      #2          // coder:byte
    27: aload_0       
    28: aload_3       
    29: iconst_0      
    30: iload         4
    32: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    35: putfield      #1          // value:byte[]
    38: goto          98
    41: getstatic     #8          // COMPACT_STRINGS:boolean
    44: ifeq          80
    47: aload_1       
    48: getfield      #293        // java.lang.AbstractStringBuilder.maybeLatin1:boolean
    51: ifeq          80
    54: aload_3       
    55: iconst_0      
    56: iload         4
    58: invokestatic  #294        // java.lang.StringUTF16.compress:(byte[], int, int)byte[]
    61: astore        5
    63: aload         5
    65: ifnull        80
    68: aload_0       
    69: iconst_0      
    70: putfield      #2          // coder:byte
    73: aload_0       
    74: aload         5
    76: putfield      #1          // value:byte[]
    79: return        
    80: aload_0       
    81: iconst_1      
    82: putfield      #2          // coder:byte
    85: aload_0       
    86: aload_3       
    87: iconst_0      
    88: iload         4
    90: iconst_1      
    91: ishl          
    92: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    95: putfield      #1          // value:byte[]
    98: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B64" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@32f57492 slotKind: QWORD <|@ <|@
      nr   48  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4783) [bci: 0]
locals: rsi|QWORD[.] r11|QWORD[.] - - - - 
>@ <|@ instruction rdi|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction r8|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   60  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   62  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdi|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B64 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607182323057074616
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rdi|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B1" "B35" 
    successors "B37" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD[.] + 16] trueDestinationProbability: 0.9999908853703156 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B60 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B42" 
    xhandlers
    flags 
    probability 4607182336702731707
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4785) [bci: 13]
stack: r10|DWORD 
locals: rsi|QWORD[.] r11|QWORD[.] - r9|QWORD[.] - - 
>@ <|@ instruction r8|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD state [bci:13] <|@ <|@
      nr  690  <|@ instruction MOVB x: [rsi|QWORD[.] + 16] y: 0 size: BYTE <|@ <|@
      nr  692  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.2541630105061688 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  910  <|@ instruction rdi|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  912  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  914  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  916  <|@ instruction rdx|QWORD = ADD (x: rdi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  918  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B51" 
    xhandlers
    flags 
    probability 4604825882278563758
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  990  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r11|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  992  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r11|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  994  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r11|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  996  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  998  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr 1000  <|@ instruction MOV (x: [r11|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr 1004  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B51 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4604759375651230885
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr 1016  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B49" 
    successors "B49" "B50" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4634844288894646813
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4634792850175069044
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction MOV x: [r11|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr 1048  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr 1050  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604759375651230886
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4604825882278563759
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1102  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1120  <|@ instruction rdi|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: > <|@ <|@
      nr 1122  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B58" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1224  <|@ instruction rdx|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1226  <|@ instruction r10|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1228  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1230  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1232  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1234  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1236  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1242  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  720  <|@ instruction r11|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  724  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  726  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  728  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4598204386423092713
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  790  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  792  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  794  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  796  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  798  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  800  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  840  <|@ instruction stack:48|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  844  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  846  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  854  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B41" "B58" 
    successors "B62" 
    xhandlers
    flags 
    probability 4607182336702731708
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  850  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1360  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr 1362  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1364  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1366  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 4575248858818943354
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  946  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  950  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:27] <|@ <|@
      nr  952  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4575162870452290749
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1064  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4568006969118877196
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction rbx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  758  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:27] <|@ <|@
      nr  760  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction r10|QWORD = MOV input: [r11|QWORD[.]] size: QWORD <|@ <|@
      nr  100  <|@ instruction rcx|QWORD = STACKLEA slot: stack:32|QWORD <|@ <|@
      nr  102  <|@ instruction BITTESTANDBRANCH value: r10|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B2 -> B3 falseDestination: B2 -> B8 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4532329488911171509
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction r10|QWORD = OR x: r10|QWORD y: 1 size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV (x: [rcx|QWORD], y: r10|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD[.]], cmpValue: rax|QWORD, newValue: rcx|QWORD) accessKind: QWORD <|@ <|@
      nr  140  <|@ instruction CMPBRANCH (x: rax|QWORD, y: r10|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4532267370277133279
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B4" "B6" "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532382201905571021
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction r10|QWORD = STACKLEA slot: stack:32|QWORD <|@ <|@
      nr  352  <|@ instruction rsi|QWORD = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr  354  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  356  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4529143557278551352
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction rax|QWORD = MOV input: [r11|QWORD[.]] size: QWORD <|@ <|@
      nr  382  <|@ instruction BITTESTANDBRANCH value: rax|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B19 -> B20 falseDestination: B19 -> B21 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529068261964565618
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD <|@ <|@
      nr  412  <|@ instruction rsi|DWORD = SETCC condition: = <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B20" "B27" 
    successors "B29" "B31" 
    xhandlers
    flags 
    probability 4529074299895794134
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1370  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD[.] + 17] trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr 1382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction MOVB x: [rbx|QWORD[.] + 16] y: 1 size: BYTE <|@ <|@
      nr 1516  <|@ instruction r10|DWORD = SHL value: r10|DWORD size: DWORD <|@ <|@
      nr 1518  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1520  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1522  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1524  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4800) [bci: 92]
stack: stack:40|QWORD[.] 
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOfRange(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:92] <|@ <|@
      nr 1526  <|@ instruction rbx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1528  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rbx|QWORD[.] + 20], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1530  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr 1532  <|@ instruction MOV (x: [rbx|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1534  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rbx|QWORD[.], ~newValue: rax|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1536  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B34" 
    xhandlers
    flags 
    probability 4526633713479026896
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B18" "B23" "B33" "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4530432362446083730
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  644  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B25" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524572191115640556
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B30" 
    successors "B36" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4502623928274233274
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction MOV x: [rcx|QWORD] y: 3 size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = MOV input: [r10|QWORD + 62] size: QWORD <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4501820778258385448
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  234  <|@ instruction rax|QWORD = CAS (address: [r10|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  236  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4501097943244122404
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4502543613272648492
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr  166  <|@ instruction TESTCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B14" 
    xhandlers
    flags 
    probability 4502464101421079557
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction MOV x: [rcx|QWORD] y: 0 size: QWORD <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B33" 
    xhandlers
    flags 
    probability 4499411328210841968
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction rdi|QWORD = MOV input: [r11|QWORD[.]] size: QWORD <|@ <|@
      nr  432  <|@ instruction rdx|QWORD = MOV input: [rdi|QWORD + 134] size: QWORD <|@ <|@
      nr  434  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4499363139209891098
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction rax|QWORD = MOV input: [rdi|QWORD + 150] size: QWORD <|@ <|@
      nr  452  <|@ instruction rax|QWORD = OR (x: rax|QWORD, ~y: [rdi|QWORD + 142]) size: QWORD <|@ <|@
      nr  454  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4498676108457829474
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction MOV x: [rdi|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" "B15" 
    xhandlers
    flags 
    probability 4487506829360426131
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4484288269758412157
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4486864309347747871
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4484211167356890766
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4483447853581828992
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction MOV x: [rdi|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr  508  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  510  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4482760871184273395
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  540  <|@ instruction rax|QWORD = CAS (address: [rdi|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|DWORD = SETCC condition: = <|@ <|@
      nr  544  <|@ instruction rsi|DWORD = XOR x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  546  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4481718189707699113
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction INC value: [r10|QWORD + 134] size: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4472659588851943866
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B7" "B15" "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4490722176362376714
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  328  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
locals: r11|QWORD[.] 
locks: monitor[r11|QWORD[.], stack:32|QWORD] 
java.lang.String.<init>(String.java:4785) [bci: 10]
locals: rbx|QWORD[.] r11|QWORD[.] - r9|QWORD[.] - - 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0, 10] <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B34" 
    xhandlers
    flags 
    probability 4469235422845872850
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction rdx|QWORD = DEC value: rdx|QWORD size: QWORD <|@ <|@
      nr  628  <|@ instruction MOV (x: [rdi|QWORD + 134], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  630  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" 
    xhandlers
    flags 
    probability 4469173740924655728
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 4468563089904606309
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction MOV x: [r15|QWORD + 1156] y: -63763 size: DWORD <|@ <|@
      nr 1574  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1576  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4785) [bci: 13]
stack: r10|DWORD 
locals: rbx|QWORD[.] r11|QWORD[.] - r9|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:13] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1580  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15667 size: DWORD <|@ <|@
      nr 1598  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1600  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4783) [bci: 0]
locals: rbx|QWORD[.] r11|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1126  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1136  <|@ instruction r11|DWORD = MOVE input: int[-61721|0xffffffffffff0ee7] <|@ <|@
      nr 1138  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1164  <|@ instruction r11|DWORD = MOVE input: int[-62745|0xffffffffffff0ae7] <|@ <|@
      nr 1166  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  880  <|@ instruction r11|DWORD = MOVE input: int[-59667|0xffffffffffff16ed] <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B43" "B54" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1186  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1188  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_1       
     5: invokevirtual #142        // java.lang.AbstractStringBuilder.getValue:()byte[]
     8: astore_3      
     9: aload_1       
    10: invokevirtual #141        // java.lang.AbstractStringBuilder.length:()int
    13: istore        4
    15: aload_1       
    16: invokevirtual #292        // java.lang.AbstractStringBuilder.isLatin1:()boolean
    19: ifeq          41
    22: aload_0       
    23: iconst_0      
    24: putfield      #2          // coder:byte
    27: aload_0       
    28: aload_3       
    29: iconst_0      
    30: iload         4
    32: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    35: putfield      #1          // value:byte[]
    38: goto          98
    41: getstatic     #8          // COMPACT_STRINGS:boolean
    44: ifeq          80
    47: aload_1       
    48: getfield      #293        // java.lang.AbstractStringBuilder.maybeLatin1:boolean
    51: ifeq          80
    54: aload_3       
    55: iconst_0      
    56: iload         4
    58: invokestatic  #294        // java.lang.StringUTF16.compress:(byte[], int, int)byte[]
    61: astore        5
    63: aload         5
    65: ifnull        80
    68: aload_0       
    69: iconst_0      
    70: putfield      #2          // coder:byte
    73: aload_0       
    74: aload         5
    76: putfield      #1          // value:byte[]
    79: return        
    80: aload_0       
    81: iconst_1      
    82: putfield      #2          // coder:byte
    85: aload_0       
    86: aload_3       
    87: iconst_0      
    88: iload         4
    90: iconst_1      
    91: ishl          
    92: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    95: putfield      #1          // value:byte[]
    98: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B64" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@32f57492 slotKind: QWORD <|@ <|@
      nr   48  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4783) [bci: 0]
locals: rsi|QWORD[.] r11|QWORD[.] - - - - 
>@ <|@ instruction rdi|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction r8|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   60  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   62  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdi|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B64 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607182323057074616
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rdi|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B1" "B35" 
    successors "B37" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD[.] + 16] trueDestinationProbability: 0.9999908853703156 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B60 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B42" 
    xhandlers
    flags 
    probability 4607182336702731707
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4785) [bci: 13]
stack: r10|DWORD 
locals: rsi|QWORD[.] r11|QWORD[.] - r9|QWORD[.] - - 
>@ <|@ instruction r8|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD state [bci:13] <|@ <|@
      nr  690  <|@ instruction MOVB x: [rsi|QWORD[.] + 16] y: 0 size: BYTE <|@ <|@
      nr  692  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.2541630105061688 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  910  <|@ instruction rdi|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  912  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  914  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  916  <|@ instruction rdx|QWORD = ADD (x: rdi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  918  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B51" 
    xhandlers
    flags 
    probability 4604825882278563758
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  990  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r11|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  992  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r11|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  994  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r11|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  996  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  998  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr 1000  <|@ instruction MOV (x: [r11|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr 1004  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B51 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4604759375651230885
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr 1016  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B49" 
    successors "B49" "B50" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4634844288894646813
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4634792850175069044
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction MOV x: [r11|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr 1048  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr 1050  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604759375651230886
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4604825882278563759
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1102  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1120  <|@ instruction rdi|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: > <|@ <|@
      nr 1122  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B58" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1224  <|@ instruction rdx|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1226  <|@ instruction r10|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1228  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1230  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1232  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1234  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1236  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1242  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  720  <|@ instruction r11|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  724  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  726  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  728  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4598204386423092713
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  790  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  792  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  794  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  796  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  798  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  800  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  840  <|@ instruction stack:48|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  844  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  846  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  854  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B41" "B58" 
    successors "B62" 
    xhandlers
    flags 
    probability 4607182336702731708
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  850  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1360  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr 1362  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1364  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1366  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 4575248858818943354
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  946  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  950  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:27] <|@ <|@
      nr  952  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4575162870452290749
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1064  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4568006969118877196
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction rbx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  758  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:27] <|@ <|@
      nr  760  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction r10|QWORD = MOV input: [r11|QWORD[.]] size: QWORD <|@ <|@
      nr  100  <|@ instruction rcx|QWORD = STACKLEA slot: stack:32|QWORD <|@ <|@
      nr  102  <|@ instruction BITTESTANDBRANCH value: r10|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B2 -> B3 falseDestination: B2 -> B8 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4532329488911171509
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction r10|QWORD = OR x: r10|QWORD y: 1 size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV (x: [rcx|QWORD], y: r10|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD[.]], cmpValue: rax|QWORD, newValue: rcx|QWORD) accessKind: QWORD <|@ <|@
      nr  140  <|@ instruction CMPBRANCH (x: rax|QWORD, y: r10|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4532267370277133279
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B4" "B6" "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532382201905571021
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction r10|QWORD = STACKLEA slot: stack:32|QWORD <|@ <|@
      nr  352  <|@ instruction rsi|QWORD = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr  354  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  356  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4529143557278551352
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction rax|QWORD = MOV input: [r11|QWORD[.]] size: QWORD <|@ <|@
      nr  382  <|@ instruction BITTESTANDBRANCH value: rax|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B19 -> B20 falseDestination: B19 -> B21 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529068261964565618
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD <|@ <|@
      nr  412  <|@ instruction rsi|DWORD = SETCC condition: = <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B20" "B27" 
    successors "B29" "B31" 
    xhandlers
    flags 
    probability 4529074299895794134
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1370  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD[.] + 17] trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr 1382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction MOVB x: [rbx|QWORD[.] + 16] y: 1 size: BYTE <|@ <|@
      nr 1516  <|@ instruction r10|DWORD = SHL value: r10|DWORD size: DWORD <|@ <|@
      nr 1518  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1520  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1522  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1524  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4800) [bci: 92]
stack: stack:40|QWORD[.] 
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOfRange(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:92] <|@ <|@
      nr 1526  <|@ instruction rbx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1528  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rbx|QWORD[.] + 20], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1530  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr 1532  <|@ instruction MOV (x: [rbx|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1534  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rbx|QWORD[.], ~newValue: rax|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1536  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B34" 
    xhandlers
    flags 
    probability 4526633713479026896
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B18" "B23" "B33" "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4530432362446083730
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  644  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B25" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524572191115640556
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B30" 
    successors "B36" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4502623928274233274
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction MOV x: [rcx|QWORD] y: 3 size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = MOV input: [r10|QWORD + 62] size: QWORD <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4501820778258385448
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  234  <|@ instruction rax|QWORD = CAS (address: [r10|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  236  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4501097943244122404
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4502543613272648492
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr  166  <|@ instruction TESTCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B14" 
    xhandlers
    flags 
    probability 4502464101421079557
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction MOV x: [rcx|QWORD] y: 0 size: QWORD <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B33" 
    xhandlers
    flags 
    probability 4499411328210841968
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction rdi|QWORD = MOV input: [r11|QWORD[.]] size: QWORD <|@ <|@
      nr  432  <|@ instruction rdx|QWORD = MOV input: [rdi|QWORD + 134] size: QWORD <|@ <|@
      nr  434  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4499363139209891098
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction rax|QWORD = MOV input: [rdi|QWORD + 150] size: QWORD <|@ <|@
      nr  452  <|@ instruction rax|QWORD = OR (x: rax|QWORD, ~y: [rdi|QWORD + 142]) size: QWORD <|@ <|@
      nr  454  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4498676108457829474
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction MOV x: [rdi|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" "B15" 
    xhandlers
    flags 
    probability 4487506829360426131
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4484288269758412157
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4486864309347747871
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4484211167356890766
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4483447853581828992
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction MOV x: [rdi|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr  508  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  510  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4482760871184273395
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  540  <|@ instruction rax|QWORD = CAS (address: [rdi|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|DWORD = SETCC condition: = <|@ <|@
      nr  544  <|@ instruction rsi|DWORD = XOR x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  546  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4481718189707699113
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction INC value: [r10|QWORD + 134] size: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4472659588851943866
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B7" "B15" "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4490722176362376714
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  328  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
locals: r11|QWORD[.] 
locks: monitor[r11|QWORD[.], stack:32|QWORD] 
java.lang.String.<init>(String.java:4785) [bci: 10]
locals: rbx|QWORD[.] r11|QWORD[.] - r9|QWORD[.] - - 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0, 10] <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B34" 
    xhandlers
    flags 
    probability 4469235422845872850
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction rdx|QWORD = DEC value: rdx|QWORD size: QWORD <|@ <|@
      nr  628  <|@ instruction MOV (x: [rdi|QWORD + 134], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  630  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" 
    xhandlers
    flags 
    probability 4469173740924655728
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 4468563089904606309
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction MOV x: [r15|QWORD + 1156] y: -63763 size: DWORD <|@ <|@
      nr 1574  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1576  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4785) [bci: 13]
stack: r10|DWORD 
locals: rbx|QWORD[.] r11|QWORD[.] - r9|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:13] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1580  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15667 size: DWORD <|@ <|@
      nr 1598  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1600  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4783) [bci: 0]
locals: rbx|QWORD[.] r11|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1126  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1136  <|@ instruction r11|DWORD = MOVE input: int[-61721|0xffffffffffff0ee7] <|@ <|@
      nr 1138  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1164  <|@ instruction r11|DWORD = MOVE input: int[-62745|0xffffffffffff0ae7] <|@ <|@
      nr 1166  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  880  <|@ instruction r11|DWORD = MOVE input: int[-59667|0xffffffffffff16ed] <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B43" "B54" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1186  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1188  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_1       
     5: invokevirtual #142        // java.lang.AbstractStringBuilder.getValue:()byte[]
     8: astore_3      
     9: aload_1       
    10: invokevirtual #141        // java.lang.AbstractStringBuilder.length:()int
    13: istore        4
    15: aload_1       
    16: invokevirtual #292        // java.lang.AbstractStringBuilder.isLatin1:()boolean
    19: ifeq          41
    22: aload_0       
    23: iconst_0      
    24: putfield      #2          // coder:byte
    27: aload_0       
    28: aload_3       
    29: iconst_0      
    30: iload         4
    32: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    35: putfield      #1          // value:byte[]
    38: goto          98
    41: getstatic     #8          // COMPACT_STRINGS:boolean
    44: ifeq          80
    47: aload_1       
    48: getfield      #293        // java.lang.AbstractStringBuilder.maybeLatin1:boolean
    51: ifeq          80
    54: aload_3       
    55: iconst_0      
    56: iload         4
    58: invokestatic  #294        // java.lang.StringUTF16.compress:(byte[], int, int)byte[]
    61: astore        5
    63: aload         5
    65: ifnull        80
    68: aload_0       
    69: iconst_0      
    70: putfield      #2          // coder:byte
    73: aload_0       
    74: aload         5
    76: putfield      #1          // value:byte[]
    79: return        
    80: aload_0       
    81: iconst_1      
    82: putfield      #2          // coder:byte
    85: aload_0       
    86: aload_3       
    87: iconst_0      
    88: iload         4
    90: iconst_1      
    91: ishl          
    92: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    95: putfield      #1          // value:byte[]
    98: return        
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B64" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@32f57492 slotKind: QWORD <|@ <|@
      nr   48  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4783) [bci: 0]
locals: rsi|QWORD[.] r11|QWORD[.] - - - - 
>@ <|@ instruction rdi|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction r8|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   60  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   62  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdi|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B64 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607182323057074616
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rdi|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B1" "B35" 
    successors "B37" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD[.] + 16] trueDestinationProbability: 0.9999908853703156 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B60 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B42" 
    xhandlers
    flags 
    probability 4607182336702731707
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4785) [bci: 13]
stack: r10|DWORD 
locals: rsi|QWORD[.] r11|QWORD[.] - r9|QWORD[.] - - 
>@ <|@ instruction r8|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD state [bci:13] <|@ <|@
      nr  690  <|@ instruction MOVB x: [rsi|QWORD[.] + 16] y: 0 size: BYTE <|@ <|@
      nr  692  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.2541630105061688 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  910  <|@ instruction rdi|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  912  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  914  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  916  <|@ instruction rdx|QWORD = ADD (x: rdi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  918  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B51" 
    xhandlers
    flags 
    probability 4604825882278563758
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  990  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r11|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  992  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r11|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  994  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r11|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  996  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  998  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr 1000  <|@ instruction MOV (x: [r11|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr 1004  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B51 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4604759375651230885
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr 1016  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4634792850175069044
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction MOV x: [r11|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr 1048  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr 1050  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B49" 
    successors "B49" "B50" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4634844288894646813
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604759375651230886
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4604825882278563759
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1102  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1120  <|@ instruction rdi|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: > <|@ <|@
      nr 1122  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B58" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1224  <|@ instruction rdx|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1226  <|@ instruction r10|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1228  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1230  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1232  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1234  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1236  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1242  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B41" "B58" 
    successors "B62" 
    xhandlers
    flags 
    probability 4607182336702731708
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  850  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1360  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr 1362  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1364  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1366  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  720  <|@ instruction r11|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  724  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  726  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  728  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4598204386423092713
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  790  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  792  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  794  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  796  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  798  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  800  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  840  <|@ instruction stack:48|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  844  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  846  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  854  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 4575248858818943354
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  946  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  950  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:27] <|@ <|@
      nr  952  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4575162870452290749
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1064  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4568006969118877196
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction rbx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  758  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:27] <|@ <|@
      nr  760  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction r10|QWORD = MOV input: [r11|QWORD[.]] size: QWORD <|@ <|@
      nr  100  <|@ instruction rcx|QWORD = STACKLEA slot: stack:32|QWORD <|@ <|@
      nr  102  <|@ instruction BITTESTANDBRANCH value: r10|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B2 -> B3 falseDestination: B2 -> B8 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4532329488911171509
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction r10|QWORD = OR x: r10|QWORD y: 1 size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV (x: [rcx|QWORD], y: r10|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD[.]], cmpValue: rax|QWORD, newValue: rcx|QWORD) accessKind: QWORD <|@ <|@
      nr  140  <|@ instruction CMPBRANCH (x: rax|QWORD, y: r10|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4532267370277133279
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B4" "B6" "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532382201905571021
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction r10|QWORD = STACKLEA slot: stack:32|QWORD <|@ <|@
      nr  352  <|@ instruction rsi|QWORD = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr  354  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  356  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4529143557278551352
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction rax|QWORD = MOV input: [r11|QWORD[.]] size: QWORD <|@ <|@
      nr  382  <|@ instruction BITTESTANDBRANCH value: rax|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B19 -> B20 falseDestination: B19 -> B21 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529068261964565618
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD <|@ <|@
      nr  412  <|@ instruction rsi|DWORD = SETCC condition: = <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B20" "B27" 
    successors "B29" "B31" 
    xhandlers
    flags 
    probability 4529074299895794134
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B18" "B23" "B33" "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4530432362446083730
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  644  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B30" 
    successors "B36" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1370  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD[.] + 17] trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr 1382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction MOVB x: [rbx|QWORD[.] + 16] y: 1 size: BYTE <|@ <|@
      nr 1516  <|@ instruction r10|DWORD = SHL value: r10|DWORD size: DWORD <|@ <|@
      nr 1518  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1520  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1522  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1524  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4800) [bci: 92]
stack: stack:40|QWORD[.] 
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOfRange(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:92] <|@ <|@
      nr 1526  <|@ instruction rbx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1528  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rbx|QWORD[.] + 20], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1530  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr 1532  <|@ instruction MOV (x: [rbx|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1534  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rbx|QWORD[.], ~newValue: rax|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1536  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B34" 
    xhandlers
    flags 
    probability 4526633713479026896
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B25" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524572191115640556
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4502623928274233274
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction MOV x: [rcx|QWORD] y: 3 size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = MOV input: [r10|QWORD + 62] size: QWORD <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4501820778258385448
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  234  <|@ instruction rax|QWORD = CAS (address: [r10|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  236  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4501097943244122404
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4502543613272648492
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr  166  <|@ instruction TESTCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B14" 
    xhandlers
    flags 
    probability 4502464101421079557
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction MOV x: [rcx|QWORD] y: 0 size: QWORD <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B33" 
    xhandlers
    flags 
    probability 4499411328210841968
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction rdi|QWORD = MOV input: [r11|QWORD[.]] size: QWORD <|@ <|@
      nr  432  <|@ instruction rdx|QWORD = MOV input: [rdi|QWORD + 134] size: QWORD <|@ <|@
      nr  434  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4499363139209891098
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction rax|QWORD = MOV input: [rdi|QWORD + 150] size: QWORD <|@ <|@
      nr  452  <|@ instruction rax|QWORD = OR (x: rax|QWORD, ~y: [rdi|QWORD + 142]) size: QWORD <|@ <|@
      nr  454  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4498676108457829474
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction MOV x: [rdi|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" "B15" 
    xhandlers
    flags 
    probability 4487506829360426131
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4484288269758412157
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B7" "B15" "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4490722176362376714
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  328  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
locals: r11|QWORD[.] 
locks: monitor[r11|QWORD[.], stack:32|QWORD] 
java.lang.String.<init>(String.java:4785) [bci: 10]
locals: rbx|QWORD[.] r11|QWORD[.] - r9|QWORD[.] - - 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0, 10] <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4486864309347747871
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4484211167356890766
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4483447853581828992
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction MOV x: [rdi|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr  508  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  510  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4482760871184273395
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  540  <|@ instruction rax|QWORD = CAS (address: [rdi|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|DWORD = SETCC condition: = <|@ <|@
      nr  544  <|@ instruction rsi|DWORD = XOR x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  546  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4481718189707699113
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction INC value: [r10|QWORD + 134] size: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4472659588851943866
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B34" 
    xhandlers
    flags 
    probability 4469235422845872850
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction rdx|QWORD = DEC value: rdx|QWORD size: QWORD <|@ <|@
      nr  628  <|@ instruction MOV (x: [rdi|QWORD + 134], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  630  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" 
    xhandlers
    flags 
    probability 4469173740924655728
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 4468563089904606309
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction MOV x: [r15|QWORD + 1156] y: -63763 size: DWORD <|@ <|@
      nr 1574  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1576  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4785) [bci: 13]
stack: r10|DWORD 
locals: rbx|QWORD[.] r11|QWORD[.] - r9|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:13] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1580  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15667 size: DWORD <|@ <|@
      nr 1598  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1600  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4783) [bci: 0]
locals: rbx|QWORD[.] r11|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1126  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1136  <|@ instruction r11|DWORD = MOVE input: int[-61721|0xffffffffffff0ee7] <|@ <|@
      nr 1138  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B43" "B54" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1186  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1188  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1164  <|@ instruction r11|DWORD = MOVE input: int[-62745|0xffffffffffff0ae7] <|@ <|@
      nr 1166  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  880  <|@ instruction r11|DWORD = MOVE input: int[-59667|0xffffffffffff16ed] <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B57 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_1       
     5: invokevirtual #142        // java.lang.AbstractStringBuilder.getValue:()byte[]
     8: astore_3      
     9: aload_1       
    10: invokevirtual #141        // java.lang.AbstractStringBuilder.length:()int
    13: istore        4
    15: aload_1       
    16: invokevirtual #292        // java.lang.AbstractStringBuilder.isLatin1:()boolean
    19: ifeq          41
    22: aload_0       
    23: iconst_0      
    24: putfield      #2          // coder:byte
    27: aload_0       
    28: aload_3       
    29: iconst_0      
    30: iload         4
    32: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    35: putfield      #1          // value:byte[]
    38: goto          98
    41: getstatic     #8          // COMPACT_STRINGS:boolean
    44: ifeq          80
    47: aload_1       
    48: getfield      #293        // java.lang.AbstractStringBuilder.maybeLatin1:boolean
    51: ifeq          80
    54: aload_3       
    55: iconst_0      
    56: iload         4
    58: invokestatic  #294        // java.lang.StringUTF16.compress:(byte[], int, int)byte[]
    61: astore        5
    63: aload         5
    65: ifnull        80
    68: aload_0       
    69: iconst_0      
    70: putfield      #2          // coder:byte
    73: aload_0       
    74: aload         5
    76: putfield      #1          // value:byte[]
    79: return        
    80: aload_0       
    81: iconst_1      
    82: putfield      #2          // coder:byte
    85: aload_0       
    86: aload_3       
    87: iconst_0      
    88: iload         4
    90: iconst_1      
    91: ishl          
    92: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    95: putfield      #1          // value:byte[]
    98: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B64" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@32f57492 slotKind: QWORD <|@ <|@
      nr   48  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4783) [bci: 0]
locals: rsi|QWORD[.] r11|QWORD[.] - - - - 
>@ <|@ instruction rdi|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction r8|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   60  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   62  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdi|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B64 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607182323057074616
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rdi|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B1" "B35" 
    successors "B37" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD[.] + 16] trueDestinationProbability: 0.9999908853703156 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B60 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B42" 
    xhandlers
    flags 
    probability 4607182336702731707
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4785) [bci: 13]
stack: r10|DWORD 
locals: rsi|QWORD[.] r11|QWORD[.] - r9|QWORD[.] - - 
>@ <|@ instruction r8|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD state [bci:13] <|@ <|@
      nr  690  <|@ instruction MOVB x: [rsi|QWORD[.] + 16] y: 0 size: BYTE <|@ <|@
      nr  692  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.2541630105061688 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  910  <|@ instruction rdi|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  912  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  914  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  916  <|@ instruction rdx|QWORD = ADD (x: rdi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  918  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B51" 
    xhandlers
    flags 
    probability 4604825882278563758
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  990  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r11|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  992  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r11|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  994  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r11|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  996  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  998  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr 1000  <|@ instruction MOV (x: [r11|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr 1004  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B51 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4604759375651230885
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr 1016  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4634792850175069044
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction MOV x: [r11|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr 1048  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr 1050  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B49" 
    successors "B49" "B50" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4634844288894646813
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604759375651230886
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4604825882278563759
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1102  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1120  <|@ instruction rdi|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: > <|@ <|@
      nr 1122  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B58" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1224  <|@ instruction rdx|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1226  <|@ instruction r10|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1228  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1230  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1232  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1234  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1236  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1242  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B41" "B58" 
    successors "B62" 
    xhandlers
    flags 
    probability 4607182336702731708
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  850  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1360  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr 1362  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1364  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1366  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  720  <|@ instruction r11|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  724  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  726  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  728  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4598204386423092713
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  790  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  792  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  794  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  796  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  798  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  800  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  840  <|@ instruction stack:48|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  844  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  846  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  854  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 4575248858818943354
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  946  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  950  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:27] <|@ <|@
      nr  952  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4575162870452290749
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1064  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4568006969118877196
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction rbx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  758  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:27] <|@ <|@
      nr  760  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction r10|QWORD = MOV input: [r11|QWORD[.]] size: QWORD <|@ <|@
      nr  100  <|@ instruction rcx|QWORD = STACKLEA slot: stack:32|QWORD <|@ <|@
      nr  102  <|@ instruction BITTESTANDBRANCH value: r10|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B2 -> B3 falseDestination: B2 -> B8 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4532329488911171509
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction r10|QWORD = OR x: r10|QWORD y: 1 size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV (x: [rcx|QWORD], y: r10|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD[.]], cmpValue: rax|QWORD, newValue: rcx|QWORD) accessKind: QWORD <|@ <|@
      nr  140  <|@ instruction CMPBRANCH (x: rax|QWORD, y: r10|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4532267370277133279
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B4" "B6" "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532382201905571021
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction r10|QWORD = STACKLEA slot: stack:32|QWORD <|@ <|@
      nr  352  <|@ instruction rsi|QWORD = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr  354  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  356  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4529143557278551352
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction rax|QWORD = MOV input: [r11|QWORD[.]] size: QWORD <|@ <|@
      nr  382  <|@ instruction BITTESTANDBRANCH value: rax|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B19 -> B20 falseDestination: B19 -> B21 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529068261964565618
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD <|@ <|@
      nr  412  <|@ instruction rsi|DWORD = SETCC condition: = <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B20" "B27" 
    successors "B29" "B31" 
    xhandlers
    flags 
    probability 4529074299895794134
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B18" "B23" "B33" "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4530432362446083730
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  644  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B30" 
    successors "B36" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1370  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD[.] + 17] trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr 1382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction MOVB x: [rbx|QWORD[.] + 16] y: 1 size: BYTE <|@ <|@
      nr 1516  <|@ instruction r10|DWORD = SHL value: r10|DWORD size: DWORD <|@ <|@
      nr 1518  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1520  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1522  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1524  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4800) [bci: 92]
stack: stack:40|QWORD[.] 
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOfRange(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:92] <|@ <|@
      nr 1526  <|@ instruction rbx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1528  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rbx|QWORD[.] + 20], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1530  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr 1532  <|@ instruction MOV (x: [rbx|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1534  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rbx|QWORD[.], ~newValue: rax|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1536  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B34" 
    xhandlers
    flags 
    probability 4526633713479026896
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B25" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524572191115640556
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4502623928274233274
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction MOV x: [rcx|QWORD] y: 3 size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = MOV input: [r10|QWORD + 62] size: QWORD <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4501820778258385448
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  234  <|@ instruction rax|QWORD = CAS (address: [r10|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  236  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4501097943244122404
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4502543613272648492
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr  166  <|@ instruction TESTCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B14" 
    xhandlers
    flags 
    probability 4502464101421079557
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction MOV x: [rcx|QWORD] y: 0 size: QWORD <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B33" 
    xhandlers
    flags 
    probability 4499411328210841968
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction rdi|QWORD = MOV input: [r11|QWORD[.]] size: QWORD <|@ <|@
      nr  432  <|@ instruction rdx|QWORD = MOV input: [rdi|QWORD + 134] size: QWORD <|@ <|@
      nr  434  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4499363139209891098
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction rax|QWORD = MOV input: [rdi|QWORD + 150] size: QWORD <|@ <|@
      nr  452  <|@ instruction rax|QWORD = OR (x: rax|QWORD, ~y: [rdi|QWORD + 142]) size: QWORD <|@ <|@
      nr  454  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4498676108457829474
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction MOV x: [rdi|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" "B15" 
    xhandlers
    flags 
    probability 4487506829360426131
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4484288269758412157
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B7" "B15" "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4490722176362376714
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  328  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
locals: r11|QWORD[.] 
locks: monitor[r11|QWORD[.], stack:32|QWORD] 
java.lang.String.<init>(String.java:4785) [bci: 10]
locals: rbx|QWORD[.] r11|QWORD[.] - r9|QWORD[.] - - 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0, 10] <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4486864309347747871
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4484211167356890766
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4483447853581828992
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction MOV x: [rdi|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr  508  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  510  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4482760871184273395
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  540  <|@ instruction rax|QWORD = CAS (address: [rdi|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|DWORD = SETCC condition: = <|@ <|@
      nr  544  <|@ instruction rsi|DWORD = XOR x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  546  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4481718189707699113
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction INC value: [r10|QWORD + 134] size: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4472659588851943866
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B34" 
    xhandlers
    flags 
    probability 4469235422845872850
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction rdx|QWORD = DEC value: rdx|QWORD size: QWORD <|@ <|@
      nr  628  <|@ instruction MOV (x: [rdi|QWORD + 134], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  630  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" 
    xhandlers
    flags 
    probability 4469173740924655728
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 4468563089904606309
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction MOV x: [r15|QWORD + 1156] y: -63763 size: DWORD <|@ <|@
      nr 1574  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1576  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4785) [bci: 13]
stack: r10|DWORD 
locals: rbx|QWORD[.] r11|QWORD[.] - r9|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:13] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1580  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15667 size: DWORD <|@ <|@
      nr 1598  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1600  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4783) [bci: 0]
locals: rbx|QWORD[.] r11|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1126  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1136  <|@ instruction r11|DWORD = MOVE input: int[-61721|0xffffffffffff0ee7] <|@ <|@
      nr 1138  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B43" "B54" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1186  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1188  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1164  <|@ instruction r11|DWORD = MOVE input: int[-62745|0xffffffffffff0ae7] <|@ <|@
      nr 1166  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  880  <|@ instruction r11|DWORD = MOVE input: int[-59667|0xffffffffffff16ed] <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B57 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_1       
     5: invokevirtual #142        // java.lang.AbstractStringBuilder.getValue:()byte[]
     8: astore_3      
     9: aload_1       
    10: invokevirtual #141        // java.lang.AbstractStringBuilder.length:()int
    13: istore        4
    15: aload_1       
    16: invokevirtual #292        // java.lang.AbstractStringBuilder.isLatin1:()boolean
    19: ifeq          41
    22: aload_0       
    23: iconst_0      
    24: putfield      #2          // coder:byte
    27: aload_0       
    28: aload_3       
    29: iconst_0      
    30: iload         4
    32: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    35: putfield      #1          // value:byte[]
    38: goto          98
    41: getstatic     #8          // COMPACT_STRINGS:boolean
    44: ifeq          80
    47: aload_1       
    48: getfield      #293        // java.lang.AbstractStringBuilder.maybeLatin1:boolean
    51: ifeq          80
    54: aload_3       
    55: iconst_0      
    56: iload         4
    58: invokestatic  #294        // java.lang.StringUTF16.compress:(byte[], int, int)byte[]
    61: astore        5
    63: aload         5
    65: ifnull        80
    68: aload_0       
    69: iconst_0      
    70: putfield      #2          // coder:byte
    73: aload_0       
    74: aload         5
    76: putfield      #1          // value:byte[]
    79: return        
    80: aload_0       
    81: iconst_1      
    82: putfield      #2          // coder:byte
    85: aload_0       
    86: aload_3       
    87: iconst_0      
    88: iload         4
    90: iconst_1      
    91: ishl          
    92: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    95: putfield      #1          // value:byte[]
    98: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B64" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@32f57492 slotKind: QWORD <|@ <|@
      nr   48  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4783) [bci: 0]
locals: rsi|QWORD[.] r11|QWORD[.] - - - - 
>@ <|@ instruction rdi|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction r8|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   60  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   62  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdi|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B64 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607182323057074616
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rdi|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B1" "B35" 
    successors "B37" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD[.] + 16] trueDestinationProbability: 0.9999908853703156 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B60 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B42" 
    xhandlers
    flags 
    probability 4607182336702731707
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4785) [bci: 13]
stack: r10|DWORD 
locals: rsi|QWORD[.] r11|QWORD[.] - r9|QWORD[.] - - 
>@ <|@ instruction r8|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD state [bci:13] <|@ <|@
      nr  690  <|@ instruction MOVB x: [rsi|QWORD[.] + 16] y: 0 size: BYTE <|@ <|@
      nr  692  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.2541630105061688 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  910  <|@ instruction rdi|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  912  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  914  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  916  <|@ instruction rdx|QWORD = ADD (x: rdi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  918  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B51" 
    xhandlers
    flags 
    probability 4604825882278563758
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  990  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r11|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  992  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r11|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  994  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r11|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  996  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  998  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr 1000  <|@ instruction MOV (x: [r11|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr 1004  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B51 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4604759375651230885
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr 1016  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4634792850175069044
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction MOV x: [r11|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr 1048  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr 1050  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B49" 
    successors "B49" "B50" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4634844288894646813
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604759375651230886
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4604825882278563759
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1102  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1120  <|@ instruction rdi|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: > <|@ <|@
      nr 1122  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B58" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1224  <|@ instruction rdx|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1226  <|@ instruction r10|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1228  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1230  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1232  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1234  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1236  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1242  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B41" "B58" 
    successors "B62" 
    xhandlers
    flags 
    probability 4607182336702731708
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  850  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1360  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr 1362  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1364  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1366  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  720  <|@ instruction r11|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  724  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  726  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  728  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4598204386423092713
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  790  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  792  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  794  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  796  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  798  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  800  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  840  <|@ instruction stack:48|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  844  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  846  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  854  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 4575248858818943354
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  946  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  950  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:27] <|@ <|@
      nr  952  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4575162870452290749
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1064  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4568006969118877196
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction rbx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  758  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:27] <|@ <|@
      nr  760  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction r10|QWORD = MOV input: [r11|QWORD[.]] size: QWORD <|@ <|@
      nr  100  <|@ instruction rcx|QWORD = STACKLEA slot: stack:32|QWORD <|@ <|@
      nr  102  <|@ instruction BITTESTANDBRANCH value: r10|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B2 -> B3 falseDestination: B2 -> B8 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4532329488911171509
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction r10|QWORD = OR x: r10|QWORD y: 1 size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV (x: [rcx|QWORD], y: r10|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD[.]], cmpValue: rax|QWORD, newValue: rcx|QWORD) accessKind: QWORD <|@ <|@
      nr  140  <|@ instruction CMPBRANCH (x: rax|QWORD, y: r10|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4532267370277133279
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B4" "B6" "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532382201905571021
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction r10|QWORD = STACKLEA slot: stack:32|QWORD <|@ <|@
      nr  352  <|@ instruction rsi|QWORD = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr  354  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  356  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4529143557278551352
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction rax|QWORD = MOV input: [r11|QWORD[.]] size: QWORD <|@ <|@
      nr  382  <|@ instruction BITTESTANDBRANCH value: rax|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B19 -> B20 falseDestination: B19 -> B21 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529068261964565618
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD <|@ <|@
      nr  412  <|@ instruction rsi|DWORD = SETCC condition: = <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B20" "B27" 
    successors "B29" "B31" 
    xhandlers
    flags 
    probability 4529074299895794134
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B18" "B23" "B33" "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4530432362446083730
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  644  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B30" 
    successors "B36" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1370  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD[.] + 17] trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr 1382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction MOVB x: [rbx|QWORD[.] + 16] y: 1 size: BYTE <|@ <|@
      nr 1516  <|@ instruction r10|DWORD = SHL value: r10|DWORD size: DWORD <|@ <|@
      nr 1518  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1520  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1522  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1524  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4800) [bci: 92]
stack: stack:40|QWORD[.] 
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOfRange(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:92] <|@ <|@
      nr 1526  <|@ instruction rbx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1528  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rbx|QWORD[.] + 20], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1530  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr 1532  <|@ instruction MOV (x: [rbx|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1534  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rbx|QWORD[.], ~newValue: rax|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1536  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B34" 
    xhandlers
    flags 
    probability 4526633713479026896
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B25" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524572191115640556
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4502623928274233274
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction MOV x: [rcx|QWORD] y: 3 size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = MOV input: [r10|QWORD + 62] size: QWORD <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4501820778258385448
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  234  <|@ instruction rax|QWORD = CAS (address: [r10|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  236  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4501097943244122404
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4502543613272648492
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr  166  <|@ instruction TESTCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B14" 
    xhandlers
    flags 
    probability 4502464101421079557
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction MOV x: [rcx|QWORD] y: 0 size: QWORD <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B33" 
    xhandlers
    flags 
    probability 4499411328210841968
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction rdi|QWORD = MOV input: [r11|QWORD[.]] size: QWORD <|@ <|@
      nr  432  <|@ instruction rdx|QWORD = MOV input: [rdi|QWORD + 134] size: QWORD <|@ <|@
      nr  434  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4499363139209891098
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction rax|QWORD = MOV input: [rdi|QWORD + 150] size: QWORD <|@ <|@
      nr  452  <|@ instruction rax|QWORD = OR (x: rax|QWORD, ~y: [rdi|QWORD + 142]) size: QWORD <|@ <|@
      nr  454  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4498676108457829474
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction MOV x: [rdi|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" "B15" 
    xhandlers
    flags 
    probability 4487506829360426131
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4484288269758412157
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B7" "B15" "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4490722176362376714
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  328  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
locals: r11|QWORD[.] 
locks: monitor[r11|QWORD[.], stack:32|QWORD] 
java.lang.String.<init>(String.java:4785) [bci: 10]
locals: rbx|QWORD[.] r11|QWORD[.] - r9|QWORD[.] - - 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0, 10] <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4486864309347747871
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4484211167356890766
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4483447853581828992
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction MOV x: [rdi|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr  508  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  510  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4482760871184273395
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  540  <|@ instruction rax|QWORD = CAS (address: [rdi|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|DWORD = SETCC condition: = <|@ <|@
      nr  544  <|@ instruction rsi|DWORD = XOR x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  546  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4481718189707699113
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction INC value: [r10|QWORD + 134] size: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4472659588851943866
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B34" 
    xhandlers
    flags 
    probability 4469235422845872850
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction rdx|QWORD = DEC value: rdx|QWORD size: QWORD <|@ <|@
      nr  628  <|@ instruction MOV (x: [rdi|QWORD + 134], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  630  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" 
    xhandlers
    flags 
    probability 4469173740924655728
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 4468563089904606309
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction MOV x: [r15|QWORD + 1156] y: -63763 size: DWORD <|@ <|@
      nr 1574  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1576  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4785) [bci: 13]
stack: r10|DWORD 
locals: rbx|QWORD[.] r11|QWORD[.] - r9|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:13] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1580  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15667 size: DWORD <|@ <|@
      nr 1598  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1600  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4783) [bci: 0]
locals: rbx|QWORD[.] r11|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1126  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1136  <|@ instruction r11|DWORD = MOVE input: int[-61721|0xffffffffffff0ee7] <|@ <|@
      nr 1138  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B43" "B54" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1186  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1188  <|@ st <@st|@live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1164  <|@ instruction r11|DWORD = MOVE input: int[-62745|0xffffffffffff0ae7] <|@ <|@
      nr 1166  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  880  <|@ instruction r11|DWORD = MOVE input: int[-59667|0xffffffffffff16ed] <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B57 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_1       
     5: invokevirtual #142        // java.lang.AbstractStringBuilder.getValue:()byte[]
     8: astore_3      
     9: aload_1       
    10: invokevirtual #141        // java.lang.AbstractStringBuilder.length:()int
    13: istore        4
    15: aload_1       
    16: invokevirtual #292        // java.lang.AbstractStringBuilder.isLatin1:()boolean
    19: ifeq          41
    22: aload_0       
    23: iconst_0      
    24: putfield      #2          // coder:byte
    27: aload_0       
    28: aload_3       
    29: iconst_0      
    30: iload         4
    32: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    35: putfield      #1          // value:byte[]
    38: goto          98
    41: getstatic     #8          // COMPACT_STRINGS:boolean
    44: ifeq          80
    47: aload_1       
    48: getfield      #293        // java.lang.AbstractStringBuilder.maybeLatin1:boolean
    51: ifeq          80
    54: aload_3       
    55: iconst_0      
    56: iload         4
    58: invokestatic  #294        // java.lang.StringUTF16.compress:(byte[], int, int)byte[]
    61: astore        5
    63: aload         5
    65: ifnull        80
    68: aload_0       
    69: iconst_0      
    70: putfield      #2          // coder:byte
    73: aload_0       
    74: aload         5
    76: putfield      #1          // value:byte[]
    79: return        
    80: aload_0       
    81: iconst_1      
    82: putfield      #2          // coder:byte
    85: aload_0       
    86: aload_3       
    87: iconst_0      
    88: iload         4
    90: iconst_1      
    91: ishl          
    92: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    95: putfield      #1          // value:byte[]
    98: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B64" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@32f57492 slotKind: QWORD <|@ <|@
      nr   48  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ st <@st|@reference-map: [rsi:0, r11:0, stack:24]
live-base-pointers: []
java.lang.String.<init>(String.java:4783) [bci: 0]
locals: rsi|QWORD[.] r11|QWORD[.] - - - - 
>@ <|@ instruction rdi|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction r8|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   60  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   62  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdi|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B64 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607182323057074616
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rdi|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B1" "B35" 
    successors "B37" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD[.] + 16] trueDestinationProbability: 0.9999908853703156 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B60 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B42" 
    xhandlers
    flags 
    probability 4607182336702731707
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ st <@st|@reference-map: [rsi:0, r9:0, r11:0, stack:24]
live-base-pointers: []
java.lang.String.<init>(String.java:4785) [bci: 13]
stack: r10|DWORD 
locals: rsi|QWORD[.] r11|QWORD[.] - r9|QWORD[.] - - 
>@ <|@ instruction r8|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD state [bci:13] <|@ <|@
      nr  690  <|@ instruction MOVB x: [rsi|QWORD[.] + 16] y: 0 size: BYTE <|@ <|@
      nr  692  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.2541630105061688 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  910  <|@ instruction rdi|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  912  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  914  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  916  <|@ instruction rdx|QWORD = ADD (x: rdi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  918  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B51" 
    xhandlers
    flags 
    probability 4604825882278563758
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  990  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r11|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  992  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r11|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  994  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r11|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  996  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  998  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr 1000  <|@ instruction MOV (x: [r11|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr 1004  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B51 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4604759375651230885
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr 1016  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4634792850175069044
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction MOV x: [r11|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr 1048  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr 1050  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B49" 
    successors "B49" "B50" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4634844288894646813
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604759375651230886
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4604825882278563759
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1102  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1120  <|@ instruction rdi|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: > <|@ <|@
      nr 1122  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B58" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1224  <|@ instruction rdx|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1226  <|@ instruction r10|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1228  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1230  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1232  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1234  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1236  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1242  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B41" "B58" 
    successors "B62" 
    xhandlers
    flags 
    probability 4607182336702731708
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  850  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1360  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr 1362  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1364  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1366  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  720  <|@ instruction r11|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  724  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  726  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  728  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4598204386423092713
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  790  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  792  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  794  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  796  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  798  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  800  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  840  <|@ instruction stack:48|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  844  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  846  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  854  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 4575248858818943354
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  946  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ st <@st|@reference-map: [rbx:0, r9:0, stack:24]
live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  950  <|@ st <@st|@reference-map: [rax:0, rbx:0, r9:0, stack:24]
live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:27] <|@ <|@
      nr  952  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4575162870452290749
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1064  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4568006969118877196
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction rbx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ st <@st|@reference-map: [rbx:0, r9:0, stack:24]
live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  758  <|@ st <@st|@reference-map: [rax:0, rbx:0, r9:0, stack:24]
live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:27] <|@ <|@
      nr  760  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction r10|QWORD = MOV input: [r11|QWORD[.]] size: QWORD <|@ <|@
      nr  100  <|@ instruction rcx|QWORD = STACKLEA slot: stack:32|QWORD <|@ <|@
      nr  102  <|@ instruction BITTESTANDBRANCH value: r10|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B2 -> B3 falseDestination: B2 -> B8 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4532329488911171509
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction r10|QWORD = OR x: r10|QWORD y: 1 size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV (x: [rcx|QWORD], y: r10|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD[.]], cmpValue: rax|QWORD, newValue: rcx|QWORD) accessKind: QWORD <|@ <|@
      nr  140  <|@ instruction CMPBRANCH (x: rax|QWORD, y: r10|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4532267370277133279
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B4" "B6" "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532382201905571021
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction r10|QWORD = STACKLEA slot: stack:32|QWORD <|@ <|@
      nr  352  <|@ instruction rsi|QWORD = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr  354  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  356  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4529143557278551352
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction rax|QWORD = MOV input: [r11|QWORD[.]] size: QWORD <|@ <|@
      nr  382  <|@ instruction BITTESTANDBRANCH value: rax|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B19 -> B20 falseDestination: B19 -> B21 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529068261964565618
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD <|@ <|@
      nr  412  <|@ instruction rsi|DWORD = SETCC condition: = <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B20" "B27" 
    successors "B29" "B31" 
    xhandlers
    flags 
    probability 4529074299895794134
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B18" "B23" "B33" "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4530432362446083730
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  644  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B30" 
    successors "B36" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1370  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD[.] + 17] trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr 1382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction MOVB x: [rbx|QWORD[.] + 16] y: 1 size: BYTE <|@ <|@
      nr 1516  <|@ instruction r10|DWORD = SHL value: r10|DWORD size: DWORD <|@ <|@
      nr 1518  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1520  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1522  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1524  <|@ st <@st|@reference-map: [stack:24]
live-base-pointers: []
java.lang.String.<init>(String.java:4800) [bci: 92]
stack: stack:40|QWORD[.] 
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOfRange(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:92] <|@ <|@
      nr 1526  <|@ instruction rbx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1528  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rbx|QWORD[.] + 20], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1530  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr 1532  <|@ instruction MOV (x: [rbx|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1534  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rbx|QWORD[.], ~newValue: rax|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1536  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B34" 
    xhandlers
    flags 
    probability 4526633713479026896
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B25" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524572191115640556
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4502623928274233274
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction MOV x: [rcx|QWORD] y: 3 size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = MOV input: [r10|QWORD + 62] size: QWORD <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4501820778258385448
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  234  <|@ instruction rax|QWORD = CAS (address: [r10|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  236  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4501097943244122404
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4502543613272648492
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr  166  <|@ instruction TESTCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B14" 
    xhandlers
    flags 
    probability 4502464101421079557
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction MOV x: [rcx|QWORD] y: 0 size: QWORD <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B33" 
    xhandlers
    flags 
    probability 4499411328210841968
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction rdi|QWORD = MOV input: [r11|QWORD[.]] size: QWORD <|@ <|@
      nr  432  <|@ instruction rdx|QWORD = MOV input: [rdi|QWORD + 134] size: QWORD <|@ <|@
      nr  434  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4499363139209891098
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction rax|QWORD = MOV input: [rdi|QWORD + 150] size: QWORD <|@ <|@
      nr  452  <|@ instruction rax|QWORD = OR (x: rax|QWORD, ~y: [rdi|QWORD + 142]) size: QWORD <|@ <|@
      nr  454  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4498676108457829474
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction MOV x: [rdi|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" "B15" 
    xhandlers
    flags 
    probability 4487506829360426131
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4484288269758412157
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B7" "B15" "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4490722176362376714
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  328  <|@ st <@st|@reference-map: [rbx:0, r8:0, r9:0, r11:0, stack:24]
live-base-pointers: []
java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
locals: r11|QWORD[.] 
locks: monitor[r11|QWORD[.], stack:32|QWORD] 
java.lang.String.<init>(String.java:4785) [bci: 10]
locals: rbx|QWORD[.] r11|QWORD[.] - r9|QWORD[.] - - 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0, 10] <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4486864309347747871
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4484211167356890766
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4483447853581828992
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction MOV x: [rdi|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr  508  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  510  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4482760871184273395
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  540  <|@ instruction rax|QWORD = CAS (address: [rdi|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|DWORD = SETCC condition: = <|@ <|@
      nr  544  <|@ instruction rsi|DWORD = XOR x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  546  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4481718189707699113
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction INC value: [r10|QWORD + 134] size: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4472659588851943866
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B34" 
    xhandlers
    flags 
    probability 4469235422845872850
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction rdx|QWORD = DEC value: rdx|QWORD size: QWORD <|@ <|@
      nr  628  <|@ instruction MOV (x: [rdi|QWORD + 134], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  630  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" 
    xhandlers
    flags 
    probability 4469173740924655728
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 4468563089904606309
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction MOV x: [r15|QWORD + 1156] y: -63763 size: DWORD <|@ <|@
      nr 1574  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1576  <|@ st <@st|@reference-map: [rbx:0, r9:0, r11:0]
live-base-pointers: []
java.lang.String.<init>(String.java:4785) [bci: 13]
stack: r10|DWORD 
locals: rbx|QWORD[.] r11|QWORD[.] - r9|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:13] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1580  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15667 size: DWORD <|@ <|@
      nr 1598  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1600  <|@ st <@st|@reference-map: [rbx:0, r11:0]
live-base-pointers: []
java.lang.String.<init>(String.java:4783) [bci: 0]
locals: rbx|QWORD[.] r11|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1126  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1136  <|@ instruction r11|DWORD = MOVE input: int[-61721|0xffffffffffff0ee7] <|@ <|@
      nr 1138  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B43" "B54" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1186  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1188  <|@ st <@st|@reference-map: [rbx:0, r9:0]
live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1164  <|@ instruction r11|DWORD = MOVE input: int[-62745|0xffffffffffff0ae7] <|@ <|@
      nr 1166  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  880  <|@ instruction r11|DWORD = MOVE input: int[-59667|0xffffffffffff16ed] <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B57 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_1       
     5: invokevirtual #142        // java.lang.AbstractStringBuilder.getValue:()byte[]
     8: astore_3      
     9: aload_1       
    10: invokevirtual #141        // java.lang.AbstractStringBuilder.length:()int
    13: istore        4
    15: aload_1       
    16: invokevirtual #292        // java.lang.AbstractStringBuilder.isLatin1:()boolean
    19: ifeq          41
    22: aload_0       
    23: iconst_0      
    24: putfield      #2          // coder:byte
    27: aload_0       
    28: aload_3       
    29: iconst_0      
    30: iload         4
    32: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    35: putfield      #1          // value:byte[]
    38: goto          98
    41: getstatic     #8          // COMPACT_STRINGS:boolean
    44: ifeq          80
    47: aload_1       
    48: getfield      #293        // java.lang.AbstractStringBuilder.maybeLatin1:boolean
    51: ifeq          80
    54: aload_3       
    55: iconst_0      
    56: iload         4
    58: invokestatic  #294        // java.lang.StringUTF16.compress:(byte[], int, int)byte[]
    61: astore        5
    63: aload         5
    65: ifnull        80
    68: aload_0       
    69: iconst_0      
    70: putfield      #2          // coder:byte
    73: aload_0       
    74: aload         5
    76: putfield      #1          // value:byte[]
    79: return        
    80: aload_0       
    81: iconst_1      
    82: putfield      #2          // coder:byte
    85: aload_0       
    86: aload_3       
    87: iconst_0      
    88: iload         4
    90: iconst_1      
    91: ishl          
    92: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    95: putfield      #1          // value:byte[]
    98: return        
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B64" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@32f57492 slotKind: QWORD <|@ <|@
      nr   48  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ st <@st|@reference-map: [rsi:0, r11:0, stack:24]
live-base-pointers: []
java.lang.String.<init>(String.java:4783) [bci: 0]
locals: rsi|QWORD[.] r11|QWORD[.] - - - - 
>@ <|@ instruction rdi|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction r8|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr   58  <|@ instruction rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   60  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   62  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rdi|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B64 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607182323057074616
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction rdi|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   76  <|@ instruction r10|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B1" "B35" 
    successors "B37" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD[.] + 16] trueDestinationProbability: 0.9999908853703156 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B60 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B42" 
    xhandlers
    flags 
    probability 4607182336702731707
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ st <@st|@reference-map: [rsi:0, r9:0, r11:0, stack:24]
live-base-pointers: []
java.lang.String.<init>(String.java:4785) [bci: 13]
stack: r10|DWORD 
locals: rsi|QWORD[.] r11|QWORD[.] - r9|QWORD[.] - - 
>@ <|@ instruction r8|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD state [bci:13] <|@ <|@
      nr  690  <|@ instruction MOVB x: [rsi|QWORD[.] + 16] y: 0 size: BYTE <|@ <|@
      nr  692  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.2541630105061688 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4604893060690011105
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  910  <|@ instruction rdi|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  912  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  914  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  916  <|@ instruction rdx|QWORD = ADD (x: rdi|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  918  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B51" 
    xhandlers
    flags 
    probability 4604825882278563758
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  990  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r11|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  992  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r11|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  994  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r11|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  996  <|@ instruction MOV x: [r11|QWORD] y: 1 size: QWORD <|@ <|@
      nr  998  <|@ instruction MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr 1000  <|@ instruction MOV (x: [r11|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr 1004  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B51 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" 
    xhandlers
    flags 
    probability 4604759375651230885
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction rdx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr 1016  <|@ instruction JUMP ~outgoingValues: [] destination: B47 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4634792850175069044
    begin_IR
      LIR
      nr 1030  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction MOV x: [r11|QWORD + rdx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr 1048  <|@ instruction rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD <|@ <|@
      nr 1050  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" "B49" 
    successors "B49" "B50" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4634844288894646813
    begin_IR
      LIR
      nr 1018  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B52" 
    xhandlers
    flags 
    probability 4604759375651230886
    begin_IR
      LIR
      nr 1052  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4604825882278563759
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1102  <|@ instruction JUMP ~outgoingValues: [] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B45" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1120  <|@ instruction rdi|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: > <|@ <|@
      nr 1122  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B58" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4604893060690011106
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1224  <|@ instruction rdx|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1226  <|@ instruction r10|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1228  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1230  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1232  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1234  <|@ instruction stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1236  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1242  <|@ instruction JUMP ~outgoingValues: [] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B41" "B58" 
    successors "B62" 
    xhandlers
    flags 
    probability 4607182336702731708
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  850  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1360  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr 1362  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr 1364  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1366  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1538  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  720  <|@ instruction r11|QWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  722  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  724  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  726  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  728  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4598204386423092713
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  790  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  792  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  794  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  796  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  798  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  800  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  802  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  804  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B59" 
    xhandlers
    flags 
    probability 4598250171943347125
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  840  <|@ instruction stack:48|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  844  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  846  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  848  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  854  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B53" 
    xhandlers
    flags 
    probability 4575248858818943354
    begin_IR
      LIR
      nr  920  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  922  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  946  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ st <@st|@reference-map: [rbx:0, r9:0, stack:24]
live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  950  <|@ st <@st|@reference-map: [rax:0, rbx:0, r9:0, stack:24]
live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:27] <|@ <|@
      nr  952  <|@ instruction r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B52" 
    xhandlers
    flags 
    probability 4575162870452290749
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1064  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1088  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4568006969118877196
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction rbx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  756  <|@ st <@st|@reference-map: [rbx:0, r9:0, stack:24]
live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27] <|@ <|@
      nr  758  <|@ st <@st|@reference-map: [rax:0, rbx:0, r9:0, stack:24]
live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:27] <|@ <|@
      nr  760  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B8" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction r10|QWORD = MOV input: [r11|QWORD[.]] size: QWORD <|@ <|@
      nr  100  <|@ instruction rcx|QWORD = STACKLEA slot: stack:32|QWORD <|@ <|@
      nr  102  <|@ instruction BITTESTANDBRANCH value: r10|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B2 -> B3 falseDestination: B2 -> B8 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4532329488911171509
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction r10|QWORD = OR x: r10|QWORD y: 1 size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV (x: [rcx|QWORD], y: r10|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD[.]], cmpValue: rax|QWORD, newValue: rcx|QWORD) accessKind: QWORD <|@ <|@
      nr  140  <|@ instruction CMPBRANCH (x: rax|QWORD, y: r10|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B14" 
    xhandlers
    flags 
    probability 4532267370277133279
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B4" "B6" "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4532382201905571021
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction INC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction r10|QWORD = STACKLEA slot: stack:32|QWORD <|@ <|@
      nr  352  <|@ instruction rsi|QWORD = MOV input: [r10|QWORD] size: QWORD <|@ <|@
      nr  354  <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  356  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4529143557278551352
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction rax|QWORD = MOV input: [r11|QWORD[.]] size: QWORD <|@ <|@
      nr  382  <|@ instruction BITTESTANDBRANCH value: rax|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B19 -> B20 falseDestination: B19 -> B21 index: 1 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4529068261964565618
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  410  <|@ instruction rax|QWORD = CAS (address: [r11|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD <|@ <|@
      nr  412  <|@ instruction rsi|DWORD = SETCC condition: = <|@ <|@
      nr  414  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B20" "B27" 
    successors "B29" "B31" 
    xhandlers
    flags 
    probability 4529074299895794134
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B18" "B23" "B33" "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4530432362446083730
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction DEC value: [r15|QWORD + 1360] size: QWORD <|@ <|@
      nr  644  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B30" 
    successors "B36" 
    xhandlers
    flags 
    probability 4532392235006159620
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ instruction rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B61" "B63" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr 1368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1370  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction CMPCONSTBRANCH x: [r11|QWORD[.] + 17] trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" 
    xhandlers
    flags 
    probability 4531497953223049216
    begin_IR
      LIR
      nr 1382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction NOP <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction NOP <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction NOP <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction MOVB x: [rbx|QWORD[.] + 16] y: 1 size: BYTE <|@ <|@
      nr 1516  <|@ instruction r10|DWORD = SHL value: r10|DWORD size: DWORD <|@ <|@
      nr 1518  <|@ instruction rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1520  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1522  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr 1524  <|@ st <@st|@reference-map: [stack:24]
live-base-pointers: []
java.lang.String.<init>(String.java:4800) [bci: 92]
stack: stack:40|QWORD[.] 
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOfRange(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:92] <|@ <|@
      nr 1526  <|@ instruction rbx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1528  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rbx|QWORD[.] + 20], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1530  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3 <|@ <|@
      nr 1532  <|@ instruction MOV (x: [rbx|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1534  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rbx|QWORD[.], ~newValue: rax|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d <|@ <|@
      nr 1536  <|@ instruction JUMP ~outgoingValues: [] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B34" 
    xhandlers
    flags 
    probability 4526633713479026896
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" 
    xhandlers
    flags 
    probability 4524570700268423638
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" "B25" 
    successors "B35" 
    xhandlers
    flags 
    probability 4524572191115640556
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  588  <|@ instruction rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  590  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD] <|@ <|@
      nr  592  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4502623928274233274
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction MOV x: [rcx|QWORD] y: 3 size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD = MOV input: [r10|QWORD + 62] size: QWORD <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4501820778258385448
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  234  <|@ instruction rax|QWORD = CAS (address: [r10|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  236  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4501097943244122404
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4502543613272648492
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD <|@ <|@
      nr  166  <|@ instruction TESTCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -4089 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B14" 
    xhandlers
    flags 
    probability 4502464101421079557
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction MOV x: [rcx|QWORD] y: 0 size: QWORD <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B33" 
    xhandlers
    flags 
    probability 4499411328210841968
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction rdi|QWORD = MOV input: [r11|QWORD[.]] size: QWORD <|@ <|@
      nr  432  <|@ instruction rdx|QWORD = MOV input: [rdi|QWORD + 134] size: QWORD <|@ <|@
      nr  434  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B33 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4499363139209891098
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction rax|QWORD = MOV input: [rdi|QWORD + 150] size: QWORD <|@ <|@
      nr  452  <|@ instruction rax|QWORD = OR (x: rax|QWORD, ~y: [rdi|QWORD + 142]) size: QWORD <|@ <|@
      nr  454  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B34" 
    xhandlers
    flags 
    probability 4498676108457829474
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction MOV x: [rdi|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr  468  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" "B15" 
    xhandlers
    flags 
    probability 4487506829360426131
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4484288269758412157
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B7" "B15" "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4490722176362376714
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  328  <|@ st <@st|@reference-map: [rbx:0, r8:0, r9:0, r11:0, stack:24]
live-base-pointers: []
java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0]
locals: r11|QWORD[.] 
locks: monitor[r11|QWORD[.], stack:32|QWORD] 
java.lang.String.<init>(String.java:4785) [bci: 10]
locals: rbx|QWORD[.] r11|QWORD[.] - r9|QWORD[.] - - 
>@ <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0, 10] <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4486864309347747871
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4484211167356890766
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4483447853581828992
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction MOV x: [rdi|QWORD + 62] y: 0 size: QWORD <|@ <|@
      nr  508  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  510  <|@ instruction CMPCONSTBRANCH x: [rdi|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 y: 0 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4482760871184273395
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  540  <|@ instruction rax|QWORD = CAS (address: [rdi|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD <|@ <|@
      nr  542  <|@ instruction rsi|DWORD = SETCC condition: = <|@ <|@
      nr  544  <|@ instruction rsi|DWORD = XOR x: rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr  546  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    probability 4481718189707699113
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction INC value: [r10|QWORD + 134] size: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4472659588851943866
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B34" 
    xhandlers
    flags 
    probability 4469235422845872850
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction rdx|QWORD = DEC value: rdx|QWORD size: QWORD <|@ <|@
      nr  628  <|@ instruction MOV (x: [rdi|QWORD + 134], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  630  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B30" 
    xhandlers
    flags 
    probability 4469173740924655728
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B34" 
    xhandlers
    flags 
    probability 4468563089904606309
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction MOV x: [r15|QWORD + 1156] y: -63763 size: DWORD <|@ <|@
      nr 1574  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1576  <|@ st <@st|@reference-map: [rbx:0, r9:0, r11:0]
live-base-pointers: []
java.lang.String.<init>(String.java:4785) [bci: 13]
stack: r10|DWORD 
locals: rbx|QWORD[.] r11|QWORD[.] - r9|QWORD[.] - - 
>@ <|@ instruction DEOPT info [bci:13] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1580  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction MOV x: [r15|QWORD + 1156] y: -15667 size: DWORD <|@ <|@
      nr 1598  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1600  <|@ st <@st|@reference-map: [rbx:0, r11:0]
live-base-pointers: []
java.lang.String.<init>(String.java:4783) [bci: 0]
locals: rbx|QWORD[.] r11|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1126  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1136  <|@ instruction r11|DWORD = MOVE input: int[-61721|0xffffffffffff0ee7] <|@ <|@
      nr 1138  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B43" "B54" "B56" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1186  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1188  <|@ st <@st|@reference-map: [rbx:0, r9:0]
live-base-pointers: []
java.lang.String.<init>(String.java:4788) [bci: 27]
locals: rbx|QWORD[.] - - r9|QWORD[.] r10|DWORD - 
>@ <|@ instruction DEOPT info [bci:27] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1164  <|@ instruction r11|DWORD = MOVE input: int[-62745|0xffffffffffff0ae7] <|@ <|@
      nr 1166  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B57" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction r8|QWORD = MOVE input: long[1300|0x514] <|@ <|@
      nr  880  <|@ instruction r11|DWORD = MOVE input: int[-59667|0xffffffffffff16ed] <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B57 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_1       
     5: invokevirtual #142        // java.lang.AbstractStringBuilder.getValue:()byte[]
     8: astore_3      
     9: aload_1       
    10: invokevirtual #141        // java.lang.AbstractStringBuilder.length:()int
    13: istore        4
    15: aload_1       
    16: invokevirtual #292        // java.lang.AbstractStringBuilder.isLatin1:()boolean
    19: ifeq          41
    22: aload_0       
    23: iconst_0      
    24: putfield      #2          // coder:byte
    27: aload_0       
    28: aload_3       
    29: iconst_0      
    30: iload         4
    32: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    35: putfield      #1          // value:byte[]
    38: goto          98
    41: getstatic     #8          // COMPACT_STRINGS:boolean
    44: ifeq          80
    47: aload_1       
    48: getfield      #293        // java.lang.AbstractStringBuilder.maybeLatin1:boolean
    51: ifeq          80
    54: aload_3       
    55: iconst_0      
    56: iload         4
    58: invokestatic  #294        // java.lang.StringUTF16.compress:(byte[], int, int)byte[]
    61: astore        5
    63: aload         5
    65: ifnull        80
    68: aload_0       
    69: iconst_0      
    70: putfield      #2          // coder:byte
    73: aload_0       
    74: aload         5
    76: putfield      #1          // value:byte[]
    79: return        
    80: aload_0       
    81: iconst_1      
    82: putfield      #2          // coder:byte
    85: aload_0       
    86: aload_3       
    87: iconst_0      
    88: iload         4
    90: iconst_1      
    91: ishl          
    92: invokestatic  #11         // java.util.Arrays.copyOfRange:(byte[], int, int)byte[]
    95: putfield      #1          // value:byte[]
    98: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec389041817f20000000000f85f707000090909090909090909090909090909090909090909048896c243048897424184c8bda418b7b08458b4314458bc849c1e10348ba0000002b787f0000488d3c3a483b3d000000000f8412000000483b3d000000000f8471030000e90d07000090909090418b7b0c448bd79090909041807b10000f851504000090909090909090468b04c50c000000c6461000453bc20f841c020000909090904585d20f8c4107000090909090909090909090904d8b9fb8010000418bfa488d7f174883e7f8488bd74903d3493b97c80100000f87760200009090909090909090909090909090498997b8010000420f18841f00010000420f18841f40010000420f18841f8001000049c7030100000041c74308addeadde4589530c488d4ff04881f9000800000f835802000090909048c7c210000000e9250000006666660f1f840000000000666666906666909090909090909049c7041300000000488d520890909090483bfa77e490909090909090909090909090453bc2418bf8410f4ffa413bf80f871606000090909090413bfa0f873e060000909090909090909090909090909090498bd3448bd7498d7910488d7210498bd24c895c2410e8000000004c8b5c2410488b742418909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f842d0000008b461448c1e0034885c00f841d000000498b57284883fa000f84e30500004883ea084989572849035738488902498bd348c1ea03895614488bd64933d348c1ea160f8442000000488bd648c1ea0948b800e0368d787f00004803d0803a027429f083042400803a00741fc60200498b47484885c00f84960500004883e808498947484903475848891090909090909090488b6c24304883c438493ba7500400000f8779050000c5f877c39090909090909090909090498bbfb8010000458bd8498d73174883e6f8488bd64803d7493b97c80100000f87b80000009090909090909090909090498997b80100000f18843e000100000f18843e400100000f18843e8001000048c70701000000c74708addeadde4489470c9090909090909090909090909090488bf748897c2410498d7910488d7610498bd3e800000000e972feffff48baaddeaddeaddeadde909090909090909090488bde488bf2418bd2e8000000000f1f84000000000085004c8bd8488bf3e9ecfdffff488bde909090909090909090498d7b104833c0f348aae9cdfdffff488b5c241848beaddeaddeaddeadde909090909090909090418bd0e8000000000f1f8400000000008500488bf8e952ffffff488bde909090909090904d8b13488d4c2420490fbae2010f82e4010000909090909090909090909090904983ca014c8911498bc2f0490fb10b493bc20f85fd0100009090909090909049ff875005000090909090909090904c8d542420498b32418b4b0c4885f60f84720100009090909090498b03480fbae0010f82e40100009090909090909090909090498bc2f0490fb133400f94c6400fb6f69090909085f60f84400100009090909090909049ff8f50050000909090448bd1488bf3e9dcfbffff488bde9090909041807b11000f85a20200009090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090c643100141d1e2498bf1ba00000000418bca666690e8000000000f1f840000000000488b5c241841807f40000f842d0000008b531448c1e2034885d20f841d000000498b77284883fe000f84090300004883ee084989772849037738488916488bf048c1ee03897314488bf34833f048c1ee160f844b0000004885c00f8442000000488bf348c1ee0948ba00e0368d787f00004803f2803e027429f083042400803e00741fc60600498b57484885d20f84b30200004883ea084989574849035758488932e9e6fcffff909090e9c3feffff90909090909090909090498bf3498bd2e800000000e9b4feffff90909090909048c70103000000498b723e4885f60f859000000090909090909090909048c7c000000000f04d0fb17a3e0f85a3000000909090e906feffff9090909090482bc448f7c007f0ffff0f85f70000009090909048c70100000000e9e1fdffff909090909090498b3b488b97860000004885d20f85d6000000909090909090488b8796000000480b878e0000004885c00f85450000009090909048c7473e00000000e9fffdffff90909090493bf70f848300000090909090909090909090498bf3488bd1e8000000000f1f840000000000e976fdffff909090ebdc909090904883bf9e000000000f847600000090909090909048c7473e00000000f0830424004883bf9e000000000f855d00000090909090909090909090909048c7c000000000f04c0fb17f3e400f94c6400fb6f683f601e960fdffff9090909049ff8286000000e9fafcffff909090e968ffffff909090909048ffca48899786000000e943fdffff909090e97bfeffff909090e933fdffff9090909090909041c78784040000ed06ffff49c7879004000014000000e8000000000f1f840000000000488bde9090909090909041c78784040000cdc2ffff49c7879004000094020000e8000000000f1f840000000000488bde90909049c7c00000000041bbe70effff9090909090909045899f840400004d898790040000e8000000000f1f840000000000488bde90909049c7c00000000041bbe70affffebc9488bde90909049c7c01405000041bbed16ffffebb448896c2430e800000000e9faf7fffff448890424e800000000e91efafffff448891424e800000000e96bfafffff4488d0d73faffff49898f68040000e98ef7fffff448891424e800000000e9f8fcfffff448893424e800000000e94efdfffff441c78784040000f585ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f572ffff49c7879004000000000000e8000000000f1f84000000000041c787840400008fb3fdff49c7879004000000000000e8000000000f1f84000000000041c787840400008f03feff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 NOP  <||@
  Comment 73 32 NOP  <||@
  Comment 74 34 NOP  <||@
  Comment 75 36 NOP  <||@
  Comment 76 38 NOP  <||@
  Comment 77 40 NOP  <||@
  Comment 78 42 NOP  <||@
  Comment 79 44 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 84 46 [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@32f57492 slotKind: QWORD  <||@
  Comment 84 48 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 89 50 r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 92 52 rdi|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 92 [rsi:0, r11:0, stack:24]at java.lang.String.<init>(String.java:4783) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |r11|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 92 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 96 54 r8|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD  <||@
  Comment 100 56 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3  <||@
  Comment 107 58 rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 117 60 rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 140154094223360 shift: 0  <||@
  Comment 121 62 AMD64HOTSPOTSTRATEGYSWITCH ~key: rdi|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B64 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 121 {DataSection[0x0]}  <||@
  Comment 134 {DataSection[0x8]}  <||@
  Comment 152 block B1 null  <||@
  Comment 152 64 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 152 66 NOP  <||@
  Comment 153 68 NOP  <||@
  Comment 154 70 NOP  <||@
  Comment 155 72 NOP  <||@
  Comment 156 74 rdi|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 160 76 r10|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 163 78 JUMP ~outgoingValues: [] destination: B1 -> B36  <||@
  Comment 163 block B36 null  <||@
  Comment 163 660 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 163 662 NOP  <||@
  Comment 164 664 NOP  <||@
  Comment 165 666 NOP  <||@
  Comment 166 668 NOP  <||@
  Comment 167 670 CMPCONSTBRANCH x: [r11|QWORD[.] + 16] trueDestinationProbability: 0.9999908853703156 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B60 y: 0 size: BYTE inlinedY: null  <||@
  Comment 178 block B37 null  <||@
  Comment 178 672 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 178 674 NOP  <||@
  Comment 179 676 NOP  <||@
  Comment 180 678 NOP  <||@
  Comment 181 680 NOP  <||@
  Comment 182 682 NOP  <||@
  Comment 183 684 NOP  <||@
  Comment 184 686 NOP  <||@
  Comment 185 688 r8|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD state [bci:13]  <||@
  Comment 185 [rsi:0, r9:0, r11:0, stack:24]at java.lang.String.<init>(String.java:4785) [bci: 13, duringCall: false, rethrow: false]
              |0             |1             |2  |3            |4  |5 
     locals:  |rsi|QWORD[.]  |r11|QWORD[.]  |-  |r9|QWORD[.]  |-  |- 
     stack:   |r10|DWORD     |              |   |             |   |    <||@
  Comment 185 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 193 690 MOVB x: [rsi|QWORD[.] + 16] y: 0 size: BYTE  <||@
  Comment 197 692 CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.2541630105061688 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B42 size: DWORD  <||@
  Comment 206 block B42 null  <||@
  Comment 206 856 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 206 858 NOP  <||@
  Comment 207 860 NOP  <||@
  Comment 208 862 NOP  <||@
  Comment 209 864 NOP  <||@
  Comment 210 866 TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD  <||@
  Comment 219 block B44 null  <||@
  Comment 219 884 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 219 886 NOP  <||@
  Comment 220 888 NOP  <||@
  Comment 221 890 NOP  <||@
  Comment 222 892 NOP  <||@
  Comment 223 894 NOP  <||@
  Comment 224 896 NOP  <||@
  Comment 225 898 NOP  <||@
  Comment 226 900 NOP  <||@
  Comment 227 902 NOP  <||@
  Comment 228 904 NOP  <||@
  Comment 229 906 NOP  <||@
  Comment 230 908 r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 237 910 rdi|QWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 240 912 rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD  <||@
  Comment 244 914 rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD  <||@
  Comment 248 916 rdx|QWORD = ADD (x: rdi|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 254 918 CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD  <||@
  Comment 267 block B46 null  <||@
  Comment 267 958 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 267 960 NOP  <||@
  Comment 268 962 NOP  <||@
  Comment 269 964 NOP  <||@
  Comment 270 966 NOP  <||@
  Comment 271 968 NOP  <||@
  Comment 272 970 NOP  <||@
  Comment 273 972 NOP  <||@
  Comment 274 974 NOP  <||@
  Comment 275 976 NOP  <||@
  Comment 276 978 NOP  <||@
  Comment 277 980 NOP  <||@
  Comment 278 982 NOP  <||@
  Comment 279 984 NOP  <||@
  Comment 280 986 NOP  <||@
  Comment 281 988 MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD  <||@
  Comment 288 990 AMD64PREFETCH ~address: [rdi|QWORD + r11|QWORD * 1 + 256] instr: 0  <||@
  Comment 297 992 AMD64PREFETCH ~address: [rdi|QWORD + r11|QWORD * 1 + 320] instr: 0  <||@
  Comment 306 994 AMD64PREFETCH ~address: [rdi|QWORD + r11|QWORD * 1 + 384] instr: 0  <||@
  Comment 315 996 MOV x: [r11|QWORD] y: 1 size: QWORD  <||@
  Comment 322 998 MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 322 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 330 1000 MOV (x: [r11|QWORD + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 334 1002 rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD  <||@
  Comment 338 1004 CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B51 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 351 block B47 null  <||@
  Comment 351 1006 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 351 1008 NOP  <||@
  Comment 352 1010 NOP  <||@
  Comment 353 1012 NOP  <||@
  Comment 354 1014 rdx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 361 1016 JUMP ~outgoingValues: [] destination: B47 -> B48  <||@
  Comment 366 block B49 loop 0 depth 1 header:540|LoopBegin  <||@
  Comment 366 1030 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 384 1032 NOP  <||@
  Comment 385 1034 NOP  <||@
  Comment 386 1036 NOP  <||@
  Comment 387 1038 NOP  <||@
  Comment 388 1040 NOP  <||@
  Comment 389 1042 NOP  <||@
  Comment 390 1044 NOP  <||@
  Comment 391 1046 MOV x: [r11|QWORD + rdx|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 399 1048 rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD  <||@
  Comment 403 1050 JUMP ~outgoingValues: [] destination: B49 -> B48  <||@
  Comment 403 block B48 loop 0 depth 1 header:540|LoopBegin  <||@
  Comment 403 1018 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 403 1020 NOP  <||@
  Comment 404 1022 NOP  <||@
  Comment 405 1024 NOP  <||@
  Comment 406 1026 NOP  <||@
  Comment 407 1028 CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD  <||@
  Comment 412 block B50 null  <||@
  Comment 412 1052 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 412 1054 NOP  <||@
  Comment 413 1056 NOP  <||@
  Comment 414 1058 NOP  <||@
  Comment 415 1060 JUMP ~outgoingValues: [] destination: B50 -> B52  <||@
  Comment 415 block B52 null  <||@
  Comment 415 1090 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 415 1092 NOP  <||@
  Comment 416 1094 NOP  <||@
  Comment 417 1096 NOP  <||@
  Comment 418 1098 NOP  <||@
  Comment 419 1100 r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 419 1102 JUMP ~outgoingValues: [] destination: B52 -> B53  <||@
  Comment 419 block B53 null  <||@
  Comment 419 1104 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 419 1106 NOP  <||@
  Comment 420 1108 NOP  <||@
  Comment 421 1110 NOP  <||@
  Comment 422 1112 NOP  <||@
  Comment 423 1114 NOP  <||@
  Comment 424 1116 NOP  <||@
  Comment 425 1118 CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 428 1120 rdi|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: >  <||@
  Comment 435 1122 CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD  <||@
  Comment 444 block B55 null  <||@
  Comment 444 1140 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 444 1142 NOP  <||@
  Comment 445 1144 NOP  <||@
  Comment 446 1146 NOP  <||@
  Comment 447 1148 NOP  <||@
  Comment 448 1150 CMPBRANCH (x: rdi|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B58 size: DWORD  <||@
  Comment 457 block B58 null  <||@
  Comment 457 1190 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 457 1192 NOP  <||@
  Comment 458 1194 NOP  <||@
  Comment 459 1196 NOP  <||@
  Comment 460 1198 NOP  <||@
  Comment 461 1200 NOP  <||@
  Comment 462 1202 NOP  <||@
  Comment 463 1204 NOP  <||@
  Comment 464 1206 NOP  <||@
  Comment 465 1208 NOP  <||@
  Comment 466 1210 NOP  <||@
  Comment 467 1212 NOP  <||@
  Comment 468 1214 NOP  <||@
  Comment 469 1216 NOP  <||@
  Comment 470 1218 NOP  <||@
  Comment 471 1220 NOP  <||@
  Comment 472 1222 r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 472 1224 rdx|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 475 1226 r10|QWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 478 1228 rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD  <||@
  Comment 482 1230 rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD  <||@
  Comment 486 1232 rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 489 1234 stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 494 1236 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 494 {Field[name=StubRoutines::_jbyte_disjoint_arraycopy, type=address, offset=0, address=0x7f78b1ffa4b8, value=140155947490624]:0x7f7899769d40}  <||@
  Comment 499 1242 JUMP ~outgoingValues: [] destination: B58 -> B59  <||@
  Comment 499 block B59 null  <||@
  Comment 499 1244 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 499 850 r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 504 852 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 509 1246 NOP  <||@
  Comment 510 1248 NOP  <||@
  Comment 511 1250 NOP  <||@
  Comment 512 1252 NOP  <||@
  Comment 513 1254 NOP  <||@
  Comment 514 1256 NOP  <||@
  Comment 515 1258 NOP  <||@
  Comment 516 1260 NOP  <||@
  Comment 517 1262 NOP  <||@
  Comment 518 1264 NOP  <||@
  Comment 519 1266 NOP  <||@
  Comment 520 1268 NOP  <||@
  Comment 521 1270 NOP  <||@
  Comment 522 1272 NOP  <||@
  Comment 523 1274 NOP  <||@
  Comment 524 1276 NOP  <||@
  Comment 525 1278 NOP  <||@
  Comment 526 1280 NOP  <||@
  Comment 527 1282 NOP  <||@
  Comment 528 1284 NOP  <||@
  Comment 529 1286 NOP  <||@
  Comment 530 1288 NOP  <||@
  Comment 531 1290 NOP  <||@
  Comment 532 1292 NOP  <||@
  Comment 533 1294 NOP  <||@
  Comment 534 1296 NOP  <||@
  Comment 535 1298 NOP  <||@
  Comment 536 1300 NOP  <||@
  Comment 537 1302 NOP  <||@
  Comment 538 1304 NOP  <||@
  Comment 539 1306 NOP  <||@
  Comment 540 1308 NOP  <||@
  Comment 541 1310 NOP  <||@
  Comment 542 1312 NOP  <||@
  Comment 543 1314 NOP  <||@
  Comment 544 1316 NOP  <||@
  Comment 545 1318 NOP  <||@
  Comment 546 1320 NOP  <||@
  Comment 547 1322 NOP  <||@
  Comment 548 1324 NOP  <||@
  Comment 549 1326 NOP  <||@
  Comment 550 1328 NOP  <||@
  Comment 551 1330 NOP  <||@
  Comment 552 1332 NOP  <||@
  Comment 553 1334 NOP  <||@
  Comment 554 1336 NOP  <||@
  Comment 555 1338 NOP  <||@
  Comment 556 1340 NOP  <||@
  Comment 557 1342 NOP  <||@
  Comment 558 1344 NOP  <||@
  Comment 559 1346 NOP  <||@
  Comment 560 1348 NOP  <||@
  Comment 561 1350 NOP  <||@
  Comment 562 1352 NOP  <||@
  Comment 563 1354 NOP  <||@
  Comment 564 1356 NOP  <||@
  Comment 565 1358 AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d  <||@
  Comment 621 1360 rdx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3  <||@
  Comment 628 1362 MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD  <||@
  Comment 631 1364 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d  <||@
  Comment 713 1366 JUMP ~outgoingValues: [] destination: B59 -> B62  <||@
  Comment 713 block B62 null  <||@
  Comment 713 1538 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 713 1540 NOP  <||@
  Comment 714 1542 NOP  <||@
  Comment 715 1544 NOP  <||@
  Comment 716 1546 NOP  <||@
  Comment 717 1548 NOP  <||@
  Comment 718 1550 NOP  <||@
  Comment 719 1552 NOP  <||@
  Comment 720 1554 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 729 POLL_RETURN_FAR  <||@
  Comment 746 block B38 null  <||@
  Comment 746 694 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 746 696 NOP  <||@
  Comment 747 698 NOP  <||@
  Comment 748 700 NOP  <||@
  Comment 749 702 NOP  <||@
  Comment 750 704 NOP  <||@
  Comment 751 706 NOP  <||@
  Comment 752 708 NOP  <||@
  Comment 753 710 NOP  <||@
  Comment 754 712 NOP  <||@
  Comment 755 714 NOP  <||@
  Comment 756 716 NOP  <||@
  Comment 757 718 rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 764 720 r11|QWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 767 722 rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD  <||@
  Comment 771 724 rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD  <||@
  Comment 775 726 rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 781 728 CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD  <||@
  Comment 794 block B40 null  <||@
  Comment 794 764 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 794 766 NOP  <||@
  Comment 795 768 NOP  <||@
  Comment 796 770 NOP  <||@
  Comment 797 772 NOP  <||@
  Comment 798 774 NOP  <||@
  Comment 799 776 NOP  <||@
  Comment 800 778 NOP  <||@
  Comment 801 780 NOP  <||@
  Comment 802 782 NOP  <||@
  Comment 803 784 NOP  <||@
  Comment 804 786 NOP  <||@
  Comment 805 788 MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD  <||@
  Comment 812 790 AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0  <||@
  Comment 820 792 AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0  <||@
  Comment 828 794 AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0  <||@
  Comment 836 796 MOV x: [rdi|QWORD] y: 1 size: QWORD  <||@
  Comment 843 798 MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 843 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 850 800 MOV (x: [rdi|QWORD + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 854 802 rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD  <||@
  Comment 854 804 JUMP ~outgoingValues: [] destination: B40 -> B41  <||@
  Comment 854 block B41 null  <||@
  Comment 854 806 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 854 808 NOP  <||@
  Comment 855 810 NOP  <||@
  Comment 856 812 NOP  <||@
  Comment 857 814 NOP  <||@
  Comment 858 816 NOP  <||@
  Comment 859 818 NOP  <||@
  Comment 860 820 NOP  <||@
  Comment 861 822 NOP  <||@
  Comment 862 824 NOP  <||@
  Comment 863 826 NOP  <||@
  Comment 864 828 NOP  <||@
  Comment 865 830 NOP  <||@
  Comment 866 832 NOP  <||@
  Comment 867 834 NOP  <||@
  Comment 868 836 r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 868 838 rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 871 840 stack:48|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 876 842 rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD  <||@
  Comment 880 844 rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 884 846 rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 887 848 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 887 {Field[name=StubRoutines::_jbyte_disjoint_arraycopy, type=address, offset=0, address=0x7f78b1ffa4b8, value=140155947490624]:0x7f7899769d40}  <||@
  Comment 892 854 JUMP ~outgoingValues: [] destination: B41 -> B59  <||@
  Comment 897 block B45 null  <||@
  Comment 897 920 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 897 922 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 897 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 907 924 NOP  <||@
  Comment 908 926 NOP  <||@
  Comment 909 928 NOP  <||@
  Comment 910 930 NOP  <||@
  Comment 911 932 NOP  <||@
  Comment 912 934 NOP  <||@
  Comment 913 936 NOP  <||@
  Comment 914 938 NOP  <||@
  Comment 915 940 NOP  <||@
  Comment 916 942 rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 919 944 rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD  <||@
  Comment 922 946 rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 925 948 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27]  <||@
  Comment 925 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 930 [rbx:0, r9:0, stack:24]at java.lang.String.<init>(String.java:4788) [bci: 27, duringCall: false, rethrow: false]
              |0             |1  |2  |3            |4          |5 
     locals:  |rbx|QWORD[.]  |-  |-  |r9|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 938 950 NULLCHECK address: [rax|QWORD[.]] state [bci:27]  <||@
  Comment 938 [rax:0, rbx:0, r9:0, stack:24]at java.lang.String.<init>(String.java:4788) [bci: 27, duringCall: false, rethrow: false]
              |0             |1  |2  |3            |4          |5 
     locals:  |rbx|QWORD[.]  |-  |-  |r9|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 938 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 940 952 r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 943 954 rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 946 956 JUMP ~outgoingValues: [] destination: B45 -> B53  <||@
  Comment 951 block B51 null  <||@
  Comment 951 1062 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 951 1064 rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 954 1066 NOP  <||@
  Comment 955 1068 NOP  <||@
  Comment 956 1070 NOP  <||@
  Comment 957 1072 NOP  <||@
  Comment 958 1074 NOP  <||@
  Comment 959 1076 NOP  <||@
  Comment 960 1078 NOP  <||@
  Comment 961 1080 NOP  <||@
  Comment 962 1082 NOP  <||@
  Comment 963 1084 ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 973 1088 JUMP ~outgoingValues: [] destination: B51 -> B52  <||@
  Comment 978 block B39 null  <||@
  Comment 978 730 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 978 732 rbx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 983 734 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 983 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 993 736 NOP  <||@
  Comment 994 738 NOP  <||@
  Comment 995 740 NOP  <||@
  Comment 996 742 NOP  <||@
  Comment 997 744 NOP  <||@
  Comment 998 746 NOP  <||@
  Comment 999 748 NOP  <||@
  Comment 1000 750 NOP  <||@
  Comment 1001 752 NOP  <||@
  Comment 1002 754 rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1005 756 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27]  <||@
  Comment 1005 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1010 [rbx:0, r9:0, stack:24]at java.lang.String.<init>(String.java:4788) [bci: 27, duringCall: false, rethrow: false]
              |0             |1  |2  |3            |4          |5 
     locals:  |rbx|QWORD[.]  |-  |-  |r9|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 1018 758 NULLCHECK address: [rax|QWORD[.]] state [bci:27]  <||@
  Comment 1018 [rax:0, rbx:0, r9:0, stack:24]at java.lang.String.<init>(String.java:4788) [bci: 27, duringCall: false, rethrow: false]
              |0             |1  |2  |3            |4          |5 
     locals:  |rbx|QWORD[.]  |-  |-  |r9|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 1018 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1020 760 rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1023 762 JUMP ~outgoingValues: [] destination: B39 -> B41  <||@
  Comment 1028 block B2 null  <||@
  Comment 1028 80 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1028 82 rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1031 84 NOP  <||@
  Comment 1032 86 NOP  <||@
  Comment 1033 88 NOP  <||@
  Comment 1034 90 NOP  <||@
  Comment 1035 92 NOP  <||@
  Comment 1036 94 NOP  <||@
  Comment 1037 96 NOP  <||@
  Comment 1038 98 r10|QWORD = MOV input: [r11|QWORD[.]] size: QWORD  <||@
  Comment 1041 100 rcx|QWORD = STACKLEA slot: stack:32|QWORD  <||@
  Comment 1046 102 BITTESTANDBRANCH value: r10|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B2 -> B3 falseDestination: B2 -> B8 index: 1  <||@
  Comment 1057 block B3 null  <||@
  Comment 1057 104 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1057 106 NOP  <||@
  Comment 1058 108 NOP  <||@
  Comment 1059 110 NOP  <||@
  Comment 1060 112 NOP  <||@
  Comment 1061 114 NOP  <||@
  Comment 1062 116 NOP  <||@
  Comment 1063 118 NOP  <||@
  Comment 1064 120 NOP  <||@
  Comment 1065 122 NOP  <||@
  Comment 1066 124 NOP  <||@
  Comment 1067 126 NOP  <||@
  Comment 1068 128 NOP  <||@
  Comment 1069 130 NOP  <||@
  Comment 1070 132 r10|QWORD = OR x: r10|QWORD y: 1 size: QWORD  <||@
  Comment 1074 134 MOV (x: [rcx|QWORD], y: r10|QWORD) size: QWORD  <||@
  Comment 1077 136 rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 1080 138 rax|QWORD = CAS (address: [r11|QWORD[.]], cmpValue: rax|QWORD, newValue: rcx|QWORD) accessKind: QWORD  <||@
  Comment 1085 140 CMPBRANCH (x: rax|QWORD, y: r10|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD  <||@
  Comment 1094 block B4 null  <||@
  Comment 1094 142 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1094 144 NOP  <||@
  Comment 1095 146 NOP  <||@
  Comment 1096 148 NOP  <||@
  Comment 1097 150 JUMP ~outgoingValues: [] destination: B4 -> B14  <||@
  Comment 1097 block B14 null  <||@
  Comment 1097 284 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1097 286 NOP  <||@
  Comment 1098 288 NOP  <||@
  Comment 1099 290 NOP  <||@
  Comment 1100 292 NOP  <||@
  Comment 1101 294 INC value: [r15|QWORD + 1360] size: QWORD  <||@
  Comment 1108 296 JUMP ~outgoingValues: [] destination: B14 -> B17  <||@
  Comment 1108 block B17 null  <||@
  Comment 1108 332 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1108 334 NOP  <||@
  Comment 1109 336 NOP  <||@
  Comment 1110 338 NOP  <||@
  Comment 1111 340 NOP  <||@
  Comment 1112 342 NOP  <||@
  Comment 1113 344 NOP  <||@
  Comment 1114 346 NOP  <||@
  Comment 1115 348 NOP  <||@
  Comment 1116 350 r10|QWORD = STACKLEA slot: stack:32|QWORD  <||@
  Comment 1121 352 rsi|QWORD = MOV input: [r10|QWORD] size: QWORD  <||@
  Comment 1124 354 rcx|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 1128 356 TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD  <||@
  Comment 1137 block B19 null  <||@
  Comment 1137 368 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1137 370 NOP  <||@
  Comment 1138 372 NOP  <||@
  Comment 1139 374 NOP  <||@
  Comment 1140 376 NOP  <||@
  Comment 1141 378 NOP  <||@
  Comment 1142 380 rax|QWORD = MOV input: [r11|QWORD[.]] size: QWORD  <||@
  Comment 1145 382 BITTESTANDBRANCH value: rax|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B19 -> B20 falseDestination: B19 -> B21 index: 1  <||@
  Comment 1156 block B20 null  <||@
  Comment 1156 384 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1156 386 NOP  <||@
  Comment 1157 388 NOP  <||@
  Comment 1158 390 NOP  <||@
  Comment 1159 392 NOP  <||@
  Comment 1160 394 NOP  <||@
  Comment 1161 396 NOP  <||@
  Comment 1162 398 NOP  <||@
  Comment 1163 400 NOP  <||@
  Comment 1164 402 NOP  <||@
  Comment 1165 404 NOP  <||@
  Comment 1166 406 NOP  <||@
  Comment 1167 408 rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 1170 410 rax|QWORD = CAS (address: [r11|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD  <||@
  Comment 1175 412 rsi|DWORD = SETCC condition: =  <||@
  Comment 1183 414 JUMP ~outgoingValues: [] destination: B20 -> B28  <||@
  Comment 1183 block B28 null  <||@
  Comment 1183 548 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1183 550 NOP  <||@
  Comment 1184 552 NOP  <||@
  Comment 1185 554 NOP  <||@
  Comment 1186 556 NOP  <||@
  Comment 1187 558 TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD  <||@
  Comment 1195 block B31 null  <||@
  Comment 1195 594 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1195 596 NOP  <||@
  Comment 1196 598 NOP  <||@
  Comment 1197 600 NOP  <||@
  Comment 1198 602 JUMP ~outgoingValues: [] destination: B31 -> B34  <||@
  Comment 1198 block B34 null  <||@
  Comment 1198 632 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1198 634 NOP  <||@
  Comment 1199 636 NOP  <||@
  Comment 1200 638 NOP  <||@
  Comment 1201 640 NOP  <||@
  Comment 1202 642 DEC value: [r15|QWORD + 1360] size: QWORD  <||@
  Comment 1209 644 JUMP ~outgoingValues: [] destination: B34 -> B35  <||@
  Comment 1209 block B35 null  <||@
  Comment 1209 646 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1209 648 NOP  <||@
  Comment 1210 650 NOP  <||@
  Comment 1211 652 NOP  <||@
  Comment 1212 654 r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1215 656 rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1218 658 JUMP ~outgoingValues: [] destination: B35 -> B36  <||@
  Comment 1223 block B60 null  <||@
  Comment 1223 1368 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1223 1370 rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1226 1372 NOP  <||@
  Comment 1227 1374 NOP  <||@
  Comment 1228 1376 NOP  <||@
  Comment 1229 1378 NOP  <||@
  Comment 1230 1380 CMPCONSTBRANCH x: [r11|QWORD[.] + 17] trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 y: 0 size: BYTE inlinedY: null  <||@
  Comment 1241 block B61 null  <||@
  Comment 1241 1382 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1241 1384 NOP  <||@
  Comment 1242 1386 NOP  <||@
  Comment 1243 1388 NOP  <||@
  Comment 1244 1390 NOP  <||@
  Comment 1245 1392 NOP  <||@
  Comment 1246 1394 NOP  <||@
  Comment 1247 1396 NOP  <||@
  Comment 1248 1398 NOP  <||@
  Comment 1249 1400 NOP  <||@
  Comment 1250 1402 NOP  <||@
  Comment 1251 1404 NOP  <||@
  Comment 1252 1406 NOP  <||@
  Comment 1253 1408 NOP  <||@
  Comment 1254 1410 NOP  <||@
  Comment 1255 1412 NOP  <||@
  Comment 1256 1414 NOP  <||@
  Comment 1257 1416 NOP  <||@
  Comment 1258 1418 NOP  <||@
  Comment 1259 1420 NOP  <||@
  Comment 1260 1422 NOP  <||@
  Comment 1261 1424 NOP  <||@
  Comment 1262 1426 NOP  <||@
  Comment 1263 1428 NOP  <||@
  Comment 1264 1430 NOP  <||@
  Comment 1265 1432 NOP  <||@
  Comment 1266 1434 NOP  <||@
  Comment 1267 1436 NOP  <||@
  Comment 1268 1438 NOP  <||@
  Comment 1269 1440 NOP  <||@
  Comment 1270 1442 NOP  <||@
  Comment 1271 1444 NOP  <||@
  Comment 1272 1446 NOP  <||@
  Comment 1273 1448 NOP  <||@
  Comment 1274 1450 NOP  <||@
  Comment 1275 1452 NOP  <||@
  Comment 1276 1454 NOP  <||@
  Comment 1277 1456 NOP  <||@
  Comment 1278 1458 NOP  <||@
  Comment 1279 1460 NOP  <||@
  Comment 1280 1462 NOP  <||@
  Comment 1281 1464 NOP  <||@
  Comment 1282 1466 NOP  <||@
  Comment 1283 1468 NOP  <||@
  Comment 1284 1470 NOP  <||@
  Comment 1285 1472 NOP  <||@
  Comment 1286 1474 NOP  <||@
  Comment 1287 1476 NOP  <||@
  Comment 1288 1478 NOP  <||@
  Comment 1289 1480 NOP  <||@
  Comment 1290 1482 NOP  <||@
  Comment 1291 1484 NOP  <||@
  Comment 1292 1486 NOP  <||@
  Comment 1293 1488 NOP  <||@
  Comment 1294 1490 NOP  <||@
  Comment 1295 1492 NOP  <||@
  Comment 1296 1494 NOP  <||@
  Comment 1297 1496 NOP  <||@
  Comment 1298 1498 NOP  <||@
  Comment 1299 1500 NOP  <||@
  Comment 1300 1502 NOP  <||@
  Comment 1301 1504 NOP  <||@
  Comment 1302 1506 NOP  <||@
  Comment 1303 1508 NOP  <||@
  Comment 1304 1510 NOP  <||@
  Comment 1305 1512 NOP  <||@
  Comment 1306 1514 MOVB x: [rbx|QWORD[.] + 16] y: 1 size: BYTE  <||@
  Comment 1310 1516 r10|DWORD = SHL value: r10|DWORD size: DWORD  <||@
  Comment 1313 1518 rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1316 1520 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1321 1522 rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 1324 1524 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOfRange(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:92]  <||@
  Comment 1327 {HotSpotMethod<Arrays.copyOfRange(byte[], int, int)>}  <||@
  Comment 1327 INVOKESTATIC  <||@
  Comment 1332 [stack:24]at java.lang.String.<init>(String.java:4800) [bci: 92, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5 
     locals:  |-                  |-  |-  |-  |-  |- 
     stack:   |stack:40|QWORD[.]  |   |   |   |   |    <||@
  Comment 1340 1526 rbx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1345 1528 AMD64G1PREWRITEBARRIER (~address: [rbx|QWORD[.] + 20], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d  <||@
  Comment 1401 1530 rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3  <||@
  Comment 1408 1532 MOV (x: [rbx|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 1411 1534 AMD64G1POSTWRITEBARRIER (~address: rbx|QWORD[.], ~newValue: rax|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d  <||@
  Comment 1502 1536 JUMP ~outgoingValues: [] destination: B61 -> B62  <||@
  Comment 1507 block B18 null  <||@
  Comment 1507 358 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1507 360 NOP  <||@
  Comment 1508 362 NOP  <||@
  Comment 1509 364 NOP  <||@
  Comment 1510 366 JUMP ~outgoingValues: [] destination: B18 -> B34  <||@
  Comment 1515 block B29 null  <||@
  Comment 1515 560 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1515 562 NOP  <||@
  Comment 1516 564 NOP  <||@
  Comment 1517 566 NOP  <||@
  Comment 1518 568 JUMP ~outgoingValues: [] destination: B29 -> B30  <||@
  Comment 1518 block B30 null  <||@
  Comment 1518 570 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1518 572 NOP  <||@
  Comment 1519 574 NOP  <||@
  Comment 1520 576 NOP  <||@
  Comment 1521 578 NOP  <||@
  Comment 1522 580 NOP  <||@
  Comment 1523 582 NOP  <||@
  Comment 1524 584 NOP  <||@
  Comment 1525 586 rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1528 588 rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 1531 590 - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]  <||@
  Comment 1531 {Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]}  <||@
  Comment 1536 592 JUMP ~outgoingValues: [] destination: B30 -> B35  <||@
  Comment 1541 block B8 null  <||@
  Comment 1541 192 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1541 194 NOP  <||@
  Comment 1542 196 NOP  <||@
  Comment 1543 198 NOP  <||@
  Comment 1544 200 NOP  <||@
  Comment 1545 202 NOP  <||@
  Comment 1546 204 NOP  <||@
  Comment 1547 206 MOV x: [rcx|QWORD] y: 3 size: QWORD  <||@
  Comment 1554 208 rsi|QWORD = MOV input: [r10|QWORD + 62] size: QWORD  <||@
  Comment 1558 210 TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD  <||@
  Comment 1567 block B9 null  <||@
  Comment 1567 212 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1567 214 NOP  <||@
  Comment 1568 216 NOP  <||@
  Comment 1569 218 NOP  <||@
  Comment 1570 220 NOP  <||@
  Comment 1571 222 NOP  <||@
  Comment 1572 224 NOP  <||@
  Comment 1573 226 NOP  <||@
  Comment 1574 228 NOP  <||@
  Comment 1575 230 NOP  <||@
  Comment 1576 232 rax|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1583 234 rax|QWORD = CAS (address: [r10|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD  <||@
  Comment 1589 236 BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 1595 block B11 null  <||@
  Comment 1595 248 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1595 250 NOP  <||@
  Comment 1596 252 NOP  <||@
  Comment 1597 254 NOP  <||@
  Comment 1598 256 JUMP ~outgoingValues: [] destination: B11 -> B14  <||@
  Comment 1603 block B5 null  <||@
  Comment 1603 152 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1603 154 NOP  <||@
  Comment 1604 156 NOP  <||@
  Comment 1605 158 NOP  <||@
  Comment 1606 160 NOP  <||@
  Comment 1607 162 NOP  <||@
  Comment 1608 164 rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD  <||@
  Comment 1611 166 TESTCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -4089 size: QWORD  <||@
  Comment 1624 block B6 null  <||@
  Comment 1624 168 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1624 170 NOP  <||@
  Comment 1625 172 NOP  <||@
  Comment 1626 174 NOP  <||@
  Comment 1627 176 NOP  <||@
  Comment 1628 178 MOV x: [rcx|QWORD] y: 0 size: QWORD  <||@
  Comment 1635 180 JUMP ~outgoingValues: [] destination: B6 -> B14  <||@
  Comment 1640 block B21 null  <||@
  Comment 1640 416 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1640 418 NOP  <||@
  Comment 1641 420 NOP  <||@
  Comment 1642 422 NOP  <||@
  Comment 1643 424 NOP  <||@
  Comment 1644 426 NOP  <||@
  Comment 1645 428 NOP  <||@
  Comment 1646 430 rdi|QWORD = MOV input: [r11|QWORD[.]] size: QWORD  <||@
  Comment 1649 432 rdx|QWORD = MOV input: [rdi|QWORD + 134] size: QWORD  <||@
  Comment 1656 434 TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B33 size: QWORD  <||@
  Comment 1665 block B22 null  <||@
  Comment 1665 436 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1665 438 NOP  <||@
  Comment 1666 440 NOP  <||@
  Comment 1667 442 NOP  <||@
  Comment 1668 444 NOP  <||@
  Comment 1669 446 NOP  <||@
  Comment 1670 448 NOP  <||@
  Comment 1671 450 rax|QWORD = MOV input: [rdi|QWORD + 150] size: QWORD  <||@
  Comment 1678 452 rax|QWORD = OR (x: rax|QWORD, ~y: [rdi|QWORD + 142]) size: QWORD  <||@
  Comment 1685 454 TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD  <||@
  Comment 1694 block B23 null  <||@
  Comment 1694 456 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1694 458 NOP  <||@
  Comment 1695 460 NOP  <||@
  Comment 1696 462 NOP  <||@
  Comment 1697 464 NOP  <||@
  Comment 1698 466 MOV x: [rdi|QWORD + 62] y: 0 size: QWORD  <||@
  Comment 1706 468 JUMP ~outgoingValues: [] destination: B23 -> B34  <||@
  Comment 1711 block B12 null  <||@
  Comment 1711 258 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1711 260 NOP  <||@
  Comment 1712 262 NOP  <||@
  Comment 1713 264 NOP  <||@
  Comment 1714 266 NOP  <||@
  Comment 1715 268 CMPBRANCH (x: rsi|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B15 size: QWORD  <||@
  Comment 1724 block B15 null  <||@
  Comment 1724 298 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1724 300 NOP  <||@
  Comment 1725 302 NOP  <||@
  Comment 1726 304 NOP  <||@
  Comment 1727 306 JUMP ~outgoingValues: [] destination: B15 -> B16  <||@
  Comment 1727 block B16 null  <||@
  Comment 1727 308 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1727 310 NOP  <||@
  Comment 1728 312 NOP  <||@
  Comment 1729 314 NOP  <||@
  Comment 1730 316 NOP  <||@
  Comment 1731 318 NOP  <||@
  Comment 1732 320 NOP  <||@
  Comment 1733 322 NOP  <||@
  Comment 1734 324 rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1737 326 rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD  <||@
  Comment 1740 328 - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0, 10]  <||@
  Comment 1740 {Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL}  <||@
  Comment 1745 [rbx:0, r8:0, r9:0, r11:0, stack:24]at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0, duringCall: false, rethrow: false]
              |0                                     
     locals:  |r11|QWORD[.]                          
     locks:   |monitor[r11|QWORD[.], stack:32|QWORD] 
  at java.lang.String.<init>(String.java:4785) [bci: 10, duringCall: true, rethrow: false]
              |0             |1             |2  |3            |4  |5 
     locals:  |rbx|QWORD[.]  |r11|QWORD[.]  |-  |r9|QWORD[.]  |-  |-   <||@
  Comment 1753 330 JUMP ~outgoingValues: [] destination: B16 -> B17  <||@
  Comment 1758 block B10 null  <||@
  Comment 1758 238 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1758 240 NOP  <||@
  Comment 1759 242 NOP  <||@
  Comment 1760 244 NOP  <||@
  Comment 1761 246 JUMP ~outgoingValues: [] destination: B10 -> B16  <||@
  Comment 1763 block B24 null  <||@
  Comment 1763 470 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1763 472 NOP  <||@
  Comment 1764 474 NOP  <||@
  Comment 1765 476 NOP  <||@
  Comment 1766 478 NOP  <||@
  Comment 1767 480 CMPCONSTBRANCH x: [rdi|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 0 size: QWORD inlinedY: null  <||@
  Comment 1781 block B26 null  <||@
  Comment 1781 492 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1781 494 NOP  <||@
  Comment 1782 496 NOP  <||@
  Comment 1783 498 NOP  <||@
  Comment 1784 500 NOP  <||@
  Comment 1785 502 NOP  <||@
  Comment 1786 504 NOP  <||@
  Comment 1787 506 MOV x: [rdi|QWORD + 62] y: 0 size: QWORD  <||@
  Comment 1795 508 MEMBAR barriers: 4  <||@
  Comment 1800 510 CMPCONSTBRANCH x: [rdi|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 y: 0 size: QWORD inlinedY: null  <||@
  Comment 1814 block B27 null  <||@
  Comment 1814 512 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1814 514 NOP  <||@
  Comment 1815 516 NOP  <||@
  Comment 1816 518 NOP  <||@
  Comment 1817 520 NOP  <||@
  Comment 1818 522 NOP  <||@
  Comment 1819 524 NOP  <||@
  Comment 1820 526 NOP  <||@
  Comment 1821 528 NOP  <||@
  Comment 1822 530 NOP  <||@
  Comment 1823 532 NOP  <||@
  Comment 1824 534 NOP  <||@
  Comment 1825 536 NOP  <||@
  Comment 1826 538 rax|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1833 540 rax|QWORD = CAS (address: [rdi|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD  <||@
  Comment 1839 542 rsi|DWORD = SETCC condition: =  <||@
  Comment 1847 544 rsi|DWORD = XOR x: rsi|DWORD y: 1 size: DWORD  <||@
  Comment 1850 546 JUMP ~outgoingValues: [] destination: B27 -> B28  <||@
  Comment 1855 block B13 null  <||@
  Comment 1855 270 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1855 272 NOP  <||@
  Comment 1856 274 NOP  <||@
  Comment 1857 276 NOP  <||@
  Comment 1858 278 NOP  <||@
  Comment 1859 280 INC value: [r10|QWORD + 134] size: QWORD  <||@
  Comment 1866 282 JUMP ~outgoingValues: [] destination: B13 -> B14  <||@
  Comment 1871 block B7 null  <||@
  Comment 1871 182 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1871 184 NOP  <||@
  Comment 1872 186 NOP  <||@
  Comment 1873 188 NOP  <||@
  Comment 1874 190 JUMP ~outgoingValues: [] destination: B7 -> B16  <||@
  Comment 1879 block B33 null  <||@
  Comment 1879 614 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1879 616 NOP  <||@
  Comment 1880 618 NOP  <||@
  Comment 1881 620 NOP  <||@
  Comment 1882 622 NOP  <||@
  Comment 1883 624 NOP  <||@
  Comment 1884 626 rdx|QWORD = DEC value: rdx|QWORD size: QWORD  <||@
  Comment 1887 628 MOV (x: [rdi|QWORD + 134], y: rdx|QWORD) size: QWORD  <||@
  Comment 1894 630 JUMP ~outgoingValues: [] destination: B33 -> B34  <||@
  Comment 1899 block B25 null  <||@
  Comment 1899 482 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1899 484 NOP  <||@
  Comment 1900 486 NOP  <||@
  Comment 1901 488 NOP  <||@
  Comment 1902 490 JUMP ~outgoingValues: [] destination: B25 -> B30  <||@
  Comment 1907 block B32 null  <||@
  Comment 1907 604 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1907 606 NOP  <||@
  Comment 1908 608 NOP  <||@
  Comment 1909 610 NOP  <||@
  Comment 1910 612 JUMP ~outgoingValues: [] destination: B32 -> B34  <||@
  Comment 1915 block B63 null  <||@
  Comment 1915 1556 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1915 1558 NOP  <||@
  Comment 1916 1560 NOP  <||@
  Comment 1917 1562 NOP  <||@
  Comment 1918 1564 NOP  <||@
  Comment 1919 1566 NOP  <||@
  Comment 1920 1568 NOP  <||@
  Comment 1921 1570 NOP  <||@
  Comment 1922 1572 MOV x: [r15|QWORD + 1156] y: -63763 size: DWORD  <||@
  Comment 1933 1574 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 1944 1576 DEOPT info [bci:13]  <||@
  Comment 1944 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1949 [rbx:0, r9:0, r11:0]at java.lang.String.<init>(String.java:4785) [bci: 13, duringCall: false, rethrow: false]
              |0             |1             |2  |3            |4  |5 
     locals:  |rbx|QWORD[.]  |r11|QWORD[.]  |-  |r9|QWORD[.]  |-  |- 
     stack:   |r10|DWORD     |              |   |             |   |    <||@
  Comment 1957 block B64 null  <||@
  Comment 1957 1578 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1957 1580 rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1960 1582 NOP  <||@
  Comment 1961 1584 NOP  <||@
  Comment 1962 1586 NOP  <||@
  Comment 1963 1588 NOP  <||@
  Comment 1964 1590 NOP  <||@
  Comment 1965 1592 NOP  <||@
  Comment 1966 1594 NOP  <||@
  Comment 1967 1596 MOV x: [r15|QWORD + 1156] y: -15667 size: DWORD  <||@
  Comment 1978 1598 MOV x: [r15|QWORD + 1168] y: 660 size: QWORD  <||@
  Comment 1989 1600 DEOPT info [bci:0]  <||@
  Comment 1989 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1994 [rbx:0, r11:0]at java.lang.String.<init>(String.java:4783) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5 
     locals:  |rbx|QWORD[.]  |r11|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 2002 block B54 null  <||@
  Comment 2002 1124 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2002 1126 rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2005 1128 NOP  <||@
  Comment 2006 1130 NOP  <||@
  Comment 2007 1132 NOP  <||@
  Comment 2008 1134 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2015 1136 r11|DWORD = MOVE input: int[-61721|0xffffffffffff0ee7]  <||@
  Comment 2021 1138 JUMP ~outgoingValues: [] destination: B54 -> B57  <||@
  Comment 2021 block B57 null  <||@
  Comment 2021 1168 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 2021 1170 NOP  <||@
  Comment 2022 1172 NOP  <||@
  Comment 2023 1174 NOP  <||@
  Comment 2024 1176 NOP  <||@
  Comment 2025 1178 NOP  <||@
  Comment 2026 1180 NOP  <||@
  Comment 2027 1182 NOP  <||@
  Comment 2028 1184 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 2035 1186 MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD  <||@
  Comment 2042 1188 DEOPT info [bci:27]  <||@
  Comment 2042 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2047 [rbx:0, r9:0]at java.lang.String.<init>(String.java:4788) [bci: 27, duringCall: false, rethrow: false]
              |0             |1  |2  |3            |4          |5 
     locals:  |rbx|QWORD[.]  |-  |-  |r9|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 2055 block B56 null  <||@
  Comment 2055 1152 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2055 1154 rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2058 1156 NOP  <||@
  Comment 2059 1158 NOP  <||@
  Comment 2060 1160 NOP  <||@
  Comment 2061 1162 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2068 1164 r11|DWORD = MOVE input: int[-62745|0xffffffffffff0ae7]  <||@
  Comment 2074 1166 JUMP ~outgoingValues: [] destination: B56 -> B57  <||@
  Comment 2076 block B43 null  <||@
  Comment 2076 868 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2076 870 rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2079 872 NOP  <||@
  Comment 2080 874 NOP  <||@
  Comment 2081 876 NOP  <||@
  Comment 2082 878 r8|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 2089 880 r11|DWORD = MOVE input: int[-59667|0xffffffffffff16ed]  <||@
  Comment 2095 882 JUMP ~outgoingValues: [] destination: B43 -> B57  <||@
  Comment 2102 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 2117 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 2132 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 2157 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 2167 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 2182 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 2215 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2220 [rsi:0, r11:0, stack:24]at java.lang.String.<init>(String.java:4783) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |r11|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 2250 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2255 [rsi:0, r9:0, r11:0, stack:24]at java.lang.String.<init>(String.java:4785) [bci: 13, duringCall: false, rethrow: false]
              |0             |1             |2  |3            |4  |5 
     locals:  |rsi|QWORD[.]  |r11|QWORD[.]  |-  |r9|QWORD[.]  |-  |- 
     stack:   |r10|DWORD     |              |   |             |   |    <||@
  Comment 2285 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2290 [rax:0, rbx:0, r9:0, stack:24]at java.lang.String.<init>(String.java:4788) [bci: 27, duringCall: false, rethrow: false]
              |0             |1  |2  |3            |4          |5 
     locals:  |rbx|QWORD[.]  |-  |-  |r9|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 2320 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2325 [rax:0, rbx:0, r9:0, stack:24]at java.lang.String.<init>(String.java:4788) [bci: 27, duringCall: false, rethrow: false]
              |0             |1  |2  |3            |4          |5 
     locals:  |rbx|QWORD[.]  |-  |-  |r9|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 2333 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2333 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 2339 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 2339 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-3730[java.lang.String.<init>(AbstractStringBuilder, Void)]"
  method "HotSpotCompilation-3730[java.lang.String.<init>(AbstractStringBuilder, Void)]"
  date 1724269723532
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789abf1f00 448b560849bc0000002b787f00004d03d44d33e4493bc20f856331b9fe66669089842400c0feff4883ec389041817f20030000000f85f707000090909090909090909090909090909090909090909048896c243048897424184c8bda418b7b08458b4314458bc849c1e10348ba0000002b787f0000488d3c3a483b3d60ffffff0f8412000000483b3d5bffffff0f8471030000e90d07000090909090418b7b0c448bd79090909041807b10000f851504000090909090909090468b04c50c000000c6461000453bc20f841c020000909090904585d20f8c4107000090909090909090909090904d8b9fb8010000418bfa488d7f174883e7f8488bd74903d3493b97c80100000f87760200009090909090909090909090909090498997b8010000420f18841f00010000420f18841f40010000420f18841f8001000049c7030100000041c74308c02200004589530c488d4ff04881f9000800000f835802000090909048c7c210000000e9250000006666660f1f840000000000666666906666909090909090909049c7041300000000488d520890909090483bfa77e490909090909090909090909090453bc2418bf8410f4ffa413bf80f871606000090909090413bfa0f873e060000909090909090909090909090909090498bd3448bd7498d7910488d7210498bd24c895c2410e84d7cb7fe4c8b5c2410488b742418909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f842d0000008b461448c1e0034885c00f841d000000498b57284883fa000f84e30500004883ea084989572849035738488902498bd348c1ea03895614488bd64933d348c1ea160f8442000000488bd648c1ea0948b800e0368d787f00004803d0803a027429f083042400803a00741fc60200498b47484885c00f84960500004883e808498947484903475848891090909090909090488b6c24304883c438493ba7500400000f8779050000c5f877c39090909090909090909090498bbfb8010000458bd8498d73174883e6f8488bd64803d7493b97c80100000f87b80000009090909090909090909090498997b80100000f18843e000100000f18843e400100000f18843e8001000048c70701000000c74708c02200004489470c9090909090909090909090909090488bf748897c2410498d7910488d7610498bd3e8c47ab7fee972feffff48bac022002b787f0000909090909090909090488bde488bf2418bd2e85ec9cdfe0f1f84000000000085004c8bd8488bf3e9ecfdffff488bde909090909090909090498d7b104833c0f348aae9cdfdffff488b5c241848bec022002b787f0000909090909090909090418bd0e80ec9cdfe0f1f8400000000008500488bf8e952ffffff488bde909090909090904d8b13488d4c2420490fbae2010f82e4010000909090909090909090909090904983ca014c8911498bc2f0490fb10b493bc20f85fd0100009090909090909049ff875005000090909090909090904c8d542420498b32418b4b0c4885f60f84720100009090909090498b03480fbae0010f82e40100009090909090909090909090498bc2f0490fb133400f94c6400fb6f69090909085f60f84400100009090909090909049ff8f50050000909090448bd1488bf3e9dcfbffff488bde9090909041807b11000f85a20200009090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090c643100141d1e2498bf1ba00000000418bca666690e84c35b9fe0f1f840024070006488b5c241841807f40000f842d0000008b531448c1e2034885d20f841d000000498b77284883fe000f84090300004883ee084989772849037738488916488bf048c1ee03897314488bf34833f048c1ee160f844b0000004885c00f8442000000488bf348c1ee0948ba00e0368d787f00004803f2803e027429f083042400803e00741fc60600498b57484885d20f84b30200004883ea084989574849035758488932e9e6fcffff909090e9c3feffff90909090909090909090498bf3498bd2e8002bcdfee9b4feffff90909090909048c70103000000498b723e4885f60f859000000090909090909090909048c7c000000000f04d0fb17a3e0f85a3000000909090e906feffff9090909090482bc448f7c007f0ffff0f85f70000009090909048c70100000000e9e1fdffff909090909090498b3b488b97860000004885d20f85d6000000909090909090488b8796000000480b878e0000004885c00f85450000009090909048c7473e00000000e9fffdffff90909090493bf70f848300000090909090909090909090498bf3488bd1e8af81cdfe0f1f840000000000e976fdffff909090ebdc909090904883bf9e000000000f847600000090909090909048c7473e00000000f0830424004883bf9e000000000f855d00000090909090909090909090909048c7c000000000f04c0fb17f3e400f94c6400fb6f683f601e960fdffff9090909049ff8286000000e9fafcffff909090e968ffffff909090909048ffca48899786000000e943fdffff909090e97bfeffff909090e933fdffff9090909090909041c78784040000ed06ffff49c7879004000014000000e8dd8ab9fe0f1f840000000000488bde9090909090909041c78784040000cdc2ffff49c7879004000094020000e8b08ab9fe0f1f840000000000488bde90909049c7c00000000041bbe70effff9090909090909045899f840400004d898790040000e87b8ab9fe0f1f840000000000488bde90909049c7c00000000041bbe70affffebc9488bde90909049c7c01405000041bbed16ffffebb448896c2430e8e58ab7fee9faf7fffff448890424e8b65acdfee91efafffff448891424e8277ccdfee96bfafffff4488d0d73faffff49898f68040000e98e98b9fef448891424e8845acdfee9f8fcfffff448893424e8f57bcdfee94efdfffff441c78784040000f585ffff49c7879004000000000000e8ce89b9fe0f1f84000000000041c78784040000f572ffff49c7879004000000000000e8ab89b9fe0f1f84000000000041c787840400008fb3fdff49c7879004000000000000e88889b9fe0f1f84000000000041c787840400008f03feff49c7879004000000000000e86589b9fe0f1f840000000000e8de2acdfef4e8f886b9fef4f4f4f4f4f4f4f448bb0000000000000000e9fbfffffff4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 NOP  <||@
  Comment 73 32 NOP  <||@
  Comment 74 34 NOP  <||@
  Comment 75 36 NOP  <||@
  Comment 76 38 NOP  <||@
  Comment 77 40 NOP  <||@
  Comment 78 42 NOP  <||@
  Comment 79 44 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 84 46 [stack:32|QWORD] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@32f57492 slotKind: QWORD  <||@
  Comment 84 48 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 89 50 r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 92 52 rdi|DWORD = MOV input: [r11|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 92 [rsi:0, r11:0, stack:24]at java.lang.String.<init>(String.java:4783) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |r11|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 92 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 96 54 r8|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD  <||@
  Comment 100 56 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3  <||@
  Comment 107 58 rdx|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 117 60 rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: rdx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 140154094223360 shift: 0  <||@
  Comment 121 62 AMD64HOTSPOTSTRATEGYSWITCH ~key: rdi|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/StringBuffer;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2] defaultTarget: B0 -> B64 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 121 {DataSection[0x0]}  <||@
  Comment 134 {DataSection[0x8]}  <||@
  Comment 152 block B1 null  <||@
  Comment 152 64 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 152 66 NOP  <||@
  Comment 153 68 NOP  <||@
  Comment 154 70 NOP  <||@
  Comment 155 72 NOP  <||@
  Comment 156 74 rdi|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 160 76 r10|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 163 78 JUMP ~outgoingValues: [] destination: B1 -> B36  <||@
  Comment 163 block B36 null  <||@
  Comment 163 660 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 163 662 NOP  <||@
  Comment 164 664 NOP  <||@
  Comment 165 666 NOP  <||@
  Comment 166 668 NOP  <||@
  Comment 167 670 CMPCONSTBRANCH x: [r11|QWORD[.] + 16] trueDestinationProbability: 0.9999908853703156 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B60 y: 0 size: BYTE inlinedY: null  <||@
  Comment 178 block B37 null  <||@
  Comment 178 672 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 178 674 NOP  <||@
  Comment 179 676 NOP  <||@
  Comment 180 678 NOP  <||@
  Comment 181 680 NOP  <||@
  Comment 182 682 NOP  <||@
  Comment 183 684 NOP  <||@
  Comment 184 686 NOP  <||@
  Comment 185 688 r8|DWORD = MOV input: [r8|DWORD[_] * 8 + 12] size: DWORD state [bci:13]  <||@
  Comment 185 [rsi:0, r9:0, r11:0, stack:24]at java.lang.String.<init>(String.java:4785) [bci: 13, duringCall: false, rethrow: false]
              |0             |1             |2  |3            |4  |5 
     locals:  |rsi|QWORD[.]  |r11|QWORD[.]  |-  |r9|QWORD[.]  |-  |- 
     stack:   |r10|DWORD     |              |   |             |   |    <||@
  Comment 185 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 193 690 MOVB x: [rsi|QWORD[.] + 16] y: 0 size: BYTE  <||@
  Comment 197 692 CMPBRANCH (x: r8|DWORD, y: r10|DWORD) trueDestinationProbability: 0.2541630105061688 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B42 size: DWORD  <||@
  Comment 206 block B42 null  <||@
  Comment 206 856 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 206 858 NOP  <||@
  Comment 207 860 NOP  <||@
  Comment 208 862 NOP  <||@
  Comment 209 864 NOP  <||@
  Comment 210 866 TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD  <||@
  Comment 219 block B44 null  <||@
  Comment 219 884 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 219 886 NOP  <||@
  Comment 220 888 NOP  <||@
  Comment 221 890 NOP  <||@
  Comment 222 892 NOP  <||@
  Comment 223 894 NOP  <||@
  Comment 224 896 NOP  <||@
  Comment 225 898 NOP  <||@
  Comment 226 900 NOP  <||@
  Comment 227 902 NOP  <||@
  Comment 228 904 NOP  <||@
  Comment 229 906 NOP  <||@
  Comment 230 908 r11|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 237 910 rdi|QWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 240 912 rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD  <||@
  Comment 244 914 rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD  <||@
  Comment 248 916 rdx|QWORD = ADD (x: rdi|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 254 918 CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD  <||@
  Comment 267 block B46 null  <||@
  Comment 267 958 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 267 960 NOP  <||@
  Comment 268 962 NOP  <||@
  Comment 269 964 NOP  <||@
  Comment 270 966 NOP  <||@
  Comment 271 968 NOP  <||@
  Comment 272 970 NOP  <||@
  Comment 273 972 NOP  <||@
  Comment 274 974 NOP  <||@
  Comment 275 976 NOP  <||@
  Comment 276 978 NOP  <||@
  Comment 277 980 NOP  <||@
  Comment 278 982 NOP  <||@
  Comment 279 984 NOP  <||@
  Comment 280 986 NOP  <||@
  Comment 281 988 MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD  <||@
  Comment 288 990 AMD64PREFETCH ~address: [rdi|QWORD + r11|QWORD * 1 + 256] instr: 0  <||@
  Comment 297 992 AMD64PREFETCH ~address: [rdi|QWORD + r11|QWORD * 1 + 320] instr: 0  <||@
  Comment 306 994 AMD64PREFETCH ~address: [rdi|QWORD + r11|QWORD * 1 + 384] instr: 0  <||@
  Comment 315 996 MOV x: [r11|QWORD] y: 1 size: QWORD  <||@
  Comment 322 998 MOV x: [r11|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 322 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 330 1000 MOV (x: [r11|QWORD + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 334 1002 rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD  <||@
  Comment 338 1004 CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B46 -> B47 falseDestination: B46 -> B51 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 351 block B47 null  <||@
  Comment 351 1006 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 351 1008 NOP  <||@
  Comment 352 1010 NOP  <||@
  Comment 353 1012 NOP  <||@
  Comment 354 1014 rdx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 361 1016 JUMP ~outgoingValues: [] destination: B47 -> B48  <||@
  Comment 366 block B49 loop 0 depth 1 header:540|LoopBegin  <||@
  Comment 366 1030 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 384 1032 NOP  <||@
  Comment 385 1034 NOP  <||@
  Comment 386 1036 NOP  <||@
  Comment 387 1038 NOP  <||@
  Comment 388 1040 NOP  <||@
  Comment 389 1042 NOP  <||@
  Comment 390 1044 NOP  <||@
  Comment 391 1046 MOV x: [r11|QWORD + rdx|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 399 1048 rdx|QWORD = LEA address: [rdx|QWORD + 8] size: QWORD  <||@
  Comment 403 1050 JUMP ~outgoingValues: [] destination: B49 -> B48  <||@
  Comment 403 block B48 loop 0 depth 1 header:540|LoopBegin  <||@
  Comment 403 1018 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 403 1020 NOP  <||@
  Comment 404 1022 NOP  <||@
  Comment 405 1024 NOP  <||@
  Comment 406 1026 NOP  <||@
  Comment 407 1028 CMPBRANCH (x: rdi|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD  <||@
  Comment 412 block B50 null  <||@
  Comment 412 1052 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 412 1054 NOP  <||@
  Comment 413 1056 NOP  <||@
  Comment 414 1058 NOP  <||@
  Comment 415 1060 JUMP ~outgoingValues: [] destination: B50 -> B52  <||@
  Comment 415 block B52 null  <||@
  Comment 415 1090 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 415 1092 NOP  <||@
  Comment 416 1094 NOP  <||@
  Comment 417 1096 NOP  <||@
  Comment 418 1098 NOP  <||@
  Comment 419 1100 r11|QWORD[.] = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 419 1102 JUMP ~outgoingValues: [] destination: B52 -> B53  <||@
  Comment 419 block B53 null  <||@
  Comment 419 1104 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 419 1106 NOP  <||@
  Comment 420 1108 NOP  <||@
  Comment 421 1110 NOP  <||@
  Comment 422 1112 NOP  <||@
  Comment 423 1114 NOP  <||@
  Comment 424 1116 NOP  <||@
  Comment 425 1118 CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 428 1120 rdi|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: >  <||@
  Comment 435 1122 CMPBRANCH (x: rdi|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: DWORD  <||@
  Comment 444 block B55 null  <||@
  Comment 444 1140 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 444 1142 NOP  <||@
  Comment 445 1144 NOP  <||@
  Comment 446 1146 NOP  <||@
  Comment 447 1148 NOP  <||@
  Comment 448 1150 CMPBRANCH (x: rdi|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B58 size: DWORD  <||@
  Comment 457 block B58 null  <||@
  Comment 457 1190 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 457 1192 NOP  <||@
  Comment 458 1194 NOP  <||@
  Comment 459 1196 NOP  <||@
  Comment 460 1198 NOP  <||@
  Comment 461 1200 NOP  <||@
  Comment 462 1202 NOP  <||@
  Comment 463 1204 NOP  <||@
  Comment 464 1206 NOP  <||@
  Comment 465 1208 NOP  <||@
  Comment 466 1210 NOP  <||@
  Comment 467 1212 NOP  <||@
  Comment 468 1214 NOP  <||@
  Comment 469 1216 NOP  <||@
  Comment 470 1218 NOP  <||@
  Comment 471 1220 NOP  <||@
  Comment 472 1222 r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 472 1224 rdx|QWORD[*] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 475 1226 r10|QWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 478 1228 rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD  <||@
  Comment 482 1230 rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD  <||@
  Comment 486 1232 rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 489 1234 stack:48|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 494 1236 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 494 {Field[name=StubRoutines::_jbyte_disjoint_arraycopy, type=address, offset=0, address=0x7f78b1ffa4b8, value=140155947490624]:0x7f7899769d40}  <||@
  Comment 499 1242 JUMP ~outgoingValues: [] destination: B58 -> B59  <||@
  Comment 499 block B59 null  <||@
  Comment 499 1244 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 499 850 r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 504 852 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 509 1246 NOP  <||@
  Comment 510 1248 NOP  <||@
  Comment 511 1250 NOP  <||@
  Comment 512 1252 NOP  <||@
  Comment 513 1254 NOP  <||@
  Comment 514 1256 NOP  <||@
  Comment 515 1258 NOP  <||@
  Comment 516 1260 NOP  <||@
  Comment 517 1262 NOP  <||@
  Comment 518 1264 NOP  <||@
  Comment 519 1266 NOP  <||@
  Comment 520 1268 NOP  <||@
  Comment 521 1270 NOP  <||@
  Comment 522 1272 NOP  <||@
  Comment 523 1274 NOP  <||@
  Comment 524 1276 NOP  <||@
  Comment 525 1278 NOP  <||@
  Comment 526 1280 NOP  <||@
  Comment 527 1282 NOP  <||@
  Comment 528 1284 NOP  <||@
  Comment 529 1286 NOP  <||@
  Comment 530 1288 NOP  <||@
  Comment 531 1290 NOP  <||@
  Comment 532 1292 NOP  <||@
  Comment 533 1294 NOP  <||@
  Comment 534 1296 NOP  <||@
  Comment 535 1298 NOP  <||@
  Comment 536 1300 NOP  <||@
  Comment 537 1302 NOP  <||@
  Comment 538 1304 NOP  <||@
  Comment 539 1306 NOP  <||@
  Comment 540 1308 NOP  <||@
  Comment 541 1310 NOP  <||@
  Comment 542 1312 NOP  <||@
  Comment 543 1314 NOP  <||@
  Comment 544 1316 NOP  <||@
  Comment 545 1318 NOP  <||@
  Comment 546 1320 NOP  <||@
  Comment 547 1322 NOP  <||@
  Comment 548 1324 NOP  <||@
  Comment 549 1326 NOP  <||@
  Comment 550 1328 NOP  <||@
  Comment 551 1330 NOP  <||@
  Comment 552 1332 NOP  <||@
  Comment 553 1334 NOP  <||@
  Comment 554 1336 NOP  <||@
  Comment 555 1338 NOP  <||@
  Comment 556 1340 NOP  <||@
  Comment 557 1342 NOP  <||@
  Comment 558 1344 NOP  <||@
  Comment 559 1346 NOP  <||@
  Comment 560 1348 NOP  <||@
  Comment 561 1350 NOP  <||@
  Comment 562 1352 NOP  <||@
  Comment 563 1354 NOP  <||@
  Comment 564 1356 NOP  <||@
  Comment 565 1358 AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d  <||@
  Comment 621 1360 rdx|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3  <||@
  Comment 628 1362 MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD  <||@
  Comment 631 1364 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d  <||@
  Comment 713 1366 JUMP ~outgoingValues: [] destination: B59 -> B62  <||@
  Comment 713 block B62 null  <||@
  Comment 713 1538 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 713 1540 NOP  <||@
  Comment 714 1542 NOP  <||@
  Comment 715 1544 NOP  <||@
  Comment 716 1546 NOP  <||@
  Comment 717 1548 NOP  <||@
  Comment 718 1550 NOP  <||@
  Comment 719 1552 NOP  <||@
  Comment 720 1554 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 729 POLL_RETURN_FAR  <||@
  Comment 746 block B38 null  <||@
  Comment 746 694 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 746 696 NOP  <||@
  Comment 747 698 NOP  <||@
  Comment 748 700 NOP  <||@
  Comment 749 702 NOP  <||@
  Comment 750 704 NOP  <||@
  Comment 751 706 NOP  <||@
  Comment 752 708 NOP  <||@
  Comment 753 710 NOP  <||@
  Comment 754 712 NOP  <||@
  Comment 755 714 NOP  <||@
  Comment 756 716 NOP  <||@
  Comment 757 718 rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 764 720 r11|QWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 767 722 rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD  <||@
  Comment 771 724 rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD  <||@
  Comment 775 726 rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 781 728 CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD  <||@
  Comment 794 block B40 null  <||@
  Comment 794 764 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 794 766 NOP  <||@
  Comment 795 768 NOP  <||@
  Comment 796 770 NOP  <||@
  Comment 797 772 NOP  <||@
  Comment 798 774 NOP  <||@
  Comment 799 776 NOP  <||@
  Comment 800 778 NOP  <||@
  Comment 801 780 NOP  <||@
  Comment 802 782 NOP  <||@
  Comment 803 784 NOP  <||@
  Comment 804 786 NOP  <||@
  Comment 805 788 MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD  <||@
  Comment 812 790 AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0  <||@
  Comment 820 792 AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0  <||@
  Comment 828 794 AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0  <||@
  Comment 836 796 MOV x: [rdi|QWORD] y: 1 size: QWORD  <||@
  Comment 843 798 MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 843 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 850 800 MOV (x: [rdi|QWORD + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 854 802 rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD  <||@
  Comment 854 804 JUMP ~outgoingValues: [] destination: B40 -> B41  <||@
  Comment 854 block B41 null  <||@
  Comment 854 806 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 854 808 NOP  <||@
  Comment 855 810 NOP  <||@
  Comment 856 812 NOP  <||@
  Comment 857 814 NOP  <||@
  Comment 858 816 NOP  <||@
  Comment 859 818 NOP  <||@
  Comment 860 820 NOP  <||@
  Comment 861 822 NOP  <||@
  Comment 862 824 NOP  <||@
  Comment 863 826 NOP  <||@
  Comment 864 828 NOP  <||@
  Comment 865 830 NOP  <||@
  Comment 866 832 NOP  <||@
  Comment 867 834 NOP  <||@
  Comment 868 836 r9|QWORD[*] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 868 838 rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 871 840 stack:48|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 876 842 rdi|QWORD = LEA address: [r9|QWORD[*] + 16] size: QWORD  <||@
  Comment 880 844 rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 884 846 rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 887 848 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 887 {Field[name=StubRoutines::_jbyte_disjoint_arraycopy, type=address, offset=0, address=0x7f78b1ffa4b8, value=140155947490624]:0x7f7899769d40}  <||@
  Comment 892 854 JUMP ~outgoingValues: [] destination: B41 -> B59  <||@
  Comment 897 block B45 null  <||@
  Comment 897 920 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 897 922 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 897 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 907 924 NOP  <||@
  Comment 908 926 NOP  <||@
  Comment 909 928 NOP  <||@
  Comment 910 930 NOP  <||@
  Comment 911 932 NOP  <||@
  Comment 912 934 NOP  <||@
  Comment 913 936 NOP  <||@
  Comment 914 938 NOP  <||@
  Comment 915 940 NOP  <||@
  Comment 916 942 rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 919 944 rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD  <||@
  Comment 922 946 rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 925 948 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27]  <||@
  Comment 925 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 930 [rbx:0, r9:0, stack:24]at java.lang.String.<init>(String.java:4788) [bci: 27, duringCall: false, rethrow: false]
              |0             |1  |2  |3            |4          |5 
     locals:  |rbx|QWORD[.]  |-  |-  |r9|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 938 950 NULLCHECK address: [rax|QWORD[.]] state [bci:27]  <||@
  Comment 938 [rax:0, rbx:0, r9:0, stack:24]at java.lang.String.<init>(String.java:4788) [bci: 27, duringCall: false, rethrow: false]
              |0             |1  |2  |3            |4          |5 
     locals:  |rbx|QWORD[.]  |-  |-  |r9|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 938 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 940 952 r11|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 943 954 rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 946 956 JUMP ~outgoingValues: [] destination: B45 -> B53  <||@
  Comment 951 block B51 null  <||@
  Comment 951 1062 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 951 1064 rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 954 1066 NOP  <||@
  Comment 955 1068 NOP  <||@
  Comment 956 1070 NOP  <||@
  Comment 957 1072 NOP  <||@
  Comment 958 1074 NOP  <||@
  Comment 959 1076 NOP  <||@
  Comment 960 1078 NOP  <||@
  Comment 961 1080 NOP  <||@
  Comment 962 1082 NOP  <||@
  Comment 963 1084 ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 973 1088 JUMP ~outgoingValues: [] destination: B51 -> B52  <||@
  Comment 978 block B39 null  <||@
  Comment 978 730 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 978 732 rbx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 983 734 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 983 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 993 736 NOP  <||@
  Comment 994 738 NOP  <||@
  Comment 995 740 NOP  <||@
  Comment 996 742 NOP  <||@
  Comment 997 744 NOP  <||@
  Comment 998 746 NOP  <||@
  Comment 999 748 NOP  <||@
  Comment 1000 750 NOP  <||@
  Comment 1001 752 NOP  <||@
  Comment 1002 754 rdx|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1005 756 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:27]  <||@
  Comment 1005 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1010 [rbx:0, r9:0, stack:24]at java.lang.String.<init>(String.java:4788) [bci: 27, duringCall: false, rethrow: false]
              |0             |1  |2  |3            |4          |5 
     locals:  |rbx|QWORD[.]  |-  |-  |r9|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 1018 758 NULLCHECK address: [rax|QWORD[.]] state [bci:27]  <||@
  Comment 1018 [rax:0, rbx:0, r9:0, stack:24]at java.lang.String.<init>(String.java:4788) [bci: 27, duringCall: false, rethrow: false]
              |0             |1  |2  |3            |4          |5 
     locals:  |rbx|QWORD[.]  |-  |-  |r9|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 1018 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1020 760 rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1023 762 JUMP ~outgoingValues: [] destination: B39 -> B41  <||@
  Comment 1028 block B2 null  <||@
  Comment 1028 80 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1028 82 rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1031 84 NOP  <||@
  Comment 1032 86 NOP  <||@
  Comment 1033 88 NOP  <||@
  Comment 1034 90 NOP  <||@
  Comment 1035 92 NOP  <||@
  Comment 1036 94 NOP  <||@
  Comment 1037 96 NOP  <||@
  Comment 1038 98 r10|QWORD = MOV input: [r11|QWORD[.]] size: QWORD  <||@
  Comment 1041 100 rcx|QWORD = STACKLEA slot: stack:32|QWORD  <||@
  Comment 1046 102 BITTESTANDBRANCH value: r10|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B2 -> B3 falseDestination: B2 -> B8 index: 1  <||@
  Comment 1057 block B3 null  <||@
  Comment 1057 104 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1057 106 NOP  <||@
  Comment 1058 108 NOP  <||@
  Comment 1059 110 NOP  <||@
  Comment 1060 112 NOP  <||@
  Comment 1061 114 NOP  <||@
  Comment 1062 116 NOP  <||@
  Comment 1063 118 NOP  <||@
  Comment 1064 120 NOP  <||@
  Comment 1065 122 NOP  <||@
  Comment 1066 124 NOP  <||@
  Comment 1067 126 NOP  <||@
  Comment 1068 128 NOP  <||@
  Comment 1069 130 NOP  <||@
  Comment 1070 132 r10|QWORD = OR x: r10|QWORD y: 1 size: QWORD  <||@
  Comment 1074 134 MOV (x: [rcx|QWORD], y: r10|QWORD) size: QWORD  <||@
  Comment 1077 136 rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 1080 138 rax|QWORD = CAS (address: [r11|QWORD[.]], cmpValue: rax|QWORD, newValue: rcx|QWORD) accessKind: QWORD  <||@
  Comment 1085 140 CMPBRANCH (x: rax|QWORD, y: r10|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: QWORD  <||@
  Comment 1094 block B4 null  <||@
  Comment 1094 142 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1094 144 NOP  <||@
  Comment 1095 146 NOP  <||@
  Comment 1096 148 NOP  <||@
  Comment 1097 150 JUMP ~outgoingValues: [] destination: B4 -> B14  <||@
  Comment 1097 block B14 null  <||@
  Comment 1097 284 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1097 286 NOP  <||@
  Comment 1098 288 NOP  <||@
  Comment 1099 290 NOP  <||@
  Comment 1100 292 NOP  <||@
  Comment 1101 294 INC value: [r15|QWORD + 1360] size: QWORD  <||@
  Comment 1108 296 JUMP ~outgoingValues: [] destination: B14 -> B17  <||@
  Comment 1108 block B17 null  <||@
  Comment 1108 332 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1108 334 NOP  <||@
  Comment 1109 336 NOP  <||@
  Comment 1110 338 NOP  <||@
  Comment 1111 340 NOP  <||@
  Comment 1112 342 NOP  <||@
  Comment 1113 344 NOP  <||@
  Comment 1114 346 NOP  <||@
  Comment 1115 348 NOP  <||@
  Comment 1116 350 r10|QWORD = STACKLEA slot: stack:32|QWORD  <||@
  Comment 1121 352 rsi|QWORD = MOV input: [r10|QWORD] size: QWORD  <||@
  Comment 1124 354 rcx|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 1128 356 TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: QWORD  <||@
  Comment 1137 block B19 null  <||@
  Comment 1137 368 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1137 370 NOP  <||@
  Comment 1138 372 NOP  <||@
  Comment 1139 374 NOP  <||@
  Comment 1140 376 NOP  <||@
  Comment 1141 378 NOP  <||@
  Comment 1142 380 rax|QWORD = MOV input: [r11|QWORD[.]] size: QWORD  <||@
  Comment 1145 382 BITTESTANDBRANCH value: rax|QWORD trueDestinationProbability: 0.99 condition: |ncarry| trueDestination: B19 -> B20 falseDestination: B19 -> B21 index: 1  <||@
  Comment 1156 block B20 null  <||@
  Comment 1156 384 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1156 386 NOP  <||@
  Comment 1157 388 NOP  <||@
  Comment 1158 390 NOP  <||@
  Comment 1159 392 NOP  <||@
  Comment 1160 394 NOP  <||@
  Comment 1161 396 NOP  <||@
  Comment 1162 398 NOP  <||@
  Comment 1163 400 NOP  <||@
  Comment 1164 402 NOP  <||@
  Comment 1165 404 NOP  <||@
  Comment 1166 406 NOP  <||@
  Comment 1167 408 rax|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 1170 410 rax|QWORD = CAS (address: [r11|QWORD[.]], cmpValue: rax|QWORD, newValue: rsi|QWORD) accessKind: QWORD  <||@
  Comment 1175 412 rsi|DWORD = SETCC condition: =  <||@
  Comment 1183 414 JUMP ~outgoingValues: [] destination: B20 -> B28  <||@
  Comment 1183 block B28 null  <||@
  Comment 1183 548 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1183 550 NOP  <||@
  Comment 1184 552 NOP  <||@
  Comment 1185 554 NOP  <||@
  Comment 1186 556 NOP  <||@
  Comment 1187 558 TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B31 size: DWORD  <||@
  Comment 1195 block B31 null  <||@
  Comment 1195 594 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1195 596 NOP  <||@
  Comment 1196 598 NOP  <||@
  Comment 1197 600 NOP  <||@
  Comment 1198 602 JUMP ~outgoingValues: [] destination: B31 -> B34  <||@
  Comment 1198 block B34 null  <||@
  Comment 1198 632 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1198 634 NOP  <||@
  Comment 1199 636 NOP  <||@
  Comment 1200 638 NOP  <||@
  Comment 1201 640 NOP  <||@
  Comment 1202 642 DEC value: [r15|QWORD + 1360] size: QWORD  <||@
  Comment 1209 644 JUMP ~outgoingValues: [] destination: B34 -> B35  <||@
  Comment 1209 block B35 null  <||@
  Comment 1209 646 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1209 648 NOP  <||@
  Comment 1210 650 NOP  <||@
  Comment 1211 652 NOP  <||@
  Comment 1212 654 r10|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1215 656 rsi|QWORD[.] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1218 658 JUMP ~outgoingValues: [] destination: B35 -> B36  <||@
  Comment 1223 block B60 null  <||@
  Comment 1223 1368 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1223 1370 rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1226 1372 NOP  <||@
  Comment 1227 1374 NOP  <||@
  Comment 1228 1376 NOP  <||@
  Comment 1229 1378 NOP  <||@
  Comment 1230 1380 CMPCONSTBRANCH x: [r11|QWORD[.] + 17] trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B63 y: 0 size: BYTE inlinedY: null  <||@
  Comment 1241 block B61 null  <||@
  Comment 1241 1382 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1241 1384 NOP  <||@
  Comment 1242 1386 NOP  <||@
  Comment 1243 1388 NOP  <||@
  Comment 1244 1390 NOP  <||@
  Comment 1245 1392 NOP  <||@
  Comment 1246 1394 NOP  <||@
  Comment 1247 1396 NOP  <||@
  Comment 1248 1398 NOP  <||@
  Comment 1249 1400 NOP  <||@
  Comment 1250 1402 NOP  <||@
  Comment 1251 1404 NOP  <||@
  Comment 1252 1406 NOP  <||@
  Comment 1253 1408 NOP  <||@
  Comment 1254 1410 NOP  <||@
  Comment 1255 1412 NOP  <||@
  Comment 1256 1414 NOP  <||@
  Comment 1257 1416 NOP  <||@
  Comment 1258 1418 NOP  <||@
  Comment 1259 1420 NOP  <||@
  Comment 1260 1422 NOP  <||@
  Comment 1261 1424 NOP  <||@
  Comment 1262 1426 NOP  <||@
  Comment 1263 1428 NOP  <||@
  Comment 1264 1430 NOP  <||@
  Comment 1265 1432 NOP  <||@
  Comment 1266 1434 NOP  <||@
  Comment 1267 1436 NOP  <||@
  Comment 1268 1438 NOP  <||@
  Comment 1269 1440 NOP  <||@
  Comment 1270 1442 NOP  <||@
  Comment 1271 1444 NOP  <||@
  Comment 1272 1446 NOP  <||@
  Comment 1273 1448 NOP  <||@
  Comment 1274 1450 NOP  <||@
  Comment 1275 1452 NOP  <||@
  Comment 1276 1454 NOP  <||@
  Comment 1277 1456 NOP  <||@
  Comment 1278 1458 NOP  <||@
  Comment 1279 1460 NOP  <||@
  Comment 1280 1462 NOP  <||@
  Comment 1281 1464 NOP  <||@
  Comment 1282 1466 NOP  <||@
  Comment 1283 1468 NOP  <||@
  Comment 1284 1470 NOP  <||@
  Comment 1285 1472 NOP  <||@
  Comment 1286 1474 NOP  <||@
  Comment 1287 1476 NOP  <||@
  Comment 1288 1478 NOP  <||@
  Comment 1289 1480 NOP  <||@
  Comment 1290 1482 NOP  <||@
  Comment 1291 1484 NOP  <||@
  Comment 1292 1486 NOP  <||@
  Comment 1293 1488 NOP  <||@
  Comment 1294 1490 NOP  <||@
  Comment 1295 1492 NOP  <||@
  Comment 1296 1494 NOP  <||@
  Comment 1297 1496 NOP  <||@
  Comment 1298 1498 NOP  <||@
  Comment 1299 1500 NOP  <||@
  Comment 1300 1502 NOP  <||@
  Comment 1301 1504 NOP  <||@
  Comment 1302 1506 NOP  <||@
  Comment 1303 1508 NOP  <||@
  Comment 1304 1510 NOP  <||@
  Comment 1305 1512 NOP  <||@
  Comment 1306 1514 MOVB x: [rbx|QWORD[.] + 16] y: 1 size: BYTE  <||@
  Comment 1310 1516 r10|DWORD = SHL value: r10|DWORD size: DWORD  <||@
  Comment 1313 1518 rsi|QWORD[.] = MOVE input: r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1316 1520 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1321 1522 rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 1324 1524 rax|QWORD[.] = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<Arrays.copyOfRange(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:92]  <||@
  Comment 1327 {HotSpotMethod<Arrays.copyOfRange(byte[], int, int)>}  <||@
  Comment 1327 INVOKESTATIC  <||@
  Comment 1332 [stack:24]at java.lang.String.<init>(String.java:4800) [bci: 92, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5 
     locals:  |-                  |-  |-  |-  |-  |- 
     stack:   |stack:40|QWORD[.]  |   |   |   |   |    <||@
  Comment 1340 1526 rbx|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1345 1528 AMD64G1PREWRITEBARRIER (~address: [rbx|QWORD[.] + 20], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d  <||@
  Comment 1401 1530 rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6ea6776f encoding: base: 0 shift: 3  <||@
  Comment 1408 1532 MOV (x: [rbx|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 1411 1534 AMD64G1POSTWRITEBARRIER (~address: rbx|QWORD[.], ~newValue: rax|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7de9548d  <||@
  Comment 1502 1536 JUMP ~outgoingValues: [] destination: B61 -> B62  <||@
  Comment 1507 block B18 null  <||@
  Comment 1507 358 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1507 360 NOP  <||@
  Comment 1508 362 NOP  <||@
  Comment 1509 364 NOP  <||@
  Comment 1510 366 JUMP ~outgoingValues: [] destination: B18 -> B34  <||@
  Comment 1515 block B29 null  <||@
  Comment 1515 560 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1515 562 NOP  <||@
  Comment 1516 564 NOP  <||@
  Comment 1517 566 NOP  <||@
  Comment 1518 568 JUMP ~outgoingValues: [] destination: B29 -> B30  <||@
  Comment 1518 block B30 null  <||@
  Comment 1518 570 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1518 572 NOP  <||@
  Comment 1519 574 NOP  <||@
  Comment 1520 576 NOP  <||@
  Comment 1521 578 NOP  <||@
  Comment 1522 580 NOP  <||@
  Comment 1523 582 NOP  <||@
  Comment 1524 584 NOP  <||@
  Comment 1525 586 rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1528 588 rdx|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 1531 590 - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [] callTarget: Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]  <||@
  Comment 1531 {Stub<monitorexit(Object,Word)void>@0x7f78998c5000:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]}  <||@
  Comment 1536 592 JUMP ~outgoingValues: [] destination: B30 -> B35  <||@
  Comment 1541 block B8 null  <||@
  Comment 1541 192 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1541 194 NOP  <||@
  Comment 1542 196 NOP  <||@
  Comment 1543 198 NOP  <||@
  Comment 1544 200 NOP  <||@
  Comment 1545 202 NOP  <||@
  Comment 1546 204 NOP  <||@
  Comment 1547 206 MOV x: [rcx|QWORD] y: 3 size: QWORD  <||@
  Comment 1554 208 rsi|QWORD = MOV input: [r10|QWORD + 62] size: QWORD  <||@
  Comment 1558 210 TESTBRANCH (x: rsi|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B8 -> B9 falseDestination: B8 -> B12 size: QWORD  <||@
  Comment 1567 block B9 null  <||@
  Comment 1567 212 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1567 214 NOP  <||@
  Comment 1568 216 NOP  <||@
  Comment 1569 218 NOP  <||@
  Comment 1570 220 NOP  <||@
  Comment 1571 222 NOP  <||@
  Comment 1572 224 NOP  <||@
  Comment 1573 226 NOP  <||@
  Comment 1574 228 NOP  <||@
  Comment 1575 230 NOP  <||@
  Comment 1576 232 rax|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1583 234 rax|QWORD = CAS (address: [r10|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD  <||@
  Comment 1589 236 BRANCH trueDestinationProbability: 0.09999999999999998 condition: != trueDestination: B9 -> B10 falseDestination: B9 -> B11  <||@
  Comment 1595 block B11 null  <||@
  Comment 1595 248 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1595 250 NOP  <||@
  Comment 1596 252 NOP  <||@
  Comment 1597 254 NOP  <||@
  Comment 1598 256 JUMP ~outgoingValues: [] destination: B11 -> B14  <||@
  Comment 1603 block B5 null  <||@
  Comment 1603 152 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1603 154 NOP  <||@
  Comment 1604 156 NOP  <||@
  Comment 1605 158 NOP  <||@
  Comment 1606 160 NOP  <||@
  Comment 1607 162 NOP  <||@
  Comment 1608 164 rax|QWORD = SUB (x: rax|QWORD, ~y: rsp|QWORD) size: QWORD  <||@
  Comment 1611 166 TESTCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: -4089 size: QWORD  <||@
  Comment 1624 block B6 null  <||@
  Comment 1624 168 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1624 170 NOP  <||@
  Comment 1625 172 NOP  <||@
  Comment 1626 174 NOP  <||@
  Comment 1627 176 NOP  <||@
  Comment 1628 178 MOV x: [rcx|QWORD] y: 0 size: QWORD  <||@
  Comment 1635 180 JUMP ~outgoingValues: [] destination: B6 -> B14  <||@
  Comment 1640 block B21 null  <||@
  Comment 1640 416 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1640 418 NOP  <||@
  Comment 1641 420 NOP  <||@
  Comment 1642 422 NOP  <||@
  Comment 1643 424 NOP  <||@
  Comment 1644 426 NOP  <||@
  Comment 1645 428 NOP  <||@
  Comment 1646 430 rdi|QWORD = MOV input: [r11|QWORD[.]] size: QWORD  <||@
  Comment 1649 432 rdx|QWORD = MOV input: [rdi|QWORD + 134] size: QWORD  <||@
  Comment 1656 434 TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B33 size: QWORD  <||@
  Comment 1665 block B22 null  <||@
  Comment 1665 436 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1665 438 NOP  <||@
  Comment 1666 440 NOP  <||@
  Comment 1667 442 NOP  <||@
  Comment 1668 444 NOP  <||@
  Comment 1669 446 NOP  <||@
  Comment 1670 448 NOP  <||@
  Comment 1671 450 rax|QWORD = MOV input: [rdi|QWORD + 150] size: QWORD  <||@
  Comment 1678 452 rax|QWORD = OR (x: rax|QWORD, ~y: [rdi|QWORD + 142]) size: QWORD  <||@
  Comment 1685 454 TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.9 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD  <||@
  Comment 1694 block B23 null  <||@
  Comment 1694 456 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1694 458 NOP  <||@
  Comment 1695 460 NOP  <||@
  Comment 1696 462 NOP  <||@
  Comment 1697 464 NOP  <||@
  Comment 1698 466 MOV x: [rdi|QWORD + 62] y: 0 size: QWORD  <||@
  Comment 1706 468 JUMP ~outgoingValues: [] destination: B23 -> B34  <||@
  Comment 1711 block B12 null  <||@
  Comment 1711 258 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1711 260 NOP  <||@
  Comment 1712 262 NOP  <||@
  Comment 1713 264 NOP  <||@
  Comment 1714 266 NOP  <||@
  Comment 1715 268 CMPBRANCH (x: rsi|QWORD, y: r15|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B15 size: QWORD  <||@
  Comment 1724 block B15 null  <||@
  Comment 1724 298 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1724 300 NOP  <||@
  Comment 1725 302 NOP  <||@
  Comment 1726 304 NOP  <||@
  Comment 1727 306 JUMP ~outgoingValues: [] destination: B15 -> B16  <||@
  Comment 1727 block B16 null  <||@
  Comment 1727 308 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1727 310 NOP  <||@
  Comment 1728 312 NOP  <||@
  Comment 1729 314 NOP  <||@
  Comment 1730 316 NOP  <||@
  Comment 1731 318 NOP  <||@
  Comment 1732 320 NOP  <||@
  Comment 1733 322 NOP  <||@
  Comment 1734 324 rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1737 326 rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD  <||@
  Comment 1740 328 - = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.], rdx|QWORD] temps: [r10|ILLEGAL] callTarget: Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL state [bci:0, 10]  <||@
  Comment 1740 {Stub<monitorenter(Object,Word)void>@0x7f78998ca780:CallingConvention[rsi|QWORD[.], rdx|QWORD]:CallingConvention[rsi|QWORD[.], rdx|QWORD]; temps=r10|ILLEGAL}  <||@
  Comment 1745 [rbx:0, r8:0, r9:0, r11:0, stack:24]at java.lang.StringBuffer.length(StringBuffer.java:205) [bci: 0, duringCall: false, rethrow: false]
              |0                                     
     locals:  |r11|QWORD[.]                          
     locks:   |monitor[r11|QWORD[.], stack:32|QWORD] 
  at java.lang.String.<init>(String.java:4785) [bci: 10, duringCall: true, rethrow: false]
              |0             |1             |2  |3            |4  |5 
     locals:  |rbx|QWORD[.]  |r11|QWORD[.]  |-  |r9|QWORD[.]  |-  |-   <||@
  Comment 1753 330 JUMP ~outgoingValues: [] destination: B16 -> B17  <||@
  Comment 1758 block B10 null  <||@
  Comment 1758 238 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1758 240 NOP  <||@
  Comment 1759 242 NOP  <||@
  Comment 1760 244 NOP  <||@
  Comment 1761 246 JUMP ~outgoingValues: [] destination: B10 -> B16  <||@
  Comment 1763 block B24 null  <||@
  Comment 1763 470 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1763 472 NOP  <||@
  Comment 1764 474 NOP  <||@
  Comment 1765 476 NOP  <||@
  Comment 1766 478 NOP  <||@
  Comment 1767 480 CMPCONSTBRANCH x: [rdi|QWORD + 158] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 0 size: QWORD inlinedY: null  <||@
  Comment 1781 block B26 null  <||@
  Comment 1781 492 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1781 494 NOP  <||@
  Comment 1782 496 NOP  <||@
  Comment 1783 498 NOP  <||@
  Comment 1784 500 NOP  <||@
  Comment 1785 502 NOP  <||@
  Comment 1786 504 NOP  <||@
  Comment 1787 506 MOV x: [rdi|QWORD + 62] y: 0 size: QWORD  <||@
  Comment 1795 508 MEMBAR barriers: 4  <||@
  Comment 1800 510 CMPCONSTBRANCH x: [rdi|QWORD + 158] trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 y: 0 size: QWORD inlinedY: null  <||@
  Comment 1814 block B27 null  <||@
  Comment 1814 512 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1814 514 NOP  <||@
  Comment 1815 516 NOP  <||@
  Comment 1816 518 NOP  <||@
  Comment 1817 520 NOP  <||@
  Comment 1818 522 NOP  <||@
  Comment 1819 524 NOP  <||@
  Comment 1820 526 NOP  <||@
  Comment 1821 528 NOP  <||@
  Comment 1822 530 NOP  <||@
  Comment 1823 532 NOP  <||@
  Comment 1824 534 NOP  <||@
  Comment 1825 536 NOP  <||@
  Comment 1826 538 rax|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1833 540 rax|QWORD = CAS (address: [rdi|QWORD + 62], cmpValue: rax|QWORD, newValue: r15|QWORD) accessKind: QWORD  <||@
  Comment 1839 542 rsi|DWORD = SETCC condition: =  <||@
  Comment 1847 544 rsi|DWORD = XOR x: rsi|DWORD y: 1 size: DWORD  <||@
  Comment 1850 546 JUMP ~outgoingValues: [] destination: B27 -> B28  <||@
  Comment 1855 block B13 null  <||@
  Comment 1855 270 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1855 272 NOP  <||@
  Comment 1856 274 NOP  <||@
  Comment 1857 276 NOP  <||@
  Comment 1858 278 NOP  <||@
  Comment 1859 280 INC value: [r10|QWORD + 134] size: QWORD  <||@
  Comment 1866 282 JUMP ~outgoingValues: [] destination: B13 -> B14  <||@
  Comment 1871 block B7 null  <||@
  Comment 1871 182 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1871 184 NOP  <||@
  Comment 1872 186 NOP  <||@
  Comment 1873 188 NOP  <||@
  Comment 1874 190 JUMP ~outgoingValues: [] destination: B7 -> B16  <||@
  Comment 1879 block B33 null  <||@
  Comment 1879 614 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1879 616 NOP  <||@
  Comment 1880 618 NOP  <||@
  Comment 1881 620 NOP  <||@
  Comment 1882 622 NOP  <||@
  Comment 1883 624 NOP  <||@
  Comment 1884 626 rdx|QWORD = DEC value: rdx|QWORD size: QWORD  <||@
  Comment 1887 628 MOV (x: [rdi|QWORD + 134], y: rdx|QWORD) size: QWORD  <||@
  Comment 1894 630 JUMP ~outgoingValues: [] destination: B33 -> B34  <||@
  Comment 1899 block B25 null  <||@
  Comment 1899 482 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1899 484 NOP  <||@
  Comment 1900 486 NOP  <||@
  Comment 1901 488 NOP  <||@
  Comment 1902 490 JUMP ~outgoingValues: [] destination: B25 -> B30  <||@
  Comment 1907 block B32 null  <||@
  Comment 1907 604 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1907 606 NOP  <||@
  Comment 1908 608 NOP  <||@
  Comment 1909 610 NOP  <||@
  Comment 1910 612 JUMP ~outgoingValues: [] destination: B32 -> B34  <||@
  Comment 1915 block B63 null  <||@
  Comment 1915 1556 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1915 1558 NOP  <||@
  Comment 1916 1560 NOP  <||@
  Comment 1917 1562 NOP  <||@
  Comment 1918 1564 NOP  <||@
  Comment 1919 1566 NOP  <||@
  Comment 1920 1568 NOP  <||@
  Comment 1921 1570 NOP  <||@
  Comment 1922 1572 MOV x: [r15|QWORD + 1156] y: -63763 size: DWORD  <||@
  Comment 1933 1574 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 1944 1576 DEOPT info [bci:13]  <||@
  Comment 1944 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1949 [rbx:0, r9:0, r11:0]at java.lang.String.<init>(String.java:4785) [bci: 13, duringCall: false, rethrow: false]
              |0             |1             |2  |3            |4  |5 
     locals:  |rbx|QWORD[.]  |r11|QWORD[.]  |-  |r9|QWORD[.]  |-  |- 
     stack:   |r10|DWORD     |              |   |             |   |    <||@
  Comment 1957 block B64 null  <||@
  Comment 1957 1578 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1957 1580 rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1960 1582 NOP  <||@
  Comment 1961 1584 NOP  <||@
  Comment 1962 1586 NOP  <||@
  Comment 1963 1588 NOP  <||@
  Comment 1964 1590 NOP  <||@
  Comment 1965 1592 NOP  <||@
  Comment 1966 1594 NOP  <||@
  Comment 1967 1596 MOV x: [r15|QWORD + 1156] y: -15667 size: DWORD  <||@
  Comment 1978 1598 MOV x: [r15|QWORD + 1168] y: 660 size: QWORD  <||@
  Comment 1989 1600 DEOPT info [bci:0]  <||@
  Comment 1989 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1994 [rbx:0, r11:0]at java.lang.String.<init>(String.java:4783) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5 
     locals:  |rbx|QWORD[.]  |r11|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 2002 block B54 null  <||@
  Comment 2002 1124 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2002 1126 rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2005 1128 NOP  <||@
  Comment 2006 1130 NOP  <||@
  Comment 2007 1132 NOP  <||@
  Comment 2008 1134 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2015 1136 r11|DWORD = MOVE input: int[-61721|0xffffffffffff0ee7]  <||@
  Comment 2021 1138 JUMP ~outgoingValues: [] destination: B54 -> B57  <||@
  Comment 2021 block B57 null  <||@
  Comment 2021 1168 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 2021 1170 NOP  <||@
  Comment 2022 1172 NOP  <||@
  Comment 2023 1174 NOP  <||@
  Comment 2024 1176 NOP  <||@
  Comment 2025 1178 NOP  <||@
  Comment 2026 1180 NOP  <||@
  Comment 2027 1182 NOP  <||@
  Comment 2028 1184 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 2035 1186 MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD  <||@
  Comment 2042 1188 DEOPT info [bci:27]  <||@
  Comment 2042 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2047 [rbx:0, r9:0]at java.lang.String.<init>(String.java:4788) [bci: 27, duringCall: false, rethrow: false]
              |0             |1  |2  |3            |4          |5 
     locals:  |rbx|QWORD[.]  |-  |-  |r9|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 2055 block B56 null  <||@
  Comment 2055 1152 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2055 1154 rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2058 1156 NOP  <||@
  Comment 2059 1158 NOP  <||@
  Comment 2060 1160 NOP  <||@
  Comment 2061 1162 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2068 1164 r11|DWORD = MOVE input: int[-62745|0xffffffffffff0ae7]  <||@
  Comment 2074 1166 JUMP ~outgoingValues: [] destination: B56 -> B57  <||@
  Comment 2076 block B43 null  <||@
  Comment 2076 868 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2076 870 rbx|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2079 872 NOP  <||@
  Comment 2080 874 NOP  <||@
  Comment 2081 876 NOP  <||@
  Comment 2082 878 r8|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 2089 880 r11|DWORD = MOVE input: int[-59667|0xffffffffffff16ed]  <||@
  Comment 2095 882 JUMP ~outgoingValues: [] destination: B43 -> B57  <||@
  Comment 2102 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 2117 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 2132 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 2157 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 2167 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 2182 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 2215 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2220 [rsi:0, r11:0, stack:24]at java.lang.String.<init>(String.java:4783) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |r11|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 2250 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2255 [rsi:0, r9:0, r11:0, stack:24]at java.lang.String.<init>(String.java:4785) [bci: 13, duringCall: false, rethrow: false]
              |0             |1             |2  |3            |4  |5 
     locals:  |rsi|QWORD[.]  |r11|QWORD[.]  |-  |r9|QWORD[.]  |-  |- 
     stack:   |r10|DWORD     |              |   |             |   |    <||@
  Comment 2285 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2290 [rax:0, rbx:0, r9:0, stack:24]at java.lang.String.<init>(String.java:4788) [bci: 27, duringCall: false, rethrow: false]
              |0             |1  |2  |3            |4          |5 
     locals:  |rbx|QWORD[.]  |-  |-  |r9|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 2320 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2325 [rax:0, rbx:0, r9:0, stack:24]at java.lang.String.<init>(String.java:4788) [bci: 27, duringCall: false, rethrow: false]
              |0             |1  |2  |3            |4          |5 
     locals:  |rbx|QWORD[.]  |-  |-  |r9|QWORD[.]  |r10|DWORD  |-   <||@
  Comment 2333 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2333 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 2339 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 2339 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
