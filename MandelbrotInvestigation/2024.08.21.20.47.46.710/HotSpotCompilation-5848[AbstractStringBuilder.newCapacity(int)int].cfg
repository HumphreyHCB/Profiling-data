begin_compilation
  name " HotSpotCompilation-5848[java.lang.AbstractStringBuilder.newCapacity(int)]"
  method "HotSpotCompilation-5848[java.lang.AbstractStringBuilder.newCapacity(int)]"
  date 1724269726941
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a75 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a75  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! java.lang.AbstractStringBuilder
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v78 v80 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a75 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a75 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 1]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v78 
lastLocationAccess: - 
=== Succesors ===
next: i76 
=== Usages ===
v79 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v78 lastLocationAccess: - #next: i76  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 i7 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.newCapacity(int)>
localsSize: 6
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 260
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v81 i76 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a75 
=== Succesors ===
=== Usages ===
i76 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a75  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i76 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-9483|0xffffffffffffdaf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 4]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v79 
lastLocationAccess: - 
=== Succesors ===
next: i77 
=== Usages ===
i8 i12 i22 
=== Predecessor ===
a75 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v79 lastLocationAccess: - #next: i77  <|@  <|@
f <@~|@floating>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i77 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i77 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:261) [bci: 8]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v80 
lastLocationAccess: - 
=== Succesors ===
next: v60 
=== Usages ===
i45 
=== Predecessor ===
i76 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v80 lastLocationAccess: - #next: v60  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:261) [bci: 8]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i77 
=== Succesors ===
=== Usages ===
i7 i11 i20 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i77  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:261) [bci: 11]
stamp: i32
=== Inputs ===
x: i2 
y: i45 
=== Succesors ===
=== Usages ===
i8 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i2 y: i45  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:262) [bci: 15]
stamp: i32
=== Inputs ===
x: i7 
y: i76 
=== Succesors ===
=== Usages ===
i31 v30 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i7 y: i76  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 22]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i11 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 27]
stamp: i32
=== Inputs ===
x: i9 
y: i45 
=== Succesors ===
=== Usages ===
i12 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i9 y: i45  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 28]
stamp: i32
=== Inputs ===
x: i11 
y: i76 
=== Succesors ===
=== Usages ===
i31 v30 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i11 y: i76  <|@  <|@
f <@~|@floating>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:2020) [bci: 2]
at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:740) [bci: 3]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i8 
y: i12 
=== Succesors ===
=== Usages ===
i31 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i8 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:2020) [bci: 2]
at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:740) [bci: 3]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
stamp: i32
=== Inputs ===
condition: v30 
trueValue: i12 
falseValue: i8 
=== Succesors ===
=== Usages ===
i22 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v30 trueValue: i12 falseValue: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:740) [bci: 6]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
stamp: i32
=== Inputs ===
x: i31 
y: i76 
=== Succesors ===
=== Usages ===
i62 i20 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i31 y: i76  <|@  <|@
f <@~|@floating>@ <|@
tid i61 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 10]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i62 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 10]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
stamp: i32
=== Inputs ===
x: i22 
y: i61 
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i22 y: i61  <|@  <|@
f <@~|@floating>@ <|@
tid i63 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 10]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
rawvalue: 2147483639
stableDimension: 0
stamp: i32 [2147483639]
stampKind: i32
value: int[2147483639|0x7ffffff7]
=== Inputs ===
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 10]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i62 
y: i63 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i62 y: i63  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v64 
=== Succesors ===
trueSuccessor: v58 
falseSuccessor: v59 
=== Usages ===
=== Predecessor ===
i77 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v64 #trueSuccessor: v58 #falseSuccessor: v59  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:742) [bci: 19]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v21  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:267) [bci: 57]
stamp: i32
=== Inputs ===
x: i22 
y: i45 
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@>>|@jdk.graal.compiler.nodes.calc.RightShiftNode>@ x: i22 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:267) [bci: 58]
stamp: void
=== Inputs ===
memoryMap: - 
result: i20 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i20  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v81 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v81  <|@  <|@
f <@*|@fixed>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 57
mayConvertToGuard: true
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 4]
reason: UnreachedCode
speculation: {0x0000000000000294[index: 20, len: 20, hash: 0x9cd33e4d]: UnreachedCode@6[HotSpotMethod<ArraysSupport.newLength(int, int, int)>, 21]}
stamp: void
=== Inputs ===
stateBefore: ?3 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?3  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@39b50d40 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SHL (x: v1|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SUB (x: v5|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHL (x: v8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = ADD (x: v7|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = CMOVE (falseValue: v6|DWORD, ~trueValue: v9|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = ADD (x: v10|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = DEC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SAR (x: v11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14611 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // value:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: aload_0       
     8: getfield      #4          // coder:byte
    11: ishl          
    12: istore_3      
    13: iload_3       
    14: iload_2       
    15: isub          
    16: istore        4
    18: iload_2       
    19: iload         4
    21: iload_2       
    22: iconst_2      
    23: aload_0       
    24: getfield      #4          // coder:byte
    27: ishl          
    28: iadd          
    29: invokestatic  #27         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    32: istore        5
    34: iload         5
    36: ldc           #39         // 2147483647
    38: if_icmpne     51
    41: new           #120        // java.lang.OutOfMemoryError
    44: dup           
    45: ldc           #122        // "Required length exceeds implementation limit"
    47: invokespecial #28         // java.lang.OutOfMemoryError.<init>:(java.lang.String)void
    50: athrow        
    51: iload         5
    53: aload_0       
    54: getfield      #4          // coder:byte
    57: ishr          
    58: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a75 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a75  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! java.lang.AbstractStringBuilder
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v78 v80 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v78 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a75 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a75 <|@
result v2|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 1]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v78 
lastLocationAccess: - 
=== Succesors ===
next: i76 
=== Usages ===
v79 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v78 lastLocationAccess: - #next: i76  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 i7 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.newCapacity(int)>
localsSize: 6
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 260
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v81 i76 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid v79 <|@
result [v2|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a75 
=== Succesors ===
=== Usages ===
i76 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a75  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i76 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-9483|0xffffffffffffdaf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 4]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v79 
lastLocationAccess: - 
=== Succesors ===
next: i77 
=== Usages ===
i8 i12 i22 
=== Predecessor ===
a75 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v79 lastLocationAccess: - #next: i77  <|@  <|@
f <@~|@floating>@ <|@
tid v80 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i77 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i77 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:261) [bci: 8]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v80 
lastLocationAccess: - 
=== Succesors ===
next: v60 
=== Usages ===
i45 
=== Predecessor ===
i76 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v80 lastLocationAccess: - #next: v60  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:261) [bci: 8]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i77 
=== Succesors ===
=== Usages ===
i7 i11 i20 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i77  <|@  <|@
f <@~|@floating>@ <|@
tid i7 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:261) [bci: 11]
stamp: i32
=== Inputs ===
x: i2 
y: i45 
=== Succesors ===
=== Usages ===
i8 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i2 y: i45  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:262) [bci: 15]
stamp: i32
=== Inputs ===
x: i7 
y: i76 
=== Succesors ===
=== Usages ===
i31 v30 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i7 y: i76  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 22]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i11 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 27]
stamp: i32
=== Inputs ===
x: i9 
y: i45 
=== Succesors ===
=== Usages ===
i12 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i9 y: i45  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 28]
stamp: i32
=== Inputs ===
x: i11 
y: i76 
=== Succesors ===
=== Usages ===
i31 v30 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i11 y: i76  <|@  <|@
f <@~|@floating>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:2020) [bci: 2]
at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:740) [bci: 3]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i8 
y: i12 
=== Succesors ===
=== Usages ===
i31 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i8 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:2020) [bci: 2]
at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:740) [bci: 3]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
stamp: i32
=== Inputs ===
condition: v30 
trueValue: i12 
falseValue: i8 
=== Succesors ===
=== Usages ===
i22 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v30 trueValue: i12 falseValue: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:740) [bci: 6]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
stamp: i32
=== Inputs ===
x: i31 
y: i76 
=== Succesors ===
=== Usages ===
i62 i20 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i31 y: i76  <|@  <|@
f <@~|@floating>@ <|@
tid i61 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 10]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i62 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i62 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 10]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
stamp: i32
=== Inputs ===
x: i22 
y: i61 
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i22 y: i61  <|@  <|@
f <@~|@floating>@ <|@
tid i63 <|@
result int[2147483639|0x7ffffff7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 10]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
rawvalue: 2147483639
stableDimension: 0
stamp: i32 [2147483639]
stampKind: i32
value: int[2147483639|0x7ffffff7]
=== Inputs ===
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 10]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i62 
y: i63 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i62 y: i63  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v64 
=== Succesors ===
trueSuccessor: v58 
falseSuccessor: v59 
=== Usages ===
=== Predecessor ===
i77 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v64 #trueSuccessor: v58 #falseSuccessor: v59  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@39b50d40 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SHL (x: v1|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SUB (x: v5|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHL (x: v8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = ADD (x: v7|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = CMOVE (falseValue: v6|DWORD, ~trueValue: v9|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = ADD (x: v10|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = DEC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:742) [bci: 19]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v21  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:267) [bci: 57]
stamp: i32
=== Inputs ===
x: i22 
y: i45 
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@>>|@jdk.graal.compiler.nodes.calc.RightShiftNode>@ x: i22 y: i45  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:267) [bci: 58]
stamp: void
=== Inputs ===
memoryMap: - 
result: i20 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i20  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SAR (x: v11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v81 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v81  <|@  <|@
f <@*|@fixed>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 57
mayConvertToGuard: true
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 4]
reason: UnreachedCode
speculation: {0x0000000000000294[index: 20, len: 20, hash: 0x9cd33e4d]: UnreachedCode@6[HotSpotMethod<ArraysSupport.newLength(int, int, int)>, 21]}
stamp: void
=== Inputs ===
stateBefore: ?3 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?3  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14611 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@39b50d40 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SHL (x: v1|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SUB (x: v5|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHL (x: v8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = ADD (x: v7|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = CMOVE (falseValue: v6|DWORD, ~trueValue: v9|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = ADD (x: v10|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = DEC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SAR (x: v11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14611 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // value:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: aload_0       
     8: getfield      #4          // coder:byte
    11: ishl          
    12: istore_3      
    13: iload_3       
    14: iload_2       
    15: isub          
    16: istore        4
    18: iload_2       
    19: iload         4
    21: iload_2       
    22: iconst_2      
    23: aload_0       
    24: getfield      #4          // coder:byte
    27: ishl          
    28: iadd          
    29: invokestatic  #27         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    32: istore        5
    34: iload         5
    36: ldc           #39         // 2147483647
    38: if_icmpne     51
    41: new           #120        // java.lang.OutOfMemoryError
    44: dup           
    45: ldc           #122        // "Required length exceeds implementation limit"
    47: invokespecial #28         // java.lang.OutOfMemoryError.<init>:(java.lang.String)void
    50: athrow        
    51: iload         5
    53: aload_0       
    54: getfield      #4          // coder:byte
    57: ishr          
    58: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@39b50d40 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SHL (x: v1|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SUB (x: v5|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHL (x: v8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = ADD (x: v7|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = CMOVE (falseValue: v6|DWORD, ~trueValue: v9|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = ADD (x: v10|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = DEC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SAR (x: v11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14611 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // value:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: aload_0       
     8: getfield      #4          // coder:byte
    11: ishl          
    12: istore_3      
    13: iload_3       
    14: iload_2       
    15: isub          
    16: istore        4
    18: iload_2       
    19: iload         4
    21: iload_2       
    22: iconst_2      
    23: aload_0       
    24: getfield      #4          // coder:byte
    27: ishl          
    28: iadd          
    29: invokestatic  #27         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    32: istore        5
    34: iload         5
    36: ldc           #39         // 2147483647
    38: if_icmpne     51
    41: new           #120        // java.lang.OutOfMemoryError
    44: dup           
    45: ldc           #122        // "Required length exceeds implementation limit"
    47: invokespecial #28         // java.lang.OutOfMemoryError.<init>:(java.lang.String)void
    50: athrow        
    51: iload         5
    53: aload_0       
    54: getfield      #4          // coder:byte
    57: ishr          
    58: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@39b50d40 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SHL (x: v1|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SUB (x: v5|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHL (x: v8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = ADD (x: v7|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = CMOVE (falseValue: v6|DWORD, ~trueValue: v9|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = ADD (x: v10|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = DEC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SAR (x: v11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14611 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // value:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: aload_0       
     8: getfield      #4          // coder:byte
    11: ishl          
    12: istore_3      
    13: iload_3       
    14: iload_2       
    15: isub          
    16: istore        4
    18: iload_2       
    19: iload         4
    21: iload_2       
    22: iconst_2      
    23: aload_0       
    24: getfield      #4          // coder:byte
    27: ishl          
    28: iadd          
    29: invokestatic  #27         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    32: istore        5
    34: iload         5
    36: ldc           #39         // 2147483647
    38: if_icmpne     51
    41: new           #120        // java.lang.OutOfMemoryError
    44: dup           
    45: ldc           #122        // "Required length exceeds implementation limit"
    47: invokespecial #28         // java.lang.OutOfMemoryError.<init>:(java.lang.String)void
    50: athrow        
    51: iload         5
    53: aload_0       
    54: getfield      #4          // coder:byte
    57: ishr          
    58: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@39b50d40 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SHL (x: v1|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SUB (x: v5|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHL (x: v8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = ADD (x: v7|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = CMOVE (falseValue: v6|DWORD, ~trueValue: v9|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = ADD (x: v10|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = DEC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SAR (x: v11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14611 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // value:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: aload_0       
     8: getfield      #4          // coder:byte
    11: ishl          
    12: istore_3      
    13: iload_3       
    14: iload_2       
    15: isub          
    16: istore        4
    18: iload_2       
    19: iload         4
    21: iload_2       
    22: iconst_2      
    23: aload_0       
    24: getfield      #4          // coder:byte
    27: ishl          
    28: iadd          
    29: invokestatic  #27         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    32: istore        5
    34: iload         5
    36: ldc           #39         // 2147483647
    38: if_icmpne     51
    41: new           #120        // java.lang.OutOfMemoryError
    44: dup           
    45: ldc           #122        // "Required length exceeds implementation limit"
    47: invokespecial #28         // java.lang.OutOfMemoryError.<init>:(java.lang.String)void
    50: athrow        
    51: iload         5
    53: aload_0       
    54: getfield      #4          // coder:byte
    57: ishr          
    58: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@39b50d40 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = SHL (x: v1|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = SUB (x: v5|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHL (x: v8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = ADD (x: v7|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = CMOVE (falseValue: v6|DWORD, ~trueValue: v9|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = ADD (x: v10|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = DEC value: v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SAR (x: v11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14611 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // value:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: aload_0       
     8: getfield      #4          // coder:byte
    11: ishl          
    12: istore_3      
    13: iload_3       
    14: iload_2       
    15: isub          
    16: istore        4
    18: iload_2       
    19: iload         4
    21: iload_2       
    22: iconst_2      
    23: aload_0       
    24: getfield      #4          // coder:byte
    27: ishl          
    28: iadd          
    29: invokestatic  #27         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    32: istore        5
    34: iload         5
    36: ldc           #39         // 2147483647
    38: if_icmpne     51
    41: new           #120        // java.lang.OutOfMemoryError
    44: dup           
    45: ldc           #122        // "Required length exceeds implementation limit"
    47: invokespecial #28         // java.lang.OutOfMemoryError.<init>:(java.lang.String)void
    50: athrow        
    51: iload         5
    53: aload_0       
    54: getfield      #4          // coder:byte
    57: ishr          
    58: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@39b50d40 slotKind: QWORD <|@ <|@
      nr   50  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction v4|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction v5|DWORD = SHL (x: v1|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction v6|DWORD = SUB (x: v5|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction v8|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   68  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction v7|DWORD = SHL (x: v8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction v9|DWORD = ADD (x: v7|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction CMP (x: v9|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction v10|DWORD = CMOVE (falseValue: v6|DWORD, ~trueValue: v9|DWORD) condition: > <|@ <|@
      nr   78  <|@ instruction v11|DWORD = ADD (x: v10|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction v12|DWORD = DEC value: v11|DWORD size: DWORD <|@ <|@
      nr   82  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction v13|DWORD = SAR (x: v11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14611 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // value:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: aload_0       
     8: getfield      #4          // coder:byte
    11: ishl          
    12: istore_3      
    13: iload_3       
    14: iload_2       
    15: isub          
    16: istore        4
    18: iload_2       
    19: iload         4
    21: iload_2       
    22: iconst_2      
    23: aload_0       
    24: getfield      #4          // coder:byte
    27: ishl          
    28: iadd          
    29: invokestatic  #27         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    32: istore        5
    34: iload         5
    36: ldc           #39         // 2147483647
    38: if_icmpne     51
    41: new           #120        // java.lang.OutOfMemoryError
    44: dup           
    45: ldc           #122        // "Required length exceeds implementation limit"
    47: invokespecial #28         // java.lang.OutOfMemoryError.<init>:(java.lang.String)void
    50: athrow        
    51: iload         5
    53: aload_0       
    54: getfield      #4          // coder:byte
    57: ishr          
    58: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@39b50d40 slotKind: QWORD <|@ <|@
      nr   50  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction v4|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction v5|DWORD = SHL (x: v1|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction v6|DWORD = SUB (x: v5|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction v8|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   68  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction v7|DWORD = SHL (x: v8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction v9|DWORD = ADD (x: v7|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction CMP (x: v9|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction v10|DWORD = CMOVE (falseValue: v6|DWORD, ~trueValue: v9|DWORD) condition: > <|@ <|@
      nr   78  <|@ instruction v11|DWORD = ADD (x: v10|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction v12|DWORD = DEC value: v11|DWORD size: DWORD <|@ <|@
      nr   82  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction v13|DWORD = SAR (x: v11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14611 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // value:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: aload_0       
     8: getfield      #4          // coder:byte
    11: ishl          
    12: istore_3      
    13: iload_3       
    14: iload_2       
    15: isub          
    16: istore        4
    18: iload_2       
    19: iload         4
    21: iload_2       
    22: iconst_2      
    23: aload_0       
    24: getfield      #4          // coder:byte
    27: ishl          
    28: iadd          
    29: invokestatic  #27         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    32: istore        5
    34: iload         5
    36: ldc           #39         // 2147483647
    38: if_icmpne     51
    41: new           #120        // java.lang.OutOfMemoryError
    44: dup           
    45: ldc           #122        // "Required length exceeds implementation limit"
    47: invokespecial #28         // java.lang.OutOfMemoryError.<init>:(java.lang.String)void
    50: athrow        
    51: iload         5
    53: aload_0       
    54: getfield      #4          // coder:byte
    57: ishr          
    58: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d v13|d [0, 1[[110, 112[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d v4|d [0, 1[[60, 63[[68, 71[[106, 109[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 52[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 46[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 50[ "NoSpillStore"
  v0|q QWORD "[v0|q]" v0|q rsi|q [50, 84[[114, 135[50 MustHaveRegister 54 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|d [52, 84[[114, 135[52 MustHaveRegister 62 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [54, 56[54 MustHaveRegister 56 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [56, 78[56 MustHaveRegister 64 ShouldHaveRegister 72 ShouldHaveRegister 78 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [58, 106[58 MustHaveRegister 60 ShouldHaveRegister 68 ShouldHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d v1|d [62, 64[62 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d v5|d [64, 76[64 MustHaveRegister 74 ShouldHaveRegister 76 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d v8|d [70, 72[70 MustHaveRegister 72 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d -1 [66, 70[66 MustHaveRegister 70 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d v7|d [72, 77[72 MustHaveRegister 74 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d v6|d [76, 78[76 MustHaveRegister 78 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d v10|d [78, 108[78 MustHaveRegister 80 ShouldHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d v11|d [80, 82[80 MustHaveRegister 82 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d v11|d [108, 110[108 MustHaveRegister 110 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d v13|d [0, 1[[110, 112[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d v4|d [0, 1[[60, 63[[68, 71[[106, 109[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 52[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 46[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 50[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [50, 84[[114, 135[50 MustHaveRegister 54 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [52, 84[[114, 135[52 MustHaveRegister 62 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rcx|d]" v2|d -1 [54, 56[54 MustHaveRegister 56 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [56, 78[56 MustHaveRegister 64 ShouldHaveRegister 72 ShouldHaveRegister 78 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r10|d]" v4|d -1 [58, 106[58 MustHaveRegister 60 ShouldHaveRegister 68 ShouldHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[r11|d]" v5|d v1|d [62, 64[62 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r11|d]" v6|d v5|d [64, 76[64 MustHaveRegister 74 ShouldHaveRegister 76 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[r8|d]" v7|d v8|d [70, 72[70 MustHaveRegister 72 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[r8|d]" v8|d -1 [66, 70[66 MustHaveRegister 70 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[r8|d]" v9|d v7|d [72, 77[72 MustHaveRegister 74 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[r11|d]" v10|d v6|d [76, 78[76 MustHaveRegister 78 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[r11|d]" v11|d v10|d [78, 108[78 MustHaveRegister 80 ShouldHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rcx|d]" v12|d v11|d [80, 82[80 MustHaveRegister 82 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[r11|d]" v13|d v11|d [108, 110[108 MustHaveRegister 110 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@39b50d40 slotKind: QWORD <|@ <|@
      nr   50  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction v4|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction v5|DWORD = SHL (x: v1|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction v6|DWORD = SUB (x: v5|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction v8|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   68  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction v7|DWORD = SHL (x: v8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction v9|DWORD = ADD (x: v7|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction CMP (x: v9|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction v10|DWORD = CMOVE (falseValue: v6|DWORD, ~trueValue: v9|DWORD) condition: > <|@ <|@
      nr   78  <|@ instruction v11|DWORD = ADD (x: v10|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction v12|DWORD = DEC value: v11|DWORD size: DWORD <|@ <|@
      nr   82  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction v13|DWORD = SAR (x: v11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14611 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // value:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: aload_0       
     8: getfield      #4          // coder:byte
    11: ishl          
    12: istore_3      
    13: iload_3       
    14: iload_2       
    15: isub          
    16: istore        4
    18: iload_2       
    19: iload         4
    21: iload_2       
    22: iconst_2      
    23: aload_0       
    24: getfield      #4          // coder:byte
    27: ishl          
    28: iadd          
    29: invokestatic  #27         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    32: istore        5
    34: iload         5
    36: ldc           #39         // 2147483647
    38: if_icmpne     51
    41: new           #120        // java.lang.OutOfMemoryError
    44: dup           
    45: ldc           #122        // "Required length exceeds implementation limit"
    47: invokespecial #28         // java.lang.OutOfMemoryError.<init>:(java.lang.String)void
    50: athrow        
    51: iload         5
    53: aload_0       
    54: getfield      #4          // coder:byte
    57: ishr          
    58: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d v13|d [0, 1[[110, 112[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d v4|d [0, 1[[60, 63[[68, 71[[106, 109[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 52[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 46[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 50[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [50, 84[[114, 135[50 MustHaveRegister 54 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [52, 84[[114, 135[52 MustHaveRegister 62 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rcx|d]" v2|d -1 [54, 56[54 MustHaveRegister 56 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [56, 78[56 MustHaveRegister 64 ShouldHaveRegister 72 ShouldHaveRegister 78 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r10|d]" v4|d -1 [58, 106[58 MustHaveRegister 60 ShouldHaveRegister 68 ShouldHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[r11|d]" v5|d v1|d [62, 64[62 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r11|d]" v6|d v5|d [64, 76[64 MustHaveRegister 74 ShouldHaveRegister 76 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[r8|d]" v7|d v8|d [70, 72[70 MustHaveRegister 72 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[r8|d]" v8|d -1 [66, 70[66 MustHaveRegister 70 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[r8|d]" v9|d v7|d [72, 77[72 MustHaveRegister 74 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[r11|d]" v10|d v6|d [76, 78[76 MustHaveRegister 78 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[r11|d]" v11|d v10|d [78, 108[78 MustHaveRegister 80 ShouldHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rcx|d]" v12|d v11|d [80, 82[80 MustHaveRegister 82 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[r11|d]" v13|d v11|d [108, 110[108 MustHaveRegister 110 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@39b50d40 slotKind: QWORD <|@ <|@
      nr   50  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction v4|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction v5|DWORD = SHL (x: v1|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction v6|DWORD = SUB (x: v5|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction v8|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   68  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction v7|DWORD = SHL (x: v8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction v9|DWORD = ADD (x: v7|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction CMP (x: v9|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction v10|DWORD = CMOVE (falseValue: v6|DWORD, ~trueValue: v9|DWORD) condition: > <|@ <|@
      nr   78  <|@ instruction v11|DWORD = ADD (x: v10|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction v12|DWORD = DEC value: v11|DWORD size: DWORD <|@ <|@
      nr   82  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction v13|DWORD = SAR (x: v11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14611 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // value:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: aload_0       
     8: getfield      #4          // coder:byte
    11: ishl          
    12: istore_3      
    13: iload_3       
    14: iload_2       
    15: isub          
    16: istore        4
    18: iload_2       
    19: iload         4
    21: iload_2       
    22: iconst_2      
    23: aload_0       
    24: getfield      #4          // coder:byte
    27: ishl          
    28: iadd          
    29: invokestatic  #27         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    32: istore        5
    34: iload         5
    36: ldc           #39         // 2147483647
    38: if_icmpne     51
    41: new           #120        // java.lang.OutOfMemoryError
    44: dup           
    45: ldc           #122        // "Required length exceeds implementation limit"
    47: invokespecial #28         // java.lang.OutOfMemoryError.<init>:(java.lang.String)void
    50: athrow        
    51: iload         5
    53: aload_0       
    54: getfield      #4          // coder:byte
    57: ishr          
    58: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d v13|d [0, 1[[110, 112[ "NoSpillStore"
  rcx|d fixed "[rcx|d]" rcx|d v4|d [0, 1[[60, 63[[68, 71[[106, 109[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 52[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 46[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 50[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [50, 84[[114, 135[50 MustHaveRegister 54 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [52, 84[[114, 135[52 MustHaveRegister 62 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rcx|d]" v2|d -1 [54, 56[54 MustHaveRegister 56 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [56, 78[56 MustHaveRegister 64 ShouldHaveRegister 72 ShouldHaveRegister 78 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r10|d]" v4|d -1 [58, 106[58 MustHaveRegister 60 ShouldHaveRegister 68 ShouldHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[r11|d]" v5|d v1|d [62, 64[62 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r11|d]" v6|d v5|d [64, 76[64 MustHaveRegister 74 ShouldHaveRegister 76 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[r8|d]" v7|d v8|d [70, 72[70 MustHaveRegister 72 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[r8|d]" v8|d -1 [66, 70[66 MustHaveRegister 70 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[r8|d]" v9|d v7|d [72, 77[72 MustHaveRegister 74 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[r11|d]" v10|d v6|d [76, 78[76 MustHaveRegister 78 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[r11|d]" v11|d v10|d [78, 108[78 MustHaveRegister 80 ShouldHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rcx|d]" v12|d v11|d [80, 82[80 MustHaveRegister 82 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[r11|d]" v13|d v11|d [108, 110[108 MustHaveRegister 110 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@39b50d40 slotKind: QWORD <|@ <|@
      nr   50  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction v4|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction v5|DWORD = SHL (x: v1|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction v6|DWORD = SUB (x: v5|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction v8|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   68  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction v7|DWORD = SHL (x: v8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction v9|DWORD = ADD (x: v7|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction CMP (x: v9|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction v10|DWORD = CMOVE (falseValue: v6|DWORD, ~trueValue: v9|DWORD) condition: > <|@ <|@
      nr   78  <|@ instruction v11|DWORD = ADD (x: v10|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction v12|DWORD = DEC value: v11|DWORD size: DWORD <|@ <|@
      nr   82  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction v13|DWORD = SAR (x: v11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14611 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // value:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: aload_0       
     8: getfield      #4          // coder:byte
    11: ishl          
    12: istore_3      
    13: iload_3       
    14: iload_2       
    15: isub          
    16: istore        4
    18: iload_2       
    19: iload         4
    21: iload_2       
    22: iconst_2      
    23: aload_0       
    24: getfield      #4          // coder:byte
    27: ishl          
    28: iadd          
    29: invokestatic  #27         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    32: istore        5
    34: iload         5
    36: ldc           #39         // 2147483647
    38: if_icmpne     51
    41: new           #120        // java.lang.OutOfMemoryError
    44: dup           
    45: ldc           #122        // "Required length exceeds implementation limit"
    47: invokespecial #28         // java.lang.OutOfMemoryError.<init>:(java.lang.String)void
    50: athrow        
    51: iload         5
    53: aload_0       
    54: getfield      #4          // coder:byte
    57: ishr          
    58: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@39b50d40 slotKind: QWORD <|@ <|@
      nr   50  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - - 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction v4|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction v5|DWORD = SHL (x: v1|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction v6|DWORD = SUB (x: v5|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction v8|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   68  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction v7|DWORD = SHL (x: v8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction v9|DWORD = ADD (x: v7|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction CMP (x: v9|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction v10|DWORD = CMOVE (falseValue: v6|DWORD, ~trueValue: v9|DWORD) condition: > <|@ <|@
      nr   78  <|@ instruction v11|DWORD = ADD (x: v10|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction v12|DWORD = DEC value: v11|DWORD size: DWORD <|@ <|@
      nr   82  <|@ instruction CMPCONSTBRANCH x: v12|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rcx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction v13|DWORD = SAR (x: v11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOVE input: v13|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14611 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // value:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: aload_0       
     8: getfield      #4          // coder:byte
    11: ishl          
    12: istore_3      
    13: iload_3       
    14: iload_2       
    15: isub          
    16: istore        4
    18: iload_2       
    19: iload         4
    21: iload_2       
    22: iconst_2      
    23: aload_0       
    24: getfield      #4          // coder:byte
    27: ishl          
    28: iadd          
    29: invokestatic  #27         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    32: istore        5
    34: iload         5
    36: ldc           #39         // 2147483647
    38: if_icmpne     51
    41: new           #120        // java.lang.OutOfMemoryError
    44: dup           
    45: ldc           #122        // "Required length exceeds implementation limit"
    47: invokespecial #28         // java.lang.OutOfMemoryError.<init>:(java.lang.String)void
    50: athrow        
    51: iload         5
    53: aload_0       
    54: getfield      #4          // coder:byte
    57: ishr          
    58: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@39b50d40 slotKind: QWORD <|@ <|@
      nr   54  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - - 
>@ <|@ instruction rax|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction r10|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction r11|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction r8|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   68  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction r8|DWORD = SHL (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction r11|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: r8|DWORD) condition: > <|@ <|@
      nr   78  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr   82  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction r11|DWORD = SAR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14611 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // value:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: aload_0       
     8: getfield      #4          // coder:byte
    11: ishl          
    12: istore_3      
    13: iload_3       
    14: iload_2       
    15: isub          
    16: istore        4
    18: iload_2       
    19: iload         4
    21: iload_2       
    22: iconst_2      
    23: aload_0       
    24: getfield      #4          // coder:byte
    27: ishl          
    28: iadd          
    29: invokestatic  #27         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    32: istore        5
    34: iload         5
    36: ldc           #39         // 2147483647
    38: if_icmpne     51
    41: new           #120        // java.lang.OutOfMemoryError
    44: dup           
    45: ldc           #122        // "Required length exceeds implementation limit"
    47: invokespecial #28         // java.lang.OutOfMemoryError.<init>:(java.lang.String)void
    50: athrow        
    51: iload         5
    53: aload_0       
    54: getfield      #4          // coder:byte
    57: ishr          
    58: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@39b50d40 slotKind: QWORD <|@ <|@
      nr   54  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - - 
>@ <|@ instruction rax|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction r10|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction r11|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction r8|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   68  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction r8|DWORD = SHL (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction r11|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: r8|DWORD) condition: > <|@ <|@
      nr   78  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr   82  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction r11|DWORD = SAR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14611 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // value:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: aload_0       
     8: getfield      #4          // coder:byte
    11: ishl          
    12: istore_3      
    13: iload_3       
    14: iload_2       
    15: isub          
    16: istore        4
    18: iload_2       
    19: iload         4
    21: iload_2       
    22: iconst_2      
    23: aload_0       
    24: getfield      #4          // coder:byte
    27: ishl          
    28: iadd          
    29: invokestatic  #27         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    32: istore        5
    34: iload         5
    36: ldc           #39         // 2147483647
    38: if_icmpne     51
    41: new           #120        // java.lang.OutOfMemoryError
    44: dup           
    45: ldc           #122        // "Required length exceeds implementation limit"
    47: invokespecial #28         // java.lang.OutOfMemoryError.<init>:(java.lang.String)void
    50: athrow        
    51: iload         5
    53: aload_0       
    54: getfield      #4          // coder:byte
    57: ishr          
    58: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@39b50d40 slotKind: QWORD <|@ <|@
      nr   54  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - - 
>@ <|@ instruction rax|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction r10|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction r11|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction r8|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   68  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction r8|DWORD = SHL (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction r11|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: r8|DWORD) condition: > <|@ <|@
      nr   78  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr   82  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction r11|DWORD = SAR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14611 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // value:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: aload_0       
     8: getfield      #4          // coder:byte
    11: ishl          
    12: istore_3      
    13: iload_3       
    14: iload_2       
    15: isub          
    16: istore        4
    18: iload_2       
    19: iload         4
    21: iload_2       
    22: iconst_2      
    23: aload_0       
    24: getfield      #4          // coder:byte
    27: ishl          
    28: iadd          
    29: invokestatic  #27         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    32: istore        5
    34: iload         5
    36: ldc           #39         // 2147483647
    38: if_icmpne     51
    41: new           #120        // java.lang.OutOfMemoryError
    44: dup           
    45: ldc           #122        // "Required length exceeds implementation limit"
    47: invokespecial #28         // java.lang.OutOfMemoryError.<init>:(java.lang.String)void
    50: athrow        
    51: iload         5
    53: aload_0       
    54: getfield      #4          // coder:byte
    57: ishr          
    58: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@39b50d40 slotKind: QWORD <|@ <|@
      nr   54  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - - 
>@ <|@ instruction rax|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction r10|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction r11|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction r8|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   68  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction r8|DWORD = SHL (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction r11|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: r8|DWORD) condition: > <|@ <|@
      nr   78  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr   82  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction r11|DWORD = SAR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14611 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // value:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: aload_0       
     8: getfield      #4          // coder:byte
    11: ishl          
    12: istore_3      
    13: iload_3       
    14: iload_2       
    15: isub          
    16: istore        4
    18: iload_2       
    19: iload         4
    21: iload_2       
    22: iconst_2      
    23: aload_0       
    24: getfield      #4          // coder:byte
    27: ishl          
    28: iadd          
    29: invokestatic  #27         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    32: istore        5
    34: iload         5
    36: ldc           #39         // 2147483647
    38: if_icmpne     51
    41: new           #120        // java.lang.OutOfMemoryError
    44: dup           
    45: ldc           #122        // "Required length exceeds implementation limit"
    47: invokespecial #28         // java.lang.OutOfMemoryError.<init>:(java.lang.String)void
    50: athrow        
    51: iload         5
    53: aload_0       
    54: getfield      #4          // coder:byte
    57: ishr          
    58: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@39b50d40 slotKind: QWORD <|@ <|@
      nr   54  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - - 
>@ <|@ instruction rax|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction r10|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction r11|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction r8|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   68  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction r8|DWORD = SHL (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction r11|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: r8|DWORD) condition: > <|@ <|@
      nr   78  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr   82  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction r11|DWORD = SAR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14611 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // value:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: aload_0       
     8: getfield      #4          // coder:byte
    11: ishl          
    12: istore_3      
    13: iload_3       
    14: iload_2       
    15: isub          
    16: istore        4
    18: iload_2       
    19: iload         4
    21: iload_2       
    22: iconst_2      
    23: aload_0       
    24: getfield      #4          // coder:byte
    27: ishl          
    28: iadd          
    29: invokestatic  #27         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    32: istore        5
    34: iload         5
    36: ldc           #39         // 2147483647
    38: if_icmpne     51
    41: new           #120        // java.lang.OutOfMemoryError
    44: dup           
    45: ldc           #122        // "Required length exceeds implementation limit"
    47: invokespecial #28         // java.lang.OutOfMemoryError.<init>:(java.lang.String)void
    50: athrow        
    51: iload         5
    53: aload_0       
    54: getfield      #4          // coder:byte
    57: ishr          
    58: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@39b50d40 slotKind: QWORD <|@ <|@
      nr   54  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - - 
>@ <|@ instruction rax|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction r10|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction r11|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction r8|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   68  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction r8|DWORD = SHL (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction r11|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: r8|DWORD) condition: > <|@ <|@
      nr   78  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr   82  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction r11|DWORD = SAR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14611 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // value:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: aload_0       
     8: getfield      #4          // coder:byte
    11: ishl          
    12: istore_3      
    13: iload_3       
    14: iload_2       
    15: isub          
    16: istore        4
    18: iload_2       
    19: iload         4
    21: iload_2       
    22: iconst_2      
    23: aload_0       
    24: getfield      #4          // coder:byte
    27: ishl          
    28: iadd          
    29: invokestatic  #27         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    32: istore        5
    34: iload         5
    36: ldc           #39         // 2147483647
    38: if_icmpne     51
    41: new           #120        // java.lang.OutOfMemoryError
    44: dup           
    45: ldc           #122        // "Required length exceeds implementation limit"
    47: invokespecial #28         // java.lang.OutOfMemoryError.<init>:(java.lang.String)void
    50: athrow        
    51: iload         5
    53: aload_0       
    54: getfield      #4          // coder:byte
    57: ishr          
    58: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@39b50d40 slotKind: QWORD <|@ <|@
      nr   54  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - - 
>@ <|@ instruction rax|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction r10|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction r11|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction r8|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   68  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction r8|DWORD = SHL (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction r11|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: r8|DWORD) condition: > <|@ <|@
      nr   78  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr   82  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction r11|DWORD = SAR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14611 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // value:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: aload_0       
     8: getfield      #4          // coder:byte
    11: ishl          
    12: istore_3      
    13: iload_3       
    14: iload_2       
    15: isub          
    16: istore        4
    18: iload_2       
    19: iload         4
    21: iload_2       
    22: iconst_2      
    23: aload_0       
    24: getfield      #4          // coder:byte
    27: ishl          
    28: iadd          
    29: invokestatic  #27         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    32: istore        5
    34: iload         5
    36: ldc           #39         // 2147483647
    38: if_icmpne     51
    41: new           #120        // java.lang.OutOfMemoryError
    44: dup           
    45: ldc           #122        // "Required length exceeds implementation limit"
    47: invokespecial #28         // java.lang.OutOfMemoryError.<init>:(java.lang.String)void
    50: athrow        
    51: iload         5
    53: aload_0       
    54: getfield      #4          // coder:byte
    57: ishr          
    58: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@39b50d40 slotKind: QWORD <|@ <|@
      nr   54  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - - 
>@ <|@ instruction rax|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction r10|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction r11|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction r8|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   68  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction r8|DWORD = SHL (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction r11|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: r8|DWORD) condition: > <|@ <|@
      nr   78  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr   82  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction r11|DWORD = SAR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14611 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // value:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: aload_0       
     8: getfield      #4          // coder:byte
    11: ishl          
    12: istore_3      
    13: iload_3       
    14: iload_2       
    15: isub          
    16: istore        4
    18: iload_2       
    19: iload         4
    21: iload_2       
    22: iconst_2      
    23: aload_0       
    24: getfield      #4          // coder:byte
    27: ishl          
    28: iadd          
    29: invokestatic  #27         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    32: istore        5
    34: iload         5
    36: ldc           #39         // 2147483647
    38: if_icmpne     51
    41: new           #120        // java.lang.OutOfMemoryError
    44: dup           
    45: ldc           #122        // "Required length exceeds implementation limit"
    47: invokespecial #28         // java.lang.OutOfMemoryError.<init>:(java.lang.String)void
    50: athrow        
    51: iload         5
    53: aload_0       
    54: getfield      #4          // coder:byte
    57: ishr          
    58: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@39b50d40 slotKind: QWORD <|@ <|@
      nr   54  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - - 
>@ <|@ instruction rax|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction r10|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction r11|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction r8|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   68  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction r8|DWORD = SHL (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction r11|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: r8|DWORD) condition: > <|@ <|@
      nr   78  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr   82  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction r11|DWORD = SAR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14611 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // value:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: aload_0       
     8: getfield      #4          // coder:byte
    11: ishl          
    12: istore_3      
    13: iload_3       
    14: iload_2       
    15: isub          
    16: istore        4
    18: iload_2       
    19: iload         4
    21: iload_2       
    22: iconst_2      
    23: aload_0       
    24: getfield      #4          // coder:byte
    27: ishl          
    28: iadd          
    29: invokestatic  #27         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    32: istore        5
    34: iload         5
    36: ldc           #39         // 2147483647
    38: if_icmpne     51
    41: new           #120        // java.lang.OutOfMemoryError
    44: dup           
    45: ldc           #122        // "Required length exceeds implementation limit"
    47: invokespecial #28         // java.lang.OutOfMemoryError.<init>:(java.lang.String)void
    50: athrow        
    51: iload         5
    53: aload_0       
    54: getfield      #4          // coder:byte
    57: ishr          
    58: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@39b50d40 slotKind: QWORD <|@ <|@
      nr   54  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - - 
>@ <|@ instruction rax|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction r10|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction r11|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction r8|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   68  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction r8|DWORD = SHL (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction r11|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: r8|DWORD) condition: > <|@ <|@
      nr   78  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr   82  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction r11|DWORD = SAR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14611 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // value:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: aload_0       
     8: getfield      #4          // coder:byte
    11: ishl          
    12: istore_3      
    13: iload_3       
    14: iload_2       
    15: isub          
    16: istore        4
    18: iload_2       
    19: iload         4
    21: iload_2       
    22: iconst_2      
    23: aload_0       
    24: getfield      #4          // coder:byte
    27: ishl          
    28: iadd          
    29: invokestatic  #27         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    32: istore        5
    34: iload         5
    36: ldc           #39         // 2147483647
    38: if_icmpne     51
    41: new           #120        // java.lang.OutOfMemoryError
    44: dup           
    45: ldc           #122        // "Required length exceeds implementation limit"
    47: invokespecial #28         // java.lang.OutOfMemoryError.<init>:(java.lang.String)void
    50: athrow        
    51: iload         5
    53: aload_0       
    54: getfield      #4          // coder:byte
    57: ishr          
    58: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@39b50d40 slotKind: QWORD <|@ <|@
      nr   54  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - - 
>@ <|@ instruction rax|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction r10|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction r11|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction r8|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   68  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction r8|DWORD = SHL (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction r11|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: r8|DWORD) condition: > <|@ <|@
      nr   78  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr   82  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction r11|DWORD = SAR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14611 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // value:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: aload_0       
     8: getfield      #4          // coder:byte
    11: ishl          
    12: istore_3      
    13: iload_3       
    14: iload_2       
    15: isub          
    16: istore        4
    18: iload_2       
    19: iload         4
    21: iload_2       
    22: iconst_2      
    23: aload_0       
    24: getfield      #4          // coder:byte
    27: ishl          
    28: iadd          
    29: invokestatic  #27         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    32: istore        5
    34: iload         5
    36: ldc           #39         // 2147483647
    38: if_icmpne     51
    41: new           #120        // java.lang.OutOfMemoryError
    44: dup           
    45: ldc           #122        // "Required length exceeds implementation limit"
    47: invokespecial #28         // java.lang.OutOfMemoryError.<init>:(java.lang.String)void
    50: athrow        
    51: iload         5
    53: aload_0       
    54: getfield      #4          // coder:byte
    57: ishr          
    58: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@39b50d40 slotKind: QWORD <|@ <|@
      nr   54  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - - 
>@ <|@ instruction rax|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction r10|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction r11|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction r8|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   68  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction r8|DWORD = SHL (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction r11|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: r8|DWORD) condition: > <|@ <|@
      nr   78  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr   82  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction r11|DWORD = SAR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14611 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  134  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // value:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: aload_0       
     8: getfield      #4          // coder:byte
    11: ishl          
    12: istore_3      
    13: iload_3       
    14: iload_2       
    15: isub          
    16: istore        4
    18: iload_2       
    19: iload         4
    21: iload_2       
    22: iconst_2      
    23: aload_0       
    24: getfield      #4          // coder:byte
    27: ishl          
    28: iadd          
    29: invokestatic  #27         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    32: istore        5
    34: iload         5
    36: ldc           #39         // 2147483647
    38: if_icmpne     51
    41: new           #120        // java.lang.OutOfMemoryError
    44: dup           
    45: ldc           #122        // "Required length exceeds implementation limit"
    47: invokespecial #28         // java.lang.OutOfMemoryError.<init>:(java.lang.String)void
    50: athrow        
    51: iload         5
    53: aload_0       
    54: getfield      #4          // coder:byte
    57: ishr          
    58: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   48  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@39b50d40 slotKind: QWORD <|@ <|@
      nr   54  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   56  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - - 
>@ <|@ instruction rax|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   58  <|@ instruction r10|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction r11|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction r8|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   68  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction r8|DWORD = SHL (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   72  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   74  <|@ instruction CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction r11|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: r8|DWORD) condition: > <|@ <|@
      nr   78  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr   82  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction r11|DWORD = SAR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction MOV x: [r15|QWORD + 1156] y: -14611 size: DWORD <|@ <|@
      nr  132  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  134  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #2          // value:byte[]
     4: arraylength   
     5: istore_2      
     6: iload_1       
     7: aload_0       
     8: getfield      #4          // coder:byte
    11: ishl          
    12: istore_3      
    13: iload_3       
    14: iload_2       
    15: isub          
    16: istore        4
    18: iload_2       
    19: iload         4
    21: iload_2       
    22: iconst_2      
    23: aload_0       
    24: getfield      #4          // coder:byte
    27: ishl          
    28: iadd          
    29: invokestatic  #27         // jdk.internal.util.ArraysSupport.newLength:(int, int, int)int
    32: istore        5
    34: iload         5
    36: ldc           #39         // 2147483647
    38: if_icmpne     51
    41: new           #120        // java.lang.OutOfMemoryError
    44: dup           
    45: ldc           #122        // "Required length exceeds implementation limit"
    47: invokespecial #28         // java.lang.OutOfMemoryError.<init>:(java.lang.String)void
    50: athrow        
    51: iload         5
    53: aload_0       
    54: getfield      #4          // coder:byte
    57: ishr          
    58: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec189041817f20000000000f85b40000009090909090909090909090909090909090909090909048896c24108b4e148b04cd0c000000440fbe5610418bca448bda41d3e3442bd841b802000000418bca41d3e04403c0453bc3450f4fd84403d8418bcbffc981f9f7ffff7f0f832a00000090909090909090909090418bca41d3fb418bc3488b6c24104883c418493ba7500400000f873b000000c39090909090909041c78784040000edc6ffff49c7879004000094020000e8000000000f1f84000000000048896c2410e800000000e93dfffffff4488d0db1ffffff49898f68040000e9effefffff441c78784040000f5daffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 NOP  <||@
  Comment 73 32 NOP  <||@
  Comment 74 34 NOP  <||@
  Comment 75 36 NOP  <||@
  Comment 76 38 NOP  <||@
  Comment 77 40 NOP  <||@
  Comment 78 42 NOP  <||@
  Comment 79 44 NOP  <||@
  Comment 80 46 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 85 48 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@39b50d40 slotKind: QWORD  <||@
  Comment 85 54 rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 88 56 rax|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 88 [rsi:0]at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-  |-  |-  |-   <||@
  Comment 88 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 95 58 r10|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 100 60 rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 103 62 r11|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 109 64 r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 112 66 r8|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 118 68 rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 121 70 r8|DWORD = SHL (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 124 72 r8|DWORD = ADD (x: r8|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 127 74 CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 130 76 r11|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: r8|DWORD) condition: >  <||@
  Comment 134 78 r11|DWORD = ADD (x: r11|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 137 80 rcx|DWORD = DEC value: r11|DWORD size: DWORD  <||@
  Comment 142 82 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2147483639 size: DWORD inlinedY: null  <||@
  Comment 154 block B1 null  <||@
  Comment 154 84 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 154 86 NOP  <||@
  Comment 155 88 NOP  <||@
  Comment 156 90 NOP  <||@
  Comment 157 92 NOP  <||@
  Comment 158 94 NOP  <||@
  Comment 159 96 NOP  <||@
  Comment 160 98 NOP  <||@
  Comment 161 100 NOP  <||@
  Comment 162 102 NOP  <||@
  Comment 163 104 NOP  <||@
  Comment 164 106 rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 167 108 r11|DWORD = SAR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 170 110 rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 173 112 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 182 POLL_RETURN_FAR  <||@
  Comment 196 block B2 null  <||@
  Comment 196 114 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 196 116 NOP  <||@
  Comment 197 118 NOP  <||@
  Comment 198 120 NOP  <||@
  Comment 199 122 NOP  <||@
  Comment 200 124 NOP  <||@
  Comment 201 126 NOP  <||@
  Comment 202 128 NOP  <||@
  Comment 203 130 MOV x: [r15|QWORD + 1156] y: -14611 size: DWORD  <||@
  Comment 214 132 MOV x: [r15|QWORD + 1168] y: 660 size: QWORD  <||@
  Comment 225 134 DEOPT info [bci:0]  <||@
  Comment 225 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 230 [rsi:0]at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-  |-  |-  |-   <||@
  Comment 243 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 268 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 296 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 301 [rsi:0]at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-  |-  |-  |-   <||@
  Comment 309 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 309 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 315 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 315 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-5848[java.lang.AbstractStringBuilder.newCapacity(int)]"
  method "HotSpotCompilation-5848[java.lang.AbstractStringBuilder.newCapacity(int)]"
  date 1724269727027
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789ad40580 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e34aa4fe66669089842400c0feff4883ec189041817f20030000000f85b40000009090909090909090909090909090909090909090909048896c24108b4e148b04cd0c000000440fbe5610418bca448bda41d3e3442bd841b802000000418bca41d3e04403c0453bc3450f4fd84403d8418bcbffc981f9f7ffff7f0f832a00000090909090909090909090418bca41d3fb418bc3488b6c24104883c418493ba7500400000f873b000000c39090909090909041c78784040000edc6ffff49c7879004000094020000e814aba4fe0f1f84000000000048896c2410e8a8aba2fee93dfffffff4488d0db1ffffff49898f68040000e96fb9a4fef441c78784040000f5daffff49c7879004000000000000e8cdaaa4fe0f1f840000000000e8464cb8fef4e860a8a4fef4f4f4f4f4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 NOP  <||@
  Comment 73 32 NOP  <||@
  Comment 74 34 NOP  <||@
  Comment 75 36 NOP  <||@
  Comment 76 38 NOP  <||@
  Comment 77 40 NOP  <||@
  Comment 78 42 NOP  <||@
  Comment 79 44 NOP  <||@
  Comment 80 46 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 85 48 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@39b50d40 slotKind: QWORD  <||@
  Comment 85 54 rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 88 56 rax|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 88 [rsi:0]at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-  |-  |-  |-   <||@
  Comment 88 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 95 58 r10|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 100 60 rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 103 62 r11|DWORD = SHL (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 109 64 r11|DWORD = SUB (x: r11|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 112 66 r8|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 118 68 rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 121 70 r8|DWORD = SHL (x: r8|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 124 72 r8|DWORD = ADD (x: r8|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 127 74 CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 130 76 r11|DWORD = CMOVE (falseValue: r11|DWORD, ~trueValue: r8|DWORD) condition: >  <||@
  Comment 134 78 r11|DWORD = ADD (x: r11|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 137 80 rcx|DWORD = DEC value: r11|DWORD size: DWORD  <||@
  Comment 142 82 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 2147483639 size: DWORD inlinedY: null  <||@
  Comment 154 block B1 null  <||@
  Comment 154 84 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 154 86 NOP  <||@
  Comment 155 88 NOP  <||@
  Comment 156 90 NOP  <||@
  Comment 157 92 NOP  <||@
  Comment 158 94 NOP  <||@
  Comment 159 96 NOP  <||@
  Comment 160 98 NOP  <||@
  Comment 161 100 NOP  <||@
  Comment 162 102 NOP  <||@
  Comment 163 104 NOP  <||@
  Comment 164 106 rcx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 167 108 r11|DWORD = SAR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 170 110 rax|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 173 112 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 182 POLL_RETURN_FAR  <||@
  Comment 196 block B2 null  <||@
  Comment 196 114 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 196 116 NOP  <||@
  Comment 197 118 NOP  <||@
  Comment 198 120 NOP  <||@
  Comment 199 122 NOP  <||@
  Comment 200 124 NOP  <||@
  Comment 201 126 NOP  <||@
  Comment 202 128 NOP  <||@
  Comment 203 130 MOV x: [r15|QWORD + 1156] y: -14611 size: DWORD  <||@
  Comment 214 132 MOV x: [r15|QWORD + 1168] y: 660 size: QWORD  <||@
  Comment 225 134 DEOPT info [bci:0]  <||@
  Comment 225 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 230 [rsi:0]at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-  |-  |-  |-   <||@
  Comment 243 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 268 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 296 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 301 [rsi:0]at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:260) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-  |-  |-  |-   <||@
  Comment 309 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 309 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 315 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 315 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
